from sympy.external import import_module
matchpy = import_module("matchpy")
from sympy.utilities.decorator import doctest_depends_on

if matchpy:
    Pattern, ReplacementRule, ManyToOneReplacer = matchpy.Pattern, matchpy.ReplacementRule, matchpy.ManyToOneReplacer

    from sympy import Symbol, Pow, Add, Integral, Basic, Mul, S, Or, And
    from matchpy.expressions.functions import register_operation_iterator, register_operation_factory
    from matchpy import Operation, CommutativeOperation, AssociativeOperation, OneIdentityOperation, CustomConstraint
    from sympy.integrals.rubi.symbol import WC
    from sympy.integrals.rubi.utility_function import (Int, Set, With, Scan, MapAnd, FalseQ, ZeroQ, NegativeQ, NonzeroQ, FreeQ, List, Log, PositiveQ, PositiveIntegerQ, NegativeIntegerQ, IntegerQ, IntegersQ, ComplexNumberQ, RealNumericQ, PositiveOrZeroQ, NegativeOrZeroQ, FractionOrNegativeQ, NegQ, Equal, Unequal, IntPart, FracPart, RationalQ, ProductQ, SumQ, NonsumQ, Subst, First, Rest, SqrtNumberQ, SqrtNumberSumQ, LinearQ, Sqrt, ArcCosh, Coefficient, Denominator, Hypergeometric2F1, ArcTan, Not, Simplify, FractionalPart, IntegerPart, AppellF1, EllipticPi, EllipticE, EllipticF, ArcTan, ArcTanh, ArcSin, ArcSinh, ArcCos, ArcCsc, ArcCsch, Sinh, Tanh, Cosh, Sech, Csch, Coth, LessEqual, Less, Greater, GreaterEqual, FractionQ, IntLinearcQ, Expand, IndependentQ, PowerQ, IntegerPowerQ, PositiveIntegerPowerQ, FractionalPowerQ, AtomQ, ExpQ, LogQ, Head, MemberQ, TrigQ, SinQ, CosQ, TanQ, CotQ, SecQ, CscQ, HyperbolicQ, SinhQ, CoshQ, TanhQ, CothQ, SechQ, CschQ, InverseTrigQ, SinCosQ, SinhCoshQ, Rt, LeafCount, Numerator, NumberQ, NumericQ, Length, ListQ, Im, Re, InverseHyperbolicQ, InverseFunctionQ, TrigHyperbolicFreeQ, InverseFunctionFreeQ, RealQ, EqQ, FractionalPowerFreeQ, ComplexFreeQ, PolynomialQ, FactorSquareFree, PowerOfLinearQ, Exponent, QuadraticQ, LinearPairQ, BinomialParts, TrinomialParts, PolyQ, EvenQ, OddQ, PerfectSquareQ, NiceSqrtAuxQ, NiceSqrtQ, Together, FixSimplify, TogetherSimplify, PosAux, PosQ, CoefficientList, ReplaceAll, ExpandLinearProduct, GCD, ContentFactor, NumericFactor, NonnumericFactors, MakeAssocList, GensymSubst, KernelSubst, ExpandExpression, Apart, SmartApart, MatchQ, PolynomialQuotientRemainder, FreeFactors, NonfreeFactors, RemoveContentAux, RemoveContent, FreeTerms, NonfreeTerms, ExpandAlgebraicFunction, CollectReciprocals, ExpandCleanup, AlgebraicFunctionQ, Coeff, LeadTerm, RemainingTerms, LeadFactor, RemainingFactors, LeadBase, LeadDegree, Numer, Denom, hypergeom, Expon, MergeMonomials, PolynomialDivide, BinomialQ, TrinomialQ, GeneralizedBinomialQ, GeneralizedTrinomialQ, FactorSquareFreeList, PerfectPowerTest, SquareFreeFactorTest, RationalFunctionQ, RationalFunctionFactors, NonrationalFunctionFactors, Reverse, RationalFunctionExponents, RationalFunctionExpand, ExpandIntegrand, SimplerQ, SimplerSqrtQ, SumSimplerQ, SumSimplerAuxQ, BinomialDegree, TrinomialDegree, CancelCommonFactors, SimplerIntegrandQ, GeneralizedBinomialDegree, GeneralizedBinomialParts, GeneralizedTrinomialDegree, GeneralizedTrinomialParts, MonomialQ, MonomialSumQ, MinimumMonomialExponent, MonomialExponent, LinearMatchQ, PowerOfLinearMatchQ, QuadraticMatchQ, CubicMatchQ, BinomialMatchQ, TrinomialMatchQ, GeneralizedBinomialMatchQ, GeneralizedTrinomialMatchQ, QuotientOfLinearsMatchQ, PolynomialTermQ, PolynomialTerms, NonpolynomialTerms, PseudoBinomialParts, NormalizePseudoBinomial, PseudoBinomialPairQ, PseudoBinomialQ, PolynomialGCD, PolyGCD, AlgebraicFunctionFactors, NonalgebraicFunctionFactors, QuotientOfLinearsP, QuotientOfLinearsParts, QuotientOfLinearsQ, Flatten, Sort, AbsurdNumberQ, AbsurdNumberFactors, NonabsurdNumberFactors, SumSimplerAuxQ, SumSimplerQ, Prepend, Drop, CombineExponents, FactorInteger, FactorAbsurdNumber, SubstForInverseFunction, SubstForFractionalPower, SubstForFractionalPowerOfQuotientOfLinears, FractionalPowerOfQuotientOfLinears, SubstForFractionalPowerQ, SubstForFractionalPowerAuxQ, FractionalPowerOfSquareQ, FractionalPowerSubexpressionQ, Apply, FactorNumericGcd, MergeableFactorQ, MergeFactor, MergeFactors, TrigSimplifyQ, TrigSimplify, Order, FactorOrder, Smallest, OrderedQ, MinimumDegree, PositiveFactors, Sign, NonpositiveFactors, PolynomialInAuxQ, PolynomialInQ, ExponentInAux, ExponentIn, PolynomialInSubstAux, PolynomialInSubst, Distrib, DistributeDegree, FunctionOfPower, DivideDegreesOfFactors, MonomialFactor, FullSimplify, FunctionOfLinearSubst, FunctionOfLinear, NormalizeIntegrand, NormalizeIntegrandAux, NormalizeIntegrandFactor, NormalizeIntegrandFactorBase, NormalizeTogether, NormalizeLeadTermSigns, AbsorbMinusSign, NormalizeSumFactors, SignOfFactor, NormalizePowerOfLinear, SimplifyIntegrand, SimplifyTerm, TogetherSimplify, SmartSimplify, SubstForExpn, ExpandToSum, UnifySum, UnifyTerms, UnifyTerm, CalculusQ, FunctionOfInverseLinear, PureFunctionOfSinhQ, PureFunctionOfTanhQ, PureFunctionOfCoshQ, IntegerQuotientQ, OddQuotientQ, EvenQuotientQ, FindTrigFactor, FunctionOfSinhQ, FunctionOfCoshQ, OddHyperbolicPowerQ, FunctionOfTanhQ, FunctionOfTanhWeight, FunctionOfHyperbolicQ, SmartNumerator, SmartDenominator, SubstForAux, ActivateTrig, ExpandTrig, TrigExpand, SubstForTrig, SubstForHyperbolic, InertTrigFreeQ, LCM, SubstForFractionalPowerOfLinear, FractionalPowerOfLinear, InverseFunctionOfLinear, InertTrigQ, InertReciprocalQ, ActivateTrig, DeactivateTrig, FixInertTrigFunction, DeactivateTrigAux, DeactivateTrigAux, PowerOfInertTrigSumQ, PiecewiseLinearQ, KnownTrigIntegrandQ, KnownSineIntegrandQ, KnownTangentIntegrandQ, KnownCotangentIntegrandQ, KnownSecantIntegrandQ, ExpandTrigExpand, ExpandTrigReduce, TryPureTanSubst, TryTanhSubst, TryPureTanhSubst, AbsurdNumberGCD, AbsurdNumberGCDList, Map2, ConstantFactor, SameQ, ReplacePart, CommonFactors, MostMainFactorPosition, FunctionOfExponentialQ, FunctionOfExponential, FunctionOfExponentialFunction, FunctionOfExponentialFunctionAux, FunctionOfExponentialTest, FunctionOfExponentialTestAux)

    Operation.register(Integral)
    register_operation_iterator(Integral, lambda a: (a._args[0],) + a._args[1], lambda a: len((a._args[0],) + a._args[1]))

    Operation.register(Pow)
    OneIdentityOperation.register(Pow)
    register_operation_iterator(Pow, lambda a: a._args, lambda a: len(a._args))

    Operation.register(Add)
    OneIdentityOperation.register(Add)
    CommutativeOperation.register(Add)
    AssociativeOperation.register(Add)
    register_operation_iterator(Add, lambda a: a._args, lambda a: len(a._args))

    Operation.register(Mul)
    OneIdentityOperation.register(Mul)
    CommutativeOperation.register(Mul)
    AssociativeOperation.register(Mul)
    register_operation_iterator(Mul, lambda a: a._args, lambda a: len(a._args))

    def sympy_op_factory(old_operation, new_operands, variable_name):
         return type(old_operation)(*new_operands)

    register_operation_factory(Basic, sympy_op_factory)

    a = Symbol('a')
    x = Symbol('x')

    A_, B_, C_, a_, b_, c_, d_, e_, f_, g_, h_, i_, j_, k_, l_, m_, n_, p_, q_, r_, t_, u_, s_, w_, x_, z_ = [WC(1, True, i) for i in 'ABCabcdefghijklmnpqrtuswxz']
    mn_ = WC(1, True, 'mn')
    non2_ =  WC(1, True, 'non2')

@doctest_depends_on(modules=('matchpy',))
def rubi_object():
    rubi = ManyToOneReplacer()

    pattern1 = Pattern(Integral(a_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)))
    rule1 = ReplacementRule(pattern1, lambda x, a : Mul(a, x))
    rubi.add(rule1)

    pattern2 = Pattern(Integral(Pow(x_, S('-1')), x_))
    rule2 = ReplacementRule(pattern2, lambda x : Log(x))
    rubi.add(rule2)

    pattern3 = Pattern(Integral(Pow(x_, WC(1, True, 'm', S('1'))), x_), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda m: NonzeroQ(Add(m, S('1')))))
    rule3 = ReplacementRule(pattern3, lambda x, m : Mul(Pow(x, Add(m, S('1'))), Pow(Add(m, S('1')), S('-1'))))
    rubi.add(rule3)

    pattern4 = Pattern(Integral(Pow(Add(a_, Mul(WC(1, True, 'b', S('1')), x_)), S('-1')), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)))
    rule4 = ReplacementRule(pattern4, lambda x, a, b : Mul(Log(RemoveContent(Add(a, Mul(b, x)), x)), Pow(b, S('-1'))))
    rubi.add(rule4)

    pattern5 = Pattern(Integral(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda m: NonzeroQ(Add(m, S('1')))))
    rule5 = ReplacementRule(pattern5, lambda x, a, b, m : Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Mul(b, Add(m, S('1'))), S('-1'))))
    rubi.add(rule5)

    pattern6 = Pattern(Integral(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), u_)), m_), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(Add(u, Mul(S('-1'), x)))))
    rule6 = ReplacementRule(pattern6, lambda a, u, x, b, m : Mul(Mul(S('1'), Pow(Coefficient(u, x, S('1')), S('-1'))), Subst(Integral(Pow(Add(a, Mul(b, x)), m), x), x, u)))
    rubi.add(rule6)

    pattern7 = Pattern(Integral(Mul(Pow(Add(a_, Mul(WC(1, True, 'b', S('1')), x_)), S('-1')), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), S('-1'))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda a, b, c, d: ZeroQ(Add(Mul(b, c), Mul(a, d)))))
    rule7 = ReplacementRule(pattern7, lambda a, d, x, b, c : Int(Mul(S('1'), Pow(Add(Mul(a, c), Mul(b, d, Pow(x, S('2')))), S('-1'))), x))
    rubi.add(rule7)

    pattern8 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S('-1')), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), S('-1'))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda a, b, c, d: NonzeroQ(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))))))
    rule8 = ReplacementRule(pattern8, lambda a, d, x, b, c : Add(Mul(Mul(b, Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1'))), Integral(Mul(S('1'), Pow(Add(a, Mul(b, x)), S('-1'))), x)), Mul(S('-1'), Mul(Mul(d, Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1'))), Integral(Mul(S('1'), Pow(Add(c, Mul(d, x)), S('-1'))), x)))))
    rubi.add(rule8)

    pattern9 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), WC(1, True, 'm', S('1'))), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), n_)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda a, b, c, d: NonzeroQ(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))))), CustomConstraint(lambda m, n: ZeroQ(Add(m, n, S('2')))), CustomConstraint(lambda m: NonzeroQ(Add(m, S('1')))))
    rule9 = ReplacementRule(pattern9, lambda a, d, x, b, c, m, n : Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Mul(Pow(Add(c, Mul(d, x)), Add(n, S('1'))), Pow(Mul(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Add(m, S('1'))), S('-1')))))
    rubi.add(rule9)

    pattern10 = Pattern(Integral(Mul(Pow(Add(a_, Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), m_)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda a, b, c, d: ZeroQ(Add(Mul(b, c), Mul(a, d)))), CustomConstraint(lambda m: PositiveIntegerQ(Add(m, Mul(S('1'), Pow(S('2'), S('-1')))))))
    rule10 = ReplacementRule(pattern10, lambda a, d, x, b, c, m : Add(Mul(x, Pow(Add(a, Mul(b, x)), m), Mul(Pow(Add(c, Mul(d, x)), m), Pow(Add(Mul(S('2'), m), S('1')), S('-1')))), Mul(S('2'), a, c, Mul(m, Pow(Add(Mul(S('2'), m), S('1')), S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('-1'))), Pow(Add(c, Mul(d, x)), Add(m, S('-1')))), x))))
    rubi.add(rule10)

    pattern11 = Pattern(Integral(Mul(Pow(Add(a_, Mul(WC(1, True, 'b', S('1')), x_)), S(S('-3'))/S(S('2'))), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), S(S('-3'))/S(S('2')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda a, b, c, d: ZeroQ(Add(Mul(b, c), Mul(a, d)))))
    rule11 = ReplacementRule(pattern11, lambda a, d, x, b, c : Mul(x, Pow(Mul(a, c, Sqrt(Add(a, Mul(b, x))), Sqrt(Add(c, Mul(d, x)))), S('-1'))))
    rubi.add(rule11)

    pattern12 = Pattern(Integral(Mul(Pow(Add(a_, Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), m_)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda a, b, c, d: ZeroQ(Add(Mul(b, c), Mul(a, d)))), CustomConstraint(lambda m: NegativeIntegerQ(Add(m, Mul(S('3'), Pow(S('2'), S('-1')))))))
    rule12 = ReplacementRule(pattern12, lambda a, d, x, b, c, m : Add(Mul(Mul(S('-1'), x), Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Mul(Pow(Add(c, Mul(d, x)), Add(m, S('1'))), Pow(Mul(S('2'), a, c, Add(m, S('1'))), S('-1')))), Mul(Mul(Add(Mul(S('2'), m), S('3')), Pow(Mul(S('2'), a, c, Add(m, S('1'))), S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), Add(m, S('1')))), x))))
    rubi.add(rule12)

    pattern13 = Pattern(Integral(Mul(Pow(Add(a_, Mul(WC(1, True, 'b', S('1')), x_)), WC(1, True, 'm', S('1'))), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'm', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda a, b, c, d: ZeroQ(Add(Mul(b, c), Mul(a, d)))), CustomConstraint(lambda a, m, c: Or(IntegerQ(m), And(PositiveQ(a), PositiveQ(c)))))
    rule13 = ReplacementRule(pattern13, lambda a, d, x, b, c, m : Int(Pow(Add(Mul(a, c), Mul(b, d, Pow(x, S('2')))), m), x))
    rubi.add(rule13)

    pattern14 = Pattern(Integral(Mul(Pow(Add(a_, Mul(WC(1, True, 'b', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), S(S('-1'))/S(S('2')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda a, b, c, d: ZeroQ(Add(Mul(b, c), Mul(a, d)))), CustomConstraint(lambda a: PositiveQ(a)), CustomConstraint(lambda a, c: ZeroQ(Add(a, c))))
    rule14 = ReplacementRule(pattern14, lambda a, d, x, b, c : Mul(ArcCosh(Mul(b, Mul(x, Pow(a, S('-1'))))), Pow(b, S('-1'))))
    rubi.add(rule14)

    pattern15 = Pattern(Integral(Mul(Pow(Add(a_, Mul(WC(1, True, 'b', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), S(S('-1'))/S(S('2')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda a, b, c, d: ZeroQ(Add(Mul(b, c), Mul(a, d)))))
    rule15 = ReplacementRule(pattern15, lambda a, d, x, b, c : Mul(S('2'), Subst(Integral(Mul(S('1'), Pow(Add(b, Mul(S('-1'), Mul(d, Pow(x, S('2'))))), S('-1'))), x), x, Mul(Sqrt(Add(a, Mul(b, x))), Pow(Sqrt(Add(c, Mul(d, x))), S('-1'))))))
    rubi.add(rule15)

    pattern16 = Pattern(Integral(Mul(Pow(Add(a_, Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), m_)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda a, b, c, d: ZeroQ(Add(Mul(b, c), Mul(a, d)))), CustomConstraint(lambda m: Not(IntegerQ(Mul(S('2'), m)))))
    rule16 = ReplacementRule(pattern16, lambda a, d, x, b, c, m : Mul(Pow(Add(a, Mul(b, x)), FracPart(m)), Mul(Pow(Add(c, Mul(d, x)), FracPart(m)), Pow(Pow(Add(Mul(a, c), Mul(b, d, Pow(x, S('2')))), FracPart(m)), S('-1'))), Integral(Pow(Add(Mul(a, c), Mul(b, d, Pow(x, S('2')))), m), x)))
    rubi.add(rule16)

    pattern17 = Pattern(Integral(Mul(Pow(Add(a_, Mul(WC(1, True, 'b', S('1')), x_)), S(S('-5'))/S(S('4'))), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), S(S('-1'))/S(S('4')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda a, b, c, d: ZeroQ(Add(Mul(b, c), Mul(a, d)))), CustomConstraint(lambda a, b, c, d: PosQ(Mul(b, Mul(d, Pow(Mul(a, c), S('-1')))))))
    rule17 = ReplacementRule(pattern17, lambda a, d, x, b, c : Add(Mul(S('-2'), Pow(Mul(b, Pow(Add(a, Mul(b, x)), Mul(S('1'), Pow(S('4'), S('-1')))), Pow(Add(c, Mul(d, x)), Mul(S('1'), Pow(S('4'), S('-1'))))), S('-1'))), Mul(Mul(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Pow(Mul(S('2'), b), S('-1'))), Integral(Mul(S('1'), Pow(Mul(Pow(Add(a, Mul(b, x)), Mul(S('5'), Pow(S('4'), S('-1')))), Pow(Add(c, Mul(d, x)), Mul(S('5'), Pow(S('4'), S('-1'))))), S('-1'))), x))))
    rubi.add(rule17)

    pattern18 = Pattern(Integral(Mul(Pow(Add(a_, Mul(WC(1, True, 'b', S('1')), x_)), S(S('-9'))/S(S('4'))), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), S(S('-1'))/S(S('4')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda a, b, c, d: ZeroQ(Add(Mul(b, c), Mul(a, d)))), CustomConstraint(lambda a, b, c, d: PosQ(Mul(b, Mul(d, Pow(Mul(a, c), S('-1')))))))
    rule18 = ReplacementRule(pattern18, lambda a, d, x, b, c : Add(Mul(S('-4'), Pow(Mul(S('5'), b, Pow(Add(a, Mul(b, x)), Mul(S('5'), Pow(S('4'), S('-1')))), Pow(Add(c, Mul(d, x)), Mul(S('1'), Pow(S('4'), S('-1'))))), S('-1'))), Mul(S('-1'), Mul(Mul(d, Pow(Mul(S('5'), b), S('-1'))), Integral(Mul(S('1'), Pow(Mul(Pow(Add(a, Mul(b, x)), Mul(S('5'), Pow(S('4'), S('-1')))), Pow(Add(c, Mul(d, x)), Mul(S('5'), Pow(S('4'), S('-1'))))), S('-1'))), x)))))
    rubi.add(rule18)

    pattern19 = Pattern(Integral(Mul(Pow(Add(a_, Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), n_)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda a, b, c, d: ZeroQ(Add(Mul(b, c), Mul(a, d)))), CustomConstraint(lambda m: IntegerQ(Add(m, Mul(S('1'), Pow(S('2'), S('-1')))))), CustomConstraint(lambda n: IntegerQ(Add(n, Mul(S('1'), Pow(S('2'), S('-1')))))), CustomConstraint(lambda m, n: Less(S('0'), m, n)))
    rule19 = ReplacementRule(pattern19, lambda a, d, x, b, c, m, n : Add(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Mul(Pow(Add(c, Mul(d, x)), n), Pow(Mul(b, Add(m, n, S('1'))), S('-1')))), Mul(S('2'), c, Mul(n, Pow(Add(m, n, S('1')), S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), m), Pow(Add(c, Mul(d, x)), Add(n, S('-1')))), x))))
    rubi.add(rule19)

    pattern20 = Pattern(Integral(Mul(Pow(Add(a_, Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), n_)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda a, b, c, d: ZeroQ(Add(Mul(b, c), Mul(a, d)))), CustomConstraint(lambda m: IntegerQ(Add(m, Mul(S('1'), Pow(S('2'), S('-1')))))), CustomConstraint(lambda n: IntegerQ(Add(n, Mul(S('1'), Pow(S('2'), S('-1')))))), CustomConstraint(lambda m, n: Less(m, n, S('0'))))
    rule20 = ReplacementRule(pattern20, lambda a, d, x, b, c, m, n : Add(Mul(Mul(S('-1'), Pow(Add(a, Mul(b, x)), Add(m, S('1')))), Mul(Pow(Add(c, Mul(d, x)), Add(n, S('1'))), Pow(Mul(S('2'), a, d, Add(m, S('1'))), S('-1')))), Mul(Mul(Add(m, n, S('2')), Pow(Mul(S('2'), a, Add(m, S('1'))), S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), n)), x))))
    rubi.add(rule20)

    pattern21 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), WC(1, True, 'm', S('1'))), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'n', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda a, b, c, d: NonzeroQ(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))))), CustomConstraint(lambda m: PositiveIntegerQ(m)), CustomConstraint(lambda m, n, c: Or(Not(IntegerQ(n)), And(ZeroQ(c), LessEqual(Add(Mul(S('7'), m), Mul(S('4'), n)), S('0'))), Less(Add(Mul(S('9'), m), Mul(S('5'), Add(n, S('1')))), S('0')), Greater(Add(m, n, S('2')), S('0')))))
    rule21 = ReplacementRule(pattern21, lambda a, d, x, b, c, m, n : Int(ExpandIntegrand(Mul(Pow(Add(a, Mul(b, x)), m), Pow(Add(c, Mul(d, x)), n)), x), x))
    rubi.add(rule21)

    pattern22 = Pattern(Integral(Mul(Pow(Add(a_, Mul(WC(1, True, 'b', S('1')), x_)), WC(1, True, 'm', S('1'))), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'n', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda a, b, c, d: NonzeroQ(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))))), CustomConstraint(lambda m: NegativeIntegerQ(m)), CustomConstraint(lambda n: IntegerQ(n)), CustomConstraint(lambda m, n: Not(And(PositiveIntegerQ(n), Less(Add(m, n, S('2')), S('0'))))))
    rule22 = ReplacementRule(pattern22, lambda a, d, x, b, c, m, n : Int(ExpandIntegrand(Mul(Pow(Add(a, Mul(b, x)), m), Pow(Add(c, Mul(d, x)), n)), x), x))
    rubi.add(rule22)

    pattern23 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S('-1')), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), n_)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda a, b, c, d: NonzeroQ(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Greater(n, S('0'))))
    rule23 = ReplacementRule(pattern23, lambda a, d, x, b, c, n : Add(Mul(Pow(Add(c, Mul(d, x)), n), Pow(Mul(b, n), S('-1'))), Mul(Mul(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Pow(b, S('-1'))), Integral(Mul(Pow(Add(c, Mul(d, x)), Add(n, S('-1'))), Pow(Add(a, Mul(b, x)), S('-1'))), x))))
    rubi.add(rule23)

    pattern24 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S('-1')), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), n_)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda a, b, c, d: NonzeroQ(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, S('-1'))))
    rule24 = ReplacementRule(pattern24, lambda a, d, x, b, c, n : Add(Mul(Mul(S('-1'), Pow(Add(c, Mul(d, x)), Add(n, S('1')))), Pow(Mul(Add(n, S('1')), Add(Mul(b, c), Mul(S('-1'), Mul(a, d)))), S('-1'))), Mul(b, Mul(Add(n, S('1')), Pow(Mul(Add(n, S('1')), Add(Mul(b, c), Mul(S('-1'), Mul(a, d)))), S('-1'))), Integral(Mul(Pow(Add(c, Mul(d, x)), Add(n, S('1'))), Pow(Add(a, Mul(b, x)), S('-1'))), x))))
    rubi.add(rule24)

    pattern25 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S('-1')), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), S(S('-1'))/S(S('3')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda a, b, c, d: PosQ(Mul(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Pow(b, S('-1'))))))
    rule25 = ReplacementRule(pattern25, lambda a, d, x, b, c : With(List(Set(S('q'), Rt(Mul(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Pow(b, S('-1'))), S('3')))), Add(Mul(Mul(S('-1'), Log(RemoveContent(Add(a, Mul(b, x)), x))), Pow(Mul(S('2'), b, S('q')), S('-1'))), Mul(S('-1'), Mul(Mul(S('3'), Pow(Mul(S('2'), b, S('q')), S('-1'))), Subst(Integral(Mul(S('1'), Pow(Add(S('q'), Mul(S('-1'), x)), S('-1'))), x), x, Pow(Add(c, Mul(d, x)), Mul(S('1'), Pow(S('3'), S('-1'))))))), Mul(Mul(S('3'), Pow(Mul(S('2'), b), S('-1'))), Subst(Integral(Mul(S('1'), Pow(Add(Pow(S('q'), S('2')), Mul(S('q'), x), Pow(x, S('2'))), S('-1'))), x), x, Pow(Add(c, Mul(d, x)), Mul(S('1'), Pow(S('3'), S('-1')))))))))
    rubi.add(rule25)

    pattern26 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S('-1')), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), S(S('-1'))/S(S('3')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda a, b, c, d: NegQ(Mul(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Pow(b, S('-1'))))))
    rule26 = ReplacementRule(pattern26, lambda a, d, x, b, c : With(List(Set(S('q'), Rt(Mul(Mul(S('-1'), Add(Mul(b, c), Mul(S('-1'), Mul(a, d)))), Pow(b, S('-1'))), S('3')))), Add(Mul(Log(RemoveContent(Add(a, Mul(b, x)), x)), Pow(Mul(S('2'), b, S('q')), S('-1'))), Mul(S('-1'), Mul(Mul(S('3'), Pow(Mul(S('2'), b, S('q')), S('-1'))), Subst(Integral(Mul(S('1'), Pow(Add(S('q'), x), S('-1'))), x), x, Pow(Add(c, Mul(d, x)), Mul(S('1'), Pow(S('3'), S('-1'))))))), Mul(Mul(S('3'), Pow(Mul(S('2'), b), S('-1'))), Subst(Integral(Mul(S('1'), Pow(Add(Pow(S('q'), S('2')), Mul(S('-1'), Mul(S('q'), x)), Pow(x, S('2'))), S('-1'))), x), x, Pow(Add(c, Mul(d, x)), Mul(S('1'), Pow(S('3'), S('-1')))))))))
    rubi.add(rule26)

    pattern27 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S('-1')), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), S(S('-2'))/S(S('3')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda a, b, c, d: PosQ(Mul(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Pow(b, S('-1'))))))
    rule27 = ReplacementRule(pattern27, lambda a, d, x, b, c : With(List(Set(S('q'), Rt(Mul(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Pow(b, S('-1'))), S('3')))), Add(Mul(Mul(S('-1'), Log(RemoveContent(Add(a, Mul(b, x)), x))), Pow(Mul(S('2'), b, Pow(S('q'), S('2'))), S('-1'))), Mul(S('-1'), Mul(Mul(S('3'), Pow(Mul(S('2'), b, Pow(S('q'), S('2'))), S('-1'))), Subst(Integral(Mul(S('1'), Pow(Add(S('q'), Mul(S('-1'), x)), S('-1'))), x), x, Pow(Add(c, Mul(d, x)), Mul(S('1'), Pow(S('3'), S('-1'))))))), Mul(S('-1'), Mul(Mul(S('3'), Pow(Mul(S('2'), b, S('q')), S('-1'))), Subst(Integral(Mul(S('1'), Pow(Add(Pow(S('q'), S('2')), Mul(S('q'), x), Pow(x, S('2'))), S('-1'))), x), x, Pow(Add(c, Mul(d, x)), Mul(S('1'), Pow(S('3'), S('-1'))))))))))
    rubi.add(rule27)

    pattern28 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S('-1')), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), S(S('-2'))/S(S('3')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda a, b, c, d: NegQ(Mul(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Pow(b, S('-1'))))))
    rule28 = ReplacementRule(pattern28, lambda a, d, x, b, c : With(List(Set(S('q'), Rt(Mul(Mul(S('-1'), Add(Mul(b, c), Mul(S('-1'), Mul(a, d)))), Pow(b, S('-1'))), S('3')))), Add(Mul(Mul(S('-1'), Log(RemoveContent(Add(a, Mul(b, x)), x))), Pow(Mul(S('2'), b, Pow(S('q'), S('2'))), S('-1'))), Mul(Mul(S('3'), Pow(Mul(S('2'), b, Pow(S('q'), S('2'))), S('-1'))), Subst(Integral(Mul(S('1'), Pow(Add(S('q'), x), S('-1'))), x), x, Pow(Add(c, Mul(d, x)), Mul(S('1'), Pow(S('3'), S('-1')))))), Mul(Mul(S('3'), Pow(Mul(S('2'), b, S('q')), S('-1'))), Subst(Integral(Mul(S('1'), Pow(Add(Pow(S('q'), S('2')), Mul(S('-1'), Mul(S('q'), x)), Pow(x, S('2'))), S('-1'))), x), x, Pow(Add(c, Mul(d, x)), Mul(S('1'), Pow(S('3'), S('-1')))))))))
    rubi.add(rule28)

    pattern29 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S('-1')), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), n_)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda a, b, c, d: NonzeroQ(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(S('-1'), n, S('0'))))
    rule29 = ReplacementRule(pattern29, lambda a, d, x, b, c, n : With(List(Set(S('p'), Denominator(n))), Mul(S('p'), Subst(Integral(Mul(Pow(x, Add(Mul(S('p'), Add(n, S('1'))), S('-1'))), Pow(Add(Mul(a, d), Mul(S('-1'), Mul(b, c)), Mul(b, Pow(x, S('p')))), S('-1'))), x), x, Pow(Add(c, Mul(d, x)), Mul(S('1'), Pow(S('p'), S('-1'))))))))
    rubi.add(rule29)

    pattern30 = Pattern(Integral(Mul(Pow(x_, S('-1')), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), n_)), x_), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n: Not(IntegerQ(n))))
    rule30 = ReplacementRule(pattern30, lambda x, n, c, d : Mul(Mul(Mul(S('-1'), Pow(Add(c, Mul(d, x)), Add(n, S('1')))), Pow(Mul(c, Add(n, S('1'))), S('-1'))), Hypergeometric2F1(S('1'), Add(n, S('1')), Add(n, S('2')), Add(S('1'), Mul(d, Mul(x, Pow(c, S('-1'))))))))
    rubi.add(rule30)

    pattern31 = Pattern(Integral(Mul(Pow(Add(a_, Mul(WC(1, True, 'b', S('1')), x_)), S('-1')), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), n_)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda a, b, c, d: NonzeroQ(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))))), CustomConstraint(lambda n: Not(IntegerQ(n))))
    rule31 = ReplacementRule(pattern31, lambda a, d, x, b, c, n : Mul(Mul(Mul(S('-1'), Pow(Add(c, Mul(d, x)), Add(n, S('1')))), Pow(Mul(Add(n, S('1')), Add(Mul(b, c), Mul(S('-1'), Mul(a, d)))), S('-1'))), Hypergeometric2F1(S('1'), Add(n, S('1')), Add(n, S('2')), TogetherSimplify(Mul(b, Mul(Add(c, Mul(d, x)), Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1'))))))))
    rubi.add(rule31)

    pattern32 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), n_)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda a, b, c, d: NonzeroQ(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))))), CustomConstraint(lambda m, n: RationalQ(m, n)), CustomConstraint(lambda m: Less(m, S('-1'))), CustomConstraint(lambda n: Greater(n, S('0'))), CustomConstraint(lambda m, n: Not(And(IntegerQ(n), Not(IntegerQ(m))))), CustomConstraint(lambda m, n: Not(And(IntegerQ(Add(m, n)), LessEqual(Add(m, n, S('2')), S('0')), Or(FractionQ(m), GreaterEqual(Add(Mul(S('2'), n), m, S('1')), S('0')))))), CustomConstraint(lambda a, d, x, b, c, m, n: IntLinearcQ(a, b, c, d, m, n, x)))
    rule32 = ReplacementRule(pattern32, lambda a, d, x, b, c, m, n : Add(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Mul(Pow(Add(c, Mul(d, x)), n), Pow(Mul(b, Add(m, S('1'))), S('-1')))), Mul(S('-1'), Mul(d, Mul(n, Pow(Mul(b, Add(m, S('1'))), S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), Add(n, S('-1')))), x)))))
    rubi.add(rule32)

    pattern33 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), n_)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda a, b, c, d: NonzeroQ(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))))), CustomConstraint(lambda m, n: RationalQ(m, n)), CustomConstraint(lambda m: Less(m, S('-1'))), CustomConstraint(lambda a, m, n, c: Not(And(Less(n, S('-1')), Or(ZeroQ(a), And(NonzeroQ(c), Less(m, n), IntegerQ(n)))))), CustomConstraint(lambda a, d, x, b, c, m, n: IntLinearcQ(a, b, c, d, m, n, x)))
    rule33 = ReplacementRule(pattern33, lambda a, d, x, b, c, m, n : Add(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Mul(Pow(Add(c, Mul(d, x)), Add(n, S('1'))), Pow(Mul(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Add(m, S('1'))), S('-1')))), Mul(S('-1'), Mul(d, Mul(Add(m, n, S('2')), Pow(Mul(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Add(m, S('1'))), S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), n)), x)))))
    rubi.add(rule33)

    pattern34 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), n_)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda a, b, c, d: NonzeroQ(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))))), CustomConstraint(lambda m, n: RationalQ(m, n)), CustomConstraint(lambda n: Greater(n, S('0'))), CustomConstraint(lambda m, n: Unequal(Add(m, n, S('1')), S('0'))), CustomConstraint(lambda m, n: Not(And(PositiveIntegerQ(m), Or(Not(IntegerQ(n)), Less(S('0'), m, n))))), CustomConstraint(lambda m, n: Not(And(IntegerQ(Add(m, n)), Less(Add(m, n, S('2')), S('0'))))), CustomConstraint(lambda a, d, x, b, c, m, n: IntLinearcQ(a, b, c, d, m, n, x)))
    rule34 = ReplacementRule(pattern34, lambda a, d, x, b, c, m, n : Add(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Mul(Pow(Add(c, Mul(d, x)), n), Pow(Mul(b, Add(m, n, S('1'))), S('-1')))), Mul(n, Mul(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Pow(Mul(b, Add(m, n, S('1'))), S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), m), Pow(Add(c, Mul(d, x)), Add(n, S('-1')))), x))))
    rubi.add(rule34)

    pattern35 = Pattern(Integral(Mul(Pow(Add(a_, Mul(WC(1, True, 'b', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), S(S('-1'))/S(S('2')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda b, d: ZeroQ(Add(b, d))), CustomConstraint(lambda a, c: PositiveQ(Add(a, c))))
    rule35 = ReplacementRule(pattern35, lambda a, d, x, b, c : Int(Mul(S('1'), Pow(Sqrt(Add(Mul(a, c), Mul(S('-1'), Mul(b, Add(a, Mul(S('-1'), c)), x)), Mul(S('-1'), Mul(Pow(b, S('2')), Pow(x, S('2')))))), S('-1'))), x))
    rubi.add(rule35)

    pattern36 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), S(S('-1'))/S(S('2')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda a, b, c, d: PositiveQ(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))))), CustomConstraint(lambda b: PositiveQ(b)))
    rule36 = ReplacementRule(pattern36, lambda a, d, x, b, c : Mul(Mul(S('2'), Pow(Sqrt(b), S('-1'))), Subst(Integral(Mul(S('1'), Pow(Sqrt(Add(Mul(b, c), Mul(S('-1'), Mul(a, d)), Mul(d, Pow(x, S('2'))))), S('-1'))), x), x, Sqrt(Add(a, Mul(b, x))))))
    rubi.add(rule36)

    pattern37 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), S(S('-1'))/S(S('2')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda a, b, c, d: NonzeroQ(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))))), CustomConstraint(lambda b, d: ZeroQ(Add(b, Mul(S('-1'), d)))))
    rule37 = ReplacementRule(pattern37, lambda a, d, x, b, c : Mul(Mul(S('2'), Pow(b, S('-1'))), Subst(Integral(Mul(S('1'), Pow(Sqrt(Add(c, Mul(S('-1'), a), Pow(x, S('2')))), S('-1'))), x), x, Sqrt(Add(a, Mul(b, x))))))
    rubi.add(rule37)

    pattern38 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), S(S('-1'))/S(S('2')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda a, b, c, d: NonzeroQ(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))))))
    rule38 = ReplacementRule(pattern38, lambda a, d, x, b, c : Mul(S('2'), Subst(Integral(Mul(S('1'), Pow(Add(b, Mul(S('-1'), Mul(d, Pow(x, S('2'))))), S('-1'))), x), x, Mul(Sqrt(Add(a, Mul(b, x))), Pow(Sqrt(Add(c, Mul(d, x))), S('-1'))))))
    rubi.add(rule38)

    pattern39 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), m_)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda a, b, c, d: NonzeroQ(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(S('-1'), m, S('0'))), CustomConstraint(lambda m: LessEqual(S('3'), Denominator(m), S('4'))))
    rule39 = ReplacementRule(pattern39, lambda a, d, x, b, c, m : Mul(Pow(Add(a, Mul(b, x)), m), Mul(Pow(Add(c, Mul(d, x)), m), Pow(Pow(Add(Mul(a, c), Mul(Add(Mul(b, c), Mul(a, d)), x), Mul(b, d, Pow(x, S('2')))), m), S('-1'))), Integral(Pow(Add(Mul(a, c), Mul(Add(Mul(b, c), Mul(a, d)), x), Mul(b, d, Pow(x, S('2')))), m), x)))
    rubi.add(rule39)

    pattern40 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S(S('-1'))/S(S('3'))), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), S(S('-2'))/S(S('3')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda a, b, c, d: NonzeroQ(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))))), CustomConstraint(lambda b, d: PosQ(Mul(d, Pow(b, S('-1'))))))
    rule40 = ReplacementRule(pattern40, lambda a, d, x, b, c : With(List(Set(S('q'), Rt(Mul(d, Pow(b, S('-1'))), S('3')))), Add(Mul(Mul(S('-1'), Sqrt(S('3'))), Mul(S('q'), Pow(d, S('-1'))), ArcTan(Add(Mul(S('2'), S('q'), Mul(Pow(Add(a, Mul(b, x)), Mul(S('1'), Pow(S('3'), S('-1')))), Pow(Mul(Sqrt(S('3')), Pow(Add(c, Mul(d, x)), Mul(S('1'), Pow(S('3'), S('-1'))))), S('-1')))), Mul(S('1'), Pow(Sqrt(S('3')), S('-1')))))), Mul(S('-1'), Mul(Mul(S('q'), Pow(Mul(S('2'), d), S('-1'))), Log(Add(c, Mul(d, x))))), Mul(S('-1'), Mul(S('3'), Mul(S('q'), Pow(Mul(S('2'), d), S('-1'))), Log(Add(Mul(S('q'), Mul(Pow(Add(a, Mul(b, x)), Mul(S('1'), Pow(S('3'), S('-1')))), Pow(Pow(Add(c, Mul(d, x)), Mul(S('1'), Pow(S('3'), S('-1')))), S('-1')))), S('-1'))))))))
    rubi.add(rule40)

    pattern41 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S(S('-1'))/S(S('3'))), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), S(S('-2'))/S(S('3')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda a, b, c, d: NonzeroQ(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))))), CustomConstraint(lambda b, d: NegQ(Mul(d, Pow(b, S('-1'))))))
    rule41 = ReplacementRule(pattern41, lambda a, d, x, b, c : With(List(Set(S('q'), Rt(Mul(Mul(S('-1'), d), Pow(b, S('-1'))), S('3')))), Add(Mul(Sqrt(S('3')), Mul(S('q'), Pow(d, S('-1'))), ArcTan(Add(Mul(S('1'), Pow(Sqrt(S('3')), S('-1'))), Mul(S('-1'), Mul(S('2'), S('q'), Mul(Pow(Add(a, Mul(b, x)), Mul(S('1'), Pow(S('3'), S('-1')))), Pow(Mul(Sqrt(S('3')), Pow(Add(c, Mul(d, x)), Mul(S('1'), Pow(S('3'), S('-1'))))), S('-1')))))))), Mul(Mul(S('q'), Pow(Mul(S('2'), d), S('-1'))), Log(Add(c, Mul(d, x)))), Mul(S('3'), Mul(S('q'), Pow(Mul(S('2'), d), S('-1'))), Log(Add(Mul(S('q'), Mul(Pow(Add(a, Mul(b, x)), Mul(S('1'), Pow(S('3'), S('-1')))), Pow(Pow(Add(c, Mul(d, x)), Mul(S('1'), Pow(S('3'), S('-1')))), S('-1')))), S('1')))))))
    rubi.add(rule41)

    pattern42 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), n_)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda a, b, c, d: NonzeroQ(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))))), CustomConstraint(lambda m, n: RationalQ(m, n)), CustomConstraint(lambda m: Less(S('-1'), m, S('0'))), CustomConstraint(lambda m, n: Equal(Add(m, n, S('1')), S('0'))))
    rule42 = ReplacementRule(pattern42, lambda a, d, x, b, c, m, n : With(List(Set(S('p'), Denominator(m))), Mul(S('p'), Subst(Integral(Mul(Pow(x, Add(Mul(S('p'), Add(m, S('1'))), S('-1'))), Pow(Add(b, Mul(S('-1'), Mul(d, Pow(x, S('p'))))), S('-1'))), x), x, Mul(Pow(Add(a, Mul(b, x)), Mul(S('1'), Pow(S('p'), S('-1')))), Pow(Pow(Add(c, Mul(d, x)), Mul(S('1'), Pow(S('p'), S('-1')))), S('-1')))))))
    rubi.add(rule42)

    pattern43 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), n_)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda a, b, c, d: NonzeroQ(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))))), CustomConstraint(lambda m, n: RationalQ(m, n)), CustomConstraint(lambda m: Less(S('-1'), m, S('0'))), CustomConstraint(lambda n: Less(S('-1'), n, S('0'))), CustomConstraint(lambda m, n: LessEqual(Denominator(n), Denominator(m))), CustomConstraint(lambda a, d, x, b, c, m, n: IntLinearcQ(a, b, c, d, m, n, x)))
    rule43 = ReplacementRule(pattern43, lambda a, d, x, b, c, m, n : With(List(Set(S('p'), Denominator(m))), Mul(Mul(S('p'), Pow(b, S('-1'))), Subst(Integral(Mul(Pow(x, Add(Mul(S('p'), Add(m, S('1'))), S('-1'))), Pow(Add(c, Mul(S('-1'), Mul(a, Mul(d, Pow(b, S('-1'))))), Mul(d, Mul(Pow(x, S('p')), Pow(b, S('-1'))))), n)), x), x, Pow(Add(a, Mul(b, x)), Mul(S('1'), Pow(S('p'), S('-1'))))))))
    rubi.add(rule43)

    pattern44 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), n_)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda a, b, c, d: NonzeroQ(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))))), CustomConstraint(lambda m, n: NegativeIntegerQ(Simplify(Add(m, n, S('2'))))), CustomConstraint(lambda m: NonzeroQ(Add(m, S('1')))), CustomConstraint(lambda m, n: Or(SumSimplerQ(m, S('1')), Not(SumSimplerQ(n, S('1'))))))
    rule44 = ReplacementRule(pattern44, lambda a, d, x, b, c, m, n : Add(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Mul(Pow(Add(c, Mul(d, x)), Add(n, S('1'))), Pow(Mul(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Add(m, S('1'))), S('-1')))), Mul(S('-1'), Mul(d, Mul(Simplify(Add(m, n, S('2'))), Pow(Mul(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Add(m, S('1'))), S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), Simplify(Add(m, S('1')))), Pow(Add(c, Mul(d, x)), n)), x)))))
    rubi.add(rule44)

    pattern45 = Pattern(Integral(Mul(Pow(Mul(WC(1, True, 'b', S('1')), x_), m_), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), n_)), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m: Not(IntegerQ(m))), CustomConstraint(lambda b, n, c, d: Or(IntegerQ(n), And(PositiveQ(c), Not(And(ZeroQ(Add(n, Mul(S('1'), Pow(S('2'), S('-1'))))), ZeroQ(Add(Pow(c, S('2')), Mul(S('-1'), Pow(d, S('2'))))), PositiveQ(Mul(Mul(S('-1'), d), Pow(Mul(b, c), S('-1'))))))))))
    rule45 = ReplacementRule(pattern45, lambda d, x, b, c, m, n : Mul(Pow(c, n), Mul(Pow(Mul(b, x), Add(m, S('1'))), Pow(Mul(b, Add(m, S('1'))), S('-1'))), Hypergeometric2F1(Mul(S('-1'), n), Add(m, S('1')), Add(m, S('2')), Mul(Mul(S('-1'), d), Mul(x, Pow(c, S('-1')))))))
    rubi.add(rule45)

    pattern46 = Pattern(Integral(Mul(Pow(Mul(WC(1, True, 'b', S('1')), x_), m_), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), n_)), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n: Not(IntegerQ(n))), CustomConstraint(lambda b, m, c, d: Or(IntegerQ(m), PositiveQ(Mul(Mul(S('-1'), d), Pow(Mul(b, c), S('-1')))))))
    rule46 = ReplacementRule(pattern46, lambda d, x, b, c, m, n : Mul(Mul(Pow(Add(c, Mul(d, x)), Add(n, S('1'))), Pow(Mul(d, Add(n, S('1')), Pow(Mul(Mul(S('-1'), d), Pow(Mul(b, c), S('-1'))), m)), S('-1'))), Hypergeometric2F1(Mul(S('-1'), m), Add(n, S('1')), Add(n, S('2')), Add(S('1'), Mul(d, Mul(x, Pow(c, S('-1'))))))))
    rubi.add(rule46)

    pattern47 = Pattern(Integral(Mul(Pow(Mul(WC(1, True, 'b', S('1')), x_), m_), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), n_)), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m: Not(IntegerQ(m))), CustomConstraint(lambda n: Not(IntegerQ(n))), CustomConstraint(lambda c: Not(PositiveQ(c))), CustomConstraint(lambda b, c, d: Not(PositiveQ(Mul(Mul(S('-1'), d), Pow(Mul(b, c), S('-1')))))), CustomConstraint(lambda m, n, c, d: Or(And(RationalQ(m), Not(And(ZeroQ(Add(n, Mul(S('1'), Pow(S('2'), S('-1'))))), ZeroQ(Add(Pow(c, S('2')), Mul(S('-1'), Pow(d, S('2')))))))), Not(RationalQ(n)))))
    rule47 = ReplacementRule(pattern47, lambda d, x, b, c, m, n : Mul(Pow(c, IntPart(n)), Mul(Pow(Add(c, Mul(d, x)), FracPart(n)), Pow(Pow(Add(S('1'), Mul(d, Mul(x, Pow(c, S('-1'))))), FracPart(n)), S('-1'))), Integral(Mul(Pow(Mul(b, x), m), Pow(Add(S('1'), Mul(d, Mul(x, Pow(c, S('-1'))))), n)), x)))
    rubi.add(rule47)

    pattern48 = Pattern(Integral(Mul(Pow(Mul(WC(1, True, 'b', S('1')), x_), m_), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), n_)), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m: Not(IntegerQ(m))), CustomConstraint(lambda n: Not(IntegerQ(n))), CustomConstraint(lambda c: Not(PositiveQ(c))), CustomConstraint(lambda b, c, d: Not(PositiveQ(Mul(Mul(S('-1'), d), Pow(Mul(b, c), S('-1')))))))
    rule48 = ReplacementRule(pattern48, lambda d, x, b, c, m, n : Mul(Pow(Mul(Mul(S('-1'), b), Mul(c, Pow(d, S('-1')))), IntPart(m)), Mul(Pow(Mul(b, x), FracPart(m)), Pow(Pow(Mul(Mul(S('-1'), d), Mul(x, Pow(c, S('-1')))), FracPart(m)), S('-1'))), Integral(Mul(Pow(Mul(Mul(S('-1'), d), Mul(x, Pow(c, S('-1')))), m), Pow(Add(c, Mul(d, x)), n)), x)))
    rubi.add(rule48)

    pattern49 = Pattern(Integral(Mul(Pow(Add(a_, Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), n_)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda a, b, c, d: NonzeroQ(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))))), CustomConstraint(lambda m: Not(IntegerQ(m))), CustomConstraint(lambda n: IntegerQ(n)))
    rule49 = ReplacementRule(pattern49, lambda a, d, x, b, c, m, n : Mul(Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), n), Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Mul(Pow(b, Add(n, S('1'))), Add(m, S('1'))), S('-1'))), Hypergeometric2F1(Mul(S('-1'), n), Add(m, S('1')), Add(m, S('2')), Mul(Mul(S('-1'), d), Mul(Add(a, Mul(b, x)), Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1')))))))
    rubi.add(rule49)

    pattern50 = Pattern(Integral(Mul(Pow(Add(a_, Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), n_)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda a, b, c, d: NonzeroQ(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))))), CustomConstraint(lambda m: Not(IntegerQ(m))), CustomConstraint(lambda n: Not(IntegerQ(n))), CustomConstraint(lambda a, b, c, d: PositiveQ(Mul(b, Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1'))))), CustomConstraint(lambda a, d, b, c, m, n: Or(RationalQ(m), Not(And(RationalQ(n), PositiveQ(Mul(Mul(S('-1'), d), Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1')))))))))
    rule50 = ReplacementRule(pattern50, lambda a, d, x, b, c, m, n : Mul(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Mul(b, Add(m, S('1')), Pow(Mul(b, Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1'))), n)), S('-1'))), Hypergeometric2F1(Mul(S('-1'), n), Add(m, S('1')), Add(m, S('2')), Mul(Mul(S('-1'), d), Mul(Add(a, Mul(b, x)), Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1')))))))
    rubi.add(rule50)

    pattern51 = Pattern(Integral(Mul(Pow(Add(a_, Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), n_)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda a, b, c, d: NonzeroQ(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))))), CustomConstraint(lambda m: Not(IntegerQ(m))), CustomConstraint(lambda n: Not(IntegerQ(n))), CustomConstraint(lambda m, n: Or(RationalQ(m), Not(SimplerQ(Add(n, S('1')), Add(m, S('1')))))))
    rule51 = ReplacementRule(pattern51, lambda a, d, x, b, c, m, n : Mul(Mul(Pow(Add(c, Mul(d, x)), FracPart(n)), Pow(Mul(Pow(Mul(b, Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1'))), IntPart(n)), Pow(Mul(b, Mul(Add(c, Mul(d, x)), Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1')))), FracPart(n))), S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), m), Pow(Add(Mul(b, Mul(c, Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1')))), Mul(b, d, Mul(x, Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1'))))), n)), x)))
    rubi.add(rule51)

    pattern52 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), u_)), WC(1, True, 'm', S('1'))), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), u_)), WC(1, True, 'n', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(Coefficient(u, x, S('0')))))
    rule52 = ReplacementRule(pattern52, lambda a, d, u, x, b, c, m, n : Mul(Mul(S('1'), Pow(Coefficient(u, x, S('1')), S('-1'))), Subst(Integral(Mul(Pow(Add(a, Mul(b, x)), m), Pow(Add(c, Mul(d, x)), n)), x), x, u)))
    rubi.add(rule52)

    pattern53 = Pattern(Integral(Mul(Pow(Add(a_, Mul(WC(1, True, 'b', S('1')), x_)), WC(1, True, 'm', S('1'))), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'n', S('1'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), WC(1, True, 'p', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c, d: ZeroQ(Add(Mul(b, c), Mul(a, d)))), CustomConstraint(lambda m, n: ZeroQ(Add(m, Mul(S('-1'), n)))), CustomConstraint(lambda m: IntegerQ(m)))
    rule53 = ReplacementRule(pattern53, lambda a, p, d, x, b, e, f, c, m, n : Int(Mul(Pow(Add(Mul(a, c), Mul(b, d, Pow(x, S('2')))), m), Pow(Add(e, Mul(f, x)), p)), x))
    rubi.add(rule53)

    pattern54 = Pattern(Integral(Mul(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'n', S('1'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), WC(1, True, 'p', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda p, n: NonzeroQ(Add(n, p, S('2')))), CustomConstraint(lambda a, p, d, b, e, f, c, n: ZeroQ(Add(Mul(a, d, f, Add(n, p, S('2'))), Mul(S('-1'), Mul(b, Add(Mul(d, e, Add(n, S('1'))), Mul(c, f, Add(p, S('1'))))))))))
    rule54 = ReplacementRule(pattern54, lambda a, p, d, x, b, e, f, c, n : Mul(b, Pow(Add(c, Mul(d, x)), Add(n, S('1'))), Mul(Pow(Add(e, Mul(f, x)), Add(p, S('1'))), Pow(Mul(d, f, Add(n, p, S('2'))), S('-1')))))
    rubi.add(rule54)

    pattern55 = Pattern(Integral(Mul(Pow(Mul(WC(1, True, 'd', S('1')), x_), WC(1, True, 'n', S('1'))), Add(a_, Mul(WC(1, True, 'b', S('1')), x_)), Pow(Add(e_, Mul(WC(1, True, 'f', S('1')), x_)), WC(1, True, 'p', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p: PositiveIntegerQ(p)), CustomConstraint(lambda e, b, f, a: ZeroQ(Add(Mul(b, e), Mul(a, f)))), CustomConstraint(lambda p, n: Not(And(NegativeIntegerQ(Add(n, p, S('2'))), Greater(Add(n, Mul(S('2'), p)), S('0'))))))
    rule55 = ReplacementRule(pattern55, lambda a, p, d, x, b, e, f, n : Int(ExpandIntegrand(Mul(Add(a, Mul(b, x)), Pow(Mul(d, x), n), Pow(Add(e, Mul(f, x)), p)), x), x))
    rubi.add(rule55)

    pattern56 = Pattern(Integral(Mul(Pow(Mul(WC(1, True, 'd', S('1')), x_), WC(1, True, 'n', S('1'))), Add(a_, Mul(WC(1, True, 'b', S('1')), x_)), Pow(Add(e_, Mul(WC(1, True, 'f', S('1')), x_)), WC(1, True, 'p', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p: PositiveIntegerQ(p)), CustomConstraint(lambda p, n: Or(NonzeroQ(Add(n, S('1'))), Equal(p, S('1')))), CustomConstraint(lambda e, b, f, a: NonzeroQ(Add(Mul(b, e), Mul(a, f)))), CustomConstraint(lambda a, p, d, b, e, f, n: Or(Not(IntegerQ(n)), Less(Add(Mul(S('9'), p), Mul(S('5'), n)), S('0')), GreaterEqual(Add(n, p, S('1')), S('0')), And(GreaterEqual(Add(n, p, S('2')), S('0')), RationalQ(a, b, d, e, f)))))
    rule56 = ReplacementRule(pattern56, lambda a, p, d, x, b, e, f, n : Int(ExpandIntegrand(Mul(Add(a, Mul(b, x)), Pow(Mul(d, x), n), Pow(Add(e, Mul(f, x)), p)), x), x))
    rubi.add(rule56)

    pattern57 = Pattern(Integral(Mul(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'n', S('1'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), WC(1, True, 'p', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda a, b, c, d: NonzeroQ(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))))), CustomConstraint(lambda a, p, d, b, e, f, c, n: Or(NegativeIntegerQ(n, p), ZeroQ(Add(p, S('-1'))), And(PositiveIntegerQ(p), Or(Not(IntegerQ(n)), LessEqual(Add(Mul(S('9'), p), Mul(S('5'), Add(n, S('2')))), S('0')), GreaterEqual(Add(n, p, S('1')), S('0')), And(GreaterEqual(Add(n, p, S('2')), S('0')), RationalQ(a, b, c, d, e, f)))))))
    rule57 = ReplacementRule(pattern57, lambda a, p, d, x, b, e, f, c, n : Int(ExpandIntegrand(Mul(Add(a, Mul(b, x)), Pow(Add(c, Mul(d, x)), n), Pow(Add(e, Mul(f, x)), p)), x), x))
    rubi.add(rule57)

    pattern58 = Pattern(Integral(Mul(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'n', S('1'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), WC(1, True, 'p', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda p, n: ZeroQ(Add(n, p, S('2')))), CustomConstraint(lambda p: NonzeroQ(Add(p, S('1')))), CustomConstraint(lambda p, n: Not(And(SumSimplerQ(n, S('1')), Not(SumSimplerQ(p, S('1')))))))
    rule58 = ReplacementRule(pattern58, lambda a, p, d, x, b, e, f, c, n : Add(Mul(Mul(S('-1'), Add(Mul(b, e), Mul(S('-1'), Mul(a, f)))), Pow(Add(c, Mul(d, x)), Add(n, S('1'))), Mul(Pow(Add(e, Mul(f, x)), Add(p, S('1'))), Pow(Mul(f, Add(p, S('1')), Add(Mul(c, f), Mul(S('-1'), Mul(d, e)))), S('-1')))), Mul(Mul(b, Pow(f, S('-1'))), Integral(Mul(Pow(Add(c, Mul(d, x)), n), Pow(Add(e, Mul(f, x)), Add(p, S('1')))), x))))
    rubi.add(rule58)

    pattern59 = Pattern(Integral(Mul(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'n', S('1'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), WC(1, True, 'p', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, n: NonzeroQ(Add(n, p, S('2')))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S('-1'))), CustomConstraint(lambda e, p, n, c: Or(Not(And(RationalQ(n), Less(n, S('-1')))), IntegerQ(p), Not(Or(IntegerQ(n), Not(Or(ZeroQ(e), Not(Or(ZeroQ(c), Less(p, n))))))))))
    rule59 = ReplacementRule(pattern59, lambda a, p, d, x, b, e, f, c, n : Add(Mul(Mul(S('-1'), Add(Mul(b, e), Mul(S('-1'), Mul(a, f)))), Pow(Add(c, Mul(d, x)), Add(n, S('1'))), Mul(Pow(Add(e, Mul(f, x)), Add(p, S('1'))), Pow(Mul(f, Add(p, S('1')), Add(Mul(c, f), Mul(S('-1'), Mul(d, e)))), S('-1')))), Mul(S('-1'), Mul(Mul(Add(Mul(a, d, f, Add(n, p, S('2'))), Mul(S('-1'), Mul(b, Add(Mul(d, e, Add(n, S('1'))), Mul(c, f, Add(p, S('1'))))))), Pow(Mul(f, Add(p, S('1')), Add(Mul(c, f), Mul(S('-1'), Mul(d, e)))), S('-1'))), Integral(Mul(Pow(Add(c, Mul(d, x)), n), Pow(Add(e, Mul(f, x)), Add(p, S('1')))), x)))))
    rubi.add(rule59)

    pattern60 = Pattern(Integral(Mul(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'n', S('1'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), WC(1, True, 'p', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda p, n: NonzeroQ(Add(n, p, S('2')))), CustomConstraint(lambda p: Not(RationalQ(p))), CustomConstraint(lambda p: SumSimplerQ(p, S('1'))))
    rule60 = ReplacementRule(pattern60, lambda a, p, d, x, b, e, f, c, n : Add(Mul(Mul(S('-1'), Add(Mul(b, e), Mul(S('-1'), Mul(a, f)))), Pow(Add(c, Mul(d, x)), Add(n, S('1'))), Mul(Pow(Add(e, Mul(f, x)), Add(p, S('1'))), Pow(Mul(f, Add(p, S('1')), Add(Mul(c, f), Mul(S('-1'), Mul(d, e)))), S('-1')))), Mul(S('-1'), Mul(Mul(Add(Mul(a, d, f, Add(n, p, S('2'))), Mul(S('-1'), Mul(b, Add(Mul(d, e, Add(n, S('1'))), Mul(c, f, Add(p, S('1'))))))), Pow(Mul(f, Add(p, S('1')), Add(Mul(c, f), Mul(S('-1'), Mul(d, e)))), S('-1'))), Integral(Mul(Pow(Add(c, Mul(d, x)), n), Pow(Add(e, Mul(f, x)), Simplify(Add(p, S('1'))))), x)))))
    rubi.add(rule60)

    pattern61 = Pattern(Integral(Mul(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'n', S('1'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), WC(1, True, 'p', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda p, n: NonzeroQ(Add(n, p, S('2')))))
    rule61 = ReplacementRule(pattern61, lambda a, p, d, x, b, e, f, c, n : Add(Mul(b, Pow(Add(c, Mul(d, x)), Add(n, S('1'))), Mul(Pow(Add(e, Mul(f, x)), Add(p, S('1'))), Pow(Mul(d, f, Add(n, p, S('2'))), S('-1')))), Mul(Mul(Add(Mul(a, d, f, Add(n, p, S('2'))), Mul(S('-1'), Mul(b, Add(Mul(d, e, Add(n, S('1'))), Mul(c, f, Add(p, S('1'))))))), Pow(Mul(d, f, Add(n, p, S('2'))), S('-1'))), Integral(Mul(Pow(Add(c, Mul(d, x)), n), Pow(Add(e, Mul(f, x)), p)), x))))
    rubi.add(rule61)

    pattern62 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S('2')), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'n', S('1'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), WC(1, True, 'p', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda p, n: NonzeroQ(Add(n, p, S('2')))), CustomConstraint(lambda p, n: NonzeroQ(Add(n, p, S('3')))), CustomConstraint(lambda a, p, d, b, e, f, c, n: ZeroQ(Add(Mul(d, f, Add(n, p, S('2')), Add(Mul(Pow(a, S('2')), d, f, Add(n, p, S('3'))), Mul(S('-1'), Mul(b, Add(Mul(b, c, e), Mul(a, Add(Mul(d, e, Add(n, S('1'))), Mul(c, f, Add(p, S('1')))))))))), Mul(S('-1'), Mul(b, Add(Mul(d, e, Add(n, S('1'))), Mul(c, f, Add(p, S('1')))), Add(Mul(a, d, f, Add(n, p, S('4'))), Mul(S('-1'), Mul(b, Add(Mul(d, e, Add(n, S('2'))), Mul(c, f, Add(p, S('2')))))))))))))
    rule62 = ReplacementRule(pattern62, lambda a, p, d, x, b, e, f, c, n : Mul(b, Pow(Add(c, Mul(d, x)), Add(n, S('1'))), Pow(Add(e, Mul(f, x)), Add(p, S('1'))), Mul(Add(Mul(S('2'), a, d, f, Add(n, p, S('3'))), Mul(S('-1'), Mul(b, Add(Mul(d, e, Add(n, S('2'))), Mul(c, f, Add(p, S('2')))))), Mul(b, d, f, Add(n, p, S('2')), x)), Pow(Mul(Pow(d, S('2')), Pow(f, S('2')), Add(n, p, S('2')), Add(n, p, S('3'))), S('-1')))))
    rubi.add(rule62)

    pattern63 = Pattern(Integral(Mul(Pow(Mul(WC(1, True, 'f', S('1')), x_), WC(1, True, 'p', S('1'))), Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), WC(1, True, 'm', S('1'))), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'n', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c, d: ZeroQ(Add(Mul(b, c), Mul(a, d)))), CustomConstraint(lambda m, n: ZeroQ(Add(m, Mul(S('-1'), n), S('-1')))), CustomConstraint(lambda p: Not(RationalQ(p))), CustomConstraint(lambda m: Not(PositiveIntegerQ(m))), CustomConstraint(lambda p, m, n: NonzeroQ(Add(m, n, p, S('2')))))
    rule63 = ReplacementRule(pattern63, lambda a, p, d, x, b, f, c, m, n : Add(Mul(a, Integral(Mul(Pow(Add(a, Mul(b, x)), n), Pow(Add(c, Mul(d, x)), n), Pow(Mul(f, x), p)), x)), Mul(Mul(b, Pow(f, S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), n), Pow(Add(c, Mul(d, x)), n), Pow(Mul(f, x), Add(p, S('1')))), x))))
    rubi.add(rule63)

    pattern64 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S('-1')), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), S('-1')), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), WC(1, True, 'p', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p: IntegerQ(p)))
    rule64 = ReplacementRule(pattern64, lambda a, p, d, x, b, e, f, c : Int(ExpandIntegrand(Mul(Pow(Add(e, Mul(f, x)), p), Pow(Mul(Add(a, Mul(b, x)), Add(c, Mul(d, x))), S('-1'))), x), x))
    rubi.add(rule64)

    pattern65 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S('-1')), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), S('-1')), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), WC(1, True, 'p', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(S('0'), p, S('1'))))
    rule65 = ReplacementRule(pattern65, lambda a, p, d, x, b, e, f, c : Add(Mul(Mul(Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1'))), Integral(Mul(Pow(Add(e, Mul(f, x)), Add(p, S('-1'))), Pow(Add(a, Mul(b, x)), S('-1'))), x)), Mul(S('-1'), Mul(Mul(Add(Mul(d, e), Mul(S('-1'), Mul(c, f))), Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1'))), Integral(Mul(Pow(Add(e, Mul(f, x)), Add(p, S('-1'))), Pow(Add(c, Mul(d, x)), S('-1'))), x)))))
    rubi.add(rule65)

    pattern66 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S('-1')), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), S('-1')), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), p_)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S('1'))))
    rule66 = ReplacementRule(pattern66, lambda a, p, d, x, b, e, f, c : Add(Mul(f, Mul(Pow(Add(e, Mul(f, x)), Add(p, S('-1'))), Pow(Mul(b, d, Add(p, S('-1'))), S('-1')))), Mul(Mul(S('1'), Pow(Mul(b, d), S('-1'))), Integral(Mul(Add(Mul(b, d, Pow(e, S('2'))), Mul(S('-1'), Mul(a, c, Pow(f, S('2')))), Mul(f, Add(Mul(S('2'), b, d, e), Mul(S('-1'), Mul(b, c, f)), Mul(S('-1'), Mul(a, d, f))), x)), Mul(Pow(Add(e, Mul(f, x)), Add(p, S('-2'))), Pow(Mul(Add(a, Mul(b, x)), Add(c, Mul(d, x))), S('-1')))), x))))
    rubi.add(rule66)

    pattern67 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S('-1')), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), S('-1')), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), p_)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S('-1'))))
    rule67 = ReplacementRule(pattern67, lambda a, p, d, x, b, e, f, c : Add(Mul(f, Mul(Pow(Add(e, Mul(f, x)), Add(p, S('1'))), Pow(Mul(Add(p, S('1')), Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), Add(Mul(d, e), Mul(S('-1'), Mul(c, f)))), S('-1')))), Mul(Mul(S('1'), Pow(Mul(Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), Add(Mul(d, e), Mul(S('-1'), Mul(c, f)))), S('-1'))), Integral(Mul(Add(Mul(b, d, e), Mul(S('-1'), Mul(b, c, f)), Mul(S('-1'), Mul(a, d, f)), Mul(S('-1'), Mul(b, d, f, x))), Mul(Pow(Add(e, Mul(f, x)), Add(p, S('1'))), Pow(Mul(Add(a, Mul(b, x)), Add(c, Mul(d, x))), S('-1')))), x))))
    rubi.add(rule67)

    pattern68 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S('-1')), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), S('-1')), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), p_)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda p: Not(IntegerQ(p))))
    rule68 = ReplacementRule(pattern68, lambda a, p, d, x, b, e, f, c : Add(Mul(Mul(b, Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1'))), Integral(Mul(Pow(Add(e, Mul(f, x)), p), Pow(Add(a, Mul(b, x)), S('-1'))), x)), Mul(S('-1'), Mul(Mul(d, Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1'))), Integral(Mul(Pow(Add(e, Mul(f, x)), p), Pow(Add(c, Mul(d, x)), S('-1'))), x)))))
    rubi.add(rule68)

    pattern69 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S('-1')), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'n', S('1'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), p_)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p: FractionQ(p)), CustomConstraint(lambda p: Less(p, S('-1'))))
    rule69 = ReplacementRule(pattern69, lambda a, p, d, x, b, e, f, c, n : Int(ExpandIntegrand(Pow(Add(e, Mul(f, x)), FractionalPart(p)), Mul(Pow(Add(c, Mul(d, x)), n), Mul(Pow(Add(e, Mul(f, x)), IntegerPart(p)), Pow(Add(a, Mul(b, x)), S('-1')))), x), x))
    rubi.add(rule69)

    pattern70 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), WC(1, True, 'm', S('1'))), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'n', S('1'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), WC(1, True, 'p', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m, n: IntegersQ(m, n)), CustomConstraint(lambda n, m, p: Or(IntegerQ(p), And(Greater(m, S('0')), GreaterEqual(n, S('-1'))))))
    rule70 = ReplacementRule(pattern70, lambda a, p, d, x, b, e, f, c, m, n : Int(ExpandIntegrand(Mul(Pow(Add(a, Mul(b, x)), m), Pow(Add(c, Mul(d, x)), n), Pow(Add(e, Mul(f, x)), p)), x), x))
    rubi.add(rule70)

    pattern71 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S('2')), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'n', S('1'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), WC(1, True, 'p', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda p, n: Or(And(RationalQ(n), Less(n, S('-1'))), And(ZeroQ(Add(n, p, S('3'))), NonzeroQ(Add(n, S('1'))), Or(SumSimplerQ(n, S('1')), Not(SumSimplerQ(p, S('1'))))))))
    rule71 = ReplacementRule(pattern71, lambda a, p, d, x, b, e, f, c, n : Add(Mul(Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('2')), Pow(Add(c, Mul(d, x)), Add(n, S('1'))), Mul(Pow(Add(e, Mul(f, x)), Add(p, S('1'))), Pow(Mul(Pow(d, S('2')), Add(Mul(d, e), Mul(S('-1'), Mul(c, f))), Add(n, S('1'))), S('-1')))), Mul(S('-1'), Mul(Mul(S('1'), Pow(Mul(Pow(d, S('2')), Add(Mul(d, e), Mul(S('-1'), Mul(c, f))), Add(n, S('1'))), S('-1'))), Integral(Mul(Pow(Add(c, Mul(d, x)), Add(n, S('1'))), Pow(Add(e, Mul(f, x)), p), Simp(Add(Mul(Pow(a, S('2')), Pow(d, S('2')), f, Add(n, p, S('2'))), Mul(Pow(b, S('2')), c, Add(Mul(d, e, Add(n, S('1'))), Mul(c, f, Add(p, S('1'))))), Mul(S('-1'), Mul(S('2'), a, b, d, Add(Mul(d, e, Add(n, S('1'))), Mul(c, f, Add(p, S('1')))))), Mul(S('-1'), Mul(Pow(b, S('2')), d, Add(Mul(d, e), Mul(S('-1'), Mul(c, f))), Add(n, S('1')), x))), x)), x)))))
    rubi.add(rule71)

    pattern72 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S('2')), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'n', S('1'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), WC(1, True, 'p', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda p, n: NonzeroQ(Add(n, p, S('3')))))
    rule72 = ReplacementRule(pattern72, lambda a, p, d, x, b, e, f, c, n : Add(Mul(b, Add(a, Mul(b, x)), Pow(Add(c, Mul(d, x)), Add(n, S('1'))), Mul(Pow(Add(e, Mul(f, x)), Add(p, S('1'))), Pow(Mul(d, f, Add(n, p, S('3'))), S('-1')))), Mul(Mul(S('1'), Pow(Mul(d, f, Add(n, p, S('3'))), S('-1'))), Integral(Mul(Pow(Add(c, Mul(d, x)), n), Pow(Add(e, Mul(f, x)), p), Simp(Add(Mul(Pow(a, S('2')), d, f, Add(n, p, S('3'))), Mul(S('-1'), Mul(b, Add(Mul(b, c, e), Mul(a, Add(Mul(d, e, Add(n, S('1'))), Mul(c, f, Add(p, S('1')))))))), Mul(b, Add(Mul(a, d, f, Add(n, p, S('4'))), Mul(S('-1'), Mul(b, Add(Mul(d, e, Add(n, S('2'))), Mul(c, f, Add(p, S('2'))))))), x)), x)), x))))
    rubi.add(rule72)

    pattern73 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S(S('-1'))/S(S('3'))), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), S(S('-2'))/S(S('3'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), S('-1'))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)))
    rule73 = ReplacementRule(pattern73, lambda a, d, x, b, e, f, c : With(List(Set(S('q'), Rt(Mul(Add(Mul(d, e), Mul(S('-1'), Mul(c, f))), Pow(Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), S('-1'))), S('3')))), Add(Mul(Mul(S('-1'), Sqrt(S('3'))), S('q'), Mul(ArcTan(Add(Mul(S('1'), Pow(Sqrt(S('3')), S('-1'))), Mul(S('2'), S('q'), Mul(Pow(Add(a, Mul(b, x)), Mul(S('1'), Pow(S('3'), S('-1')))), Pow(Mul(Sqrt(S('3')), Pow(Add(c, Mul(d, x)), Mul(S('1'), Pow(S('3'), S('-1'))))), S('-1')))))), Pow(Add(Mul(d, e), Mul(S('-1'), Mul(c, f))), S('-1')))), Mul(S('q'), Mul(Log(Add(e, Mul(f, x))), Pow(Mul(S('2'), Add(Mul(d, e), Mul(S('-1'), Mul(c, f)))), S('-1')))), Mul(S('-1'), Mul(S('3'), S('q'), Mul(Log(Add(Mul(S('q'), Pow(Add(a, Mul(b, x)), Mul(S('1'), Pow(S('3'), S('-1'))))), Mul(S('-1'), Pow(Add(c, Mul(d, x)), Mul(S('1'), Pow(S('3'), S('-1'))))))), Pow(Mul(S('2'), Add(Mul(d, e), Mul(S('-1'), Mul(c, f)))), S('-1'))))))))
    rubi.add(rule73)

    pattern74 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), S('-1'))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda a, d, b, e, f, c: ZeroQ(Add(Mul(S('2'), b, d, e), Mul(S('-1'), Mul(f, Add(Mul(b, c), Mul(a, d))))))))
    rule74 = ReplacementRule(pattern74, lambda a, d, x, b, e, f, c : Mul(b, f, Subst(Integral(Mul(S('1'), Pow(Add(Mul(d, Pow(Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), S('2'))), Mul(b, Pow(f, S('2')), Pow(x, S('2')))), S('-1'))), x), x, Mul(Sqrt(Add(a, Mul(b, x))), Sqrt(Add(c, Mul(d, x)))))))
    rubi.add(rule74)

    pattern75 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), n_), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), S('-1'))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, n: ZeroQ(Add(m, n, S('1')))), CustomConstraint(lambda m, n: RationalQ(m, n)), CustomConstraint(lambda m: Less(S('-1'), m, S('0'))), CustomConstraint(lambda a, d, x, b, c: SimplerQ(Add(a, Mul(b, x)), Add(c, Mul(d, x)))))
    rule75 = ReplacementRule(pattern75, lambda a, d, x, b, e, f, c, m, n : With(List(Set(S('q'), Denominator(m))), Mul(S('q'), Subst(Integral(Mul(Pow(x, Add(Mul(S('q'), Add(m, S('1'))), S('-1'))), Pow(Add(Mul(b, e), Mul(S('-1'), Mul(a, f)), Mul(S('-1'), Mul(Add(Mul(d, e), Mul(S('-1'), Mul(c, f))), Pow(x, S('q'))))), S('-1'))), x), x, Mul(Pow(Add(a, Mul(b, x)), Mul(S('1'), Pow(S('q'), S('-1')))), Pow(Pow(Add(c, Mul(d, x)), Mul(S('1'), Pow(S('q'), S('-1')))), S('-1')))))))
    rubi.add(rule75)

    pattern76 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'n', S('1'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), WC(1, True, 'p', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda p, m, n: ZeroQ(Add(m, n, p, S('2')))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Greater(n, S('0'))), CustomConstraint(lambda m, p: Not(And(SumSimplerQ(p, S('1')), Not(SumSimplerQ(m, S('1')))))))
    rule76 = ReplacementRule(pattern76, lambda a, p, d, x, b, e, f, c, m, n : Add(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), n), Mul(Pow(Add(e, Mul(f, x)), Add(p, S('1'))), Pow(Mul(Add(m, S('1')), Add(Mul(b, e), Mul(S('-1'), Mul(a, f)))), S('-1')))), Mul(S('-1'), Mul(n, Mul(Add(Mul(d, e), Mul(S('-1'), Mul(c, f))), Pow(Mul(Add(m, S('1')), Add(Mul(b, e), Mul(S('-1'), Mul(a, f)))), S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), Add(n, S('-1'))), Pow(Add(e, Mul(f, x)), p)), x)))))
    rubi.add(rule76)

    pattern77 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'n', S('1'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), WC(1, True, 'p', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda p, m, n: ZeroQ(Simplify(Add(m, n, p, S('3'))))), CustomConstraint(lambda a, p, d, b, e, f, c, m, n: ZeroQ(Add(Mul(a, d, f, Add(m, S('1'))), Mul(b, c, f, Add(n, S('1'))), Mul(b, d, e, Add(p, S('1')))))), CustomConstraint(lambda m: NonzeroQ(Add(m, S('1')))))
    rule77 = ReplacementRule(pattern77, lambda a, p, d, x, b, e, f, c, m, n : Mul(b, Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), Add(n, S('1'))), Mul(Pow(Add(e, Mul(f, x)), Add(p, S('1'))), Pow(Mul(Add(m, S('1')), Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Add(Mul(b, e), Mul(S('-1'), Mul(a, f)))), S('-1')))))
    rubi.add(rule77)

    pattern78 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'n', S('1'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), WC(1, True, 'p', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda p, m, n: ZeroQ(Simplify(Add(m, n, p, S('3'))))), CustomConstraint(lambda m: Or(And(RationalQ(m), Less(m, S('-1'))), SumSimplerQ(m, S('1')))))
    rule78 = ReplacementRule(pattern78, lambda a, p, d, x, b, e, f, c, m, n : Add(Mul(b, Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), Add(n, S('1'))), Mul(Pow(Add(e, Mul(f, x)), Add(p, S('1'))), Pow(Mul(Add(m, S('1')), Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Add(Mul(b, e), Mul(S('-1'), Mul(a, f)))), S('-1')))), Mul(Mul(Add(Mul(a, d, f, Add(m, S('1'))), Mul(b, c, f, Add(n, S('1'))), Mul(b, d, e, Add(p, S('1')))), Pow(Mul(Add(m, S('1')), Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Add(Mul(b, e), Mul(S('-1'), Mul(a, f)))), S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), n), Pow(Add(e, Mul(f, x)), p)), x))))
    rubi.add(rule78)

    pattern79 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'n', S('1'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), WC(1, True, 'p', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, m, n: RationalQ(m, n, p)), CustomConstraint(lambda m: Less(m, S('-1'))), CustomConstraint(lambda n: Greater(n, S('0'))), CustomConstraint(lambda p: Greater(p, S('0'))), CustomConstraint(lambda p, m, n: Or(IntegersQ(Mul(S('2'), m), Mul(S('2'), n), Mul(S('2'), p)), IntegersQ(m, Add(n, p)), IntegersQ(p, Add(m, n)))))
    rule79 = ReplacementRule(pattern79, lambda a, p, d, x, b, e, f, c, m, n : Add(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), n), Mul(Pow(Add(e, Mul(f, x)), p), Pow(Mul(b, Add(m, S('1'))), S('-1')))), Mul(S('-1'), Mul(Mul(S('1'), Pow(Mul(b, Add(m, S('1'))), S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), Add(n, S('-1'))), Pow(Add(e, Mul(f, x)), Add(p, S('-1'))), Simp(Add(Mul(d, e, n), Mul(c, f, p), Mul(d, f, Add(n, p), x)), x)), x)))))
    rubi.add(rule79)

    pattern80 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'n', S('1'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), WC(1, True, 'p', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda p, m, n: RationalQ(m, n, p)), CustomConstraint(lambda m: Less(m, S('-1'))), CustomConstraint(lambda n: Greater(n, S('1'))), CustomConstraint(lambda p, m, n: Or(IntegersQ(Mul(S('2'), m), Mul(S('2'), n), Mul(S('2'), p)), IntegersQ(m, Add(n, p)), IntegersQ(p, Add(m, n)))))
    rule80 = ReplacementRule(pattern80, lambda a, p, d, x, b, e, f, c, m, n : Add(Mul(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), Add(n, S('-1'))), Mul(Pow(Add(e, Mul(f, x)), Add(p, S('1'))), Pow(Mul(b, Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), Add(m, S('1'))), S('-1')))), Mul(Mul(S('1'), Pow(Mul(b, Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), Add(m, S('1'))), S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), Add(n, S('-2'))), Pow(Add(e, Mul(f, x)), p), Simp(Add(Mul(a, d, Add(Mul(d, e, Add(n, S('-1'))), Mul(c, f, Add(p, S('1'))))), Mul(b, c, Add(Mul(d, e, Add(m, Mul(S('-1'), n), S('2'))), Mul(S('-1'), Mul(c, f, Add(m, p, S('2')))))), Mul(d, Add(Mul(a, d, f, Add(n, p)), Mul(b, Add(Mul(d, e, Add(m, S('1'))), Mul(S('-1'), Mul(c, f, Add(m, n, p, S('1'))))))), x)), x)), x))))
    rubi.add(rule80)

    pattern81 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'n', S('1'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), WC(1, True, 'p', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda p, m, n: RationalQ(m, n, p)), CustomConstraint(lambda m: Less(m, S('-1'))), CustomConstraint(lambda n: Greater(n, S('0'))), CustomConstraint(lambda p, m, n: Or(IntegersQ(Mul(S('2'), m), Mul(S('2'), n), Mul(S('2'), p)), IntegersQ(m, Add(n, p)), IntegersQ(p, Add(m, n)))))
    rule81 = ReplacementRule(pattern81, lambda a, p, d, x, b, e, f, c, m, n : Add(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), n), Mul(Pow(Add(e, Mul(f, x)), Add(p, S('1'))), Pow(Mul(Add(m, S('1')), Add(Mul(b, e), Mul(S('-1'), Mul(a, f)))), S('-1')))), Mul(S('-1'), Mul(Mul(S('1'), Pow(Mul(Add(m, S('1')), Add(Mul(b, e), Mul(S('-1'), Mul(a, f)))), S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), Add(n, S('-1'))), Pow(Add(e, Mul(f, x)), p), Simp(Add(Mul(d, e, n), Mul(c, f, Add(m, p, S('2'))), Mul(d, f, Add(m, n, p, S('2')), x)), x)), x)))))
    rubi.add(rule81)

    pattern82 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'n', S('1'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), WC(1, True, 'p', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Greater(m, S('1'))), CustomConstraint(lambda p, m, n: NonzeroQ(Add(m, n, p, S('1')))), CustomConstraint(lambda m: IntegerQ(m)))
    rule82 = ReplacementRule(pattern82, lambda a, p, d, x, b, e, f, c, m, n : Add(Mul(b, Pow(Add(a, Mul(b, x)), Add(m, S('-1'))), Pow(Add(c, Mul(d, x)), Add(n, S('1'))), Mul(Pow(Add(e, Mul(f, x)), Add(p, S('1'))), Pow(Mul(d, f, Add(m, n, p, S('1'))), S('-1')))), Mul(Mul(S('1'), Pow(Mul(d, f, Add(m, n, p, S('1'))), S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('-2'))), Pow(Add(c, Mul(d, x)), n), Pow(Add(e, Mul(f, x)), p), Simp(Add(Mul(Pow(a, S('2')), d, f, Add(m, n, p, S('1'))), Mul(S('-1'), Mul(b, Add(Mul(b, c, e, Add(m, S('-1'))), Mul(a, Add(Mul(d, e, Add(n, S('1'))), Mul(c, f, Add(p, S('1')))))))), Mul(b, Add(Mul(a, d, f, Add(Mul(S('2'), m), n, p)), Mul(S('-1'), Mul(b, Add(Mul(d, e, Add(m, n)), Mul(c, f, Add(m, p)))))), x)), x)), x))))
    rubi.add(rule82)

    pattern83 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), WC(1, True, 'm', S('1'))), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'n', S('1'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), WC(1, True, 'p', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, m, n: RationalQ(m, n, p)), CustomConstraint(lambda m: Greater(m, S('0'))), CustomConstraint(lambda n: Greater(n, S('0'))), CustomConstraint(lambda p, m, n: NonzeroQ(Add(m, n, p, S('1')))), CustomConstraint(lambda p, m, n: Or(IntegersQ(Mul(S('2'), m), Mul(S('2'), n), Mul(S('2'), p)), Or(IntegersQ(m, Add(n, p)), IntegersQ(p, Add(m, n))))))
    rule83 = ReplacementRule(pattern83, lambda a, p, d, x, b, e, f, c, m, n : Add(Mul(Pow(Add(a, Mul(b, x)), m), Pow(Add(c, Mul(d, x)), n), Mul(Pow(Add(e, Mul(f, x)), Add(p, S('1'))), Pow(Mul(f, Add(m, n, p, S('1'))), S('-1')))), Mul(S('-1'), Mul(Mul(S('1'), Pow(Mul(f, Add(m, n, p, S('1'))), S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('-1'))), Pow(Add(c, Mul(d, x)), Add(n, S('-1'))), Pow(Add(e, Mul(f, x)), p), Simp(Add(Mul(c, m, Add(Mul(b, e), Mul(S('-1'), Mul(a, f)))), Mul(a, n, Add(Mul(d, e), Mul(S('-1'), Mul(c, f)))), Mul(Add(Mul(d, m, Add(Mul(b, e), Mul(S('-1'), Mul(a, f)))), Mul(b, n, Add(Mul(d, e), Mul(S('-1'), Mul(c, f))))), x)), x)), x)))))
    rubi.add(rule83)

    pattern84 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'n', S('1'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), WC(1, True, 'p', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Greater(m, S('1'))), CustomConstraint(lambda p, m, n: NonzeroQ(Add(m, n, p, S('1')))), CustomConstraint(lambda p, m, n: IntegersQ(Mul(S('2'), m), Mul(S('2'), n), Mul(S('2'), p))))
    rule84 = ReplacementRule(pattern84, lambda a, p, d, x, b, e, f, c, m, n : Add(Mul(b, Pow(Add(a, Mul(b, x)), Add(m, S('-1'))), Pow(Add(c, Mul(d, x)), Add(n, S('1'))), Mul(Pow(Add(e, Mul(f, x)), Add(p, S('1'))), Pow(Mul(d, f, Add(m, n, p, S('1'))), S('-1')))), Mul(Mul(S('1'), Pow(Mul(d, f, Add(m, n, p, S('1'))), S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('-2'))), Pow(Add(c, Mul(d, x)), n), Pow(Add(e, Mul(f, x)), p), Simp(Add(Mul(Pow(a, S('2')), d, f, Add(m, n, p, S('1'))), Mul(S('-1'), Mul(b, Add(Mul(b, c, e, Add(m, S('-1'))), Mul(a, Add(Mul(d, e, Add(n, S('1'))), Mul(c, f, Add(p, S('1')))))))), Mul(b, Add(Mul(a, d, f, Add(Mul(S('2'), m), n, p)), Mul(S('-1'), Mul(b, Add(Mul(d, e, Add(m, n)), Mul(c, f, Add(m, p)))))), x)), x)), x))))
    rubi.add(rule84)

    pattern85 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'n', S('1'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), WC(1, True, 'p', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S('-1'))), CustomConstraint(lambda m: IntegerQ(m)), CustomConstraint(lambda p, n: Or(IntegerQ(n), IntegersQ(Mul(S('2'), n), Mul(S('2'), p)))))
    rule85 = ReplacementRule(pattern85, lambda a, p, d, x, b, e, f, c, m, n : Add(Mul(b, Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), Add(n, S('1'))), Mul(Pow(Add(e, Mul(f, x)), Add(p, S('1'))), Pow(Mul(Add(m, S('1')), Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Add(Mul(b, e), Mul(S('-1'), Mul(a, f)))), S('-1')))), Mul(Mul(S('1'), Pow(Mul(Add(m, S('1')), Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Add(Mul(b, e), Mul(S('-1'), Mul(a, f)))), S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), n), Pow(Add(e, Mul(f, x)), p), Simp(Add(Mul(a, d, f, Add(m, S('1'))), Mul(S('-1'), Mul(b, Add(Mul(d, e, Add(m, n, S('2'))), Mul(c, f, Add(m, p, S('2')))))), Mul(S('-1'), Mul(b, d, f, Add(m, n, p, S('3')), x))), x)), x))))
    rubi.add(rule85)

    pattern86 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'n', S('1'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), WC(1, True, 'p', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S('-1'))), CustomConstraint(lambda p, m, n: IntegersQ(Mul(S('2'), m), Mul(S('2'), n), Mul(S('2'), p))))
    rule86 = ReplacementRule(pattern86, lambda a, p, d, x, b, e, f, c, m, n : Add(Mul(b, Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), Add(n, S('1'))), Mul(Pow(Add(e, Mul(f, x)), Add(p, S('1'))), Pow(Mul(Add(m, S('1')), Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Add(Mul(b, e), Mul(S('-1'), Mul(a, f)))), S('-1')))), Mul(Mul(S('1'), Pow(Mul(Add(m, S('1')), Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Add(Mul(b, e), Mul(S('-1'), Mul(a, f)))), S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), n), Pow(Add(e, Mul(f, x)), p), Simp(Add(Mul(a, d, f, Add(m, S('1'))), Mul(S('-1'), Mul(b, Add(Mul(d, e, Add(m, n, S('2'))), Mul(c, f, Add(m, p, S('2')))))), Mul(S('-1'), Mul(b, d, f, Add(m, n, p, S('3')), x))), x)), x))))
    rubi.add(rule86)

    pattern87 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), n_), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), S('-1'))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m, n: PositiveIntegerQ(Simplify(Add(m, n, S('1'))))), CustomConstraint(lambda m, n: Or(And(RationalQ(m), Greater(m, S('0'))), And(Not(RationalQ(m)), Or(SumSimplerQ(m, S('-1')), Not(SumSimplerQ(n, S('-1'))))))))
    rule87 = ReplacementRule(pattern87, lambda a, d, x, b, e, f, c, m, n : Add(Mul(Mul(b, Pow(f, S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('-1'))), Pow(Add(c, Mul(d, x)), n)), x)), Mul(S('-1'), Mul(Mul(Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), Pow(f, S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('-1'))), Mul(Pow(Add(c, Mul(d, x)), n), Pow(Add(e, Mul(f, x)), S('-1')))), x)))))
    rubi.add(rule87)

    pattern88 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S('-1')), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), S(S('-1'))/S(S('4')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda e, f, c, d: PositiveQ(Mul(Mul(S('-1'), f), Pow(Add(Mul(d, e), Mul(S('-1'), Mul(c, f))), S('-1'))))))
    rule88 = ReplacementRule(pattern88, lambda a, d, x, b, e, f, c : Mul(S('-4'), Subst(Integral(Mul(Pow(x, S('2')), Pow(Mul(Add(Mul(b, e), Mul(S('-1'), Mul(a, f)), Mul(S('-1'), Mul(b, Pow(x, S('4'))))), Sqrt(Add(c, Mul(S('-1'), Mul(d, Mul(e, Pow(f, S('-1'))))), Mul(d, Mul(Pow(x, S('4')), Pow(f, S('-1'))))))), S('-1'))), x), x, Pow(Add(e, Mul(f, x)), Mul(S('1'), Pow(S('4'), S('-1')))))))
    rubi.add(rule88)

    pattern89 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S('-1')), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), S(S('-1'))/S(S('4')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda e, f, c, d: Not(PositiveQ(Mul(Mul(S('-1'), f), Pow(Add(Mul(d, e), Mul(S('-1'), Mul(c, f))), S('-1')))))))
    rule89 = ReplacementRule(pattern89, lambda a, d, x, b, e, f, c : Mul(Mul(Sqrt(Mul(Mul(S('-1'), f), Mul(Add(c, Mul(d, x)), Pow(Add(Mul(d, e), Mul(S('-1'), Mul(c, f))), S('-1'))))), Pow(Sqrt(Add(c, Mul(d, x))), S('-1'))), Integral(Mul(S('1'), Pow(Mul(Add(a, Mul(b, x)), Sqrt(Add(Mul(Mul(S('-1'), c), Mul(f, Pow(Add(Mul(d, e), Mul(S('-1'), Mul(c, f))), S('-1')))), Mul(S('-1'), Mul(d, f, Mul(x, Pow(Add(Mul(d, e), Mul(S('-1'), Mul(c, f))), S('-1'))))))), Pow(Add(e, Mul(f, x)), Mul(S('1'), Pow(S('4'), S('-1'))))), S('-1'))), x)))
    rubi.add(rule89)

    pattern90 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S('-1')), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), S(S('-3'))/S(S('4')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda e, f, c, d: PositiveQ(Mul(Mul(S('-1'), f), Pow(Add(Mul(d, e), Mul(S('-1'), Mul(c, f))), S('-1'))))))
    rule90 = ReplacementRule(pattern90, lambda a, d, x, b, e, f, c : Mul(S('-4'), Subst(Integral(Mul(S('1'), Pow(Mul(Add(Mul(b, e), Mul(S('-1'), Mul(a, f)), Mul(S('-1'), Mul(b, Pow(x, S('4'))))), Sqrt(Add(c, Mul(S('-1'), Mul(d, Mul(e, Pow(f, S('-1'))))), Mul(d, Mul(Pow(x, S('4')), Pow(f, S('-1'))))))), S('-1'))), x), x, Pow(Add(e, Mul(f, x)), Mul(S('1'), Pow(S('4'), S('-1')))))))
    rubi.add(rule90)

    pattern91 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S('-1')), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), S(S('-3'))/S(S('4')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda e, f, c, d: Not(PositiveQ(Mul(Mul(S('-1'), f), Pow(Add(Mul(d, e), Mul(S('-1'), Mul(c, f))), S('-1')))))))
    rule91 = ReplacementRule(pattern91, lambda a, d, x, b, e, f, c : Mul(Mul(Sqrt(Mul(Mul(S('-1'), f), Mul(Add(c, Mul(d, x)), Pow(Add(Mul(d, e), Mul(S('-1'), Mul(c, f))), S('-1'))))), Pow(Sqrt(Add(c, Mul(d, x))), S('-1'))), Integral(Mul(S('1'), Pow(Mul(Add(a, Mul(b, x)), Sqrt(Add(Mul(Mul(S('-1'), c), Mul(f, Pow(Add(Mul(d, e), Mul(S('-1'), Mul(c, f))), S('-1')))), Mul(S('-1'), Mul(d, f, Mul(x, Pow(Add(Mul(d, e), Mul(S('-1'), Mul(c, f))), S('-1'))))))), Pow(Add(e, Mul(f, x)), Mul(S('3'), Pow(S('4'), S('-1'))))), S('-1'))), x)))
    rubi.add(rule91)

    pattern92 = Pattern(Integral(Mul(Pow(Mul(WC(1, True, 'b', S('1')), x_), S(S('-1'))/S(S('2'))), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(e_, Mul(WC(1, True, 'f', S('1')), x_)), S(S('1'))/S(S('2')))), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda e, f, c, d: NonzeroQ(Add(Mul(d, e), Mul(S('-1'), Mul(c, f))))), CustomConstraint(lambda c: PositiveQ(c)), CustomConstraint(lambda e: PositiveQ(e)), CustomConstraint(lambda b, d: Not(NegativeQ(Mul(Mul(S('-1'), b), Pow(d, S('-1')))))))
    rule92 = ReplacementRule(pattern92, lambda d, x, b, e, f, c : Mul(S('2'), Mul(Sqrt(e), Pow(b, S('-1'))), Rt(Mul(Mul(S('-1'), b), Pow(d, S('-1'))), S('2')), EllipticE(ArcSin(Mul(Sqrt(Mul(b, x)), Pow(Mul(Sqrt(c), Rt(Mul(Mul(S('-1'), b), Pow(d, S('-1'))), S('2'))), S('-1')))), Mul(c, Mul(f, Pow(Mul(d, e), S('-1')))))))
    rubi.add(rule92)

    pattern93 = Pattern(Integral(Mul(Pow(Mul(WC(1, True, 'b', S('1')), x_), S(S('-1'))/S(S('2'))), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(e_, Mul(WC(1, True, 'f', S('1')), x_)), S(S('1'))/S(S('2')))), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda e, f, c, d: NonzeroQ(Add(Mul(d, e), Mul(S('-1'), Mul(c, f))))), CustomConstraint(lambda c: PositiveQ(c)), CustomConstraint(lambda e: PositiveQ(e)), CustomConstraint(lambda b, d: NegativeQ(Mul(Mul(S('-1'), b), Pow(d, S('-1'))))))
    rule93 = ReplacementRule(pattern93, lambda d, x, b, e, f, c : Mul(Mul(Sqrt(Mul(Mul(S('-1'), b), x)), Pow(Sqrt(Mul(b, x)), S('-1'))), Integral(Mul(Sqrt(Add(e, Mul(f, x))), Pow(Mul(Sqrt(Mul(Mul(S('-1'), b), x)), Sqrt(Add(c, Mul(d, x)))), S('-1'))), x)))
    rubi.add(rule93)

    pattern94 = Pattern(Integral(Mul(Pow(Mul(WC(1, True, 'b', S('1')), x_), S(S('-1'))/S(S('2'))), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(e_, Mul(WC(1, True, 'f', S('1')), x_)), S(S('1'))/S(S('2')))), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda e, f, c, d: NonzeroQ(Add(Mul(d, e), Mul(S('-1'), Mul(c, f))))), CustomConstraint(lambda e, c: Not(And(PositiveQ(c), PositiveQ(e)))))
    rule94 = ReplacementRule(pattern94, lambda d, x, b, e, f, c : Mul(Sqrt(Add(e, Mul(f, x))), Mul(Sqrt(Add(S('1'), Mul(d, Mul(x, Pow(c, S('-1')))))), Pow(Mul(Sqrt(Add(c, Mul(d, x))), Sqrt(Add(S('1'), Mul(f, Mul(x, Pow(e, S('-1'))))))), S('-1'))), Integral(Mul(Sqrt(Add(S('1'), Mul(f, Mul(x, Pow(e, S('-1')))))), Pow(Mul(Sqrt(Mul(b, x)), Sqrt(Add(S('1'), Mul(d, Mul(x, Pow(c, S('-1'))))))), S('-1'))), x)))
    rubi.add(rule94)

    pattern95 = Pattern(Integral(Mul(Pow(Add(a_, Mul(WC(1, True, 'b', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), S(S('1'))/S(S('2')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda a, b, c, d: PositiveQ(Mul(b, Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1'))))), CustomConstraint(lambda e, b, f, a: PositiveQ(Mul(b, Pow(Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), S('-1'))))), CustomConstraint(lambda a, b, c, d: Not(NegativeQ(Mul(Mul(S('-1'), Add(Mul(b, c), Mul(S('-1'), Mul(a, d)))), Pow(d, S('-1')))))), CustomConstraint(lambda a, d, x, b, e, f, c: Not(And(SimplerQ(Add(c, Mul(d, x)), Add(a, Mul(b, x))), PositiveQ(Mul(Mul(S('-1'), d), Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1')))), PositiveQ(Mul(d, Pow(Add(Mul(d, e), Mul(S('-1'), Mul(c, f))), S('-1')))), Not(NegativeQ(Mul(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Pow(b, S('-1')))))))))
    rule95 = ReplacementRule(pattern95, lambda a, d, x, b, e, f, c : Mul(Mul(S('2'), Pow(b, S('-1'))), Rt(Mul(Mul(S('-1'), Add(Mul(b, e), Mul(S('-1'), Mul(a, f)))), Pow(d, S('-1'))), S('2')), EllipticE(ArcSin(Mul(Sqrt(Add(a, Mul(b, x))), Pow(Rt(Mul(Mul(S('-1'), Add(Mul(b, c), Mul(S('-1'), Mul(a, d)))), Pow(d, S('-1'))), S('2')), S('-1')))), Mul(f, Mul(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Pow(Mul(d, Add(Mul(b, e), Mul(S('-1'), Mul(a, f)))), S('-1')))))))
    rubi.add(rule95)

    pattern96 = Pattern(Integral(Mul(Pow(Add(a_, Mul(WC(1, True, 'b', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), S(S('1'))/S(S('2')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda a, d, b, e, f, c: Not(And(PositiveQ(Mul(b, Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1')))), PositiveQ(Mul(b, Pow(Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), S('-1'))))))), CustomConstraint(lambda a, b, c, d: Not(NegativeQ(Mul(Mul(S('-1'), Add(Mul(b, c), Mul(S('-1'), Mul(a, d)))), Pow(d, S('-1')))))))
    rule96 = ReplacementRule(pattern96, lambda a, d, x, b, e, f, c : Mul(Sqrt(Add(e, Mul(f, x))), Mul(Sqrt(Mul(b, Mul(Add(c, Mul(d, x)), Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1'))))), Pow(Mul(Sqrt(Add(c, Mul(d, x))), Sqrt(Mul(b, Mul(Add(e, Mul(f, x)), Pow(Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), S('-1')))))), S('-1'))), Integral(Mul(Sqrt(Add(Mul(b, Mul(e, Pow(Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), S('-1')))), Mul(b, f, Mul(x, Pow(Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), S('-1')))))), Pow(Mul(Sqrt(Add(a, Mul(b, x))), Sqrt(Add(Mul(b, Mul(c, Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1')))), Mul(b, d, Mul(x, Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1'))))))), S('-1'))), x)))
    rubi.add(rule96)

    pattern97 = Pattern(Integral(Mul(Pow(Mul(WC(1, True, 'b', S('1')), x_), S(S('-1'))/S(S('2'))), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(e_, Mul(WC(1, True, 'f', S('1')), x_)), S(S('-1'))/S(S('2')))), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c: PositiveQ(c)), CustomConstraint(lambda e: PositiveQ(e)), CustomConstraint(lambda b, f, d: Or(PositiveQ(Mul(Mul(S('-1'), b), Pow(d, S('-1')))), NegativeQ(Mul(Mul(S('-1'), b), Pow(f, S('-1')))))))
    rule97 = ReplacementRule(pattern97, lambda d, x, b, e, f, c : Mul(Mul(S('2'), Pow(Mul(b, Sqrt(e)), S('-1'))), Rt(Mul(Mul(S('-1'), b), Pow(d, S('-1'))), S('2')), EllipticF(ArcSin(Mul(Sqrt(Mul(b, x)), Pow(Mul(Sqrt(c), Rt(Mul(Mul(S('-1'), b), Pow(d, S('-1'))), S('2'))), S('-1')))), Mul(c, Mul(f, Pow(Mul(d, e), S('-1')))))))
    rubi.add(rule97)

    pattern98 = Pattern(Integral(Mul(Pow(Mul(WC(1, True, 'b', S('1')), x_), S(S('-1'))/S(S('2'))), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(e_, Mul(WC(1, True, 'f', S('1')), x_)), S(S('-1'))/S(S('2')))), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c: PositiveQ(c)), CustomConstraint(lambda e: PositiveQ(e)), CustomConstraint(lambda b, f, d: Or(PosQ(Mul(Mul(S('-1'), b), Pow(d, S('-1')))), NegQ(Mul(Mul(S('-1'), b), Pow(f, S('-1')))))))
    rule98 = ReplacementRule(pattern98, lambda d, x, b, e, f, c : Mul(Mul(S('2'), Pow(Mul(b, Sqrt(e)), S('-1'))), Rt(Mul(Mul(S('-1'), b), Pow(d, S('-1'))), S('2')), EllipticF(ArcSin(Mul(Sqrt(Mul(b, x)), Pow(Mul(Sqrt(c), Rt(Mul(Mul(S('-1'), b), Pow(d, S('-1'))), S('2'))), S('-1')))), Mul(c, Mul(f, Pow(Mul(d, e), S('-1')))))))
    rubi.add(rule98)

    pattern99 = Pattern(Integral(Mul(Pow(Mul(WC(1, True, 'b', S('1')), x_), S(S('-1'))/S(S('2'))), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(e_, Mul(WC(1, True, 'f', S('1')), x_)), S(S('-1'))/S(S('2')))), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda e, c: Not(And(PositiveQ(c), PositiveQ(e)))))
    rule99 = ReplacementRule(pattern99, lambda d, x, b, e, f, c : Mul(Sqrt(Add(S('1'), Mul(d, Mul(x, Pow(c, S('-1')))))), Mul(Sqrt(Add(S('1'), Mul(f, Mul(x, Pow(e, S('-1')))))), Pow(Mul(Sqrt(Add(c, Mul(d, x))), Sqrt(Add(e, Mul(f, x)))), S('-1'))), Integral(Mul(S('1'), Pow(Mul(Sqrt(Mul(b, x)), Sqrt(Add(S('1'), Mul(d, Mul(x, Pow(c, S('-1')))))), Sqrt(Add(S('1'), Mul(f, Mul(x, Pow(e, S('-1'))))))), S('-1'))), x)))
    rubi.add(rule99)

    pattern100 = Pattern(Integral(Mul(Pow(Add(a_, Mul(WC(1, True, 'b', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(e_, Mul(WC(1, True, 'f', S('1')), x_)), S(S('-1'))/S(S('2')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda a, b, c, d: PositiveQ(Mul(b, Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1'))))), CustomConstraint(lambda e, b, f, a: PositiveQ(Mul(b, Pow(Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), S('-1'))))), CustomConstraint(lambda a, d, x, b, c: SimplerQ(Add(a, Mul(b, x)), Add(c, Mul(d, x)))), CustomConstraint(lambda a, x, b, e, f: SimplerQ(Add(a, Mul(b, x)), Add(e, Mul(f, x)))), CustomConstraint(lambda a, d, b, e, f, c: Or(PositiveQ(Mul(Mul(S('-1'), Add(Mul(b, c), Mul(S('-1'), Mul(a, d)))), Pow(d, S('-1')))), NegativeQ(Mul(Mul(S('-1'), Add(Mul(b, e), Mul(S('-1'), Mul(a, f)))), Pow(f, S('-1')))))))
    rule100 = ReplacementRule(pattern100, lambda a, d, x, b, e, f, c : Mul(Mul(S('2'), Pow(b, S('-1'))), Rt(Mul(Mul(S('-1'), Add(Mul(b, c), Mul(S('-1'), Mul(a, d)))), Pow(d, S('-1'))), S('2')), Sqrt(Mul(Pow(b, S('2')), Pow(Mul(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Add(Mul(b, e), Mul(S('-1'), Mul(a, f)))), S('-1')))), EllipticF(ArcSin(Mul(Sqrt(Add(a, Mul(b, x))), Pow(Rt(Mul(Mul(S('-1'), Add(Mul(b, c), Mul(S('-1'), Mul(a, d)))), Pow(d, S('-1'))), S('2')), S('-1')))), Mul(f, Mul(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Pow(Mul(d, Add(Mul(b, e), Mul(S('-1'), Mul(a, f)))), S('-1')))))))
    rubi.add(rule100)

    pattern101 = Pattern(Integral(Mul(Pow(Add(a_, Mul(WC(1, True, 'b', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(e_, Mul(WC(1, True, 'f', S('1')), x_)), S(S('-1'))/S(S('2')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda a, b, c, d: PositiveQ(Mul(b, Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1'))))), CustomConstraint(lambda e, b, f, a: PositiveQ(Mul(b, Pow(Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), S('-1'))))), CustomConstraint(lambda a, d, x, b, c: SimplerQ(Add(a, Mul(b, x)), Add(c, Mul(d, x)))), CustomConstraint(lambda a, x, b, e, f: SimplerQ(Add(a, Mul(b, x)), Add(e, Mul(f, x)))), CustomConstraint(lambda a, d, b, e, f, c: Or(PosQ(Mul(Mul(S('-1'), Add(Mul(b, c), Mul(S('-1'), Mul(a, d)))), Pow(d, S('-1')))), NegQ(Mul(Mul(S('-1'), Add(Mul(b, e), Mul(S('-1'), Mul(a, f)))), Pow(f, S('-1')))))))
    rule101 = ReplacementRule(pattern101, lambda a, d, x, b, e, f, c : Mul(Mul(S('2'), Pow(b, S('-1'))), Rt(Mul(Mul(S('-1'), Add(Mul(b, c), Mul(S('-1'), Mul(a, d)))), Pow(d, S('-1'))), S('2')), Sqrt(Mul(Pow(b, S('2')), Pow(Mul(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Add(Mul(b, e), Mul(S('-1'), Mul(a, f)))), S('-1')))), EllipticF(ArcSin(Mul(Sqrt(Add(a, Mul(b, x))), Pow(Rt(Mul(Mul(S('-1'), Add(Mul(b, c), Mul(S('-1'), Mul(a, d)))), Pow(d, S('-1'))), S('2')), S('-1')))), Mul(f, Mul(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Pow(Mul(d, Add(Mul(b, e), Mul(S('-1'), Mul(a, f)))), S('-1')))))))
    rubi.add(rule101)

    pattern102 = Pattern(Integral(Mul(Pow(Add(a_, Mul(WC(1, True, 'b', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(e_, Mul(WC(1, True, 'f', S('1')), x_)), S(S('-1'))/S(S('2')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda a, d, b, e, f, c: Not(And(PositiveQ(Mul(b, Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1')))), PositiveQ(Mul(b, Pow(Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), S('-1'))))))), CustomConstraint(lambda a, d, x, b, c: SimplerQ(Add(a, Mul(b, x)), Add(c, Mul(d, x)))), CustomConstraint(lambda a, x, b, e, f: SimplerQ(Add(a, Mul(b, x)), Add(e, Mul(f, x)))))
    rule102 = ReplacementRule(pattern102, lambda a, d, x, b, e, f, c : Mul(Sqrt(Mul(b, Mul(Add(c, Mul(d, x)), Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1'))))), Mul(Sqrt(Mul(b, Mul(Add(e, Mul(f, x)), Pow(Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), S('-1'))))), Pow(Mul(Sqrt(Add(c, Mul(d, x))), Sqrt(Add(e, Mul(f, x)))), S('-1'))), Integral(Mul(S('1'), Pow(Mul(Sqrt(Add(a, Mul(b, x))), Sqrt(Add(Mul(b, Mul(c, Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1')))), Mul(b, d, Mul(x, Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1')))))), Sqrt(Add(Mul(b, Mul(e, Pow(Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), S('-1')))), Mul(b, f, Mul(x, Pow(Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), S('-1'))))))), S('-1'))), x)))
    rubi.add(rule102)

    pattern103 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S('-1')), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), S(S('-1'))/S(S('3'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), S(S('-1'))/S(S('3')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda a, d, b, e, f, c: ZeroQ(Add(Mul(S('2'), b, d, e), Mul(S('-1'), Mul(b, c, f)), Mul(S('-1'), Mul(a, d, f))))))
    rule103 = ReplacementRule(pattern103, lambda a, d, x, b, e, f, c : With(List(Set(S('q'), Rt(Mul(b, Mul(Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), Pow(Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('2')), S('-1')))), S('3')))), Add(Mul(Mul(S('-1'), Log(Add(a, Mul(b, x)))), Pow(Mul(S('2'), S('q'), Add(Mul(b, c), Mul(S('-1'), Mul(a, d)))), S('-1'))), Mul(S('-1'), Mul(Sqrt(S('3')), Mul(ArcTan(Add(Mul(S('1'), Pow(Sqrt(S('3')), S('-1'))), Mul(S('2'), S('q'), Mul(Pow(Add(c, Mul(d, x)), Mul(S('2'), Pow(S('3'), S('-1')))), Pow(Mul(Sqrt(S('3')), Pow(Add(e, Mul(f, x)), Mul(S('1'), Pow(S('3'), S('-1'))))), S('-1')))))), Pow(Mul(S('2'), S('q'), Add(Mul(b, c), Mul(S('-1'), Mul(a, d)))), S('-1'))))), Mul(S('3'), Mul(Log(Add(Mul(S('q'), Pow(Add(c, Mul(d, x)), Mul(S('2'), Pow(S('3'), S('-1'))))), Mul(S('-1'), Pow(Add(e, Mul(f, x)), Mul(S('1'), Pow(S('3'), S('-1'))))))), Pow(Mul(S('4'), S('q'), Add(Mul(b, c), Mul(S('-1'), Mul(a, d)))), S('-1')))))))
    rubi.add(rule103)

    pattern104 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), S(S('-1'))/S(S('3'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), S(S('-1'))/S(S('3')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda a, d, b, e, f, c: ZeroQ(Add(Mul(S('2'), b, d, e), Mul(S('-1'), Mul(b, c, f)), Mul(S('-1'), Mul(a, d, f))))), CustomConstraint(lambda m: IntegerQ(m)), CustomConstraint(lambda m: Less(m, S('-1'))))
    rule104 = ReplacementRule(pattern104, lambda a, d, x, b, e, f, c, m : Add(Mul(b, Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), Mul(S('2'), Pow(S('3'), S('-1')))), Mul(Pow(Add(e, Mul(f, x)), Mul(S('2'), Pow(S('3'), S('-1')))), Pow(Mul(Add(m, S('1')), Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Add(Mul(b, e), Mul(S('-1'), Mul(a, f)))), S('-1')))), Mul(Mul(f, Pow(Mul(S('6'), Add(m, S('1')), Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Add(Mul(b, e), Mul(S('-1'), Mul(a, f)))), S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Mul(Add(Mul(a, d, Add(Mul(S('3'), m), S('1'))), Mul(S('-1'), Mul(S('3'), b, c, Add(Mul(S('3'), m), S('5')))), Mul(S('-1'), Mul(S('2'), b, d, Add(Mul(S('3'), m), S('7')), x))), Pow(Mul(Pow(Add(c, Mul(d, x)), Mul(S('1'), Pow(S('3'), S('-1')))), Pow(Add(e, Mul(f, x)), Mul(S('1'), Pow(S('3'), S('-1'))))), S('-1')))), x))))
    rubi.add(rule104)

    pattern105 = Pattern(Integral(Mul(Pow(Mul(WC(1, True, 'f', S('1')), x_), WC(1, True, 'p', S('1'))), Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), WC(1, True, 'm', S('1'))), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'n', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c, d: ZeroQ(Add(Mul(b, c), Mul(a, d)))), CustomConstraint(lambda m, n: ZeroQ(Add(m, Mul(S('-1'), n)))), CustomConstraint(lambda a: PositiveQ(a)), CustomConstraint(lambda c: PositiveQ(c)))
    rule105 = ReplacementRule(pattern105, lambda a, p, d, x, b, f, c, m, n : Int(Mul(Pow(Add(Mul(a, c), Mul(b, d, Pow(x, S('2')))), m), Pow(Mul(f, x), p)), x))
    rubi.add(rule105)

    pattern106 = Pattern(Integral(Mul(Pow(Mul(WC(1, True, 'f', S('1')), x_), WC(1, True, 'p', S('1'))), Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), WC(1, True, 'm', S('1'))), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'n', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c, d: ZeroQ(Add(Mul(b, c), Mul(a, d)))), CustomConstraint(lambda m, n: ZeroQ(Add(m, Mul(S('-1'), n)))))
    rule106 = ReplacementRule(pattern106, lambda a, p, d, x, b, f, c, m, n : Mul(Pow(Add(a, Mul(b, x)), FracPart(m)), Mul(Pow(Add(c, Mul(d, x)), FracPart(m)), Pow(Pow(Add(Mul(a, c), Mul(b, d, Pow(x, S('2')))), FracPart(m)), S('-1'))), Integral(Mul(Pow(Add(Mul(a, c), Mul(b, d, Pow(x, S('2')))), m), Pow(Mul(f, x), p)), x)))
    rubi.add(rule106)

    pattern107 = Pattern(Integral(Mul(Pow(Mul(WC(1, True, 'f', S('1')), x_), WC(1, True, 'p', S('1'))), Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), WC(1, True, 'm', S('1'))), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'n', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c, d: ZeroQ(Add(Mul(b, c), Mul(a, d)))), CustomConstraint(lambda m, n: PositiveIntegerQ(Add(m, Mul(S('-1'), n)))), CustomConstraint(lambda p, m, n: NonzeroQ(Add(m, n, p, S('2')))))
    rule107 = ReplacementRule(pattern107, lambda a, p, d, x, b, f, c, m, n : Int(ExpandIntegrand(Mul(Pow(Add(a, Mul(b, x)), n), Pow(Add(c, Mul(d, x)), n), Pow(Mul(f, x), p)), Pow(Add(a, Mul(b, x)), Add(m, Mul(S('-1'), n))), x), x))
    rubi.add(rule107)

    pattern108 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), WC(1, True, 'm', S('1'))), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'n', S('1'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), WC(1, True, 'p', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m, n: Or(PositiveIntegerQ(m), NegativeIntegerQ(m, n))))
    rule108 = ReplacementRule(pattern108, lambda a, p, d, x, b, e, f, c, m, n : Int(ExpandIntegrand(Mul(Pow(Add(a, Mul(b, x)), m), Pow(Add(c, Mul(d, x)), n), Pow(Add(e, Mul(f, x)), p)), x), x))
    rubi.add(rule108)

    pattern109 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'n', S('1'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), WC(1, True, 'p', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda p, m, n: NegativeIntegerQ(Add(m, n, p, S('2')))), CustomConstraint(lambda m: NonzeroQ(Add(m, S('1')))), CustomConstraint(lambda p, m, n: Or(SumSimplerQ(m, S('1')), And(Not(And(NonzeroQ(Add(n, S('1'))), SumSimplerQ(n, S('1')))), Not(And(NonzeroQ(Add(p, S('1'))), SumSimplerQ(p, S('1'))))))))
    rule109 = ReplacementRule(pattern109, lambda a, p, d, x, b, e, f, c, m, n : Add(Mul(b, Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), Add(n, S('1'))), Mul(Pow(Add(e, Mul(f, x)), Add(p, S('1'))), Pow(Mul(Add(m, S('1')), Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Add(Mul(b, e), Mul(S('-1'), Mul(a, f)))), S('-1')))), Mul(Mul(S('1'), Pow(Mul(Add(m, S('1')), Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Add(Mul(b, e), Mul(S('-1'), Mul(a, f)))), S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), n), Pow(Add(e, Mul(f, x)), p), Simp(Add(Mul(a, d, f, Add(m, S('1'))), Mul(S('-1'), Mul(b, Add(Mul(d, e, Add(m, n, S('2'))), Mul(c, f, Add(m, p, S('2')))))), Mul(S('-1'), Mul(b, d, f, Add(m, n, p, S('3')), x))), x)), x))))
    rubi.add(rule109)

    pattern110 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'n', S('1'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), p_)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda p, m, n: ZeroQ(Add(m, n, p, S('2')))), CustomConstraint(lambda n: NegativeIntegerQ(n)))
    rule110 = ReplacementRule(pattern110, lambda a, p, d, x, b, e, f, c, m, n : Mul(Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), n), Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Mul(Add(m, S('1')), Pow(Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), Add(n, S('1'))), Pow(Add(e, Mul(f, x)), Add(m, S('1')))), S('-1'))), Hypergeometric2F1(Add(m, S('1')), Mul(S('-1'), n), Add(m, S('2')), Mul(Mul(S('-1'), Add(Mul(d, e), Mul(S('-1'), Mul(c, f)))), Mul(Add(a, Mul(b, x)), Pow(Mul(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Add(e, Mul(f, x))), S('-1')))))))
    rubi.add(rule110)

    pattern111 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), n_), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), p_)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda p, m, n: ZeroQ(Add(m, n, p, S('2')))), CustomConstraint(lambda n: Not(IntegerQ(n))))
    rule111 = ReplacementRule(pattern111, lambda a, p, d, x, b, e, f, c, m, n : Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), n), Mul(Pow(Add(e, Mul(f, x)), Add(p, S('1'))), Pow(Mul(Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), Add(m, S('1'))), S('-1'))), Pow(Mul(Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), Mul(Add(c, Mul(d, x)), Pow(Mul(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Add(e, Mul(f, x))), S('-1')))), Mul(S('-1'), n)), Hypergeometric2F1(Add(m, S('1')), Mul(S('-1'), n), Add(m, S('2')), Mul(Mul(S('-1'), Add(Mul(d, e), Mul(S('-1'), Mul(c, f)))), Mul(Add(a, Mul(b, x)), Pow(Mul(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Add(e, Mul(f, x))), S('-1')))))))
    rubi.add(rule111)

    pattern112 = Pattern(Integral(Mul(Pow(Mul(WC(1, True, 'b', S('1')), x_), m_), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), n_), Pow(Add(e_, Mul(WC(1, True, 'f', S('1')), x_)), p_)), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: Not(IntegerQ(m))), CustomConstraint(lambda n: Not(IntegerQ(n))), CustomConstraint(lambda c: PositiveQ(c)), CustomConstraint(lambda e, p: Or(IntegerQ(p), PositiveQ(e))))
    rule112 = ReplacementRule(pattern112, lambda p, d, x, b, e, f, c, m, n : Mul(Pow(c, n), Pow(e, p), Mul(Pow(Mul(b, x), Add(m, S('1'))), Pow(Mul(b, Add(m, S('1'))), S('-1'))), AppellF1(Add(m, S('1')), Mul(S('-1'), n), Mul(S('-1'), p), Add(m, S('2')), Mul(Mul(S('-1'), d), Mul(x, Pow(c, S('-1')))), Mul(Mul(S('-1'), f), Mul(x, Pow(e, S('-1')))))))
    rubi.add(rule112)

    pattern113 = Pattern(Integral(Mul(Pow(Mul(WC(1, True, 'b', S('1')), x_), m_), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), n_), Pow(Add(e_, Mul(WC(1, True, 'f', S('1')), x_)), p_)), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: Not(IntegerQ(m))), CustomConstraint(lambda n: Not(IntegerQ(n))), CustomConstraint(lambda b, c, d: PositiveQ(Mul(Mul(S('-1'), d), Pow(Mul(b, c), S('-1'))))), CustomConstraint(lambda p, d, e, f, c: Or(IntegerQ(p), PositiveQ(Mul(d, Pow(Add(Mul(d, e), Mul(S('-1'), Mul(c, f))), S('-1')))))))
    rule113 = ReplacementRule(pattern113, lambda p, d, x, b, e, f, c, m, n : Mul(Mul(Pow(Add(c, Mul(d, x)), Add(n, S('1'))), Pow(Mul(d, Add(n, S('1')), Pow(Mul(Mul(S('-1'), d), Pow(Mul(b, c), S('-1'))), m), Pow(Mul(d, Pow(Add(Mul(d, e), Mul(S('-1'), Mul(c, f))), S('-1'))), p)), S('-1'))), AppellF1(Add(n, S('1')), Mul(S('-1'), m), Mul(S('-1'), p), Add(n, S('2')), Add(S('1'), Mul(d, Mul(x, Pow(c, S('-1'))))), Mul(Mul(S('-1'), f), Mul(Add(c, Mul(d, x)), Pow(Add(Mul(d, e), Mul(S('-1'), Mul(c, f))), S('-1')))))))
    rubi.add(rule113)

    pattern114 = Pattern(Integral(Mul(Pow(Mul(WC(1, True, 'b', S('1')), x_), m_), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), n_), Pow(Add(e_, Mul(WC(1, True, 'f', S('1')), x_)), p_)), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: Not(IntegerQ(m))), CustomConstraint(lambda n: Not(IntegerQ(n))), CustomConstraint(lambda c: Not(PositiveQ(c))))
    rule114 = ReplacementRule(pattern114, lambda p, d, x, b, e, f, c, m, n : Mul(Pow(c, IntPart(n)), Mul(Pow(Add(c, Mul(d, x)), FracPart(n)), Pow(Pow(Add(S('1'), Mul(d, Mul(x, Pow(c, S('-1'))))), FracPart(n)), S('-1'))), Integral(Mul(Pow(Mul(b, x), m), Pow(Add(S('1'), Mul(d, Mul(x, Pow(c, S('-1'))))), n), Pow(Add(e, Mul(f, x)), p)), x)))
    rubi.add(rule114)

    pattern115 = Pattern(Integral(Mul(Pow(Add(a_, Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), n_), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), p_)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m: Not(IntegerQ(m))), CustomConstraint(lambda n: Not(IntegerQ(n))), CustomConstraint(lambda p: IntegerQ(p)), CustomConstraint(lambda a, b, c, d: PositiveQ(Mul(b, Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1'))))), CustomConstraint(lambda a, d, x, b, c: Not(And(PositiveQ(Mul(d, Pow(Add(Mul(d, a), Mul(S('-1'), Mul(c, b))), S('-1')))), SimplerQ(Add(c, Mul(d, x)), Add(a, Mul(b, x)))))))
    rule115 = ReplacementRule(pattern115, lambda a, p, d, x, b, e, f, c, m, n : Mul(Pow(Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), p), Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Mul(Pow(b, Add(p, S('1'))), Add(m, S('1')), Pow(Mul(b, Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1'))), n)), S('-1'))), AppellF1(Add(m, S('1')), Mul(S('-1'), n), Mul(S('-1'), p), Add(m, S('2')), Mul(Mul(S('-1'), d), Mul(Add(a, Mul(b, x)), Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1')))), Mul(Mul(S('-1'), f), Mul(Add(a, Mul(b, x)), Pow(Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), S('-1')))))))
    rubi.add(rule115)

    pattern116 = Pattern(Integral(Mul(Pow(Add(a_, Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), n_), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), p_)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m: Not(IntegerQ(m))), CustomConstraint(lambda n: Not(IntegerQ(n))), CustomConstraint(lambda p: IntegerQ(p)), CustomConstraint(lambda a, b, c, d: Not(PositiveQ(Mul(b, Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1')))))), CustomConstraint(lambda a, d, x, b, c: Not(SimplerQ(Add(c, Mul(d, x)), Add(a, Mul(b, x))))))
    rule116 = ReplacementRule(pattern116, lambda a, p, d, x, b, e, f, c, m, n : Mul(Mul(Pow(Add(c, Mul(d, x)), FracPart(n)), Pow(Mul(Pow(Mul(b, Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1'))), IntPart(n)), Pow(Mul(b, Mul(Add(c, Mul(d, x)), Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1')))), FracPart(n))), S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), m), Pow(Add(Mul(b, Mul(c, Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1')))), Mul(b, d, Mul(x, Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1'))))), n), Pow(Add(e, Mul(f, x)), p)), x)))
    rubi.add(rule116)

    pattern117 = Pattern(Integral(Mul(Pow(Add(a_, Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), n_), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), p_)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: Not(IntegerQ(m))), CustomConstraint(lambda n: Not(IntegerQ(n))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda a, b, c, d: PositiveQ(Mul(b, Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1'))))), CustomConstraint(lambda e, b, f, a: PositiveQ(Mul(b, Pow(Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), S('-1'))))), CustomConstraint(lambda a, d, x, b, e, f, c: Not(And(PositiveQ(Mul(d, Pow(Add(Mul(d, a), Mul(S('-1'), Mul(c, b))), S('-1')))), PositiveQ(Mul(d, Pow(Add(Mul(d, e), Mul(S('-1'), Mul(c, f))), S('-1')))), SimplerQ(Add(c, Mul(d, x)), Add(a, Mul(b, x)))))), CustomConstraint(lambda a, d, x, b, e, f, c: Not(And(PositiveQ(Mul(f, Pow(Add(Mul(f, a), Mul(S('-1'), Mul(e, b))), S('-1')))), PositiveQ(Mul(f, Pow(Add(Mul(f, c), Mul(S('-1'), Mul(e, d))), S('-1')))), SimplerQ(Add(e, Mul(f, x)), Add(a, Mul(b, x)))))))
    rule117 = ReplacementRule(pattern117, lambda a, p, d, x, b, e, f, c, m, n : Mul(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Mul(b, Add(m, S('1')), Pow(Mul(b, Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1'))), n), Pow(Mul(b, Pow(Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), S('-1'))), p)), S('-1'))), AppellF1(Add(m, S('1')), Mul(S('-1'), n), Mul(S('-1'), p), Add(m, S('2')), Mul(Mul(S('-1'), d), Mul(Add(a, Mul(b, x)), Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1')))), Mul(Mul(S('-1'), f), Mul(Add(a, Mul(b, x)), Pow(Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), S('-1')))))))
    rubi.add(rule117)

    pattern118 = Pattern(Integral(Mul(Pow(Add(a_, Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), n_), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), p_)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: Not(IntegerQ(m))), CustomConstraint(lambda n: Not(IntegerQ(n))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda a, b, c, d: PositiveQ(Mul(b, Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1'))))), CustomConstraint(lambda e, b, f, a: Not(PositiveQ(Mul(b, Pow(Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), S('-1')))))))
    rule118 = ReplacementRule(pattern118, lambda a, p, d, x, b, e, f, c, m, n : Mul(Mul(Pow(Add(e, Mul(f, x)), FracPart(p)), Pow(Mul(Pow(Mul(b, Pow(Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), S('-1'))), IntPart(p)), Pow(Mul(b, Mul(Add(e, Mul(f, x)), Pow(Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), S('-1')))), FracPart(p))), S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), m), Pow(Add(c, Mul(d, x)), n), Pow(Add(Mul(b, Mul(e, Pow(Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), S('-1')))), Mul(b, f, Mul(x, Pow(Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), S('-1'))))), p)), x)))
    rubi.add(rule118)

    pattern119 = Pattern(Integral(Mul(Pow(Add(a_, Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), n_), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), p_)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: Not(IntegerQ(m))), CustomConstraint(lambda n: Not(IntegerQ(n))), CustomConstraint(lambda p: Not(IntegerQ(p))), CustomConstraint(lambda a, b, c, d: Not(PositiveQ(Mul(b, Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1')))))), CustomConstraint(lambda a, d, x, b, c: Not(SimplerQ(Add(c, Mul(d, x)), Add(a, Mul(b, x))))), CustomConstraint(lambda a, x, b, e, f: Not(SimplerQ(Add(e, Mul(f, x)), Add(a, Mul(b, x))))))
    rule119 = ReplacementRule(pattern119, lambda a, p, d, x, b, e, f, c, m, n : Mul(Mul(Pow(Add(c, Mul(d, x)), FracPart(n)), Pow(Mul(Pow(Mul(b, Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1'))), IntPart(n)), Pow(Mul(b, Mul(Add(c, Mul(d, x)), Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1')))), FracPart(n))), S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), m), Pow(Add(Mul(b, Mul(c, Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1')))), Mul(b, d, Mul(x, Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1'))))), n), Pow(Add(e, Mul(f, x)), p)), x)))
    rubi.add(rule119)

    pattern120 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), u_)), WC(1, True, 'm', S('1'))), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), u_)), WC(1, True, 'n', S('1'))), Pow(Add(e_, Mul(WC(1, True, 'f', S('1')), u_)), WC(1, True, 'p', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(Add(u, Mul(S('-1'), x)))))
    rule120 = ReplacementRule(pattern120, lambda a, p, d, u, x, b, e, f, c, m, n : Mul(Mul(S('1'), Pow(Coefficient(u, x, S('1')), S('-1'))), Subst(Integral(Mul(Pow(Add(a, Mul(b, x)), m), Pow(Add(c, Mul(d, x)), n), Pow(Add(e, Mul(f, x)), p)), x), x, u)))
    rubi.add(rule120)

    pattern121 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), WC(1, True, 'm', S('1'))), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'n', S('1'))), Add(e_, Mul(WC(1, True, 'f', S('1')), x_)), Add(WC(1, True, 'g', S('0')), Mul(WC(1, True, 'h', S('1')), x_))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, n: Or(PositiveIntegerQ(m), IntegersQ(m, n))))
    rule121 = ReplacementRule(pattern121, lambda a, d, x, b, h, g, e, f, c, m, n : Int(ExpandIntegrand(Mul(Pow(Add(a, Mul(b, x)), m), Pow(Add(c, Mul(d, x)), n), Add(e, Mul(f, x)), Add(g, Mul(h, x))), x), x))
    rubi.add(rule121)

    pattern122 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'n', S('1'))), Add(e_, Mul(WC(1, True, 'f', S('1')), x_)), Add(WC(1, True, 'g', S('0')), Mul(WC(1, True, 'h', S('1')), x_))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m, n: ZeroQ(Add(m, n, S('2')))), CustomConstraint(lambda m: NonzeroQ(Add(m, S('1')))), CustomConstraint(lambda m, n: Not(And(SumSimplerQ(n, S('1')), Not(SumSimplerQ(m, S('1')))))))
    rule122 = ReplacementRule(pattern122, lambda a, d, x, m, b, g, e, f, c, h, n : Add(Mul(Add(Mul(Pow(b, S('2')), d, e, g), Mul(S('-1'), Mul(Pow(a, S('2')), d, f, h, m)), Mul(S('-1'), Mul(a, b, Add(Mul(d, Add(Mul(f, g), Mul(e, h))), Mul(S('-1'), Mul(c, f, h, Add(m, S('1'))))))), Mul(b, f, h, Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Add(m, S('1')), x)), Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Mul(Pow(Add(c, Mul(d, x)), Add(n, S('1'))), Pow(Mul(Pow(b, S('2')), d, Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Add(m, S('1'))), S('-1')))), Mul(Mul(Add(Mul(a, d, f, h, m), Mul(b, Add(Mul(d, Add(Mul(f, g), Mul(e, h))), Mul(S('-1'), Mul(c, f, h, Add(m, S('2'))))))), Pow(Mul(Pow(b, S('2')), d), S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), n)), x))))
    rubi.add(rule122)

    pattern123 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), n_), Add(e_, Mul(WC(1, True, 'f', S('1')), x_)), Add(WC(1, True, 'g', S('0')), Mul(WC(1, True, 'h', S('1')), x_))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, n: RationalQ(m, n)), CustomConstraint(lambda m: Less(m, S('-1'))), CustomConstraint(lambda n: Less(n, S('-1'))))
    rule123 = ReplacementRule(pattern123, lambda a, d, x, n, b, g, e, f, c, h, m : Add(Mul(Mul(Add(Mul(Pow(b, S('2')), c, d, e, g, Add(n, S('1'))), Mul(Pow(a, S('2')), c, d, f, h, Add(n, S('1'))), Mul(a, b, Add(Mul(Pow(d, S('2')), e, g, Add(m, S('1'))), Mul(Pow(c, S('2')), f, h, Add(m, S('1'))), Mul(S('-1'), Mul(c, d, Add(Mul(f, g), Mul(e, h)), Add(m, n, S('2')))))), Mul(Add(Mul(Pow(a, S('2')), Pow(d, S('2')), f, h, Add(n, S('1'))), Mul(S('-1'), Mul(a, b, Pow(d, S('2')), Add(Mul(f, g), Mul(e, h)), Add(n, S('1')))), Mul(Pow(b, S('2')), Add(Mul(Pow(c, S('2')), f, h, Add(m, S('1'))), Mul(S('-1'), Mul(c, d, Add(Mul(f, g), Mul(e, h)), Add(m, S('1')))), Mul(Pow(d, S('2')), e, g, Add(m, n, S('2')))))), x)), Pow(Mul(b, d, Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('2')), Add(m, S('1')), Add(n, S('1'))), S('-1'))), Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), Add(n, S('1')))), Mul(S('-1'), Mul(Mul(Add(Mul(Pow(a, S('2')), Pow(d, S('2')), f, h, Add(S('2'), Mul(S('3'), n), Pow(n, S('2')))), Mul(a, b, d, Add(n, S('1')), Add(Mul(S('2'), c, f, h, Add(m, S('1'))), Mul(S('-1'), Mul(d, Add(Mul(f, g), Mul(e, h)), Add(m, n, S('3')))))), Mul(Pow(b, S('2')), Add(Mul(Pow(c, S('2')), f, h, Add(S('2'), Mul(S('3'), m), Pow(m, S('2')))), Mul(S('-1'), Mul(c, d, Add(Mul(f, g), Mul(e, h)), Add(m, S('1')), Add(m, n, S('3')))), Mul(Pow(d, S('2')), e, g, Add(S('6'), Pow(m, S('2')), Mul(S('5'), n), Pow(n, S('2')), Mul(m, Add(Mul(S('2'), n), S('5')))))))), Pow(Mul(b, d, Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('2')), Add(m, S('1')), Add(n, S('1'))), S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), Add(n, S('1')))), x)))))
    rubi.add(rule123)

    pattern124 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'n', S('1'))), Add(e_, Mul(WC(1, True, 'f', S('1')), x_)), Add(WC(1, True, 'g', S('0')), Mul(WC(1, True, 'h', S('1')), x_))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m, n: Or(And(RationalQ(m), Less(m, S('-2'))), And(ZeroQ(Add(m, n, S('3'))), Not(And(RationalQ(n), Less(n, S('-2'))))))))
    rule124 = ReplacementRule(pattern124, lambda a, d, x, m, b, g, e, f, c, h, n : Add(Mul(Mul(Add(Mul(Pow(b, S('3')), c, e, g, Add(m, S('2'))), Mul(S('-1'), Mul(Pow(a, S('3')), d, f, h, Add(n, S('2')))), Mul(S('-1'), Mul(Pow(a, S('2')), b, Add(Mul(c, f, h, m), Mul(S('-1'), Mul(d, Add(Mul(f, g), Mul(e, h)), Add(m, n, S('3'))))))), Mul(S('-1'), Mul(a, Pow(b, S('2')), Add(Mul(c, Add(Mul(f, g), Mul(e, h))), Mul(d, e, g, Add(Mul(S('2'), m), n, S('4')))))), Mul(b, Add(Mul(Pow(a, S('2')), d, f, h, Add(m, Mul(S('-1'), n))), Mul(S('-1'), Mul(a, b, Add(Mul(S('2'), c, f, h, Add(m, S('1'))), Mul(S('-1'), Mul(d, Add(Mul(f, g), Mul(e, h)), Add(n, S('1'))))))), Mul(Pow(b, S('2')), Add(Mul(c, Add(Mul(f, g), Mul(e, h)), Add(m, S('1'))), Mul(S('-1'), Mul(d, e, g, Add(m, n, S('2'))))))), x)), Pow(Mul(Pow(b, S('2')), Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('2')), Add(m, S('1')), Add(m, S('2'))), S('-1'))), Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), Add(n, S('1')))), Mul(Add(Mul(f, Mul(h, Pow(Pow(b, S('2')), S('-1')))), Mul(S('-1'), Mul(Mul(d, Add(m, n, S('3')), Add(Mul(Pow(a, S('2')), d, f, h, Add(m, Mul(S('-1'), n))), Mul(S('-1'), Mul(a, b, Add(Mul(S('2'), c, f, h, Add(m, S('1'))), Mul(S('-1'), Mul(d, Add(Mul(f, g), Mul(e, h)), Add(n, S('1'))))))), Mul(Pow(b, S('2')), Add(Mul(c, Add(Mul(f, g), Mul(e, h)), Add(m, S('1'))), Mul(S('-1'), Mul(d, e, g, Add(m, n, S('2')))))))), Pow(Mul(Pow(b, S('2')), Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('2')), Add(m, S('1')), Add(m, S('2'))), S('-1'))))), Integral(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('2'))), Pow(Add(c, Mul(d, x)), n)), x))))
    rubi.add(rule124)

    pattern125 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'n', S('1'))), Add(e_, Mul(WC(1, True, 'f', S('1')), x_)), Add(WC(1, True, 'g', S('0')), Mul(WC(1, True, 'h', S('1')), x_))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m: Or(And(RationalQ(m), Inequality(S('-2'), LessEqual, m, Less, S('-1'))), SumSimplerQ(m, S('1')))), CustomConstraint(lambda m: NonzeroQ(Add(m, S('1')))), CustomConstraint(lambda m, n: NonzeroQ(Add(m, n, S('3')))))
    rule125 = ReplacementRule(pattern125, lambda a, d, x, m, b, g, e, f, c, h, n : Add(Mul(Mul(Add(Mul(Pow(a, S('2')), d, f, h, Add(n, S('2'))), Mul(Pow(b, S('2')), d, e, g, Add(m, n, S('3'))), Mul(a, b, Add(Mul(c, f, h, Add(m, S('1'))), Mul(S('-1'), Mul(d, Add(Mul(f, g), Mul(e, h)), Add(m, n, S('3')))))), Mul(b, f, h, Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Add(m, S('1')), x)), Pow(Mul(Pow(b, S('2')), d, Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Add(m, S('1')), Add(m, n, S('3'))), S('-1'))), Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), Add(n, S('1')))), Mul(S('-1'), Mul(Mul(Add(Mul(Pow(a, S('2')), Pow(d, S('2')), f, h, Add(n, S('1')), Add(n, S('2'))), Mul(a, b, d, Add(n, S('1')), Add(Mul(S('2'), c, f, h, Add(m, S('1'))), Mul(S('-1'), Mul(d, Add(Mul(f, g), Mul(e, h)), Add(m, n, S('3')))))), Mul(Pow(b, S('2')), Add(Mul(Pow(c, S('2')), f, h, Add(m, S('1')), Add(m, S('2'))), Mul(S('-1'), Mul(c, d, Add(Mul(f, g), Mul(e, h)), Add(m, S('1')), Add(m, n, S('3')))), Mul(Pow(d, S('2')), e, g, Add(m, n, S('2')), Add(m, n, S('3')))))), Pow(Mul(Pow(b, S('2')), d, Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Add(m, S('1')), Add(m, n, S('3'))), S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), n)), x)))))
    rubi.add(rule125)

    pattern126 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), WC(1, True, 'm', S('1'))), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'n', S('1'))), Add(e_, Mul(WC(1, True, 'f', S('1')), x_)), Add(WC(1, True, 'g', S('0')), Mul(WC(1, True, 'h', S('1')), x_))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m, n: NonzeroQ(Add(m, n, S('2')))), CustomConstraint(lambda m, n: NonzeroQ(Add(m, n, S('3')))))
    rule126 = ReplacementRule(pattern126, lambda a, d, x, b, h, g, e, f, c, m, n : Add(Mul(Mul(S('-1'), Add(Mul(a, d, f, h, Add(n, S('2'))), Mul(b, c, f, h, Add(m, S('2'))), Mul(S('-1'), Mul(b, d, Add(Mul(f, g), Mul(e, h)), Add(m, n, S('3')))), Mul(S('-1'), Mul(b, d, f, h, Add(m, n, S('2')), x)))), Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Mul(Pow(Add(c, Mul(d, x)), Add(n, S('1'))), Pow(Mul(Pow(b, S('2')), Pow(d, S('2')), Add(m, n, S('2')), Add(m, n, S('3'))), S('-1')))), Mul(Mul(Add(Mul(Pow(a, S('2')), Pow(d, S('2')), f, h, Add(n, S('1')), Add(n, S('2'))), Mul(a, b, d, Add(n, S('1')), Add(Mul(S('2'), c, f, h, Add(m, S('1'))), Mul(S('-1'), Mul(d, Add(Mul(f, g), Mul(e, h)), Add(m, n, S('3')))))), Mul(Pow(b, S('2')), Add(Mul(Pow(c, S('2')), f, h, Add(m, S('1')), Add(m, S('2'))), Mul(S('-1'), Mul(c, d, Add(Mul(f, g), Mul(e, h)), Add(m, S('1')), Add(m, n, S('3')))), Mul(Pow(d, S('2')), e, g, Add(m, n, S('2')), Add(m, n, S('3')))))), Pow(Mul(Pow(b, S('2')), Pow(d, S('2')), Add(m, n, S('2')), Add(m, n, S('3'))), S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), m), Pow(Add(c, Mul(d, x)), n)), x))))
    rubi.add(rule126)

    pattern127 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), n_), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), p_), Add(WC(1, True, 'g', S('0')), Mul(WC(1, True, 'h', S('1')), x_))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, m, n: Or(IntegersQ(m, n, p), PositiveIntegerQ(n, p))))
    rule127 = ReplacementRule(pattern127, lambda a, p, d, x, n, b, g, e, f, c, h, m : Int(ExpandIntegrand(Mul(Pow(Add(a, Mul(b, x)), m), Pow(Add(c, Mul(d, x)), n), Pow(Add(e, Mul(f, x)), p), Add(g, Mul(h, x))), x), x))
    rubi.add(rule127)

    pattern128 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), n_), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), p_), Add(WC(1, True, 'g', S('0')), Mul(WC(1, True, 'h', S('1')), x_))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m, n: RationalQ(m, n)), CustomConstraint(lambda m: Less(m, S('-1'))), CustomConstraint(lambda n: Greater(n, S('0'))), CustomConstraint(lambda m: IntegerQ(m)))
    rule128 = ReplacementRule(pattern128, lambda a, p, d, x, n, b, g, e, f, c, h, m : Add(Mul(Add(Mul(b, g), Mul(S('-1'), Mul(a, h))), Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), n), Mul(Pow(Add(e, Mul(f, x)), Add(p, S('1'))), Pow(Mul(b, Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), Add(m, S('1'))), S('-1')))), Mul(S('-1'), Mul(Mul(S('1'), Pow(Mul(b, Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), Add(m, S('1'))), S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), Add(n, S('-1'))), Pow(Add(e, Mul(f, x)), p), Simp(Add(Mul(b, c, Add(Mul(f, g), Mul(S('-1'), Mul(e, h))), Add(m, S('1'))), Mul(Add(Mul(b, g), Mul(S('-1'), Mul(a, h))), Add(Mul(d, e, n), Mul(c, f, Add(p, S('1'))))), Mul(d, Add(Mul(b, Add(Mul(f, g), Mul(S('-1'), Mul(e, h))), Add(m, S('1'))), Mul(f, Add(Mul(b, g), Mul(S('-1'), Mul(a, h))), Add(n, p, S('1')))), x)), x)), x)))))
    rubi.add(rule128)

    pattern129 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), n_), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), p_), Add(WC(1, True, 'g', S('0')), Mul(WC(1, True, 'h', S('1')), x_))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m, n: RationalQ(m, n)), CustomConstraint(lambda m: Less(m, S('-1'))), CustomConstraint(lambda n: Greater(n, S('0'))), CustomConstraint(lambda p, m, n: IntegersQ(Mul(S('2'), m), Mul(S('2'), n), Mul(S('2'), p))))
    rule129 = ReplacementRule(pattern129, lambda a, p, d, x, n, b, g, e, f, c, h, m : Add(Mul(Add(Mul(b, g), Mul(S('-1'), Mul(a, h))), Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), n), Mul(Pow(Add(e, Mul(f, x)), Add(p, S('1'))), Pow(Mul(b, Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), Add(m, S('1'))), S('-1')))), Mul(S('-1'), Mul(Mul(S('1'), Pow(Mul(b, Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), Add(m, S('1'))), S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), Add(n, S('-1'))), Pow(Add(e, Mul(f, x)), p), Simp(Add(Mul(b, c, Add(Mul(f, g), Mul(S('-1'), Mul(e, h))), Add(m, S('1'))), Mul(Add(Mul(b, g), Mul(S('-1'), Mul(a, h))), Add(Mul(d, e, n), Mul(c, f, Add(p, S('1'))))), Mul(d, Add(Mul(b, Add(Mul(f, g), Mul(S('-1'), Mul(e, h))), Add(m, S('1'))), Mul(f, Add(Mul(b, g), Mul(S('-1'), Mul(a, h))), Add(n, p, S('1')))), x)), x)), x)))))
    rubi.add(rule129)

    pattern130 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), n_), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), p_), Add(WC(1, True, 'g', S('0')), Mul(WC(1, True, 'h', S('1')), x_))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S('-1'))), CustomConstraint(lambda m: IntegerQ(m)))
    rule130 = ReplacementRule(pattern130, lambda a, p, d, x, n, b, g, e, f, c, h, m : Add(Mul(Add(Mul(b, g), Mul(S('-1'), Mul(a, h))), Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), Add(n, S('1'))), Mul(Pow(Add(e, Mul(f, x)), Add(p, S('1'))), Pow(Mul(Add(m, S('1')), Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Add(Mul(b, e), Mul(S('-1'), Mul(a, f)))), S('-1')))), Mul(Mul(S('1'), Pow(Mul(Add(m, S('1')), Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Add(Mul(b, e), Mul(S('-1'), Mul(a, f)))), S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), n), Pow(Add(e, Mul(f, x)), p), Simp(Add(Mul(Add(Mul(a, d, f, g), Mul(S('-1'), Mul(b, Add(Mul(d, e), Mul(c, f)), g)), Mul(b, c, e, h)), Add(m, S('1'))), Mul(S('-1'), Mul(Add(Mul(b, g), Mul(S('-1'), Mul(a, h))), Add(Mul(d, e, Add(n, S('1'))), Mul(c, f, Add(p, S('1')))))), Mul(S('-1'), Mul(d, f, Add(Mul(b, g), Mul(S('-1'), Mul(a, h))), Add(m, n, p, S('3')), x))), x)), x))))
    rubi.add(rule130)

    pattern131 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), n_), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), p_), Add(WC(1, True, 'g', S('0')), Mul(WC(1, True, 'h', S('1')), x_))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S('-1'))), CustomConstraint(lambda p, m, n: IntegersQ(Mul(S('2'), m), Mul(S('2'), n), Mul(S('2'), p))))
    rule131 = ReplacementRule(pattern131, lambda a, p, d, x, n, b, g, e, f, c, h, m : Add(Mul(Add(Mul(b, g), Mul(S('-1'), Mul(a, h))), Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), Add(n, S('1'))), Mul(Pow(Add(e, Mul(f, x)), Add(p, S('1'))), Pow(Mul(Add(m, S('1')), Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Add(Mul(b, e), Mul(S('-1'), Mul(a, f)))), S('-1')))), Mul(Mul(S('1'), Pow(Mul(Add(m, S('1')), Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Add(Mul(b, e), Mul(S('-1'), Mul(a, f)))), S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), n), Pow(Add(e, Mul(f, x)), p), Simp(Add(Mul(Add(Mul(a, d, f, g), Mul(S('-1'), Mul(b, Add(Mul(d, e), Mul(c, f)), g)), Mul(b, c, e, h)), Add(m, S('1'))), Mul(S('-1'), Mul(Add(Mul(b, g), Mul(S('-1'), Mul(a, h))), Add(Mul(d, e, Add(n, S('1'))), Mul(c, f, Add(p, S('1')))))), Mul(S('-1'), Mul(d, f, Add(Mul(b, g), Mul(S('-1'), Mul(a, h))), Add(m, n, p, S('3')), x))), x)), x))))
    rubi.add(rule131)

    pattern132 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), n_), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), p_), Add(WC(1, True, 'g', S('0')), Mul(WC(1, True, 'h', S('1')), x_))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Greater(m, S('0'))), CustomConstraint(lambda p, m, n: NonzeroQ(Add(m, n, p, S('2')))), CustomConstraint(lambda m: IntegerQ(m)))
    rule132 = ReplacementRule(pattern132, lambda a, p, d, x, n, b, g, e, f, c, h, m : Add(Mul(h, Pow(Add(a, Mul(b, x)), m), Pow(Add(c, Mul(d, x)), Add(n, S('1'))), Mul(Pow(Add(e, Mul(f, x)), Add(p, S('1'))), Pow(Mul(d, f, Add(m, n, p, S('2'))), S('-1')))), Mul(Mul(S('1'), Pow(Mul(d, f, Add(m, n, p, S('2'))), S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('-1'))), Pow(Add(c, Mul(d, x)), n), Pow(Add(e, Mul(f, x)), p), Simp(Add(Mul(a, d, f, g, Add(m, n, p, S('2'))), Mul(S('-1'), Mul(h, Add(Mul(b, c, e, m), Mul(a, Add(Mul(d, e, Add(n, S('1'))), Mul(c, f, Add(p, S('1')))))))), Mul(Add(Mul(b, d, f, g, Add(m, n, p, S('2'))), Mul(h, Add(Mul(a, d, f, m), Mul(S('-1'), Mul(b, Add(Mul(d, e, Add(m, n, S('1'))), Mul(c, f, Add(m, p, S('1'))))))))), x)), x)), x))))
    rubi.add(rule132)

    pattern133 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), n_), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), p_), Add(WC(1, True, 'g', S('0')), Mul(WC(1, True, 'h', S('1')), x_))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Greater(m, S('0'))), CustomConstraint(lambda p, m, n: NonzeroQ(Add(m, n, p, S('2')))), CustomConstraint(lambda p, m, n: IntegersQ(Mul(S('2'), m), Mul(S('2'), n), Mul(S('2'), p))))
    rule133 = ReplacementRule(pattern133, lambda a, p, d, x, n, b, g, e, f, c, h, m : Add(Mul(h, Pow(Add(a, Mul(b, x)), m), Pow(Add(c, Mul(d, x)), Add(n, S('1'))), Mul(Pow(Add(e, Mul(f, x)), Add(p, S('1'))), Pow(Mul(d, f, Add(m, n, p, S('2'))), S('-1')))), Mul(Mul(S('1'), Pow(Mul(d, f, Add(m, n, p, S('2'))), S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('-1'))), Pow(Add(c, Mul(d, x)), n), Pow(Add(e, Mul(f, x)), p), Simp(Add(Mul(a, d, f, g, Add(m, n, p, S('2'))), Mul(S('-1'), Mul(h, Add(Mul(b, c, e, m), Mul(a, Add(Mul(d, e, Add(n, S('1'))), Mul(c, f, Add(p, S('1')))))))), Mul(Add(Mul(b, d, f, g, Add(m, n, p, S('2'))), Mul(h, Add(Mul(a, d, f, m), Mul(S('-1'), Mul(b, Add(Mul(d, e, Add(m, n, S('1'))), Mul(c, f, Add(m, p, S('1'))))))))), x)), x)), x))))
    rubi.add(rule133)

    pattern134 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), n_), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), p_), Add(WC(1, True, 'g', S('0')), Mul(WC(1, True, 'h', S('1')), x_))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda p, m, n: NegativeIntegerQ(Add(m, n, p, S('2')))), CustomConstraint(lambda m: NonzeroQ(Add(m, S('1')))), CustomConstraint(lambda p, m, n: Or(SumSimplerQ(m, S('1')), And(Not(And(NonzeroQ(Add(n, S('1'))), SumSimplerQ(n, S('1')))), Not(And(NonzeroQ(Add(p, S('1'))), SumSimplerQ(p, S('1'))))))))
    rule134 = ReplacementRule(pattern134, lambda a, p, d, x, n, b, g, e, f, c, h, m : Add(Mul(Add(Mul(b, g), Mul(S('-1'), Mul(a, h))), Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), Add(n, S('1'))), Mul(Pow(Add(e, Mul(f, x)), Add(p, S('1'))), Pow(Mul(Add(m, S('1')), Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Add(Mul(b, e), Mul(S('-1'), Mul(a, f)))), S('-1')))), Mul(Mul(S('1'), Pow(Mul(Add(m, S('1')), Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Add(Mul(b, e), Mul(S('-1'), Mul(a, f)))), S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), n), Pow(Add(e, Mul(f, x)), p), Simp(Add(Mul(Add(Mul(a, d, f, g), Mul(S('-1'), Mul(b, Add(Mul(d, e), Mul(c, f)), g)), Mul(b, c, e, h)), Add(m, S('1'))), Mul(S('-1'), Mul(Add(Mul(b, g), Mul(S('-1'), Mul(a, h))), Add(Mul(d, e, Add(n, S('1'))), Mul(c, f, Add(p, S('1')))))), Mul(S('-1'), Mul(d, f, Add(Mul(b, g), Mul(S('-1'), Mul(a, h))), Add(m, n, p, S('3')), x))), x)), x))))
    rubi.add(rule134)

    pattern135 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S('-1')), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), S('-1')), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), p_), Add(WC(1, True, 'g', S('0')), Mul(WC(1, True, 'h', S('1')), x_))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)))
    rule135 = ReplacementRule(pattern135, lambda a, p, d, x, b, g, e, f, c, h : Add(Mul(Mul(Add(Mul(b, g), Mul(S('-1'), Mul(a, h))), Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1'))), Integral(Mul(Pow(Add(e, Mul(f, x)), p), Pow(Add(a, Mul(b, x)), S('-1'))), x)), Mul(S('-1'), Mul(Mul(Add(Mul(d, g), Mul(S('-1'), Mul(c, h))), Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1'))), Integral(Mul(Pow(Add(e, Mul(f, x)), p), Pow(Add(c, Mul(d, x)), S('-1'))), x)))))
    rubi.add(rule135)

    pattern136 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S('-1')), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), n_), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), p_), Add(WC(1, True, 'g', S('0')), Mul(WC(1, True, 'h', S('1')), x_))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)))
    rule136 = ReplacementRule(pattern136, lambda a, p, d, x, b, g, e, f, c, h, n : Add(Mul(Mul(h, Pow(b, S('-1'))), Integral(Mul(Pow(Add(c, Mul(d, x)), n), Pow(Add(e, Mul(f, x)), p)), x)), Mul(Mul(Add(Mul(b, g), Mul(S('-1'), Mul(a, h))), Pow(b, S('-1'))), Integral(Mul(Pow(Add(c, Mul(d, x)), n), Mul(Pow(Add(e, Mul(f, x)), p), Pow(Add(a, Mul(b, x)), S('-1')))), x))))
    rubi.add(rule136)

    pattern137 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(c_, Mul(WC(1, True, 'd', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(e_, Mul(WC(1, True, 'f', S('1')), x_)), S(S('-1'))/S(S('2'))), Add(WC(1, True, 'g', S('0')), Mul(WC(1, True, 'h', S('1')), x_))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda a, x, b, e, f: SimplerQ(Add(a, Mul(b, x)), Add(e, Mul(f, x)))), CustomConstraint(lambda d, x, e, f, c: SimplerQ(Add(c, Mul(d, x)), Add(e, Mul(f, x)))))
    rule137 = ReplacementRule(pattern137, lambda a, d, x, b, g, e, f, c, h : Add(Mul(Mul(h, Pow(f, S('-1'))), Integral(Mul(Sqrt(Add(e, Mul(f, x))), Pow(Mul(Sqrt(Add(a, Mul(b, x))), Sqrt(Add(c, Mul(d, x)))), S('-1'))), x)), Mul(Mul(Add(Mul(f, g), Mul(S('-1'), Mul(e, h))), Pow(f, S('-1'))), Integral(Mul(S('1'), Pow(Mul(Sqrt(Add(a, Mul(b, x))), Sqrt(Add(c, Mul(d, x))), Sqrt(Add(e, Mul(f, x)))), S('-1'))), x))))
    rubi.add(rule137)

    pattern138 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), n_), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), p_), Add(WC(1, True, 'g', S('0')), Mul(WC(1, True, 'h', S('1')), x_))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda p, m, n: Or(SumSimplerQ(m, S('1')), And(Not(SumSimplerQ(n, S('1'))), Not(SumSimplerQ(p, S('1')))))))
    rule138 = ReplacementRule(pattern138, lambda a, p, d, x, n, b, g, e, f, c, h, m : Add(Mul(Mul(h, Pow(b, S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), n), Pow(Add(e, Mul(f, x)), p)), x)), Mul(Mul(Add(Mul(b, g), Mul(S('-1'), Mul(a, h))), Pow(b, S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), m), Pow(Add(c, Mul(d, x)), n), Pow(Add(e, Mul(f, x)), p)), x))))
    rubi.add(rule138)

    pattern139 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S('-1')), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), S('-1')), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), p_), Pow(Add(WC(1, True, 'g', S('0')), Mul(WC(1, True, 'h', S('1')), x_)), q_)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(S('0'), p, S('1'))))
    rule139 = ReplacementRule(pattern139, lambda a, p, d, x, b, g, e, f, c, h, q : Add(Mul(Mul(Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1'))), Integral(Mul(Pow(Add(e, Mul(f, x)), Add(p, S('-1'))), Mul(Pow(Add(g, Mul(h, x)), q), Pow(Add(a, Mul(b, x)), S('-1')))), x)), Mul(S('-1'), Mul(Mul(Add(Mul(d, e), Mul(S('-1'), Mul(c, f))), Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1'))), Integral(Mul(Pow(Add(e, Mul(f, x)), Add(p, S('-1'))), Mul(Pow(Add(g, Mul(h, x)), q), Pow(Add(c, Mul(d, x)), S('-1')))), x)))))
    rubi.add(rule139)

    pattern140 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S('-1')), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(WC(1, True, 'g', S('0')), Mul(WC(1, True, 'h', S('1')), x_)), S(S('-1'))/S(S('2')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)))
    rule140 = ReplacementRule(pattern140, lambda a, d, x, b, g, e, f, c, h : Mul(S('-2'), Sqrt(Mul(d, Mul(Add(e, Mul(f, x)), Pow(Add(Mul(d, e), Mul(S('-1'), Mul(c, f))), S('-1'))))), Mul(Sqrt(Mul(d, Mul(Add(g, Mul(h, x)), Pow(Add(Mul(d, g), Mul(S('-1'), Mul(c, h))), S('-1'))))), Pow(Mul(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Sqrt(Mul(Mul(S('-1'), f), Pow(Add(Mul(d, e), Mul(S('-1'), Mul(c, f))), S('-1')))), Sqrt(Add(e, Mul(f, x))), Sqrt(Add(g, Mul(h, x)))), S('-1'))), EllipticPi(Mul(Mul(S('-1'), b), Mul(Add(Mul(d, e), Mul(S('-1'), Mul(c, f))), Pow(Mul(f, Add(Mul(b, c), Mul(S('-1'), Mul(a, d)))), S('-1')))), ArcSin(Mul(Sqrt(Mul(Mul(S('-1'), f), Pow(Add(Mul(d, e), Mul(S('-1'), Mul(c, f))), S('-1')))), Sqrt(Add(c, Mul(d, x))))), Mul(h, Mul(Add(Mul(d, e), Mul(S('-1'), Mul(c, f))), Pow(Mul(f, Add(Mul(d, g), Mul(S('-1'), Mul(c, h)))), S('-1')))))))
    rubi.add(rule140)

    pattern141 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S('-1')), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), n_), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(WC(1, True, 'g', S('0')), Mul(WC(1, True, 'h', S('1')), x_)), S(S('-1'))/S(S('2')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda n: IntegerQ(Add(n, Mul(S('1'), Pow(S('2'), S('-1')))))))
    rule141 = ReplacementRule(pattern141, lambda a, d, x, b, g, e, f, c, h, n : Int(ExpandIntegrand(Mul(S('1'), Pow(Mul(Sqrt(Add(c, Mul(d, x))), Sqrt(Add(e, Mul(f, x))), Sqrt(Add(g, Mul(h, x)))), S('-1'))), Mul(Pow(Add(c, Mul(d, x)), Add(n, Mul(S('1'), Pow(S('2'), S('-1'))))), Pow(Add(a, Mul(b, x)), S('-1'))), x), x))
    rubi.add(rule141)

    pattern142 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S('-1')), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), S(S('1'))/S(S('2'))), Pow(Add(WC(1, True, 'g', S('0')), Mul(WC(1, True, 'h', S('1')), x_)), S(S('1'))/S(S('2')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)))
    rule142 = ReplacementRule(pattern142, lambda a, d, x, b, g, e, f, c, h : Add(Mul(Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), Mul(Add(Mul(b, g), Mul(S('-1'), Mul(a, h))), Pow(Pow(b, S('2')), S('-1'))), Integral(Mul(S('1'), Pow(Mul(Add(a, Mul(b, x)), Sqrt(Add(c, Mul(d, x))), Sqrt(Add(e, Mul(f, x))), Sqrt(Add(g, Mul(h, x)))), S('-1'))), x)), Mul(Mul(S('1'), Pow(Pow(b, S('2')), S('-1'))), Integral(Mul(Add(Mul(b, f, g), Mul(b, e, h), Mul(S('-1'), Mul(a, f, h)), Mul(b, f, h, x)), Pow(Mul(Sqrt(Add(c, Mul(d, x))), Sqrt(Add(e, Mul(f, x))), Sqrt(Add(g, Mul(h, x)))), S('-1'))), x))))
    rubi.add(rule142)

    pattern143 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(WC(1, True, 'g', S('0')), Mul(WC(1, True, 'h', S('1')), x_)), S(S('-1'))/S(S('2')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)))
    rule143 = ReplacementRule(pattern143, lambda a, d, x, b, g, e, f, c, h : Mul(S('-2'), Add(a, Mul(b, x)), Sqrt(Mul(Add(Mul(b, g), Mul(S('-1'), Mul(a, h))), Mul(Add(c, Mul(d, x)), Pow(Mul(Add(Mul(d, g), Mul(S('-1'), Mul(c, h))), Add(a, Mul(b, x))), S('-1'))))), Mul(Sqrt(Mul(Add(Mul(b, g), Mul(S('-1'), Mul(a, h))), Mul(Add(e, Mul(f, x)), Pow(Mul(Add(Mul(f, g), Mul(S('-1'), Mul(e, h))), Add(a, Mul(b, x))), S('-1'))))), Pow(Mul(Add(Mul(b, g), Mul(S('-1'), Mul(a, h))), Sqrt(Add(c, Mul(d, x))), Sqrt(Add(e, Mul(f, x)))), S('-1'))), Subst(Integral(Mul(S('1'), Pow(Mul(Sqrt(Add(S('1'), Mul(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Mul(Pow(x, S('2')), Pow(Add(Mul(d, g), Mul(S('-1'), Mul(c, h))), S('-1')))))), Sqrt(Add(S('1'), Mul(Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), Mul(Pow(x, S('2')), Pow(Add(Mul(f, g), Mul(S('-1'), Mul(e, h))), S('-1'))))))), S('-1'))), x), x, Mul(Sqrt(Add(g, Mul(h, x))), Pow(Sqrt(Add(a, Mul(b, x))), S('-1'))))))
    rubi.add(rule143)

    pattern144 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S(S('-3'))/S(S('2'))), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), S(S('1'))/S(S('2'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(WC(1, True, 'g', S('0')), Mul(WC(1, True, 'h', S('1')), x_)), S(S('-1'))/S(S('2')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)))
    rule144 = ReplacementRule(pattern144, lambda a, d, x, b, g, e, f, c, h : Mul(S('-2'), Add(Mul(d, g), Mul(S('-1'), Mul(c, h))), Add(a, Mul(b, x)), Sqrt(Mul(Add(Mul(b, g), Mul(S('-1'), Mul(a, h))), Mul(Add(c, Mul(d, x)), Pow(Mul(Add(Mul(d, g), Mul(S('-1'), Mul(c, h))), Add(a, Mul(b, x))), S('-1'))))), Mul(Sqrt(Mul(Add(Mul(b, g), Mul(S('-1'), Mul(a, h))), Mul(Add(e, Mul(f, x)), Pow(Mul(Add(Mul(f, g), Mul(S('-1'), Mul(e, h))), Add(a, Mul(b, x))), S('-1'))))), Pow(Mul(Pow(Add(Mul(b, g), Mul(S('-1'), Mul(a, h))), S('2')), Sqrt(Add(c, Mul(d, x))), Sqrt(Add(e, Mul(f, x)))), S('-1'))), Subst(Integral(Mul(Sqrt(Add(S('1'), Mul(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Mul(Pow(x, S('2')), Pow(Add(Mul(d, g), Mul(S('-1'), Mul(c, h))), S('-1')))))), Pow(Sqrt(Add(S('1'), Mul(Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), Mul(Pow(x, S('2')), Pow(Add(Mul(f, g), Mul(S('-1'), Mul(e, h))), S('-1')))))), S('-1'))), x), x, Mul(Sqrt(Add(g, Mul(h, x))), Pow(Sqrt(Add(a, Mul(b, x))), S('-1'))))))
    rubi.add(rule144)

    pattern145 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S(S('1'))/S(S('2'))), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(WC(1, True, 'g', S('0')), Mul(WC(1, True, 'h', S('1')), x_)), S(S('-1'))/S(S('2')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)))
    rule145 = ReplacementRule(pattern145, lambda a, d, x, b, g, e, f, c, h : Mul(S('2'), Add(a, Mul(b, x)), Sqrt(Mul(Add(Mul(b, g), Mul(S('-1'), Mul(a, h))), Mul(Add(c, Mul(d, x)), Pow(Mul(Add(Mul(d, g), Mul(S('-1'), Mul(c, h))), Add(a, Mul(b, x))), S('-1'))))), Mul(Sqrt(Mul(Add(Mul(b, g), Mul(S('-1'), Mul(a, h))), Mul(Add(e, Mul(f, x)), Pow(Mul(Add(Mul(f, g), Mul(S('-1'), Mul(e, h))), Add(a, Mul(b, x))), S('-1'))))), Pow(Mul(Sqrt(Add(c, Mul(d, x))), Sqrt(Add(e, Mul(f, x)))), S('-1'))), Subst(Integral(Mul(S('1'), Pow(Mul(Add(h, Mul(S('-1'), Mul(b, Pow(x, S('2'))))), Sqrt(Add(S('1'), Mul(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Mul(Pow(x, S('2')), Pow(Add(Mul(d, g), Mul(S('-1'), Mul(c, h))), S('-1')))))), Sqrt(Add(S('1'), Mul(Add(Mul(b, e), Mul(S('-1'), Mul(a, f))), Mul(Pow(x, S('2')), Pow(Add(Mul(f, g), Mul(S('-1'), Mul(e, h))), S('-1'))))))), S('-1'))), x), x, Mul(Sqrt(Add(g, Mul(h, x))), Pow(Sqrt(Add(a, Mul(b, x))), S('-1'))))))
    rubi.add(rule145)

    pattern146 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S(S('-3'))/S(S('2'))), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(WC(1, True, 'g', S('0')), Mul(WC(1, True, 'h', S('1')), x_)), S(S('-1'))/S(S('2')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)))
    rule146 = ReplacementRule(pattern146, lambda a, d, x, b, g, e, f, c, h : Add(Mul(Mul(Mul(S('-1'), d), Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1'))), Integral(Mul(S('1'), Pow(Mul(Sqrt(Add(a, Mul(b, x))), Sqrt(Add(c, Mul(d, x))), Sqrt(Add(e, Mul(f, x))), Sqrt(Add(g, Mul(h, x)))), S('-1'))), x)), Mul(Mul(b, Pow(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), S('-1'))), Integral(Mul(Sqrt(Add(c, Mul(d, x))), Pow(Mul(Pow(Add(a, Mul(b, x)), Mul(S('3'), Pow(S('2'), S('-1')))), Sqrt(Add(e, Mul(f, x))), Sqrt(Add(g, Mul(h, x)))), S('-1'))), x))))
    rubi.add(rule146)

    pattern147 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S(S('1'))/S(S('2'))), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), S(S('1'))/S(S('2'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(WC(1, True, 'g', S('0')), Mul(WC(1, True, 'h', S('1')), x_)), S(S('-1'))/S(S('2')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)))
    rule147 = ReplacementRule(pattern147, lambda a, d, x, b, g, e, f, c, h : Add(Mul(Sqrt(Add(a, Mul(b, x))), Sqrt(Add(c, Mul(d, x))), Mul(Sqrt(Add(g, Mul(h, x))), Pow(Mul(h, Sqrt(Add(e, Mul(f, x)))), S('-1')))), Mul(Add(Mul(d, e), Mul(S('-1'), Mul(c, f))), Mul(Add(Mul(b, f, g), Mul(b, e, h), Mul(S('-1'), Mul(S('2'), a, f, h))), Pow(Mul(S('2'), Pow(f, S('2')), h), S('-1'))), Integral(Mul(S('1'), Pow(Mul(Sqrt(Add(a, Mul(b, x))), Sqrt(Add(c, Mul(d, x))), Sqrt(Add(e, Mul(f, x))), Sqrt(Add(g, Mul(h, x)))), S('-1'))), x)), Mul(Mul(Add(Mul(a, d, f, h), Mul(S('-1'), Mul(b, Add(Mul(d, f, g), Mul(d, e, h), Mul(S('-1'), Mul(c, f, h)))))), Pow(Mul(S('2'), Pow(f, S('2')), h), S('-1'))), Integral(Mul(Sqrt(Add(e, Mul(f, x))), Pow(Mul(Sqrt(Add(a, Mul(b, x))), Sqrt(Add(c, Mul(d, x))), Sqrt(Add(g, Mul(h, x)))), S('-1'))), x)), Mul(S('-1'), Mul(Add(Mul(d, e), Mul(S('-1'), Mul(c, f))), Mul(Add(Mul(f, g), Mul(S('-1'), Mul(e, h))), Pow(Mul(S('2'), f, h), S('-1'))), Integral(Mul(Sqrt(Add(a, Mul(b, x))), Pow(Mul(Sqrt(Add(c, Mul(d, x))), Pow(Add(e, Mul(f, x)), Mul(S('3'), Pow(S('2'), S('-1')))), Sqrt(Add(g, Mul(h, x)))), S('-1'))), x)))))
    rubi.add(rule147)

    pattern148 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), S(S('3'))/S(S('2'))), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), S(S('-1'))/S(S('2'))), Pow(Add(WC(1, True, 'g', S('0')), Mul(WC(1, True, 'h', S('1')), x_)), S(S('-1'))/S(S('2')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)))
    rule148 = ReplacementRule(pattern148, lambda a, d, x, b, g, e, f, c, h : Add(Mul(Mul(b, Pow(d, S('-1'))), Integral(Mul(Sqrt(Add(a, Mul(b, x))), Mul(Sqrt(Add(c, Mul(d, x))), Pow(Mul(Sqrt(Add(e, Mul(f, x))), Sqrt(Add(g, Mul(h, x)))), S('-1')))), x)), Mul(S('-1'), Mul(Mul(Add(Mul(b, c), Mul(S('-1'), Mul(a, d))), Pow(d, S('-1'))), Integral(Mul(Sqrt(Add(a, Mul(b, x))), Pow(Mul(Sqrt(Add(c, Mul(d, x))), Sqrt(Add(e, Mul(f, x))), Sqrt(Add(g, Mul(h, x)))), S('-1'))), x)))))
    rubi.add(rule148)

    pattern149 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), n_), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), p_), Pow(Add(WC(1, True, 'g', S('0')), Mul(WC(1, True, 'h', S('1')), x_)), q_)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, q: IntegersQ(p, q)))
    rule149 = ReplacementRule(pattern149, lambda a, p, d, x, n, b, g, e, f, c, h, m, q : Int(ExpandIntegrand(Mul(Pow(Add(a, Mul(b, x)), m), Pow(Add(c, Mul(d, x)), n), Pow(Add(e, Mul(f, x)), p), Pow(Add(g, Mul(h, x)), q)), x), x))
    rubi.add(rule149)

    pattern150 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), n_), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), p_), Pow(Add(WC(1, True, 'g', S('0')), Mul(WC(1, True, 'h', S('1')), x_)), q_)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q: PositiveIntegerQ(q)), CustomConstraint(lambda p, m, n: Or(SumSimplerQ(m, S('1')), And(Not(SumSimplerQ(n, S('1'))), Not(SumSimplerQ(p, S('1')))))))
    rule150 = ReplacementRule(pattern150, lambda a, p, d, x, n, b, g, e, f, c, h, m, q : Add(Mul(Mul(h, Pow(b, S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), Add(m, S('1'))), Pow(Add(c, Mul(d, x)), n), Pow(Add(e, Mul(f, x)), p), Pow(Add(g, Mul(h, x)), Add(q, S('-1')))), x)), Mul(Mul(Add(Mul(b, g), Mul(S('-1'), Mul(a, h))), Pow(b, S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), m), Pow(Add(c, Mul(d, x)), n), Pow(Add(e, Mul(f, x)), p), Pow(Add(g, Mul(h, x)), Add(q, S('-1')))), x))))
    rubi.add(rule150)

    pattern151 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), WC(1, True, 'm', S('1'))), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), WC(1, True, 'n', S('1'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), WC(1, True, 'p', S('1'))), Pow(Add(WC(1, True, 'g', S('0')), Mul(WC(1, True, 'h', S('1')), x_)), WC(1, True, 'q', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)))
    rule151 = ReplacementRule(pattern151, lambda a, p, d, x, b, h, g, e, f, c, m, n, q : Int(Mul(Pow(Add(a, Mul(b, x)), m), Pow(Add(c, Mul(d, x)), n), Pow(Add(e, Mul(f, x)), p), Pow(Add(g, Mul(h, x)), q)), x))
    rubi.add(rule151)

    pattern152 = Pattern(Integral(Mul(Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), u_)), WC(1, True, 'm', S('1'))), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), u_)), WC(1, True, 'n', S('1'))), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), u_)), WC(1, True, 'p', S('1'))), Pow(Add(WC(1, True, 'g', S('0')), Mul(WC(1, True, 'h', S('1')), u_)), WC(1, True, 'q', S('1')))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(Add(u, Mul(S('-1'), x)))))
    rule152 = ReplacementRule(pattern152, lambda a, p, d, u, x, b, h, g, e, f, c, m, n, q : Mul(Mul(S('1'), Pow(Coefficient(u, x, S('1')), S('-1'))), Subst(Integral(Mul(Pow(Add(a, Mul(b, x)), m), Pow(Add(c, Mul(d, x)), n), Pow(Add(e, Mul(f, x)), p), Pow(Add(g, Mul(h, x)), q)), x), x, u)))
    rubi.add(rule152)

    pattern153 = Pattern(Integral(Pow(Mul(WC(1, True, 'i', S('1')), Pow(Add(WC(1, True, 'a', S('0')), Mul(WC(1, True, 'b', S('1')), x_)), m_), Pow(Add(WC(1, True, 'c', S('0')), Mul(WC(1, True, 'd', S('1')), x_)), n_), Pow(Add(WC(1, True, 'e', S('0')), Mul(WC(1, True, 'f', S('1')), x_)), p_), Pow(Add(WC(1, True, 'g', S('0')), Mul(WC(1, True, 'h', S('1')), x_)), q_)), r_), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda i, x: FreeQ(i, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)))
    rule153 = ReplacementRule(pattern153, lambda i, a, p, d, x, n, b, g, e, f, c, r, h, m, q : Mul(Mul(Pow(Mul(i, Pow(Add(a, Mul(b, x)), m), Pow(Add(c, Mul(d, x)), n), Pow(Add(e, Mul(f, x)), p), Pow(Add(g, Mul(h, x)), q)), r), Pow(Mul(Pow(Add(a, Mul(b, x)), Mul(m, r)), Pow(Add(c, Mul(d, x)), Mul(n, r)), Pow(Add(e, Mul(f, x)), Mul(p, r)), Pow(Add(g, Mul(h, x)), Mul(q, r))), S('-1'))), Integral(Mul(Pow(Add(a, Mul(b, x)), Mul(m, r)), Pow(Add(c, Mul(d, x)), Mul(n, r)), Pow(Add(e, Mul(f, x)), Mul(p, r)), Pow(Add(g, Mul(h, x)), Mul(q, r))), x)))
    rubi.add(rule153)

    return rubi
