from sympy.external import import_module
matchpy = import_module("matchpy")
from sympy.utilities.decorator import doctest_depends_on

if matchpy:
    Pattern, ReplacementRule, ManyToOneReplacer = matchpy.Pattern, matchpy.ReplacementRule, matchpy.ManyToOneReplacer
    from matchpy import Operation, CommutativeOperation, AssociativeOperation, OneIdentityOperation, CustomConstraint
    from matchpy.expressions.functions import register_operation_iterator, register_operation_factory

    from sympy import Pow, Add, Integral, Basic, Mul, S, Or, And, symbols
    from sympy.functions import (log, sin, cos, tan, cot, csc, sec, sqrt, erf)
    from sympy.functions.elementary.hyperbolic import acosh, asinh, atanh, acoth, acsch, asech, cosh, sinh, tanh, coth, sech, csch
    from sympy.functions.elementary.trigonometric import atan, acsc, asin, acot, acos, asec
    from sympy.integrals.rubi.symbol import WC
    from sympy.integrals.rubi.utility_function import (Int, Set, With, Scan, MapAnd, FalseQ, ZeroQ, NegativeQ, NonzeroQ, FreeQ, List, Log, PositiveQ, PositiveIntegerQ, NegativeIntegerQ, IntegerQ, IntegersQ, ComplexNumberQ, PureComplexNumberQ, RealNumericQ, PositiveOrZeroQ, NegativeOrZeroQ, FractionOrNegativeQ, NegQ, Equal, Unequal, IntPart, FracPart, RationalQ, ProductQ, SumQ, NonsumQ, Subst, First, Rest, SqrtNumberQ, SqrtNumberSumQ, LinearQ, Sqrt, ArcCosh, Coefficient, Denominator, Hypergeometric2F1, Not, Simplify, FractionalPart, IntegerPart, AppellF1, EllipticPi, EllipticE, EllipticF, ArcTan, ArcTanh, ArcSin, ArcSinh, ArcCos, ArcCsc, ArcCsch, Sinh, Tanh, Cosh, Sech, Csch, Coth, LessEqual, Less, Greater, GreaterEqual, FractionQ, IntLinearcQ, Expand, IndependentQ, PowerQ, IntegerPowerQ, PositiveIntegerPowerQ, FractionalPowerQ, AtomQ, ExpQ, LogQ, Head, MemberQ, TrigQ, SinQ, CosQ, TanQ, CotQ, SecQ, CscQ, HyperbolicQ, SinhQ, CoshQ, TanhQ, CothQ, SechQ, CschQ, InverseTrigQ, SinCosQ, SinhCoshQ, LeafCount, Numerator, NumberQ, NumericQ, Length, ListQ, Im, Re, InverseHyperbolicQ, InverseFunctionQ, TrigHyperbolicFreeQ, InverseFunctionFreeQ, RealQ, EqQ, FractionalPowerFreeQ, ComplexFreeQ, PolynomialQ, FactorSquareFree, PowerOfLinearQ, Exponent, QuadraticQ, LinearPairQ, BinomialParts, TrinomialParts, PolyQ, EvenQ, OddQ, PerfectSquareQ, NiceSqrtAuxQ, NiceSqrtQ, Together, FixSimplify, PosAux, PosQ, CoefficientList, ReplaceAll, ExpandLinearProduct, GCD, ContentFactor, NumericFactor, NonnumericFactors, MakeAssocList, GensymSubst, KernelSubst, ExpandExpression, Apart, SmartApart, MatchQ, PolynomialQuotientRemainder, FreeFactors, NonfreeFactors, RemoveContentAux, RemoveContent, FreeTerms, NonfreeTerms, ExpandAlgebraicFunction, CollectReciprocals, ExpandCleanup, AlgebraicFunctionQ, Coeff, LeadTerm, RemainingTerms, LeadFactor, RemainingFactors, LeadBase, LeadDegree, Numer, Denom, hypergeom, Expon, MergeMonomials, PolynomialDivide, BinomialQ, TrinomialQ, GeneralizedBinomialQ, GeneralizedTrinomialQ, FactorSquareFreeList, PerfectPowerTest, SquareFreeFactorTest, RationalFunctionQ, RationalFunctionFactors, NonrationalFunctionFactors, Reverse, RationalFunctionExponents, RationalFunctionExpand, ExpandIntegrand, SimplerQ, SimplerSqrtQ, SumSimplerQ, BinomialDegree, TrinomialDegree, CancelCommonFactors, SimplerIntegrandQ, GeneralizedBinomialDegree, GeneralizedBinomialParts, GeneralizedTrinomialDegree, GeneralizedTrinomialParts, MonomialQ, MonomialSumQ, MinimumMonomialExponent, MonomialExponent, LinearMatchQ, PowerOfLinearMatchQ, QuadraticMatchQ, CubicMatchQ, BinomialMatchQ, TrinomialMatchQ, GeneralizedBinomialMatchQ, GeneralizedTrinomialMatchQ, QuotientOfLinearsMatchQ, PolynomialTermQ, PolynomialTerms, NonpolynomialTerms, PseudoBinomialParts, NormalizePseudoBinomial, PseudoBinomialPairQ, PseudoBinomialQ, PolynomialGCD, PolyGCD, AlgebraicFunctionFactors, NonalgebraicFunctionFactors, QuotientOfLinearsP, QuotientOfLinearsParts, QuotientOfLinearsQ, Flatten, Sort, AbsurdNumberQ, AbsurdNumberFactors, NonabsurdNumberFactors, SumSimplerAuxQ, Prepend, Drop, CombineExponents, FactorInteger, FactorAbsurdNumber, SubstForInverseFunction, SubstForFractionalPower, SubstForFractionalPowerOfQuotientOfLinears, FractionalPowerOfQuotientOfLinears, SubstForFractionalPowerQ, SubstForFractionalPowerAuxQ, FractionalPowerOfSquareQ, FractionalPowerSubexpressionQ, Apply, FactorNumericGcd, MergeableFactorQ, MergeFactor, MergeFactors, TrigSimplifyQ, TrigSimplify, Order, FactorOrder, Smallest, OrderedQ, MinimumDegree, PositiveFactors, Sign, NonpositiveFactors, PolynomialInAuxQ, PolynomialInQ, ExponentInAux, ExponentIn, PolynomialInSubstAux, PolynomialInSubst, Distrib, DistributeDegree, FunctionOfPower, DivideDegreesOfFactors, MonomialFactor, FullSimplify, FunctionOfLinearSubst, FunctionOfLinear, NormalizeIntegrand, NormalizeIntegrandAux, NormalizeIntegrandFactor, NormalizeIntegrandFactorBase, NormalizeTogether, NormalizeLeadTermSigns, AbsorbMinusSign, NormalizeSumFactors, SignOfFactor, NormalizePowerOfLinear, SimplifyIntegrand, SimplifyTerm, TogetherSimplify, SmartSimplify, SubstForExpn, ExpandToSum, UnifySum, UnifyTerms, UnifyTerm, CalculusQ, FunctionOfInverseLinear, PureFunctionOfSinhQ, PureFunctionOfTanhQ, PureFunctionOfCoshQ, IntegerQuotientQ, OddQuotientQ, EvenQuotientQ, FindTrigFactor, FunctionOfSinhQ, FunctionOfCoshQ, OddHyperbolicPowerQ, FunctionOfTanhQ, FunctionOfTanhWeight, FunctionOfHyperbolicQ, SmartNumerator, SmartDenominator, SubstForAux, ActivateTrig, ExpandTrig, TrigExpand, SubstForTrig, SubstForHyperbolic, InertTrigFreeQ, LCM, SubstForFractionalPowerOfLinear, FractionalPowerOfLinear, InverseFunctionOfLinear, InertTrigQ, InertReciprocalQ, DeactivateTrig, FixInertTrigFunction, DeactivateTrigAux, PowerOfInertTrigSumQ, PiecewiseLinearQ, KnownTrigIntegrandQ, KnownSineIntegrandQ, KnownTangentIntegrandQ, KnownCotangentIntegrandQ, KnownSecantIntegrandQ, TryPureTanSubst, TryTanhSubst, TryPureTanhSubst, AbsurdNumberGCD, AbsurdNumberGCDList, ExpandTrigExpand, ExpandTrigReduce, ExpandTrigReduceAux, NormalizeTrig, TrigToExp, ExpandTrigToExp, TrigReduce, FunctionOfTrig, AlgebraicTrigFunctionQ, FunctionOfHyperbolic, FunctionOfQ, FunctionOfExpnQ, PureFunctionOfSinQ, PureFunctionOfCosQ, PureFunctionOfTanQ, PureFunctionOfCotQ, FunctionOfCosQ, FunctionOfSinQ, OddTrigPowerQ, FunctionOfTanQ, FunctionOfTanWeight, FunctionOfTrigQ, FunctionOfDensePolynomialsQ, FunctionOfLog, PowerVariableExpn, PowerVariableDegree, PowerVariableSubst, EulerIntegrandQ, FunctionOfSquareRootOfQuadratic, SquareRootOfQuadraticSubst, Divides, EasyDQ, ProductOfLinearPowersQ, Rt, NthRoot, AtomBaseQ, SumBaseQ, NegSumBaseQ, AllNegTermQ, SomeNegTermQ, TrigSquareQ, RtAux, TrigSquare, IntSum, IntTerm, Map2, ConstantFactor, SameQ, ReplacePart, CommonFactors, MostMainFactorPosition, FunctionOfExponentialQ, FunctionOfExponential, FunctionOfExponentialFunction, FunctionOfExponentialFunctionAux, FunctionOfExponentialTest, FunctionOfExponentialTestAux, stdev, rubi_test, If, IntQuadraticQ, IntBinomialQ, RectifyTangent, RectifyCotangent, Inequality, Condition, SimpFixFactor, Simp, SimpHelp, SplitProduct, SplitSum)

    Operation.register(Integral)
    register_operation_iterator(Integral, lambda a: (a._args[0],) + a._args[1], lambda a: len((a._args[0],) + a._args[1]))

    Operation.register(Pow)
    OneIdentityOperation.register(Pow)
    register_operation_iterator(Pow, lambda a: a._args, lambda a: len(a._args))

    Operation.register(Add)
    OneIdentityOperation.register(Add)
    CommutativeOperation.register(Add)
    AssociativeOperation.register(Add)
    register_operation_iterator(Add, lambda a: a._args, lambda a: len(a._args))

    Operation.register(Mul)
    OneIdentityOperation.register(Mul)
    CommutativeOperation.register(Mul)
    AssociativeOperation.register(Mul)
    register_operation_iterator(Mul, lambda a: a._args, lambda a: len(a._args))

    Operation.register(sin)
    register_operation_iterator(sin, lambda a: a._args, lambda a: len(a._args))

    Operation.register(cos)
    register_operation_iterator(cos, lambda a: a._args, lambda a: len(a._args))

    Operation.register(tan)
    register_operation_iterator(tan, lambda a: a._args, lambda a: len(a._args))

    Operation.register(cot)
    register_operation_iterator(cot, lambda a: a._args, lambda a: len(a._args))

    Operation.register(csc)
    register_operation_iterator(csc, lambda a: a._args, lambda a: len(a._args))

    Operation.register(sec)
    register_operation_iterator(sec, lambda a: a._args, lambda a: len(a._args))

    Operation.register(sinh)
    register_operation_iterator(sinh, lambda a: a._args, lambda a: len(a._args))

    Operation.register(cosh)
    register_operation_iterator(cosh, lambda a: a._args, lambda a: len(a._args))

    Operation.register(tanh)
    register_operation_iterator(tanh, lambda a: a._args, lambda a: len(a._args))

    Operation.register(coth)
    register_operation_iterator(coth, lambda a: a._args, lambda a: len(a._args))

    Operation.register(csch)
    register_operation_iterator(csch, lambda a: a._args, lambda a: len(a._args))

    Operation.register(sech)
    register_operation_iterator(sech, lambda a: a._args, lambda a: len(a._args))

    Operation.register(asin)
    register_operation_iterator(asin, lambda a: a._args, lambda a: len(a._args))

    Operation.register(acos)
    register_operation_iterator(acos, lambda a: a._args, lambda a: len(a._args))

    Operation.register(atan)
    register_operation_iterator(atan, lambda a: a._args, lambda a: len(a._args))

    Operation.register(acot)
    register_operation_iterator(acot, lambda a: a._args, lambda a: len(a._args))

    Operation.register(acsc)
    register_operation_iterator(acsc, lambda a: a._args, lambda a: len(a._args))

    Operation.register(asec)
    register_operation_iterator(asec, lambda a: a._args, lambda a: len(a._args))

    Operation.register(asinh)
    register_operation_iterator(asinh, lambda a: a._args, lambda a: len(a._args))

    Operation.register(acosh)
    register_operation_iterator(acosh, lambda a: a._args, lambda a: len(a._args))

    Operation.register(atanh)
    register_operation_iterator(atanh, lambda a: a._args, lambda a: len(a._args))

    Operation.register(acoth)
    register_operation_iterator(acoth, lambda a: a._args, lambda a: len(a._args))

    Operation.register(acsch)
    register_operation_iterator(acsch, lambda a: a._args, lambda a: len(a._args))

    Operation.register(asech)
    register_operation_iterator(asech, lambda a: a._args, lambda a: len(a._args))

    def sympy_op_factory(old_operation, new_operands, variable_name):
         return type(old_operation)(*new_operands)

    register_operation_factory(Basic, sympy_op_factory)

    A_, B_, C_, a_, b_, c_, d_, e_, f_, g_, h_, i_, j_, k_, l_, m_, n_, p_, q_, r_, t_, u_, v_, s_, w_, x_, z_ = [WC(i) for i in 'ABCabcdefghijklmnpqrtuvswxz']
    a1_, a2_, b1_, b2_, c1_, c2_, d1_, d2_, n1_, n2_, e1_, e2_, f1_, f2_, n1_, n2_, n3_, Pq_, Pm_, Px_, Qm_, Qr_, jn_, mn_, non2_ = [WC(i) for i in ['a1', 'a2', 'b1', 'b2', 'c1', 'c2', 'd1', 'd2', 'n1', 'n2', 'e1', 'e2', 'f1', 'f2', 'n1', 'n2', 'n3',' Pq', 'Pm', ' Px', 'Qm', 'Qr', 'jn', 'mn', 'non2']]
    p, q = symbols('p q')

def rubi_object():
    rubi = ManyToOneReplacer()

    pattern1 = Pattern(Integral(a_*u_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)))
    rule1 = ReplacementRule(pattern1, lambda x, u, a : a*Int(u, x))
    rubi.add(rule1)

    pattern2 = Pattern(Integral(a_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)))
    rule2 = ReplacementRule(pattern2, lambda x, a : a*x)
    rubi.add(rule2)

    pattern3 = Pattern(Integral(-u_, x_))
    rule3 = ReplacementRule(pattern3, lambda x, u : Int(u, x)*I)
    rubi.add(rule3)

    pattern4 = Pattern(Integral(u_, x_), CustomConstraint(lambda u: SumQ(u)))
    rule4 = ReplacementRule(pattern4, lambda x, u : IntSum(u, x))
    rubi.add(rule4)

    pattern5 = Pattern(Integral(1/x_, x_))
    rule5 = ReplacementRule(pattern5, lambda x : Log(x))
    rubi.add(rule5)

    pattern6 = Pattern(Integral(x_**WC('m', S(1)), x_), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda m: NonzeroQ(m + 1)))
    rule6 = ReplacementRule(pattern6, lambda x, m : x**(m + 1)/(m + 1))
    rubi.add(rule6)

    pattern7 = Pattern(Integral(1/(a_ + x_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)))
    rule7 = ReplacementRule(pattern7, lambda x, a, b : Log(RemoveContent(a + b*x, x))/b)
    rubi.add(rule7)

    pattern8 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda m: NonzeroQ(m + 1)))
    rule8 = ReplacementRule(pattern8, lambda x, m, a, b : (a + b*x)**(m + 1)/(b*(m + 1)))
    rubi.add(rule8)

    pattern9 = Pattern(Integral((u_*WC('b', S(1)) + WC('a', S(0)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule9 = ReplacementRule(pattern9, lambda u, m, x, a, b : Subst(Int((a + b*x)**m, x), x, u)/Coefficient(u, x, 1))
    rubi.add(rule9)

    pattern10 = Pattern(Integral(1/((a_ + x_*WC('b', S(1)))*(c_ + x_*WC('d', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: ZeroQ(a*d + b*c)))
    rule10 = ReplacementRule(pattern10, lambda c, d, x, a, b : Int(1/(a*c + b*d*x**2), x))
    rubi.add(rule10)

    pattern11 = Pattern(Integral(1/((x_*WC('b', S(1)) + WC('a', S(0)))*(x_*WC('d', S(1)) + WC('c', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)))
    rule11 = ReplacementRule(pattern11, lambda c, d, x, a, b : b*Int(1/(a + b*x), x)/(-a*d + b*c) - d*Int(1/(c + d*x), x)/(-a*d + b*c))
    rubi.add(rule11)

    pattern12 = Pattern(Integral((c_ + x_*WC('d', S(1)))**n_*(x_*WC('b', S(1)) + WC('a', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n, m: ZeroQ(m + n + 2)), CustomConstraint(lambda m: NonzeroQ(m + 1)))
    rule12 = ReplacementRule(pattern12, lambda m, c, d, x, n, a, b : (a + b*x)**(m + 1)*(c + d*x)**(n + 1)/((m + 1)*(-a*d + b*c)))
    rubi.add(rule12)

    pattern13 = Pattern(Integral((a_ + x_*WC('b', S(1)))**m_*(c_ + x_*WC('d', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: ZeroQ(a*d + b*c)), CustomConstraint(lambda m: PositiveIntegerQ(m + S(1)/2)))
    rule13 = ReplacementRule(pattern13, lambda m, c, d, x, a, b : 2*a*c*m*Int((a + b*x)**(m - 1)*(c + d*x)**(m - 1), x)/(2*m + 1) + x*(a + b*x)**m*(c + d*x)**m/(2*m + 1))
    rubi.add(rule13)

    pattern14 = Pattern(Integral(1/((a_ + x_*WC('b', S(1)))**(S(3)/2)*(c_ + x_*WC('d', S(1)))**(S(3)/2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: ZeroQ(a*d + b*c)))
    rule14 = ReplacementRule(pattern14, lambda c, d, x, a, b : x/(a*c*Sqrt(a + b*x)*Sqrt(c + d*x)))
    rubi.add(rule14)

    pattern15 = Pattern(Integral((a_ + x_*WC('b', S(1)))**m_*(c_ + x_*WC('d', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: ZeroQ(a*d + b*c)), CustomConstraint(lambda m: NegativeIntegerQ(m + S(3)/2)))
    rule15 = ReplacementRule(pattern15, lambda m, c, d, x, a, b : -x*(a + b*x)**(m + 1)*(c + d*x)**(m + 1)/(2*a*c*(m + 1)) + (2*m + 3)*Int((a + b*x)**(m + 1)*(c + d*x)**(m + 1), x)/(2*a*c*(m + 1)))
    rubi.add(rule15)

    pattern16 = Pattern(Integral((a_ + x_*WC('b', S(1)))**WC('m', S(1))*(c_ + x_*WC('d', S(1)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, a, b, c: ZeroQ(a*d + b*c)), CustomConstraint(lambda m, a, c: IntegerQ(m) | (PositiveQ(a) & PositiveQ(c))))
    rule16 = ReplacementRule(pattern16, lambda m, c, d, x, a, b : Int((a*c + b*d*x**2)**m, x))
    rubi.add(rule16)

    pattern17 = Pattern(Integral(1/(sqrt(a_ + x_*WC('b', S(1)))*sqrt(c_ + x_*WC('d', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: ZeroQ(a*d + b*c)), CustomConstraint(lambda a: PositiveQ(a)), CustomConstraint(lambda a, c: ZeroQ(a + c)))
    rule17 = ReplacementRule(pattern17, lambda c, d, x, a, b : ArcCosh(b*x/a)/b)
    rubi.add(rule17)

    pattern18 = Pattern(Integral(1/(sqrt(a_ + x_*WC('b', S(1)))*sqrt(c_ + x_*WC('d', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: ZeroQ(a*d + b*c)))
    rule18 = ReplacementRule(pattern18, lambda c, d, x, a, b : 2*Subst(Int(1/(b - d*x**2), x), x, Sqrt(a + b*x)/Sqrt(c + d*x)))
    rubi.add(rule18)

    pattern19 = Pattern(Integral((a_ + x_*WC('b', S(1)))**m_*(c_ + x_*WC('d', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, a, b, c: ZeroQ(a*d + b*c)), CustomConstraint(lambda m: ~(IntegerQ(2*m))))
    rule19 = ReplacementRule(pattern19, lambda m, c, d, x, a, b : (a + b*x)**FracPart(m)*(c + d*x)**FracPart(m)*(a*c + b*d*x**2)**(-FracPart(m))*Int((a*c + b*d*x**2)**m, x))
    rubi.add(rule19)

    pattern20 = Pattern(Integral(1/((a_ + x_*WC('b', S(1)))**(S(5)/4)*(c_ + x_*WC('d', S(1)))**(S(1)/4)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: ZeroQ(a*d + b*c)), CustomConstraint(lambda c, d, b, a: PosQ(b*d/(a*c))))
    rule20 = ReplacementRule(pattern20, lambda c, d, x, a, b : (-a*d + b*c)*Int(1/((a + b*x)**(5/4)*(c + d*x)**(5/4)), x)/(2*b) - 2/(b*(a + b*x)**(1/4)*(c + d*x)**(1/4)))
    rubi.add(rule20)

    pattern21 = Pattern(Integral(1/((a_ + x_*WC('b', S(1)))**(S(9)/4)*(c_ + x_*WC('d', S(1)))**(S(1)/4)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: ZeroQ(a*d + b*c)), CustomConstraint(lambda c, d, b, a: PosQ(b*d/(a*c))))
    rule21 = ReplacementRule(pattern21, lambda c, d, x, a, b : -d*Int(1/((a + b*x)**(5/4)*(c + d*x)**(5/4)), x)/(5*b) - 4/(5*b*(a + b*x)**(5/4)*(c + d*x)**(1/4)))
    rubi.add(rule21)

    pattern22 = Pattern(Integral((a_ + x_*WC('b', S(1)))**m_*(c_ + x_*WC('d', S(1)))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: ZeroQ(a*d + b*c)), CustomConstraint(lambda m: IntegerQ(m + S(1)/2)), CustomConstraint(lambda n: IntegerQ(n + S(1)/2)), CustomConstraint(lambda n, m: Less(0, m, n)))
    rule22 = ReplacementRule(pattern22, lambda m, c, d, x, n, a, b : 2*c*n*Int((a + b*x)**m*(c + d*x)**(n - 1), x)/(m + n + 1) + (a + b*x)**(m + 1)*(c + d*x)**n/(b*(m + n + 1)))
    rubi.add(rule22)

    pattern23 = Pattern(Integral((a_ + x_*WC('b', S(1)))**m_*(c_ + x_*WC('d', S(1)))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: ZeroQ(a*d + b*c)), CustomConstraint(lambda m: IntegerQ(m + S(1)/2)), CustomConstraint(lambda n: IntegerQ(n + S(1)/2)), CustomConstraint(lambda n, m: Less(m, n, 0)))
    rule23 = ReplacementRule(pattern23, lambda m, c, d, x, n, a, b : (m + n + 2)*Int((a + b*x)**(m + 1)*(c + d*x)**n, x)/(2*a*(m + 1)) - (a + b*x)**(m + 1)*(c + d*x)**(n + 1)/(2*a*d*(m + 1)))
    rubi.add(rule23)

    pattern24 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**WC('m', S(1))*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda m: PositiveIntegerQ(m)), CustomConstraint(lambda n, m, c: ~(IntegerQ(n)) | Greater(m + n + 2, 0) | Less(9*m + 5*n + 5, 0) | (ZeroQ(c) & LessEqual(7*m + 4*n, 0))))
    rule24 = ReplacementRule(pattern24, lambda m, c, d, x, n, a, b : Int(ExpandIntegrand((a + b*x)**m*(c + d*x)**n, x), x))
    rubi.add(rule24)

    pattern25 = Pattern(Integral((a_ + x_*WC('b', S(1)))**WC('m', S(1))*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda m: NegativeIntegerQ(m)), CustomConstraint(lambda n: IntegerQ(n)), CustomConstraint(lambda n, m: ~(PositiveIntegerQ(n) & Less(m + n + 2, 0))))
    rule25 = ReplacementRule(pattern25, lambda m, c, d, x, n, a, b : Int(ExpandIntegrand((a + b*x)**m*(c + d*x)**n, x), x))
    rubi.add(rule25)

    pattern26 = Pattern(Integral((x_*WC('d', S(1)) + WC('c', S(0)))**n_/(x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Greater(n, 0)))
    rule26 = ReplacementRule(pattern26, lambda c, d, x, n, a, b : (-a*d + b*c)*Int((c + d*x)**(n - 1)/(a + b*x), x)/b + (c + d*x)**n/(b*n))
    rubi.add(rule26)

    pattern27 = Pattern(Integral((x_*WC('d', S(1)) + WC('c', S(0)))**n_/(x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, -1)))
    rule27 = ReplacementRule(pattern27, lambda c, d, x, n, a, b : b*Int((c + d*x)**(n + 1)/(a + b*x), x)/(-a*d + b*c) - (c + d*x)**(n + 1)/((n + 1)*(-a*d + b*c)))
    rubi.add(rule27)

    pattern28 = Pattern(Integral(1/((x_*WC('b', S(1)) + WC('a', S(0)))*(x_*WC('d', S(1)) + WC('c', S(0)))**(S(1)/3)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: PosQ((-a*d + b*c)/b)))
    rule28 = ReplacementRule(pattern28, lambda c, d, x, a, b : With(List(Set(q, Rt((-a*d + b*c)/b, 3))), 3*Subst(Int(1/(q**2 + q*x + x**2), x), x, (c + d*x)**(1/3))/(2*b) - Log(RemoveContent(a + b*x, x))/(2*b*q) - 3*Subst(Int(1/(q - x), x), x, (c + d*x)**(1/3))/(2*b*q)))
    rubi.add(rule28)

    pattern29 = Pattern(Integral(1/((x_*WC('b', S(1)) + WC('a', S(0)))*(x_*WC('d', S(1)) + WC('c', S(0)))**(S(1)/3)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NegQ((-a*d + b*c)/b)))
    rule29 = ReplacementRule(pattern29, lambda c, d, x, a, b : With(List(Set(q, Rt((a*d - b*c)/b, 3))), 3*Subst(Int(1/(q**2 - q*x + x**2), x), x, (c + d*x)**(1/3))/(2*b) + Log(RemoveContent(a + b*x, x))/(2*b*q) - 3*Subst(Int(1/(q + x), x), x, (c + d*x)**(1/3))/(2*b*q)))
    rubi.add(rule29)

    pattern30 = Pattern(Integral(1/((x_*WC('b', S(1)) + WC('a', S(0)))*(x_*WC('d', S(1)) + WC('c', S(0)))**(S(2)/3)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: PosQ((-a*d + b*c)/b)))
    rule30 = ReplacementRule(pattern30, lambda c, d, x, a, b : With(List(Set(q, Rt((-a*d + b*c)/b, 3))), -3*Subst(Int(1/(q**2 + q*x + x**2), x), x, (c + d*x)**(1/3))/(2*b*q) - Log(RemoveContent(a + b*x, x))/(2*b*q**2) - 3*Subst(Int(1/(q - x), x), x, (c + d*x)**(1/3))/(2*b*q**2)))
    rubi.add(rule30)

    pattern31 = Pattern(Integral(1/((x_*WC('b', S(1)) + WC('a', S(0)))*(x_*WC('d', S(1)) + WC('c', S(0)))**(S(2)/3)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NegQ((-a*d + b*c)/b)))
    rule31 = ReplacementRule(pattern31, lambda c, d, x, a, b : With(List(Set(q, Rt((a*d - b*c)/b, 3))), 3*Subst(Int(1/(q**2 - q*x + x**2), x), x, (c + d*x)**(1/3))/(2*b*q) - Log(RemoveContent(a + b*x, x))/(2*b*q**2) + 3*Subst(Int(1/(q + x), x), x, (c + d*x)**(1/3))/(2*b*q**2)))
    rubi.add(rule31)

    pattern32 = Pattern(Integral((x_*WC('d', S(1)) + WC('c', S(0)))**n_/(x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(-1, n, 0)))
    rule32 = ReplacementRule(pattern32, lambda c, d, x, n, a, b : With(List(Set(p, Denominator(n))), p*Subst(Int(x**(p*(n + 1) - 1)/(a*d - b*c + b*x**p), x), x, (c + d*x)**(1/p))))
    rubi.add(rule32)

    pattern33 = Pattern(Integral((c_ + x_*WC('d', S(1)))**n_/x_, x_), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n: ~(IntegerQ(n))))
    rule33 = ReplacementRule(pattern33, lambda x, n, d, c : -(c + d*x)**(n + 1)*Hypergeometric2F1(1, n + 1, n + 2, 1 + d*x/c)/(c*(n + 1)))
    rubi.add(rule33)

    pattern34 = Pattern(Integral((x_*WC('d', S(1)) + WC('c', S(0)))**n_/(a_ + x_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n: ~(IntegerQ(n))))
    rule34 = ReplacementRule(pattern34, lambda c, d, x, n, a, b : -(c + d*x)**(n + 1)*Hypergeometric2F1(1, n + 1, n + 2, TogetherSimplify(b*(c + d*x)/(-a*d + b*c)))/((n + 1)*(-a*d + b*c)))
    rubi.add(rule34)

    pattern35 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Less(m, -1)), CustomConstraint(lambda n: Greater(n, 0)), CustomConstraint(lambda n, m: ~(IntegerQ(n) & ~(IntegerQ(m)))), CustomConstraint(lambda n, m: ~(IntegerQ(m + n) & LessEqual(m + n + 2, 0) & (FractionQ(m) | GreaterEqual(m + 2*n + 1, 0)))), CustomConstraint(lambda m, c, d, x, n, a, b: IntLinearcQ(a, b, c, d, m, n, x)))
    rule35 = ReplacementRule(pattern35, lambda m, c, d, x, n, a, b : -d*n*Int((a + b*x)**(m + 1)*(c + d*x)**(n - 1), x)/(b*(m + 1)) + (a + b*x)**(m + 1)*(c + d*x)**n/(b*(m + 1)))
    rubi.add(rule35)

    pattern36 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Less(m, -1)), CustomConstraint(lambda m, n, a, c: ~(Less(n, -1) & (ZeroQ(a) | (IntegerQ(n) & NonzeroQ(c) & Less(m, n))))), CustomConstraint(lambda m, c, d, x, n, a, b: IntLinearcQ(a, b, c, d, m, n, x)))
    rule36 = ReplacementRule(pattern36, lambda m, c, d, x, n, a, b : -d*(m + n + 2)*Int((a + b*x)**(m + 1)*(c + d*x)**n, x)/((m + 1)*(-a*d + b*c)) + (a + b*x)**(m + 1)*(c + d*x)**(n + 1)/((m + 1)*(-a*d + b*c)))
    rubi.add(rule36)

    pattern37 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda n: Greater(n, 0)), CustomConstraint(lambda n, m: Unequal(m + n + 1, 0)), CustomConstraint(lambda n, m: ~(PositiveIntegerQ(m) & (~(IntegerQ(n)) | Less(0, m, n)))), CustomConstraint(lambda n, m: ~(IntegerQ(m + n) & Less(m + n + 2, 0))), CustomConstraint(lambda m, c, d, x, n, a, b: IntLinearcQ(a, b, c, d, m, n, x)))
    rule37 = ReplacementRule(pattern37, lambda m, c, d, x, n, a, b : n*(-a*d + b*c)*Int((a + b*x)**m*(c + d*x)**(n - 1), x)/(b*(m + n + 1)) + (a + b*x)**(m + 1)*(c + d*x)**n/(b*(m + n + 1)))
    rubi.add(rule37)

    pattern38 = Pattern(Integral(1/(sqrt(a_ + x_*WC('b', S(1)))*sqrt(x_*WC('d', S(1)) + WC('c', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, b: ZeroQ(b + d)), CustomConstraint(lambda a, c: PositiveQ(a + c)))
    rule38 = ReplacementRule(pattern38, lambda c, d, x, a, b : Int(1/Sqrt(a*c - b**2*x**2 - b*x*(a - c)), x))
    rubi.add(rule38)

    pattern39 = Pattern(Integral(1/(sqrt(x_*WC('b', S(1)) + WC('a', S(0)))*sqrt(x_*WC('d', S(1)) + WC('c', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: PositiveQ(-a*d + b*c)), CustomConstraint(lambda b: PositiveQ(b)))
    rule39 = ReplacementRule(pattern39, lambda c, d, x, a, b : 2*Subst(Int(1/Sqrt(-a*d + b*c + d*x**2), x), x, Sqrt(a + b*x))/Sqrt(b))
    rubi.add(rule39)

    pattern40 = Pattern(Integral(1/(sqrt(c_ + x_*WC('d', S(1)))*sqrt(x_*WC('b', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda d, b: ZeroQ(b - d)))
    rule40 = ReplacementRule(pattern40, lambda c, d, x, a, b : 2*Subst(Int(1/Sqrt(-a + c + x**2), x), x, Sqrt(a + b*x))/b)
    rubi.add(rule40)

    pattern41 = Pattern(Integral(1/(sqrt(x_*WC('b', S(1)) + WC('a', S(0)))*sqrt(x_*WC('d', S(1)) + WC('c', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)))
    rule41 = ReplacementRule(pattern41, lambda c, d, x, a, b : 2*Subst(Int(1/(b - d*x**2), x), x, Sqrt(a + b*x)/Sqrt(c + d*x)))
    rubi.add(rule41)

    pattern42 = Pattern(Integral((c_ + x_*WC('d', S(1)))**m_*(x_*WC('b', S(1)) + WC('a', S(0)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(-1, m, 0)), CustomConstraint(lambda m: LessEqual(3, Denominator(m), 4)))
    rule42 = ReplacementRule(pattern42, lambda m, c, d, x, a, b : (a + b*x)**m*(c + d*x)**m*(a*c + b*d*x**2 + x*(a*d + b*c))**(-m)*Int((a*c + b*d*x**2 + x*(a*d + b*c))**m, x))
    rubi.add(rule42)

    pattern43 = Pattern(Integral(1/((x_*WC('b', S(1)) + WC('a', S(0)))**(S(1)/3)*(x_*WC('d', S(1)) + WC('c', S(0)))**(S(2)/3)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda d, b: PosQ(d/b)))
    rule43 = ReplacementRule(pattern43, lambda c, d, x, a, b : With(List(Set(q, Rt(d/b, 3))), -q*ArcTan(2*q*(a + b*x)**(1/3)/((c + d*x)**(1/3)*Sqrt(3)) + 1/Sqrt(3))*Sqrt(3)/d - q*Log(c + d*x)/(2*d) - 3*q*Log(q*(a + b*x)**(1/3)/(c + d*x)**(1/3) - 1)/(2*d)))
    rubi.add(rule43)

    pattern44 = Pattern(Integral(1/((x_*WC('b', S(1)) + WC('a', S(0)))**(S(1)/3)*(x_*WC('d', S(1)) + WC('c', S(0)))**(S(2)/3)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda d, b: NegQ(d/b)))
    rule44 = ReplacementRule(pattern44, lambda c, d, x, a, b : With(List(Set(q, Rt(-d/b, 3))), q*ArcTan(-2*q*(a + b*x)**(1/3)/((c + d*x)**(1/3)*Sqrt(3)) + 1/Sqrt(3))*Sqrt(3)/d + q*Log(c + d*x)/(2*d) + 3*q*Log(q*(a + b*x)**(1/3)/(c + d*x)**(1/3) + 1)/(2*d)))
    rubi.add(rule44)

    pattern45 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Less(-1, m, 0)), CustomConstraint(lambda n, m: Equal(m + n + 1, 0)))
    rule45 = ReplacementRule(pattern45, lambda m, c, d, x, n, a, b : With(List(Set(p, Denominator(m))), p*Subst(Int(x**(p*(m + 1) - 1)/(b - d*x**p), x), x, (a + b*x)**(1/p)*(c + d*x)**(-1/p))))
    rubi.add(rule45)

    pattern46 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Less(-1, m, 0)), CustomConstraint(lambda n: Less(-1, n, 0)), CustomConstraint(lambda n, m: LessEqual(Denominator(n), Denominator(m))), CustomConstraint(lambda m, c, d, x, n, a, b: IntLinearcQ(a, b, c, d, m, n, x)))
    rule46 = ReplacementRule(pattern46, lambda m, c, d, x, n, a, b : With(List(Set(p, Denominator(m))), p*Subst(Int(x**(p*(m + 1) - 1)*(-a*d/b + c + d*x**p/b)**n, x), x, (a + b*x)**(1/p))/b))
    rubi.add(rule46)

    pattern47 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n, m: NegativeIntegerQ(Simplify(m + n + 2))), CustomConstraint(lambda m: NonzeroQ(m + 1)), CustomConstraint(lambda n, m: SumSimplerQ(m, 1) | ~(SumSimplerQ(n, 1))))
    rule47 = ReplacementRule(pattern47, lambda m, c, d, x, n, a, b : -d*Int((a + b*x)**Simplify(m + 1)*(c + d*x)**n, x)*Simplify(m + n + 2)/((m + 1)*(-a*d + b*c)) + (a + b*x)**(m + 1)*(c + d*x)**(n + 1)/((m + 1)*(-a*d + b*c)))
    rubi.add(rule47)

    pattern48 = Pattern(Integral((x_*WC('b', S(1)))**m_*(c_ + x_*WC('d', S(1)))**n_, x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m: ~(IntegerQ(m))), CustomConstraint(lambda n, d, b, c: IntegerQ(n) | (PositiveQ(c) & ~(ZeroQ(n + S(1)/2) & PositiveQ(-d/(b*c)) & ZeroQ(c**2 - d**2)))))
    rule48 = ReplacementRule(pattern48, lambda m, c, d, x, n, b : c**n*(b*x)**(m + 1)*Hypergeometric2F1(-n, m + 1, m + 2, -d*x/c)/(b*(m + 1)))
    rubi.add(rule48)

    pattern49 = Pattern(Integral((x_*WC('b', S(1)))**m_*(c_ + x_*WC('d', S(1)))**n_, x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n: ~(IntegerQ(n))), CustomConstraint(lambda c, m, b, d: IntegerQ(m) | PositiveQ(-d/(b*c))))
    rule49 = ReplacementRule(pattern49, lambda m, c, d, x, n, b : (-d/(b*c))**(-m)*(c + d*x)**(n + 1)*Hypergeometric2F1(-m, n + 1, n + 2, 1 + d*x/c)/(d*(n + 1)))
    rubi.add(rule49)

    pattern50 = Pattern(Integral((x_*WC('b', S(1)))**m_*(c_ + x_*WC('d', S(1)))**n_, x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m: ~(IntegerQ(m))), CustomConstraint(lambda n: ~(IntegerQ(n))), CustomConstraint(lambda c: ~(PositiveQ(c))), CustomConstraint(lambda d, b, c: ~(PositiveQ(-d/(b*c)))), CustomConstraint(lambda d, n, m, c: ~(RationalQ(n)) | (RationalQ(m) & ~(ZeroQ(n + S(1)/2) & ZeroQ(c**2 - d**2)))))
    rule50 = ReplacementRule(pattern50, lambda m, c, d, x, n, b : c**IntPart(n)*(1 + d*x/c)**(-FracPart(n))*(c + d*x)**FracPart(n)*Int((b*x)**m*(1 + d*x/c)**n, x))
    rubi.add(rule50)

    pattern51 = Pattern(Integral((x_*WC('b', S(1)))**m_*(c_ + x_*WC('d', S(1)))**n_, x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m: ~(IntegerQ(m))), CustomConstraint(lambda n: ~(IntegerQ(n))), CustomConstraint(lambda c: ~(PositiveQ(c))), CustomConstraint(lambda d, b, c: ~(PositiveQ(-d/(b*c)))))
    rule51 = ReplacementRule(pattern51, lambda m, c, d, x, n, b : (b*x)**FracPart(m)*(-b*c/d)**IntPart(m)*(-d*x/c)**(-FracPart(m))*Int((-d*x/c)**m*(c + d*x)**n, x))
    rubi.add(rule51)

    pattern52 = Pattern(Integral((a_ + x_*WC('b', S(1)))**m_*(c_ + x_*WC('d', S(1)))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda m: ~(IntegerQ(m))), CustomConstraint(lambda n: IntegerQ(n)))
    rule52 = ReplacementRule(pattern52, lambda m, c, d, x, n, a, b : b**(-n - 1)*(a + b*x)**(m + 1)*(-a*d + b*c)**n*Hypergeometric2F1(-n, m + 1, m + 2, -d*(a + b*x)/(-a*d + b*c))/(m + 1))
    rubi.add(rule52)

    pattern53 = Pattern(Integral((a_ + x_*WC('b', S(1)))**m_*(c_ + x_*WC('d', S(1)))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda m: ~(IntegerQ(m))), CustomConstraint(lambda n: ~(IntegerQ(n))), CustomConstraint(lambda d, a, b, c: PositiveQ(b/(-a*d + b*c))), CustomConstraint(lambda m, c, d, n, a, b: RationalQ(m) | ~(RationalQ(n) & PositiveQ(-d/(-a*d + b*c)))))
    rule53 = ReplacementRule(pattern53, lambda m, c, d, x, n, a, b : (b/(-a*d + b*c))**(-n)*(a + b*x)**(m + 1)*Hypergeometric2F1(-n, m + 1, m + 2, -d*(a + b*x)/(-a*d + b*c))/(b*(m + 1)))
    rubi.add(rule53)

    pattern54 = Pattern(Integral((a_ + x_*WC('b', S(1)))**m_*(c_ + x_*WC('d', S(1)))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda m: ~(IntegerQ(m))), CustomConstraint(lambda n: ~(IntegerQ(n))), CustomConstraint(lambda n, m: RationalQ(m) | ~(SimplerQ(n + 1, m + 1))))
    rule54 = ReplacementRule(pattern54, lambda m, c, d, x, n, a, b : (b/(-a*d + b*c))**(-IntPart(n))*(b*(c + d*x)/(-a*d + b*c))**(-FracPart(n))*(c + d*x)**FracPart(n)*Int((a + b*x)**m*(b*c/(-a*d + b*c) + b*d*x/(-a*d + b*c))**n, x))
    rubi.add(rule54)

    pattern55 = Pattern(Integral((u_*WC('b', S(1)) + WC('a', S(0)))**WC('m', S(1))*(u_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(Coefficient(u, x, 0))))
    rule55 = ReplacementRule(pattern55, lambda u, m, c, d, x, n, a, b : Subst(Int((a + b*x)**m*(c + d*x)**n, x), x, u)/Coefficient(u, x, 1))
    rubi.add(rule55)

    pattern56 = Pattern(Integral((a_ + x_*WC('b', S(1)))**WC('m', S(1))*(c_ + x_*WC('d', S(1)))**WC('n', S(1))*(x_*WC('f', S(1)) + WC('e', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, a, b, c: ZeroQ(a*d + b*c)), CustomConstraint(lambda n, m: ZeroQ(m - n)), CustomConstraint(lambda m: IntegerQ(m)))
    rule56 = ReplacementRule(pattern56, lambda m, c, p, d, b, f, x, n, a, e : Int((e + f*x)**p*(a*c + b*d*x**2)**m, x))
    rubi.add(rule56)

    pattern57 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1))*(x_*WC('f', S(1)) + WC('e', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, p: NonzeroQ(n + p + 2)), CustomConstraint(lambda e, c, p, d, f, n, a, b: ZeroQ(a*d*f*(n + p + 2) - b*(c*f*(p + 1) + d*e*(n + 1)))))
    rule57 = ReplacementRule(pattern57, lambda e, c, p, d, f, x, n, a, b : b*(c + d*x)**(n + 1)*(e + f*x)**(p + 1)/(d*f*(n + p + 2)))
    rubi.add(rule57)

    pattern58 = Pattern(Integral((x_*WC('d', S(1)))**WC('n', S(1))*(a_ + x_*WC('b', S(1)))*(e_ + x_*WC('f', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p: PositiveIntegerQ(p)), CustomConstraint(lambda e, a, b, f: ZeroQ(a*f + b*e)), CustomConstraint(lambda n, p: ~(NegativeIntegerQ(n + p + 2) & Greater(n + 2*p, 0))))
    rule58 = ReplacementRule(pattern58, lambda e, p, d, f, x, n, a, b : Int(ExpandIntegrand((d*x)**n*(a + b*x)*(e + f*x)**p, x), x))
    rubi.add(rule58)

    pattern59 = Pattern(Integral((x_*WC('d', S(1)))**WC('n', S(1))*(a_ + x_*WC('b', S(1)))*(e_ + x_*WC('f', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p: PositiveIntegerQ(p)), CustomConstraint(lambda n, p: Equal(p, 1) | NonzeroQ(n + 1)), CustomConstraint(lambda e, a, b, f: NonzeroQ(a*f + b*e)), CustomConstraint(lambda e, p, d, f, n, a, b: ~(IntegerQ(n)) | GreaterEqual(n + p + 1, 0) | Less(5*n + 9*p, 0) | (GreaterEqual(n + p + 2, 0) & RationalQ(a, b, d, e, f))))
    rule59 = ReplacementRule(pattern59, lambda e, p, d, f, x, n, a, b : Int(ExpandIntegrand((d*x)**n*(a + b*x)*(e + f*x)**p, x), x))
    rubi.add(rule59)

    pattern60 = Pattern(Integral((c_ + x_*WC('d', S(1)))**WC('n', S(1))*(x_*WC('b', S(1)) + WC('a', S(0)))*(x_*WC('f', S(1)) + WC('e', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda e, c, p, d, f, n, a, b: NegativeIntegerQ(n, p) | ZeroQ(p - 1) | (PositiveIntegerQ(p) & (~(IntegerQ(n)) | GreaterEqual(n + p + 1, 0) | LessEqual(5*n + 9*p + 10, 0) | (GreaterEqual(n + p + 2, 0) & RationalQ(a, b, c, d, e, f))))))
    rule60 = ReplacementRule(pattern60, lambda c, p, d, b, f, x, n, a, e : Int(ExpandIntegrand((a + b*x)*(c + d*x)**n*(e + f*x)**p, x), x))
    rubi.add(rule60)

    pattern61 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1))*(x_*WC('f', S(1)) + WC('e', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, p: ZeroQ(n + p + 2)), CustomConstraint(lambda p: NonzeroQ(p + 1)), CustomConstraint(lambda n, p: ~(SumSimplerQ(n, 1) & ~(SumSimplerQ(p, 1)))))
    rule61 = ReplacementRule(pattern61, lambda e, c, p, d, f, x, n, a, b : b*Int((c + d*x)**n*(e + f*x)**(p + 1), x)/f + (c + d*x)**(n + 1)*(e + f*x)**(p + 1)*(a*f - b*e)/(f*(p + 1)*(c*f - d*e)))
    rubi.add(rule61)

    pattern62 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1))*(x_*WC('f', S(1)) + WC('e', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, p: NonzeroQ(n + p + 2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda n, p, e, c: IntegerQ(p) | ~(RationalQ(n) & Less(n, -1)) | ~(IntegerQ(n) | ~(ZeroQ(e) | ~(ZeroQ(c) | Less(p, n))))))
    rule62 = ReplacementRule(pattern62, lambda e, c, p, d, f, x, n, a, b : (c + d*x)**(n + 1)*(e + f*x)**(p + 1)*(a*f - b*e)/(f*(p + 1)*(c*f - d*e)) - (a*d*f*(n + p + 2) - b*(c*f*(p + 1) + d*e*(n + 1)))*Int((c + d*x)**n*(e + f*x)**(p + 1), x)/(f*(p + 1)*(c*f - d*e)))
    rubi.add(rule62)

    pattern63 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1))*(x_*WC('f', S(1)) + WC('e', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, p: NonzeroQ(n + p + 2)), CustomConstraint(lambda p: ~(RationalQ(p))), CustomConstraint(lambda p: SumSimplerQ(p, 1)))
    rule63 = ReplacementRule(pattern63, lambda e, c, p, d, f, x, n, a, b : (c + d*x)**(n + 1)*(e + f*x)**(p + 1)*(a*f - b*e)/(f*(p + 1)*(c*f - d*e)) - (a*d*f*(n + p + 2) - b*(c*f*(p + 1) + d*e*(n + 1)))*Int((c + d*x)**n*(e + f*x)**Simplify(p + 1), x)/(f*(p + 1)*(c*f - d*e)))
    rubi.add(rule63)

    pattern64 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1))*(x_*WC('f', S(1)) + WC('e', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, p: NonzeroQ(n + p + 2)))
    rule64 = ReplacementRule(pattern64, lambda e, c, p, d, f, x, n, a, b : b*(c + d*x)**(n + 1)*(e + f*x)**(p + 1)/(d*f*(n + p + 2)) + (a*d*f*(n + p + 2) - b*(c*f*(p + 1) + d*e*(n + 1)))*Int((c + d*x)**n*(e + f*x)**p, x)/(d*f*(n + p + 2)))
    rubi.add(rule64)

    pattern65 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**2*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1))*(x_*WC('f', S(1)) + WC('e', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, p: NonzeroQ(n + p + 2)), CustomConstraint(lambda n, p: NonzeroQ(n + p + 3)), CustomConstraint(lambda e, c, p, d, f, n, a, b: ZeroQ(-b*(c*f*(p + 1) + d*e*(n + 1))*(a*d*f*(n + p + 4) - b*(c*f*(p + 2) + d*e*(n + 2))) + d*f*(a**2*d*f*(n + p + 3) - b*(a*(c*f*(p + 1) + d*e*(n + 1)) + b*c*e))*(n + p + 2))))
    rule65 = ReplacementRule(pattern65, lambda e, c, p, d, f, x, n, a, b : b*(c + d*x)**(n + 1)*(e + f*x)**(p + 1)*(2*a*d*f*(n + p + 3) + b*d*f*x*(n + p + 2) - b*(c*f*(p + 2) + d*e*(n + 2)))/(d**2*f**2*(n + p + 2)*(n + p + 3)))
    rubi.add(rule65)

    pattern66 = Pattern(Integral((x_*WC('f', S(1)))**WC('p', S(1))*(x_*WC('b', S(1)) + WC('a', S(0)))**WC('m', S(1))*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, a, b, c: ZeroQ(a*d + b*c)), CustomConstraint(lambda n, m: ZeroQ(m - n - 1)), CustomConstraint(lambda p: ~(RationalQ(p))), CustomConstraint(lambda m: ~(PositiveIntegerQ(m))), CustomConstraint(lambda n, m, p: NonzeroQ(m + n + p + 2)))
    rule66 = ReplacementRule(pattern66, lambda m, c, p, d, f, x, n, a, b : a*Int((f*x)**p*(a + b*x)**n*(c + d*x)**n, x) + b*Int((f*x)**(p + 1)*(a + b*x)**n*(c + d*x)**n, x)/f)
    rubi.add(rule66)

    pattern67 = Pattern(Integral((x_*WC('f', S(1)) + WC('e', S(0)))**WC('p', S(1))/((x_*WC('b', S(1)) + WC('a', S(0)))*(x_*WC('d', S(1)) + WC('c', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p: IntegerQ(p)))
    rule67 = ReplacementRule(pattern67, lambda c, p, d, b, f, x, a, e : Int(ExpandIntegrand((e + f*x)**p/((a + b*x)*(c + d*x)), x), x))
    rubi.add(rule67)

    pattern68 = Pattern(Integral((x_*WC('f', S(1)) + WC('e', S(0)))**WC('p', S(1))/((x_*WC('b', S(1)) + WC('a', S(0)))*(x_*WC('d', S(1)) + WC('c', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(0, p, 1)))
    rule68 = ReplacementRule(pattern68, lambda c, p, d, b, f, x, a, e : (-a*f + b*e)*Int((e + f*x)**(p - 1)/(a + b*x), x)/(-a*d + b*c) - (-c*f + d*e)*Int((e + f*x)**(p - 1)/(c + d*x), x)/(-a*d + b*c))
    rubi.add(rule68)

    pattern69 = Pattern(Integral((x_*WC('f', S(1)) + WC('e', S(0)))**p_/((x_*WC('b', S(1)) + WC('a', S(0)))*(x_*WC('d', S(1)) + WC('c', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, 1)))
    rule69 = ReplacementRule(pattern69, lambda c, p, d, b, f, x, a, e : f*(e + f*x)**(p - 1)/(b*d*(p - 1)) + Int((e + f*x)**(p - 2)*(-a*c*f**2 + b*d*e**2 + f*x*(-a*d*f - b*c*f + 2*b*d*e))/((a + b*x)*(c + d*x)), x)/(b*d))
    rubi.add(rule69)

    pattern70 = Pattern(Integral((x_*WC('f', S(1)) + WC('e', S(0)))**p_/((x_*WC('b', S(1)) + WC('a', S(0)))*(x_*WC('d', S(1)) + WC('c', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)))
    rule70 = ReplacementRule(pattern70, lambda c, p, d, b, f, x, a, e : f*(e + f*x)**(p + 1)/((p + 1)*(-a*f + b*e)*(-c*f + d*e)) + Int((e + f*x)**(p + 1)*(-a*d*f - b*c*f + b*d*e - b*d*f*x)/((a + b*x)*(c + d*x)), x)/((-a*f + b*e)*(-c*f + d*e)))
    rubi.add(rule70)

    pattern71 = Pattern(Integral((x_*WC('f', S(1)) + WC('e', S(0)))**p_/((x_*WC('b', S(1)) + WC('a', S(0)))*(x_*WC('d', S(1)) + WC('c', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule71 = ReplacementRule(pattern71, lambda c, p, d, b, f, x, a, e : b*Int((e + f*x)**p/(a + b*x), x)/(-a*d + b*c) - d*Int((e + f*x)**p/(c + d*x), x)/(-a*d + b*c))
    rubi.add(rule71)

    pattern72 = Pattern(Integral((x_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1))*(x_*WC('f', S(1)) + WC('e', S(0)))**p_/(x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p: FractionQ(p)), CustomConstraint(lambda p: Less(p, -1)))
    rule72 = ReplacementRule(pattern72, lambda e, c, p, d, f, x, n, a, b : Int(ExpandIntegrand((e + f*x)**FractionalPart(p), (c + d*x)**n*(e + f*x)**IntegerPart(p)/(a + b*x), x), x))
    rubi.add(rule72)

    pattern73 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**WC('m', S(1))*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1))*(x_*WC('f', S(1)) + WC('e', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, m: IntegersQ(m, n)), CustomConstraint(lambda p, m, n: IntegerQ(p) | (Greater(m, 0) & GreaterEqual(n, -1))))
    rule73 = ReplacementRule(pattern73, lambda e, m, c, p, d, f, x, n, a, b : Int(ExpandIntegrand((a + b*x)**m*(c + d*x)**n*(e + f*x)**p, x), x))
    rubi.add(rule73)

    pattern74 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**2*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1))*(x_*WC('f', S(1)) + WC('e', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, p: (RationalQ(n) & Less(n, -1)) | (NonzeroQ(n + 1) & ZeroQ(n + p + 3) & (SumSimplerQ(n, 1) | ~(SumSimplerQ(p, 1))))))
    rule74 = ReplacementRule(pattern74, lambda e, c, p, d, f, x, n, a, b : (c + d*x)**(n + 1)*(e + f*x)**(p + 1)*(-a*d + b*c)**2/(d**2*(n + 1)*(-c*f + d*e)) - Int((c + d*x)**(n + 1)*(e + f*x)**p*Simp(a**2*d**2*f*(n + p + 2) - 2*a*b*d*(c*f*(p + 1) + d*e*(n + 1)) + b**2*c*(c*f*(p + 1) + d*e*(n + 1)) - b**2*d*x*(n + 1)*(-c*f + d*e), x), x)/(d**2*(n + 1)*(-c*f + d*e)))
    rubi.add(rule74)

    pattern75 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**2*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1))*(x_*WC('f', S(1)) + WC('e', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, p: NonzeroQ(n + p + 3)))
    rule75 = ReplacementRule(pattern75, lambda e, c, p, d, f, x, n, a, b : b*(a + b*x)*(c + d*x)**(n + 1)*(e + f*x)**(p + 1)/(d*f*(n + p + 3)) + Int((c + d*x)**n*(e + f*x)**p*Simp(a**2*d*f*(n + p + 3) + b*x*(a*d*f*(n + p + 4) - b*(c*f*(p + 2) + d*e*(n + 2))) - b*(a*(c*f*(p + 1) + d*e*(n + 1)) + b*c*e), x), x)/(d*f*(n + p + 3)))
    rubi.add(rule75)

    pattern76 = Pattern(Integral(1/((x_*WC('b', S(1)) + WC('a', S(0)))**(S(1)/3)*(x_*WC('d', S(1)) + WC('c', S(0)))**(S(2)/3)*(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)))
    rule76 = ReplacementRule(pattern76, lambda c, d, b, f, x, a, e : With(List(Set(q, Rt((-c*f + d*e)/(-a*f + b*e), 3))), -q*ArcTan(2*q*(a + b*x)**(1/3)/((c + d*x)**(1/3)*Sqrt(3)) + 1/Sqrt(3))*Sqrt(3)/(-c*f + d*e) + q*Log(e + f*x)/(-2*c*f + 2*d*e) - 3*q*Log(q*(a + b*x)**(1/3) - (c + d*x)**(1/3))/(-2*c*f + 2*d*e)))
    rubi.add(rule76)

    pattern77 = Pattern(Integral(1/(sqrt(x_*WC('b', S(1)) + WC('a', S(0)))*sqrt(x_*WC('d', S(1)) + WC('c', S(0)))*(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, d, b, f, a, e: ZeroQ(2*b*d*e - f*(a*d + b*c))))
    rule77 = ReplacementRule(pattern77, lambda c, d, b, f, x, a, e : b*f*Subst(Int(1/(b*f**2*x**2 + d*(-a*f + b*e)**2), x), x, Sqrt(a + b*x)*Sqrt(c + d*x)))
    rubi.add(rule77)

    pattern78 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**n_/(x_*WC('f', S(1)) + WC('e', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, m: ZeroQ(m + n + 1)), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Less(-1, m, 0)), CustomConstraint(lambda c, d, x, a, b: SimplerQ(a + b*x, c + d*x)))
    rule78 = ReplacementRule(pattern78, lambda m, c, d, b, f, x, n, a, e : With(List(Set(q, Denominator(m))), q*Subst(Int(x**(q*(m + 1) - 1)/(-a*f + b*e - x**q*(-c*f + d*e)), x), x, (a + b*x)**(1/q)*(c + d*x)**(-1/q))))
    rubi.add(rule78)

    pattern79 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1))*(x_*WC('f', S(1)) + WC('e', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, m, p: ZeroQ(m + n + p + 2)), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Greater(n, 0)), CustomConstraint(lambda p, m: ~(SumSimplerQ(p, 1) & ~(SumSimplerQ(m, 1)))))
    rule79 = ReplacementRule(pattern79, lambda e, m, c, p, d, f, x, n, a, b : -n*(-c*f + d*e)*Int((a + b*x)**(m + 1)*(c + d*x)**(n - 1)*(e + f*x)**p, x)/((m + 1)*(-a*f + b*e)) + (a + b*x)**(m + 1)*(c + d*x)**n*(e + f*x)**(p + 1)/((m + 1)*(-a*f + b*e)))
    rubi.add(rule79)

    pattern80 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1))*(x_*WC('f', S(1)) + WC('e', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, m, p: ZeroQ(Simplify(m + n + p + 3))), CustomConstraint(lambda e, m, c, p, d, f, n, a, b: ZeroQ(a*d*f*(m + 1) + b*c*f*(n + 1) + b*d*e*(p + 1))), CustomConstraint(lambda m: NonzeroQ(m + 1)))
    rule80 = ReplacementRule(pattern80, lambda e, m, c, p, d, f, x, n, a, b : b*(a + b*x)**(m + 1)*(c + d*x)**(n + 1)*(e + f*x)**(p + 1)/((m + 1)*(-a*d + b*c)*(-a*f + b*e)))
    rubi.add(rule80)

    pattern81 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1))*(x_*WC('f', S(1)) + WC('e', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, m, p: ZeroQ(Simplify(m + n + p + 3))), CustomConstraint(lambda m: SumSimplerQ(m, 1) | (RationalQ(m) & Less(m, -1))))
    rule81 = ReplacementRule(pattern81, lambda e, m, c, p, d, f, x, n, a, b : b*(a + b*x)**(m + 1)*(c + d*x)**(n + 1)*(e + f*x)**(p + 1)/((m + 1)*(-a*d + b*c)*(-a*f + b*e)) + (a*d*f*(m + 1) + b*c*f*(n + 1) + b*d*e*(p + 1))*Int((a + b*x)**(m + 1)*(c + d*x)**n*(e + f*x)**p, x)/((m + 1)*(-a*d + b*c)*(-a*f + b*e)))
    rubi.add(rule81)

    pattern82 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1))*(x_*WC('f', S(1)) + WC('e', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, m, p: RationalQ(m, n, p)), CustomConstraint(lambda m: Less(m, -1)), CustomConstraint(lambda n: Greater(n, 0)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda n, m, p: IntegersQ(m, n + p) | IntegersQ(p, m + n) | IntegersQ(2*m, 2*n, 2*p)))
    rule82 = ReplacementRule(pattern82, lambda e, m, c, p, d, f, x, n, a, b : (a + b*x)**(m + 1)*(c + d*x)**n*(e + f*x)**p/(b*(m + 1)) - Int((a + b*x)**(m + 1)*(c + d*x)**(n - 1)*(e + f*x)**(p - 1)*Simp(c*f*p + d*e*n + d*f*x*(n + p), x), x)/(b*(m + 1)))
    rubi.add(rule82)

    pattern83 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1))*(x_*WC('f', S(1)) + WC('e', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, m, p: RationalQ(m, n, p)), CustomConstraint(lambda m: Less(m, -1)), CustomConstraint(lambda n: Greater(n, 1)), CustomConstraint(lambda n, m, p: IntegersQ(m, n + p) | IntegersQ(p, m + n) | IntegersQ(2*m, 2*n, 2*p)))
    rule83 = ReplacementRule(pattern83, lambda e, m, c, p, d, f, x, n, a, b : (a + b*x)**(m + 1)*(c + d*x)**(n - 1)*(e + f*x)**(p + 1)*(-a*d + b*c)/(b*(m + 1)*(-a*f + b*e)) + Int((a + b*x)**(m + 1)*(c + d*x)**(n - 2)*(e + f*x)**p*Simp(a*d*(c*f*(p + 1) + d*e*(n - 1)) + b*c*(-c*f*(m + p + 2) + d*e*(m - n + 2)) + d*x*(a*d*f*(n + p) + b*(-c*f*(m + n + p + 1) + d*e*(m + 1))), x), x)/(b*(m + 1)*(-a*f + b*e)))
    rubi.add(rule83)

    pattern84 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1))*(x_*WC('f', S(1)) + WC('e', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, m, p: RationalQ(m, n, p)), CustomConstraint(lambda m: Less(m, -1)), CustomConstraint(lambda n: Greater(n, 0)), CustomConstraint(lambda n, m, p: IntegersQ(m, n + p) | IntegersQ(p, m + n) | IntegersQ(2*m, 2*n, 2*p)))
    rule84 = ReplacementRule(pattern84, lambda e, m, c, p, d, f, x, n, a, b : (a + b*x)**(m + 1)*(c + d*x)**n*(e + f*x)**(p + 1)/((m + 1)*(-a*f + b*e)) - Int((a + b*x)**(m + 1)*(c + d*x)**(n - 1)*(e + f*x)**p*Simp(c*f*(m + p + 2) + d*e*n + d*f*x*(m + n + p + 2), x), x)/((m + 1)*(-a*f + b*e)))
    rubi.add(rule84)

    pattern85 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1))*(x_*WC('f', S(1)) + WC('e', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Greater(m, 1)), CustomConstraint(lambda n, m, p: NonzeroQ(m + n + p + 1)), CustomConstraint(lambda m: IntegerQ(m)))
    rule85 = ReplacementRule(pattern85, lambda e, m, c, p, d, f, x, n, a, b : b*(a + b*x)**(m - 1)*(c + d*x)**(n + 1)*(e + f*x)**(p + 1)/(d*f*(m + n + p + 1)) + Int((a + b*x)**(m - 2)*(c + d*x)**n*(e + f*x)**p*Simp(a**2*d*f*(m + n + p + 1) + b*x*(a*d*f*(2*m + n + p) - b*(c*f*(m + p) + d*e*(m + n))) - b*(a*(c*f*(p + 1) + d*e*(n + 1)) + b*c*e*(m - 1)), x), x)/(d*f*(m + n + p + 1)))
    rubi.add(rule85)

    pattern86 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**WC('m', S(1))*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1))*(x_*WC('f', S(1)) + WC('e', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, m, p: RationalQ(m, n, p)), CustomConstraint(lambda m: Greater(m, 0)), CustomConstraint(lambda n: Greater(n, 0)), CustomConstraint(lambda n, m, p: NonzeroQ(m + n + p + 1)), CustomConstraint(lambda n, m, p: IntegersQ(m, n + p) | IntegersQ(p, m + n) | IntegersQ(2*m, 2*n, 2*p)))
    rule86 = ReplacementRule(pattern86, lambda e, m, c, p, d, f, x, n, a, b : (a + b*x)**m*(c + d*x)**n*(e + f*x)**(p + 1)/(f*(m + n + p + 1)) - Int((a + b*x)**(m - 1)*(c + d*x)**(n - 1)*(e + f*x)**p*Simp(a*n*(-c*f + d*e) + c*m*(-a*f + b*e) + x*(b*n*(-c*f + d*e) + d*m*(-a*f + b*e)), x), x)/(f*(m + n + p + 1)))
    rubi.add(rule86)

    pattern87 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1))*(x_*WC('f', S(1)) + WC('e', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Greater(m, 1)), CustomConstraint(lambda n, m, p: NonzeroQ(m + n + p + 1)), CustomConstraint(lambda n, m, p: IntegersQ(2*m, 2*n, 2*p)))
    rule87 = ReplacementRule(pattern87, lambda e, m, c, p, d, f, x, n, a, b : b*(a + b*x)**(m - 1)*(c + d*x)**(n + 1)*(e + f*x)**(p + 1)/(d*f*(m + n + p + 1)) + Int((a + b*x)**(m - 2)*(c + d*x)**n*(e + f*x)**p*Simp(a**2*d*f*(m + n + p + 1) + b*x*(a*d*f*(2*m + n + p) - b*(c*f*(m + p) + d*e*(m + n))) - b*(a*(c*f*(p + 1) + d*e*(n + 1)) + b*c*e*(m - 1)), x), x)/(d*f*(m + n + p + 1)))
    rubi.add(rule87)

    pattern88 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1))*(x_*WC('f', S(1)) + WC('e', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, -1)), CustomConstraint(lambda m: IntegerQ(m)), CustomConstraint(lambda n, p: IntegerQ(n) | IntegersQ(2*n, 2*p)))
    rule88 = ReplacementRule(pattern88, lambda e, m, c, p, d, f, x, n, a, b : b*(a + b*x)**(m + 1)*(c + d*x)**(n + 1)*(e + f*x)**(p + 1)/((m + 1)*(-a*d + b*c)*(-a*f + b*e)) + Int((a + b*x)**(m + 1)*(c + d*x)**n*(e + f*x)**p*Simp(a*d*f*(m + 1) - b*d*f*x*(m + n + p + 3) - b*(c*f*(m + p + 2) + d*e*(m + n + 2)), x), x)/((m + 1)*(-a*d + b*c)*(-a*f + b*e)))
    rubi.add(rule88)

    pattern89 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1))*(x_*WC('f', S(1)) + WC('e', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, -1)), CustomConstraint(lambda n, m, p: IntegersQ(2*m, 2*n, 2*p)))
    rule89 = ReplacementRule(pattern89, lambda e, m, c, p, d, f, x, n, a, b : b*(a + b*x)**(m + 1)*(c + d*x)**(n + 1)*(e + f*x)**(p + 1)/((m + 1)*(-a*d + b*c)*(-a*f + b*e)) + Int((a + b*x)**(m + 1)*(c + d*x)**n*(e + f*x)**p*Simp(a*d*f*(m + 1) - b*d*f*x*(m + n + p + 3) - b*(c*f*(m + p + 2) + d*e*(m + n + 2)), x), x)/((m + 1)*(-a*d + b*c)*(-a*f + b*e)))
    rubi.add(rule89)

    pattern90 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**n_/(x_*WC('f', S(1)) + WC('e', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, m: PositiveIntegerQ(Simplify(m + n + 1))), CustomConstraint(lambda n, m: (RationalQ(m) & Greater(m, 0)) | (~(RationalQ(m)) & (SumSimplerQ(m, -1) | ~(SumSimplerQ(n, -1))))))
    rule90 = ReplacementRule(pattern90, lambda m, c, d, b, f, x, n, a, e : b*Int((a + b*x)**(m - 1)*(c + d*x)**n, x)/f - (-a*f + b*e)*Int((a + b*x)**(m - 1)*(c + d*x)**n/(e + f*x), x)/f)
    rubi.add(rule90)

    pattern91 = Pattern(Integral(1/((x_*WC('b', S(1)) + WC('a', S(0)))*sqrt(x_*WC('d', S(1)) + WC('c', S(0)))*(x_*WC('f', S(1)) + WC('e', S(0)))**(S(1)/4)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, d, e, f: PositiveQ(-f/(-c*f + d*e))))
    rule91 = ReplacementRule(pattern91, lambda c, d, b, f, x, a, e : -4*Subst(Int(x**2/((-a*f + b*e - b*x**4)*Sqrt(c - d*e/f + d*x**4/f)), x), x, (e + f*x)**(1/4)))
    rubi.add(rule91)

    pattern92 = Pattern(Integral(1/((x_*WC('b', S(1)) + WC('a', S(0)))*sqrt(x_*WC('d', S(1)) + WC('c', S(0)))*(x_*WC('f', S(1)) + WC('e', S(0)))**(S(1)/4)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, d, e, f: ~(PositiveQ(-f/(-c*f + d*e)))))
    rule92 = ReplacementRule(pattern92, lambda c, d, b, f, x, a, e : Int(1/((a + b*x)*(e + f*x)**(1/4)*Sqrt(-c*f/(-c*f + d*e) - d*f*x/(-c*f + d*e))), x)*Sqrt(-f*(c + d*x)/(-c*f + d*e))/Sqrt(c + d*x))
    rubi.add(rule92)

    pattern93 = Pattern(Integral(1/((x_*WC('b', S(1)) + WC('a', S(0)))*sqrt(x_*WC('d', S(1)) + WC('c', S(0)))*(x_*WC('f', S(1)) + WC('e', S(0)))**(S(3)/4)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, d, e, f: PositiveQ(-f/(-c*f + d*e))))
    rule93 = ReplacementRule(pattern93, lambda c, d, b, f, x, a, e : -4*Subst(Int(1/((-a*f + b*e - b*x**4)*Sqrt(c - d*e/f + d*x**4/f)), x), x, (e + f*x)**(1/4)))
    rubi.add(rule93)

    pattern94 = Pattern(Integral(1/((x_*WC('b', S(1)) + WC('a', S(0)))*sqrt(x_*WC('d', S(1)) + WC('c', S(0)))*(x_*WC('f', S(1)) + WC('e', S(0)))**(S(3)/4)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, d, e, f: ~(PositiveQ(-f/(-c*f + d*e)))))
    rule94 = ReplacementRule(pattern94, lambda c, d, b, f, x, a, e : Int(1/((a + b*x)*(e + f*x)**(3/4)*Sqrt(-c*f/(-c*f + d*e) - d*f*x/(-c*f + d*e))), x)*Sqrt(-f*(c + d*x)/(-c*f + d*e))/Sqrt(c + d*x))
    rubi.add(rule94)

    pattern95 = Pattern(Integral(sqrt(e_ + x_*WC('f', S(1)))/(sqrt(x_*WC('b', S(1)))*sqrt(c_ + x_*WC('d', S(1)))), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda f, d, e, c: NonzeroQ(-c*f + d*e)), CustomConstraint(lambda c: PositiveQ(c)), CustomConstraint(lambda e: PositiveQ(e)), CustomConstraint(lambda d, b: ~(NegativeQ(-b/d))))
    rule95 = ReplacementRule(pattern95, lambda e, c, d, f, x, b : 2*EllipticE(ArcSin(Sqrt(b*x)/(Rt(-b/d, 2)*Sqrt(c))), c*f/(d*e))*Rt(-b/d, 2)*Sqrt(e)/b)
    rubi.add(rule95)

    pattern96 = Pattern(Integral(sqrt(e_ + x_*WC('f', S(1)))/(sqrt(x_*WC('b', S(1)))*sqrt(c_ + x_*WC('d', S(1)))), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda f, d, e, c: NonzeroQ(-c*f + d*e)), CustomConstraint(lambda c: PositiveQ(c)), CustomConstraint(lambda e: PositiveQ(e)), CustomConstraint(lambda d, b: NegativeQ(-b/d)))
    rule96 = ReplacementRule(pattern96, lambda e, c, d, f, x, b : Int(Sqrt(e + f*x)/(Sqrt(-b*x)*Sqrt(c + d*x)), x)*Sqrt(-b*x)/Sqrt(b*x))
    rubi.add(rule96)

    pattern97 = Pattern(Integral(sqrt(e_ + x_*WC('f', S(1)))/(sqrt(x_*WC('b', S(1)))*sqrt(c_ + x_*WC('d', S(1)))), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda f, d, e, c: NonzeroQ(-c*f + d*e)), CustomConstraint(lambda e, c: ~(PositiveQ(c) & PositiveQ(e))))
    rule97 = ReplacementRule(pattern97, lambda e, c, d, f, x, b : Int(Sqrt(1 + f*x/e)/(Sqrt(b*x)*Sqrt(1 + d*x/c)), x)*Sqrt(1 + d*x/c)*Sqrt(e + f*x)/(Sqrt(1 + f*x/e)*Sqrt(c + d*x)))
    rubi.add(rule97)

    pattern98 = Pattern(Integral(sqrt(x_*WC('f', S(1)) + WC('e', S(0)))/(sqrt(a_ + x_*WC('b', S(1)))*sqrt(c_ + x_*WC('d', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda d, a, b, c: PositiveQ(b/(-a*d + b*c))), CustomConstraint(lambda e, a, b, f: PositiveQ(b/(-a*f + b*e))), CustomConstraint(lambda d, a, b, c: ~(NegativeQ((a*d - b*c)/d))), CustomConstraint(lambda e, c, d, f, x, a, b: ~(SimplerQ(c + d*x, a + b*x) & PositiveQ(d/(-c*f + d*e)) & PositiveQ(-d/(-a*d + b*c)) & ~(NegativeQ((-a*d + b*c)/b)))))
    rule98 = ReplacementRule(pattern98, lambda c, d, b, f, x, a, e : 2*EllipticE(ArcSin(Sqrt(a + b*x)/Rt((a*d - b*c)/d, 2)), f*(-a*d + b*c)/(d*(-a*f + b*e)))*Rt((a*f - b*e)/d, 2)/b)
    rubi.add(rule98)

    pattern99 = Pattern(Integral(sqrt(x_*WC('f', S(1)) + WC('e', S(0)))/(sqrt(a_ + x_*WC('b', S(1)))*sqrt(c_ + x_*WC('d', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, d, b, f, a, e: ~(PositiveQ(b/(-a*d + b*c)) & PositiveQ(b/(-a*f + b*e)))), CustomConstraint(lambda d, a, b, c: ~(NegativeQ((a*d - b*c)/d))))
    rule99 = ReplacementRule(pattern99, lambda c, d, b, f, x, a, e : Int(Sqrt(b*e/(-a*f + b*e) + b*f*x/(-a*f + b*e))/(Sqrt(a + b*x)*Sqrt(b*c/(-a*d + b*c) + b*d*x/(-a*d + b*c))), x)*Sqrt(b*(c + d*x)/(-a*d + b*c))*Sqrt(e + f*x)/(Sqrt(b*(e + f*x)/(-a*f + b*e))*Sqrt(c + d*x)))
    rubi.add(rule99)

    pattern100 = Pattern(Integral(1/(sqrt(x_*WC('b', S(1)))*sqrt(c_ + x_*WC('d', S(1)))*sqrt(e_ + x_*WC('f', S(1)))), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c: PositiveQ(c)), CustomConstraint(lambda e: PositiveQ(e)), CustomConstraint(lambda d, b, f: NegativeQ(-b/f) | PositiveQ(-b/d)))
    rule100 = ReplacementRule(pattern100, lambda e, c, d, f, x, b : 2*EllipticF(ArcSin(Sqrt(b*x)/(Rt(-b/d, 2)*Sqrt(c))), c*f/(d*e))*Rt(-b/d, 2)/(b*Sqrt(e)))
    rubi.add(rule100)

    pattern101 = Pattern(Integral(1/(sqrt(x_*WC('b', S(1)))*sqrt(c_ + x_*WC('d', S(1)))*sqrt(e_ + x_*WC('f', S(1)))), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c: PositiveQ(c)), CustomConstraint(lambda e: PositiveQ(e)), CustomConstraint(lambda d, b, f: NegQ(-b/f) | PosQ(-b/d)))
    rule101 = ReplacementRule(pattern101, lambda e, c, d, f, x, b : 2*EllipticF(ArcSin(Sqrt(b*x)/(Rt(-b/d, 2)*Sqrt(c))), c*f/(d*e))*Rt(-b/d, 2)/(b*Sqrt(e)))
    rubi.add(rule101)

    pattern102 = Pattern(Integral(1/(sqrt(x_*WC('b', S(1)))*sqrt(c_ + x_*WC('d', S(1)))*sqrt(e_ + x_*WC('f', S(1)))), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda e, c: ~(PositiveQ(c) & PositiveQ(e))))
    rule102 = ReplacementRule(pattern102, lambda e, c, d, f, x, b : Int(1/(Sqrt(b*x)*Sqrt(1 + d*x/c)*Sqrt(1 + f*x/e)), x)*Sqrt(1 + d*x/c)*Sqrt(1 + f*x/e)/(Sqrt(c + d*x)*Sqrt(e + f*x)))
    rubi.add(rule102)

    pattern103 = Pattern(Integral(1/(sqrt(a_ + x_*WC('b', S(1)))*sqrt(c_ + x_*WC('d', S(1)))*sqrt(e_ + x_*WC('f', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda d, a, b, c: PositiveQ(b/(-a*d + b*c))), CustomConstraint(lambda e, a, b, f: PositiveQ(b/(-a*f + b*e))), CustomConstraint(lambda c, d, x, a, b: SimplerQ(a + b*x, c + d*x)), CustomConstraint(lambda b, f, x, a, e: SimplerQ(a + b*x, e + f*x)), CustomConstraint(lambda c, d, b, f, a, e: NegativeQ((a*f - b*e)/f) | PositiveQ((a*d - b*c)/d)))
    rule103 = ReplacementRule(pattern103, lambda e, c, d, f, x, a, b : 2*EllipticF(ArcSin(Sqrt(a + b*x)/Rt((a*d - b*c)/d, 2)), f*(-a*d + b*c)/(d*(-a*f + b*e)))*Rt((a*d - b*c)/d, 2)*Sqrt(b**2/((-a*d + b*c)*(-a*f + b*e)))/b)
    rubi.add(rule103)

    pattern104 = Pattern(Integral(1/(sqrt(a_ + x_*WC('b', S(1)))*sqrt(c_ + x_*WC('d', S(1)))*sqrt(e_ + x_*WC('f', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda d, a, b, c: PositiveQ(b/(-a*d + b*c))), CustomConstraint(lambda e, a, b, f: PositiveQ(b/(-a*f + b*e))), CustomConstraint(lambda c, d, x, a, b: SimplerQ(a + b*x, c + d*x)), CustomConstraint(lambda b, f, x, a, e: SimplerQ(a + b*x, e + f*x)), CustomConstraint(lambda c, d, b, f, a, e: NegQ((a*f - b*e)/f) | PosQ((a*d - b*c)/d)))
    rule104 = ReplacementRule(pattern104, lambda e, c, d, f, x, a, b : 2*EllipticF(ArcSin(Sqrt(a + b*x)/Rt((a*d - b*c)/d, 2)), f*(-a*d + b*c)/(d*(-a*f + b*e)))*Rt((a*d - b*c)/d, 2)*Sqrt(b**2/((-a*d + b*c)*(-a*f + b*e)))/b)
    rubi.add(rule104)

    pattern105 = Pattern(Integral(1/(sqrt(a_ + x_*WC('b', S(1)))*sqrt(c_ + x_*WC('d', S(1)))*sqrt(e_ + x_*WC('f', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, d, b, f, a, e: ~(PositiveQ(b/(-a*d + b*c)) & PositiveQ(b/(-a*f + b*e)))), CustomConstraint(lambda c, d, x, a, b: SimplerQ(a + b*x, c + d*x)), CustomConstraint(lambda b, f, x, a, e: SimplerQ(a + b*x, e + f*x)))
    rule105 = ReplacementRule(pattern105, lambda e, c, d, f, x, a, b : Int(1/(Sqrt(a + b*x)*Sqrt(b*c/(-a*d + b*c) + b*d*x/(-a*d + b*c))*Sqrt(b*e/(-a*f + b*e) + b*f*x/(-a*f + b*e))), x)*Sqrt(b*(c + d*x)/(-a*d + b*c))*Sqrt(b*(e + f*x)/(-a*f + b*e))/(Sqrt(c + d*x)*Sqrt(e + f*x)))
    rubi.add(rule105)

    pattern106 = Pattern(Integral(1/((x_*WC('b', S(1)) + WC('a', S(0)))*(x_*WC('d', S(1)) + WC('c', S(0)))**(S(1)/3)*(x_*WC('f', S(1)) + WC('e', S(0)))**(S(1)/3)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, d, b, f, a, e: ZeroQ(-a*d*f - b*c*f + 2*b*d*e)))
    rule106 = ReplacementRule(pattern106, lambda c, d, b, f, x, a, e : With(List(Set(q, Rt(b*(-a*f + b*e)/(-a*d + b*c)**2, 3))), -ArcTan(2*q*(c + d*x)**(2/3)/((e + f*x)**(1/3)*Sqrt(3)) + 1/Sqrt(3))*Sqrt(3)/(2*q*(-a*d + b*c)) - Log(a + b*x)/(2*q*(-a*d + b*c)) + 3*Log(q*(c + d*x)**(2/3) - (e + f*x)**(1/3))/(4*q*(-a*d + b*c))))
    rubi.add(rule106)

    pattern107 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**m_/((x_*WC('d', S(1)) + WC('c', S(0)))**(S(1)/3)*(x_*WC('f', S(1)) + WC('e', S(0)))**(S(1)/3)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, d, b, f, a, e: ZeroQ(-a*d*f - b*c*f + 2*b*d*e)), CustomConstraint(lambda m: IntegerQ(m)), CustomConstraint(lambda m: Less(m, -1)))
    rule107 = ReplacementRule(pattern107, lambda m, c, d, b, f, x, a, e : b*(a + b*x)**(m + 1)*(c + d*x)**(2/3)*(e + f*x)**(2/3)/((m + 1)*(-a*d + b*c)*(-a*f + b*e)) + f*Int((a + b*x)**(m + 1)*(a*d*(3*m + 1) - 3*b*c*(3*m + 5) - 2*b*d*x*(3*m + 7))/((c + d*x)**(1/3)*(e + f*x)**(1/3)), x)/(6*(m + 1)*(-a*d + b*c)*(-a*f + b*e)))
    rubi.add(rule107)

    pattern108 = Pattern(Integral((x_*WC('f', S(1)))**WC('p', S(1))*(x_*WC('b', S(1)) + WC('a', S(0)))**WC('m', S(1))*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, a, b, c: ZeroQ(a*d + b*c)), CustomConstraint(lambda n, m: ZeroQ(m - n)), CustomConstraint(lambda a: PositiveQ(a)), CustomConstraint(lambda c: PositiveQ(c)))
    rule108 = ReplacementRule(pattern108, lambda m, c, p, d, f, x, n, a, b : Int((f*x)**p*(a*c + b*d*x**2)**m, x))
    rubi.add(rule108)

    pattern109 = Pattern(Integral((x_*WC('f', S(1)))**WC('p', S(1))*(x_*WC('b', S(1)) + WC('a', S(0)))**WC('m', S(1))*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, a, b, c: ZeroQ(a*d + b*c)), CustomConstraint(lambda n, m: ZeroQ(m - n)))
    rule109 = ReplacementRule(pattern109, lambda m, c, p, d, f, x, n, a, b : (a + b*x)**FracPart(m)*(c + d*x)**FracPart(m)*(a*c + b*d*x**2)**(-FracPart(m))*Int((f*x)**p*(a*c + b*d*x**2)**m, x))
    rubi.add(rule109)

    pattern110 = Pattern(Integral((x_*WC('f', S(1)))**WC('p', S(1))*(x_*WC('b', S(1)) + WC('a', S(0)))**WC('m', S(1))*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, a, b, c: ZeroQ(a*d + b*c)), CustomConstraint(lambda n, m: PositiveIntegerQ(m - n)), CustomConstraint(lambda n, m, p: NonzeroQ(m + n + p + 2)))
    rule110 = ReplacementRule(pattern110, lambda m, c, p, d, f, x, n, a, b : Int(ExpandIntegrand((f*x)**p*(a + b*x)**n*(c + d*x)**n, (a + b*x)**(m - n), x), x))
    rubi.add(rule110)

    pattern111 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**WC('m', S(1))*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1))*(x_*WC('f', S(1)) + WC('e', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, m: PositiveIntegerQ(m) | NegativeIntegerQ(m, n)))
    rule111 = ReplacementRule(pattern111, lambda e, m, c, p, d, f, x, n, a, b : Int(ExpandIntegrand((a + b*x)**m*(c + d*x)**n*(e + f*x)**p, x), x))
    rubi.add(rule111)

    pattern112 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1))*(x_*WC('f', S(1)) + WC('e', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, m, p: NegativeIntegerQ(m + n + p + 2)), CustomConstraint(lambda m: NonzeroQ(m + 1)), CustomConstraint(lambda n, m, p: SumSimplerQ(m, 1) | (~(SumSimplerQ(n, 1) & NonzeroQ(n + 1)) & ~(SumSimplerQ(p, 1) & NonzeroQ(p + 1)))))
    rule112 = ReplacementRule(pattern112, lambda e, m, c, p, d, f, x, n, a, b : b*(a + b*x)**(m + 1)*(c + d*x)**(n + 1)*(e + f*x)**(p + 1)/((m + 1)*(-a*d + b*c)*(-a*f + b*e)) + Int((a + b*x)**(m + 1)*(c + d*x)**n*(e + f*x)**p*Simp(a*d*f*(m + 1) - b*d*f*x*(m + n + p + 3) - b*(c*f*(m + p + 2) + d*e*(m + n + 2)), x), x)/((m + 1)*(-a*d + b*c)*(-a*f + b*e)))
    rubi.add(rule112)

    pattern113 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1))*(x_*WC('f', S(1)) + WC('e', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, m, p: ZeroQ(m + n + p + 2)), CustomConstraint(lambda n: NegativeIntegerQ(n)))
    rule113 = ReplacementRule(pattern113, lambda e, m, c, p, d, f, x, n, a, b : (a + b*x)**(m + 1)*(e + f*x)**(-m - 1)*(-a*d + b*c)**n*(-a*f + b*e)**(-n - 1)*Hypergeometric2F1(m + 1, -n, m + 2, (a + b*x)*(c*f - d*e)/((e + f*x)*(-a*d + b*c)))/(m + 1))
    rubi.add(rule113)

    pattern114 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**n_*(x_*WC('f', S(1)) + WC('e', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, m, p: ZeroQ(m + n + p + 2)), CustomConstraint(lambda n: ~(IntegerQ(n))))
    rule114 = ReplacementRule(pattern114, lambda m, c, p, d, b, f, x, n, a, e : ((c + d*x)*(-a*f + b*e)/((e + f*x)*(-a*d + b*c)))**(-n)*(a + b*x)**(m + 1)*(c + d*x)**n*(e + f*x)**(p + 1)*Hypergeometric2F1(m + 1, -n, m + 2, (a + b*x)*(c*f - d*e)/((e + f*x)*(-a*d + b*c)))/((m + 1)*(-a*f + b*e)))
    rubi.add(rule114)

    pattern115 = Pattern(Integral((x_*WC('b', S(1)))**m_*(c_ + x_*WC('d', S(1)))**n_*(e_ + x_*WC('f', S(1)))**p_, x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: ~(IntegerQ(m))), CustomConstraint(lambda n: ~(IntegerQ(n))), CustomConstraint(lambda c: PositiveQ(c)), CustomConstraint(lambda p, e: IntegerQ(p) | PositiveQ(e)))
    rule115 = ReplacementRule(pattern115, lambda e, m, c, p, d, f, x, n, b : c**n*e**p*(b*x)**(m + 1)*AppellF1(m + 1, -n, -p, m + 2, -d*x/c, -f*x/e)/(b*(m + 1)))
    rubi.add(rule115)

    pattern116 = Pattern(Integral((x_*WC('b', S(1)))**m_*(c_ + x_*WC('d', S(1)))**n_*(e_ + x_*WC('f', S(1)))**p_, x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: ~(IntegerQ(m))), CustomConstraint(lambda n: ~(IntegerQ(n))), CustomConstraint(lambda d, b, c: PositiveQ(-d/(b*c))), CustomConstraint(lambda c, p, d, f, e: IntegerQ(p) | PositiveQ(d/(-c*f + d*e))))
    rule116 = ReplacementRule(pattern116, lambda e, m, c, p, d, f, x, n, b : (d/(-c*f + d*e))**(-p)*(-d/(b*c))**(-m)*(c + d*x)**(n + 1)*AppellF1(n + 1, -m, -p, n + 2, 1 + d*x/c, -f*(c + d*x)/(-c*f + d*e))/(d*(n + 1)))
    rubi.add(rule116)

    pattern117 = Pattern(Integral((x_*WC('b', S(1)))**m_*(c_ + x_*WC('d', S(1)))**n_*(e_ + x_*WC('f', S(1)))**p_, x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: ~(IntegerQ(m))), CustomConstraint(lambda n: ~(IntegerQ(n))), CustomConstraint(lambda c: ~(PositiveQ(c))))
    rule117 = ReplacementRule(pattern117, lambda e, m, c, p, d, f, x, n, b : c**IntPart(n)*(1 + d*x/c)**(-FracPart(n))*(c + d*x)**FracPart(n)*Int((b*x)**m*(1 + d*x/c)**n*(e + f*x)**p, x))
    rubi.add(rule117)

    pattern118 = Pattern(Integral((a_ + x_*WC('b', S(1)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**n_*(x_*WC('f', S(1)) + WC('e', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m: ~(IntegerQ(m))), CustomConstraint(lambda n: ~(IntegerQ(n))), CustomConstraint(lambda p: IntegerQ(p)), CustomConstraint(lambda d, a, b, c: PositiveQ(b/(-a*d + b*c))), CustomConstraint(lambda c, d, x, a, b: ~(SimplerQ(c + d*x, a + b*x) & PositiveQ(d/(a*d - b*c)))))
    rule118 = ReplacementRule(pattern118, lambda m, c, p, d, b, f, x, n, a, e : b**(-p - 1)*(b/(-a*d + b*c))**(-n)*(a + b*x)**(m + 1)*(-a*f + b*e)**p*AppellF1(m + 1, -n, -p, m + 2, -d*(a + b*x)/(-a*d + b*c), -f*(a + b*x)/(-a*f + b*e))/(m + 1))
    rubi.add(rule118)

    pattern119 = Pattern(Integral((a_ + x_*WC('b', S(1)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**n_*(x_*WC('f', S(1)) + WC('e', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m: ~(IntegerQ(m))), CustomConstraint(lambda n: ~(IntegerQ(n))), CustomConstraint(lambda p: IntegerQ(p)), CustomConstraint(lambda d, a, b, c: ~(PositiveQ(b/(-a*d + b*c)))), CustomConstraint(lambda c, d, x, a, b: ~(SimplerQ(c + d*x, a + b*x))))
    rule119 = ReplacementRule(pattern119, lambda m, c, p, d, b, f, x, n, a, e : (b/(-a*d + b*c))**(-IntPart(n))*(b*(c + d*x)/(-a*d + b*c))**(-FracPart(n))*(c + d*x)**FracPart(n)*Int((a + b*x)**m*(e + f*x)**p*(b*c/(-a*d + b*c) + b*d*x/(-a*d + b*c))**n, x))
    rubi.add(rule119)

    pattern120 = Pattern(Integral((a_ + x_*WC('b', S(1)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**n_*(x_*WC('f', S(1)) + WC('e', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: ~(IntegerQ(m))), CustomConstraint(lambda n: ~(IntegerQ(n))), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda d, a, b, c: PositiveQ(b/(-a*d + b*c))), CustomConstraint(lambda e, a, b, f: PositiveQ(b/(-a*f + b*e))), CustomConstraint(lambda c, d, b, f, x, a, e: ~(SimplerQ(c + d*x, a + b*x) & PositiveQ(d/(a*d - b*c)) & PositiveQ(d/(-c*f + d*e)))), CustomConstraint(lambda e, c, d, f, x, a, b: ~(SimplerQ(e + f*x, a + b*x) & PositiveQ(f/(a*f - b*e)) & PositiveQ(f/(c*f - d*e)))))
    rule120 = ReplacementRule(pattern120, lambda m, c, p, d, b, f, x, n, a, e : (b/(-a*d + b*c))**(-n)*(b/(-a*f + b*e))**(-p)*(a + b*x)**(m + 1)*AppellF1(m + 1, -n, -p, m + 2, -d*(a + b*x)/(-a*d + b*c), -f*(a + b*x)/(-a*f + b*e))/(b*(m + 1)))
    rubi.add(rule120)

    pattern121 = Pattern(Integral((a_ + x_*WC('b', S(1)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**n_*(x_*WC('f', S(1)) + WC('e', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: ~(IntegerQ(m))), CustomConstraint(lambda n: ~(IntegerQ(n))), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda d, a, b, c: PositiveQ(b/(-a*d + b*c))), CustomConstraint(lambda e, a, b, f: ~(PositiveQ(b/(-a*f + b*e)))))
    rule121 = ReplacementRule(pattern121, lambda m, c, p, d, b, f, x, n, a, e : (b/(-a*f + b*e))**(-IntPart(p))*(b*(e + f*x)/(-a*f + b*e))**(-FracPart(p))*(e + f*x)**FracPart(p)*Int((a + b*x)**m*(c + d*x)**n*(b*e/(-a*f + b*e) + b*f*x/(-a*f + b*e))**p, x))
    rubi.add(rule121)

    pattern122 = Pattern(Integral((a_ + x_*WC('b', S(1)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**n_*(x_*WC('f', S(1)) + WC('e', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: ~(IntegerQ(m))), CustomConstraint(lambda n: ~(IntegerQ(n))), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda d, a, b, c: ~(PositiveQ(b/(-a*d + b*c)))), CustomConstraint(lambda c, d, x, a, b: ~(SimplerQ(c + d*x, a + b*x))), CustomConstraint(lambda e, f, x, a, b: ~(SimplerQ(e + f*x, a + b*x))))
    rule122 = ReplacementRule(pattern122, lambda m, c, p, d, b, f, x, n, a, e : (b/(-a*d + b*c))**(-IntPart(n))*(b*(c + d*x)/(-a*d + b*c))**(-FracPart(n))*(c + d*x)**FracPart(n)*Int((a + b*x)**m*(e + f*x)**p*(b*c/(-a*d + b*c) + b*d*x/(-a*d + b*c))**n, x))
    rubi.add(rule122)

    pattern123 = Pattern(Integral((e_ + u_*WC('f', S(1)))**WC('p', S(1))*(u_*WC('b', S(1)) + WC('a', S(0)))**WC('m', S(1))*(u_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule123 = ReplacementRule(pattern123, lambda u, e, m, c, p, d, f, x, n, a, b : Subst(Int((a + b*x)**m*(c + d*x)**n*(e + f*x)**p, x), x, u)/Coefficient(u, x, 1))
    rubi.add(rule123)

    pattern124 = Pattern(Integral((e_ + x_*WC('f', S(1)))*(x_*WC('b', S(1)) + WC('a', S(0)))**WC('m', S(1))*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1))*(x_*WC('h', S(1)) + WC('g', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda n, m: PositiveIntegerQ(m) | IntegersQ(m, n)))
    rule124 = ReplacementRule(pattern124, lambda h, e, m, c, d, f, x, n, a, g, b : Int(ExpandIntegrand((a + b*x)**m*(c + d*x)**n*(e + f*x)*(g + h*x), x), x))
    rubi.add(rule124)

    pattern125 = Pattern(Integral((e_ + x_*WC('f', S(1)))*(x_*WC('b', S(1)) + WC('a', S(0)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1))*(x_*WC('h', S(1)) + WC('g', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, m: ZeroQ(m + n + 2)), CustomConstraint(lambda m: NonzeroQ(m + 1)), CustomConstraint(lambda n, m: ~(SumSimplerQ(n, 1) & ~(SumSimplerQ(m, 1)))))
    rule125 = ReplacementRule(pattern125, lambda h, e, m, c, d, f, x, n, a, g, b : (a + b*x)**(m + 1)*(c + d*x)**(n + 1)*(-a**2*d*f*h*m - a*b*(-c*f*h*(m + 1) + d*(e*h + f*g)) + b**2*d*e*g + b*f*h*x*(m + 1)*(-a*d + b*c))/(b**2*d*(m + 1)*(-a*d + b*c)) + (a*d*f*h*m + b*(-c*f*h*(m + 2) + d*(e*h + f*g)))*Int((a + b*x)**(m + 1)*(c + d*x)**n, x)/(b**2*d))
    rubi.add(rule125)

    pattern126 = Pattern(Integral((e_ + x_*WC('f', S(1)))*(x_*WC('b', S(1)) + WC('a', S(0)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**n_*(x_*WC('h', S(1)) + WC('g', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Less(m, -1)), CustomConstraint(lambda n: Less(n, -1)))
    rule126 = ReplacementRule(pattern126, lambda h, e, m, c, d, f, x, n, a, g, b : (a + b*x)**(m + 1)*(c + d*x)**(n + 1)*(a**2*c*d*f*h*(n + 1) + a*b*(c**2*f*h*(m + 1) - c*d*(e*h + f*g)*(m + n + 2) + d**2*e*g*(m + 1)) + b**2*c*d*e*g*(n + 1) + x*(a**2*d**2*f*h*(n + 1) - a*b*d**2*(n + 1)*(e*h + f*g) + b**2*(c**2*f*h*(m + 1) - c*d*(m + 1)*(e*h + f*g) + d**2*e*g*(m + n + 2))))/(b*d*(m + 1)*(n + 1)*(-a*d + b*c)**2) - (a**2*d**2*f*h*(n**2 + 3*n + 2) + a*b*d*(n + 1)*(2*c*f*h*(m + 1) - d*(e*h + f*g)*(m + n + 3)) + b**2*(c**2*f*h*(m**2 + 3*m + 2) - c*d*(m + 1)*(e*h + f*g)*(m + n + 3) + d**2*e*g*(m**2 + m*(2*n + 5) + n**2 + 5*n + 6)))*Int((a + b*x)**(m + 1)*(c + d*x)**(n + 1), x)/(b*d*(m + 1)*(n + 1)*(-a*d + b*c)**2))
    rubi.add(rule126)

    pattern127 = Pattern(Integral((e_ + x_*WC('f', S(1)))*(x_*WC('b', S(1)) + WC('a', S(0)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1))*(x_*WC('h', S(1)) + WC('g', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, m: (RationalQ(m) & Less(m, -2)) | (ZeroQ(m + n + 3) & ~(RationalQ(n) & Less(n, -2)))))
    rule127 = ReplacementRule(pattern127, lambda h, e, m, c, d, f, x, n, a, g, b : (-d*(m + n + 3)*(a**2*d*f*h*(m - n) - a*b*(2*c*f*h*(m + 1) - d*(n + 1)*(e*h + f*g)) + b**2*(c*(m + 1)*(e*h + f*g) - d*e*g*(m + n + 2)))/(b**2*(m + 1)*(m + 2)*(-a*d + b*c)**2) + f*h/b**2)*Int((a + b*x)**(m + 2)*(c + d*x)**n, x) + (a + b*x)**(m + 1)*(c + d*x)**(n + 1)*(-a**3*d*f*h*(n + 2) - a**2*b*(c*f*h*m - d*(e*h + f*g)*(m + n + 3)) - a*b**2*(c*(e*h + f*g) + d*e*g*(2*m + n + 4)) + b**3*c*e*g*(m + 2) + b*x*(a**2*d*f*h*(m - n) - a*b*(2*c*f*h*(m + 1) - d*(n + 1)*(e*h + f*g)) + b**2*(c*(m + 1)*(e*h + f*g) - d*e*g*(m + n + 2))))/(b**2*(m + 1)*(m + 2)*(-a*d + b*c)**2))
    rubi.add(rule127)

    pattern128 = Pattern(Integral((e_ + x_*WC('f', S(1)))*(x_*WC('b', S(1)) + WC('a', S(0)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1))*(x_*WC('h', S(1)) + WC('g', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m: SumSimplerQ(m, 1) | (RationalQ(m) & Inequality(-2, LessEqual, m, Less, -1))), CustomConstraint(lambda m: NonzeroQ(m + 1)), CustomConstraint(lambda n, m: NonzeroQ(m + n + 3)))
    rule128 = ReplacementRule(pattern128, lambda h, e, m, c, d, f, x, n, a, g, b : (a + b*x)**(m + 1)*(c + d*x)**(n + 1)*(a**2*d*f*h*(n + 2) + a*b*(c*f*h*(m + 1) - d*(e*h + f*g)*(m + n + 3)) + b**2*d*e*g*(m + n + 3) + b*f*h*x*(m + 1)*(-a*d + b*c))/(b**2*d*(m + 1)*(-a*d + b*c)*(m + n + 3)) - (a**2*d**2*f*h*(n + 1)*(n + 2) + a*b*d*(n + 1)*(2*c*f*h*(m + 1) - d*(e*h + f*g)*(m + n + 3)) + b**2*(c**2*f*h*(m + 1)*(m + 2) - c*d*(m + 1)*(e*h + f*g)*(m + n + 3) + d**2*e*g*(m + n + 2)*(m + n + 3)))*Int((a + b*x)**(m + 1)*(c + d*x)**n, x)/(b**2*d*(m + 1)*(-a*d + b*c)*(m + n + 3)))
    rubi.add(rule128)

    pattern129 = Pattern(Integral((e_ + x_*WC('f', S(1)))*(x_*WC('b', S(1)) + WC('a', S(0)))**WC('m', S(1))*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1))*(x_*WC('h', S(1)) + WC('g', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, m: NonzeroQ(m + n + 2)), CustomConstraint(lambda n, m: NonzeroQ(m + n + 3)))
    rule129 = ReplacementRule(pattern129, lambda h, e, m, c, d, f, x, n, a, g, b : (a + b*x)**(m + 1)*(c + d*x)**(n + 1)*(-a*d*f*h*(n + 2) - b*c*f*h*(m + 2) + b*d*f*h*x*(m + n + 2) + b*d*(e*h + f*g)*(m + n + 3))/(b**2*d**2*(m + n + 2)*(m + n + 3)) + (a**2*d**2*f*h*(n + 1)*(n + 2) + a*b*d*(n + 1)*(2*c*f*h*(m + 1) - d*(e*h + f*g)*(m + n + 3)) + b**2*(c**2*f*h*(m + 1)*(m + 2) - c*d*(m + 1)*(e*h + f*g)*(m + n + 3) + d**2*e*g*(m + n + 2)*(m + n + 3)))*Int((a + b*x)**m*(c + d*x)**n, x)/(b**2*d**2*(m + n + 2)*(m + n + 3)))
    rubi.add(rule129)

    pattern130 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**n_*(x_*WC('f', S(1)) + WC('e', S(0)))**p_*(x_*WC('h', S(1)) + WC('g', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, m, p: PositiveIntegerQ(n, p) | IntegersQ(m, n, p)))
    rule130 = ReplacementRule(pattern130, lambda h, m, c, p, d, b, f, x, n, a, g, e : Int(ExpandIntegrand((a + b*x)**m*(c + d*x)**n*(e + f*x)**p*(g + h*x), x), x))
    rubi.add(rule130)

    pattern131 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**n_*(x_*WC('f', S(1)) + WC('e', S(0)))**p_*(x_*WC('h', S(1)) + WC('g', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Less(m, -1)), CustomConstraint(lambda n: Greater(n, 0)), CustomConstraint(lambda m: IntegerQ(m)))
    rule131 = ReplacementRule(pattern131, lambda h, m, c, p, d, b, f, x, n, a, g, e : (a + b*x)**(m + 1)*(c + d*x)**n*(e + f*x)**(p + 1)*(-a*h + b*g)/(b*(m + 1)*(-a*f + b*e)) - Int((a + b*x)**(m + 1)*(c + d*x)**(n - 1)*(e + f*x)**p*Simp(b*c*(m + 1)*(-e*h + f*g) + d*x*(b*(m + 1)*(-e*h + f*g) + f*(-a*h + b*g)*(n + p + 1)) + (-a*h + b*g)*(c*f*(p + 1) + d*e*n), x), x)/(b*(m + 1)*(-a*f + b*e)))
    rubi.add(rule131)

    pattern132 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**n_*(x_*WC('f', S(1)) + WC('e', S(0)))**p_*(x_*WC('h', S(1)) + WC('g', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Less(m, -1)), CustomConstraint(lambda n: Greater(n, 0)), CustomConstraint(lambda n, m, p: IntegersQ(2*m, 2*n, 2*p)))
    rule132 = ReplacementRule(pattern132, lambda h, m, c, p, d, b, f, x, n, a, g, e : (a + b*x)**(m + 1)*(c + d*x)**n*(e + f*x)**(p + 1)*(-a*h + b*g)/(b*(m + 1)*(-a*f + b*e)) - Int((a + b*x)**(m + 1)*(c + d*x)**(n - 1)*(e + f*x)**p*Simp(b*c*(m + 1)*(-e*h + f*g) + d*x*(b*(m + 1)*(-e*h + f*g) + f*(-a*h + b*g)*(n + p + 1)) + (-a*h + b*g)*(c*f*(p + 1) + d*e*n), x), x)/(b*(m + 1)*(-a*f + b*e)))
    rubi.add(rule132)

    pattern133 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**n_*(x_*WC('f', S(1)) + WC('e', S(0)))**p_*(x_*WC('h', S(1)) + WC('g', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, -1)), CustomConstraint(lambda m: IntegerQ(m)))
    rule133 = ReplacementRule(pattern133, lambda h, m, c, p, d, b, f, x, n, a, g, e : (a + b*x)**(m + 1)*(c + d*x)**(n + 1)*(e + f*x)**(p + 1)*(-a*h + b*g)/((m + 1)*(-a*d + b*c)*(-a*f + b*e)) + Int((a + b*x)**(m + 1)*(c + d*x)**n*(e + f*x)**p*Simp(-d*f*x*(-a*h + b*g)*(m + n + p + 3) + (m + 1)*(a*d*f*g + b*c*e*h - b*g*(c*f + d*e)) - (-a*h + b*g)*(c*f*(p + 1) + d*e*(n + 1)), x), x)/((m + 1)*(-a*d + b*c)*(-a*f + b*e)))
    rubi.add(rule133)

    pattern134 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**n_*(x_*WC('f', S(1)) + WC('e', S(0)))**p_*(x_*WC('h', S(1)) + WC('g', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, -1)), CustomConstraint(lambda n, m, p: IntegersQ(2*m, 2*n, 2*p)))
    rule134 = ReplacementRule(pattern134, lambda h, m, c, p, d, b, f, x, n, a, g, e : (a + b*x)**(m + 1)*(c + d*x)**(n + 1)*(e + f*x)**(p + 1)*(-a*h + b*g)/((m + 1)*(-a*d + b*c)*(-a*f + b*e)) + Int((a + b*x)**(m + 1)*(c + d*x)**n*(e + f*x)**p*Simp(-d*f*x*(-a*h + b*g)*(m + n + p + 3) + (m + 1)*(a*d*f*g + b*c*e*h - b*g*(c*f + d*e)) - (-a*h + b*g)*(c*f*(p + 1) + d*e*(n + 1)), x), x)/((m + 1)*(-a*d + b*c)*(-a*f + b*e)))
    rubi.add(rule134)

    pattern135 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**n_*(x_*WC('f', S(1)) + WC('e', S(0)))**p_*(x_*WC('h', S(1)) + WC('g', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Greater(m, 0)), CustomConstraint(lambda n, m, p: NonzeroQ(m + n + p + 2)), CustomConstraint(lambda m: IntegerQ(m)))
    rule135 = ReplacementRule(pattern135, lambda h, m, c, p, d, b, f, x, n, a, g, e : h*(a + b*x)**m*(c + d*x)**(n + 1)*(e + f*x)**(p + 1)/(d*f*(m + n + p + 2)) + Int((a + b*x)**(m - 1)*(c + d*x)**n*(e + f*x)**p*Simp(a*d*f*g*(m + n + p + 2) - h*(a*(c*f*(p + 1) + d*e*(n + 1)) + b*c*e*m) + x*(b*d*f*g*(m + n + p + 2) + h*(a*d*f*m - b*(c*f*(m + p + 1) + d*e*(m + n + 1)))), x), x)/(d*f*(m + n + p + 2)))
    rubi.add(rule135)

    pattern136 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**n_*(x_*WC('f', S(1)) + WC('e', S(0)))**p_*(x_*WC('h', S(1)) + WC('g', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Greater(m, 0)), CustomConstraint(lambda n, m, p: NonzeroQ(m + n + p + 2)), CustomConstraint(lambda n, m, p: IntegersQ(2*m, 2*n, 2*p)))
    rule136 = ReplacementRule(pattern136, lambda h, m, c, p, d, b, f, x, n, a, g, e : h*(a + b*x)**m*(c + d*x)**(n + 1)*(e + f*x)**(p + 1)/(d*f*(m + n + p + 2)) + Int((a + b*x)**(m - 1)*(c + d*x)**n*(e + f*x)**p*Simp(a*d*f*g*(m + n + p + 2) - h*(a*(c*f*(p + 1) + d*e*(n + 1)) + b*c*e*m) + x*(b*d*f*g*(m + n + p + 2) + h*(a*d*f*m - b*(c*f*(m + p + 1) + d*e*(m + n + 1)))), x), x)/(d*f*(m + n + p + 2)))
    rubi.add(rule136)

    pattern137 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**n_*(x_*WC('f', S(1)) + WC('e', S(0)))**p_*(x_*WC('h', S(1)) + WC('g', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, m, p: NegativeIntegerQ(m + n + p + 2)), CustomConstraint(lambda m: NonzeroQ(m + 1)), CustomConstraint(lambda n, m, p: SumSimplerQ(m, 1) | (~(SumSimplerQ(n, 1) & NonzeroQ(n + 1)) & ~(SumSimplerQ(p, 1) & NonzeroQ(p + 1)))))
    rule137 = ReplacementRule(pattern137, lambda h, m, c, p, d, b, f, x, n, a, g, e : (a + b*x)**(m + 1)*(c + d*x)**(n + 1)*(e + f*x)**(p + 1)*(-a*h + b*g)/((m + 1)*(-a*d + b*c)*(-a*f + b*e)) + Int((a + b*x)**(m + 1)*(c + d*x)**n*(e + f*x)**p*Simp(-d*f*x*(-a*h + b*g)*(m + n + p + 3) + (m + 1)*(a*d*f*g + b*c*e*h - b*g*(c*f + d*e)) - (-a*h + b*g)*(c*f*(p + 1) + d*e*(n + 1)), x), x)/((m + 1)*(-a*d + b*c)*(-a*f + b*e)))
    rubi.add(rule137)

    pattern138 = Pattern(Integral((x_*WC('f', S(1)) + WC('e', S(0)))**p_*(x_*WC('h', S(1)) + WC('g', S(0)))/((x_*WC('b', S(1)) + WC('a', S(0)))*(x_*WC('d', S(1)) + WC('c', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)))
    rule138 = ReplacementRule(pattern138, lambda h, c, p, d, b, f, x, a, g, e : (-a*h + b*g)*Int((e + f*x)**p/(a + b*x), x)/(-a*d + b*c) - (-c*h + d*g)*Int((e + f*x)**p/(c + d*x), x)/(-a*d + b*c))
    rubi.add(rule138)

    pattern139 = Pattern(Integral((x_*WC('d', S(1)) + WC('c', S(0)))**n_*(x_*WC('f', S(1)) + WC('e', S(0)))**p_*(x_*WC('h', S(1)) + WC('g', S(0)))/(x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)))
    rule139 = ReplacementRule(pattern139, lambda h, c, p, d, b, f, x, n, a, g, e : h*Int((c + d*x)**n*(e + f*x)**p, x)/b + (-a*h + b*g)*Int((c + d*x)**n*(e + f*x)**p/(a + b*x), x)/b)
    rubi.add(rule139)

    pattern140 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))/(sqrt(c_ + x_*WC('d', S(1)))*sqrt(e_ + x_*WC('f', S(1)))*sqrt(x_*WC('b', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda b, f, x, a, e: SimplerQ(a + b*x, e + f*x)), CustomConstraint(lambda c, d, f, x, e: SimplerQ(c + d*x, e + f*x)))
    rule140 = ReplacementRule(pattern140, lambda h, e, c, d, f, x, a, g, b : h*Int(Sqrt(e + f*x)/(Sqrt(a + b*x)*Sqrt(c + d*x)), x)/f + (-e*h + f*g)*Int(1/(Sqrt(a + b*x)*Sqrt(c + d*x)*Sqrt(e + f*x)), x)/f)
    rubi.add(rule140)

    pattern141 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**n_*(x_*WC('f', S(1)) + WC('e', S(0)))**p_*(x_*WC('h', S(1)) + WC('g', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, m, p: SumSimplerQ(m, 1) | (~(SumSimplerQ(n, 1)) & ~(SumSimplerQ(p, 1)))))
    rule141 = ReplacementRule(pattern141, lambda h, m, c, p, d, b, f, x, n, a, g, e : h*Int((a + b*x)**(m + 1)*(c + d*x)**n*(e + f*x)**p, x)/b + (-a*h + b*g)*Int((a + b*x)**m*(c + d*x)**n*(e + f*x)**p, x)/b)
    rubi.add(rule141)

    pattern142 = Pattern(Integral((x_*WC('f', S(1)) + WC('e', S(0)))**p_*(x_*WC('h', S(1)) + WC('g', S(0)))**q_/((x_*WC('b', S(1)) + WC('a', S(0)))*(x_*WC('d', S(1)) + WC('c', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(0, p, 1)))
    rule142 = ReplacementRule(pattern142, lambda h, c, q, p, d, b, f, x, a, g, e : (-a*f + b*e)*Int((e + f*x)**(p - 1)*(g + h*x)**q/(a + b*x), x)/(-a*d + b*c) - (-c*f + d*e)*Int((e + f*x)**(p - 1)*(g + h*x)**q/(c + d*x), x)/(-a*d + b*c))
    rubi.add(rule142)

    pattern143 = Pattern(Integral(1/((x_*WC('b', S(1)) + WC('a', S(0)))*sqrt(x_*WC('d', S(1)) + WC('c', S(0)))*sqrt(x_*WC('f', S(1)) + WC('e', S(0)))*sqrt(x_*WC('h', S(1)) + WC('g', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)))
    rule143 = ReplacementRule(pattern143, lambda h, c, d, b, f, x, a, g, e : -2*EllipticPi(-b*(-c*f + d*e)/(f*(-a*d + b*c)), ArcSin(Sqrt(-f/(-c*f + d*e))*Sqrt(c + d*x)), h*(-c*f + d*e)/(f*(-c*h + d*g)))*Sqrt(d*(e + f*x)/(-c*f + d*e))*Sqrt(d*(g + h*x)/(-c*h + d*g))/((-a*d + b*c)*Sqrt(-f/(-c*f + d*e))*Sqrt(e + f*x)*Sqrt(g + h*x)))
    rubi.add(rule143)

    pattern144 = Pattern(Integral((x_*WC('d', S(1)) + WC('c', S(0)))**n_/((x_*WC('b', S(1)) + WC('a', S(0)))*sqrt(x_*WC('f', S(1)) + WC('e', S(0)))*sqrt(x_*WC('h', S(1)) + WC('g', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda n: IntegerQ(n + S(1)/2)))
    rule144 = ReplacementRule(pattern144, lambda h, c, d, b, f, x, n, a, g, e : Int(ExpandIntegrand(1/(Sqrt(c + d*x)*Sqrt(e + f*x)*Sqrt(g + h*x)), (c + d*x)**(n + 1/2)/(a + b*x), x), x))
    rubi.add(rule144)

    pattern145 = Pattern(Integral(sqrt(x_*WC('f', S(1)) + WC('e', S(0)))*sqrt(x_*WC('h', S(1)) + WC('g', S(0)))/((x_*WC('b', S(1)) + WC('a', S(0)))*sqrt(x_*WC('d', S(1)) + WC('c', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)))
    rule145 = ReplacementRule(pattern145, lambda h, c, d, b, f, x, a, g, e : (-a*f + b*e)*(-a*h + b*g)*Int(1/((a + b*x)*Sqrt(c + d*x)*Sqrt(e + f*x)*Sqrt(g + h*x)), x)/b**2 + Int((-a*f*h + b*e*h + b*f*g + b*f*h*x)/(Sqrt(c + d*x)*Sqrt(e + f*x)*Sqrt(g + h*x)), x)/b**2)
    rubi.add(rule145)

    pattern146 = Pattern(Integral(1/(sqrt(x_*WC('b', S(1)) + WC('a', S(0)))*sqrt(x_*WC('d', S(1)) + WC('c', S(0)))*sqrt(x_*WC('f', S(1)) + WC('e', S(0)))*sqrt(x_*WC('h', S(1)) + WC('g', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)))
    rule146 = ReplacementRule(pattern146, lambda h, c, d, b, f, x, a, g, e : -2*(a + b*x)*Sqrt((c + d*x)*(-a*h + b*g)/((a + b*x)*(-c*h + d*g)))*Sqrt((e + f*x)*(-a*h + b*g)/((a + b*x)*(-e*h + f*g)))*Subst(Int(1/(Sqrt(x**2*(-a*d + b*c)/(-c*h + d*g) + 1)*Sqrt(x**2*(-a*f + b*e)/(-e*h + f*g) + 1)), x), x, Sqrt(g + h*x)/Sqrt(a + b*x))/((-a*h + b*g)*Sqrt(c + d*x)*Sqrt(e + f*x)))
    rubi.add(rule146)

    pattern147 = Pattern(Integral(sqrt(x_*WC('d', S(1)) + WC('c', S(0)))/((x_*WC('b', S(1)) + WC('a', S(0)))**(S(3)/2)*sqrt(x_*WC('f', S(1)) + WC('e', S(0)))*sqrt(x_*WC('h', S(1)) + WC('g', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)))
    rule147 = ReplacementRule(pattern147, lambda h, c, d, b, f, x, a, g, e : -2*(a + b*x)*(-c*h + d*g)*Sqrt((c + d*x)*(-a*h + b*g)/((a + b*x)*(-c*h + d*g)))*Sqrt((e + f*x)*(-a*h + b*g)/((a + b*x)*(-e*h + f*g)))*Subst(Int(Sqrt(x**2*(-a*d + b*c)/(-c*h + d*g) + 1)/Sqrt(x**2*(-a*f + b*e)/(-e*h + f*g) + 1), x), x, Sqrt(g + h*x)/Sqrt(a + b*x))/((-a*h + b*g)**2*Sqrt(c + d*x)*Sqrt(e + f*x)))
    rubi.add(rule147)

    pattern148 = Pattern(Integral(sqrt(x_*WC('b', S(1)) + WC('a', S(0)))/(sqrt(x_*WC('d', S(1)) + WC('c', S(0)))*sqrt(x_*WC('f', S(1)) + WC('e', S(0)))*sqrt(x_*WC('h', S(1)) + WC('g', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)))
    rule148 = ReplacementRule(pattern148, lambda h, c, d, b, f, x, a, g, e : 2*(a + b*x)*Sqrt((c + d*x)*(-a*h + b*g)/((a + b*x)*(-c*h + d*g)))*Sqrt((e + f*x)*(-a*h + b*g)/((a + b*x)*(-e*h + f*g)))*Subst(Int(1/((-b*x**2 + h)*Sqrt(x**2*(-a*d + b*c)/(-c*h + d*g) + 1)*Sqrt(x**2*(-a*f + b*e)/(-e*h + f*g) + 1)), x), x, Sqrt(g + h*x)/Sqrt(a + b*x))/(Sqrt(c + d*x)*Sqrt(e + f*x)))
    rubi.add(rule148)

    pattern149 = Pattern(Integral(1/((x_*WC('b', S(1)) + WC('a', S(0)))**(S(3)/2)*sqrt(x_*WC('d', S(1)) + WC('c', S(0)))*sqrt(x_*WC('f', S(1)) + WC('e', S(0)))*sqrt(x_*WC('h', S(1)) + WC('g', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)))
    rule149 = ReplacementRule(pattern149, lambda h, c, d, b, f, x, a, g, e : b*Int(Sqrt(c + d*x)/((a + b*x)**(3/2)*Sqrt(e + f*x)*Sqrt(g + h*x)), x)/(-a*d + b*c) - d*Int(1/(Sqrt(a + b*x)*Sqrt(c + d*x)*Sqrt(e + f*x)*Sqrt(g + h*x)), x)/(-a*d + b*c))
    rubi.add(rule149)

    pattern150 = Pattern(Integral(sqrt(x_*WC('b', S(1)) + WC('a', S(0)))*sqrt(x_*WC('d', S(1)) + WC('c', S(0)))/(sqrt(x_*WC('f', S(1)) + WC('e', S(0)))*sqrt(x_*WC('h', S(1)) + WC('g', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)))
    rule150 = ReplacementRule(pattern150, lambda h, c, d, b, f, x, a, g, e : Sqrt(a + b*x)*Sqrt(c + d*x)*Sqrt(g + h*x)/(h*Sqrt(e + f*x)) - (-c*f + d*e)*(-e*h + f*g)*Int(Sqrt(a + b*x)/((e + f*x)**(3/2)*Sqrt(c + d*x)*Sqrt(g + h*x)), x)/(2*f*h) + (-c*f + d*e)*(-2*a*f*h + b*e*h + b*f*g)*Int(1/(Sqrt(a + b*x)*Sqrt(c + d*x)*Sqrt(e + f*x)*Sqrt(g + h*x)), x)/(2*f**2*h) + (a*d*f*h - b*(-c*f*h + d*e*h + d*f*g))*Int(Sqrt(e + f*x)/(Sqrt(a + b*x)*Sqrt(c + d*x)*Sqrt(g + h*x)), x)/(2*f**2*h))
    rubi.add(rule150)

    pattern151 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**(S(3)/2)/(sqrt(x_*WC('d', S(1)) + WC('c', S(0)))*sqrt(x_*WC('f', S(1)) + WC('e', S(0)))*sqrt(x_*WC('h', S(1)) + WC('g', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)))
    rule151 = ReplacementRule(pattern151, lambda h, c, d, b, f, x, a, g, e : b*Int(Sqrt(a + b*x)*Sqrt(c + d*x)/(Sqrt(e + f*x)*Sqrt(g + h*x)), x)/d - (-a*d + b*c)*Int(Sqrt(a + b*x)/(Sqrt(c + d*x)*Sqrt(e + f*x)*Sqrt(g + h*x)), x)/d)
    rubi.add(rule151)

    pattern152 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**n_*(x_*WC('f', S(1)) + WC('e', S(0)))**p_*(x_*WC('h', S(1)) + WC('g', S(0)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, p: IntegersQ(p, q)))
    rule152 = ReplacementRule(pattern152, lambda h, m, c, q, p, d, b, f, x, n, a, g, e : Int(ExpandIntegrand((a + b*x)**m*(c + d*x)**n*(e + f*x)**p*(g + h*x)**q, x), x))
    rubi.add(rule152)

    pattern153 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**n_*(x_*WC('f', S(1)) + WC('e', S(0)))**p_*(x_*WC('h', S(1)) + WC('g', S(0)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q: PositiveIntegerQ(q)), CustomConstraint(lambda n, m, p: SumSimplerQ(m, 1) | (~(SumSimplerQ(n, 1)) & ~(SumSimplerQ(p, 1)))))
    rule153 = ReplacementRule(pattern153, lambda h, m, c, q, p, d, b, f, x, n, a, g, e : h*Int((a + b*x)**(m + 1)*(c + d*x)**n*(e + f*x)**p*(g + h*x)**(q - 1), x)/b + (-a*h + b*g)*Int((a + b*x)**m*(c + d*x)**n*(e + f*x)**p*(g + h*x)**(q - 1), x)/b)
    rubi.add(rule153)

    pattern154 = Pattern(Integral((x_*WC('b', S(1)) + WC('a', S(0)))**WC('m', S(1))*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1))*(x_*WC('f', S(1)) + WC('e', S(0)))**WC('p', S(1))*(x_*WC('h', S(1)) + WC('g', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)))
    rule154 = ReplacementRule(pattern154, lambda h, e, m, c, q, p, d, f, x, n, a, g, b : Int((a + b*x)**m*(c + d*x)**n*(e + f*x)**p*(g + h*x)**q, x))
    rubi.add(rule154)

    pattern155 = Pattern(Integral((u_*WC('b', S(1)) + WC('a', S(0)))**WC('m', S(1))*(u_*WC('d', S(1)) + WC('c', S(0)))**WC('n', S(1))*(u_*WC('f', S(1)) + WC('e', S(0)))**WC('p', S(1))*(u_*WC('h', S(1)) + WC('g', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule155 = ReplacementRule(pattern155, lambda u, h, e, m, c, q, p, d, f, x, n, a, g, b : Subst(Int((a + b*x)**m*(c + d*x)**n*(e + f*x)**p*(g + h*x)**q, x), x, u)/Coefficient(u, x, 1))
    rubi.add(rule155)

    pattern156 = Pattern(Integral(((x_*WC('b', S(1)) + WC('a', S(0)))**m_*(x_*WC('d', S(1)) + WC('c', S(0)))**n_*(x_*WC('f', S(1)) + WC('e', S(0)))**p_*(x_*WC('h', S(1)) + WC('g', S(0)))**q_*WC('i', S(1)))**r_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda i, x: FreeQ(i, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)))
    rule156 = ReplacementRule(pattern156, lambda h, r, e, m, c, q, p, d, f, x, i, n, a, g, b : (i*(a + b*x)**m*(c + d*x)**n*(e + f*x)**p*(g + h*x)**q)**r*(a + b*x)**(-m*r)*(c + d*x)**(-n*r)*(e + f*x)**(-p*r)*(g + h*x)**(-q*r)*Int((a + b*x)**(m*r)*(c + d*x)**(n*r)*(e + f*x)**(p*r)*(g + h*x)**(q*r), x))
    rubi.add(rule156)

    pattern157 = Pattern(Integral(1/sqrt(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)))
    rule157 = ReplacementRule(pattern157, lambda x, a, b, c : (b/2 + c*x)*Int(1/(b/2 + c*x), x)/Sqrt(a + b*x + c*x**2))
    rubi.add(rule157)

    pattern158 = Pattern(Integral((a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)), CustomConstraint(lambda p: NonzeroQ(2*p + 1)))
    rule158 = ReplacementRule(pattern158, lambda c, p, x, a, b : (b + 2*c*x)*(a + b*x + c*x**2)**p/(2*c*(2*p + 1)))
    rubi.add(rule158)

    pattern159 = Pattern(Integral((a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda p: PositiveIntegerQ(p)), CustomConstraint(lambda a, b, c: PerfectSquareQ(-4*a*c + b**2)))
    rule159 = ReplacementRule(pattern159, lambda c, p, x, a, b : With(List(Set(q, Rt(-4*a*c + b**2, 2))), c**(-p)*Int(Simp(b/2 + c*x - q/2, x)**p*Simp(b/2 + c*x + q/2, x)**p, x)))
    rubi.add(rule159)

    pattern160 = Pattern(Integral((a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda p: PositiveIntegerQ(p)), CustomConstraint(lambda a, b, c: ~(PerfectSquareQ(-4*a*c + b**2))))
    rule160 = ReplacementRule(pattern160, lambda c, p, x, a, b : Int(ExpandIntegrand((a + b*x + c*x**2)**p, x), x))
    rubi.add(rule160)

    pattern161 = Pattern(Integral((x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda p: IntegerQ(4*p)))
    rule161 = ReplacementRule(pattern161, lambda c, p, x, a, b : -p*(-4*a*c + b**2)*Int((a + b*x + c*x**2)**(p - 1), x)/(2*c*(2*p + 1)) + (b + 2*c*x)*(a + b*x + c*x**2)**p/(2*c*(2*p + 1)))
    rubi.add(rule161)

    pattern162 = Pattern(Integral((x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**(S(-3)/2), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)))
    rule162 = ReplacementRule(pattern162, lambda x, a, b, c : -2*(b + 2*c*x)/((-4*a*c + b**2)*Sqrt(a + b*x + c*x**2)))
    rubi.add(rule162)

    pattern163 = Pattern(Integral((x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda p: Unequal(p, S(-3)/2)), CustomConstraint(lambda p: IntegerQ(4*p)))
    rule163 = ReplacementRule(pattern163, lambda c, p, x, a, b : -2*c*(2*p + 3)*Int((a + b*x + c*x**2)**(p + 1), x)/((p + 1)*(-4*a*c + b**2)) + (b + 2*c*x)*(a + b*x + c*x**2)**(p + 1)/((p + 1)*(-4*a*c + b**2)))
    rubi.add(rule163)

    pattern164 = Pattern(Integral(1/(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda a, b, c: PosQ(-4*a*c + b**2)), CustomConstraint(lambda a, b, c: PerfectSquareQ(-4*a*c + b**2)))
    rule164 = ReplacementRule(pattern164, lambda x, a, b, c : With(List(Set(q, Rt(-4*a*c + b**2, 2))), c*Int(1/Simp(b/2 + c*x - q/2, x), x)/q - c*Int(1/Simp(b/2 + c*x + q/2, x), x)/q))
    rubi.add(rule164)

    pattern165 = Pattern(Integral(1/(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)))
    rule165 = ReplacementRule(pattern165, lambda x, a, b, c : -2*Subst(Int(1/Simp(-4*a*c + b**2 - x**2, x), x), x, b + 2*c*x))
    rubi.add(rule165)

    pattern166 = Pattern(Integral((x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: PositiveQ(4*a - b**2/c)))
    rule166 = ReplacementRule(pattern166, lambda c, p, x, a, b : (-4*c/(-4*a*c + b**2))**(-p)*Subst(Int(Simp(-x**2/(-4*a*c + b**2) + 1, x)**p, x), x, b + 2*c*x)/(2*c))
    rubi.add(rule166)

    pattern167 = Pattern(Integral(1/sqrt(x_**2*WC('c', S(1)) + x_*WC('b', S(1))), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)))
    rule167 = ReplacementRule(pattern167, lambda x, b, c : 2*Subst(Int(1/(-c*x**2 + 1), x), x, x/Sqrt(b*x + c*x**2)))
    rubi.add(rule167)

    pattern168 = Pattern(Integral(1/sqrt(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)))
    rule168 = ReplacementRule(pattern168, lambda x, a, b, c : 2*Subst(Int(1/(4*c - x**2), x), x, (b + 2*c*x)/Sqrt(a + b*x + c*x**2)))
    rubi.add(rule168)

    pattern169 = Pattern(Integral((x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: LessEqual(3, Denominator(p), 4)))
    rule169 = ReplacementRule(pattern169, lambda x, p, b, c : (-c*(b*x + c*x**2)/b**2)**(-p)*(b*x + c*x**2)**p*Int((-c*x/b - c**2*x**2/b**2)**p, x))
    rubi.add(rule169)

    pattern170 = Pattern(Integral((x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda p: RationalQ(p)))
    rule170 = ReplacementRule(pattern170, lambda c, p, x, a, b : With(List(Set(d, Denominator(p))), Condition(d*Sqrt((b + 2*c*x)**2)*Subst(Int(x**(d*(p + 1) - 1)/Sqrt(-4*a*c + b**2 + 4*c*x**d), x), x, (a + b*x + c*x**2)**(1/d))/(b + 2*c*x), LessEqual(3, d, 4))))
    rubi.add(rule170)

    pattern171 = Pattern(Integral((x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda p: ~(IntegerQ(4*p))))
    rule171 = ReplacementRule(pattern171, lambda c, p, x, a, b : With(List(Set(q, Rt(-4*a*c + b**2, 2))), -((-b - 2*c*x + q)/(2*q))**(-p - 1)*(a + b*x + c*x**2)**(p + 1)*Hypergeometric2F1(-p, p + 1, p + 2, (b + 2*c*x + q)/(2*q))/(q*(p + 1))))
    rubi.add(rule171)

    pattern172 = Pattern(Integral((u_**2*WC('c', S(1)) + u_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule172 = ReplacementRule(pattern172, lambda u, c, p, x, a, b : Subst(Int((a + b*x + c*x**2)**p, x), x, u)/Coefficient(u, x, 1))
    rubi.add(rule172)

    pattern173 = Pattern(Integral((d_ + x_*WC('e', S(1)))**WC('m', S(1))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)), CustomConstraint(lambda e, d, b, c: ZeroQ(-b*e + 2*c*d)), CustomConstraint(lambda m: IntegerQ(m/2 + S(1)/2)))
    rule173 = ReplacementRule(pattern173, lambda e, m, c, p, d, x, a, b : c**(-m/2 - 1/2)*e**m*(a + b*x + c*x**2)**(m/2 + p + 1/2)/(m + 2*p + 1))
    rubi.add(rule173)

    pattern174 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)), CustomConstraint(lambda e, d, b, c: ZeroQ(-b*e + 2*c*d)), CustomConstraint(lambda p, m: ZeroQ(m + 2*p + 1)))
    rule174 = ReplacementRule(pattern174, lambda e, m, c, p, d, x, a, b : (d + e*x)**(m + 1)*(a + b*x + c*x**2)**p*Log(RemoveContent(d + e*x, x))/e)
    rubi.add(rule174)

    pattern175 = Pattern(Integral((d_ + x_*WC('e', S(1)))**WC('m', S(1))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)), CustomConstraint(lambda e, d, b, c: ZeroQ(-b*e + 2*c*d)), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p + 1)))
    rule175 = ReplacementRule(pattern175, lambda e, m, c, p, d, x, a, b : (d + e*x)**(m + 1)*(a + b*x + c*x**2)**p/(e*(m + 2*p + 1)))
    rubi.add(rule175)

    pattern176 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda p, m: ZeroQ(m + 2*p + 2)), CustomConstraint(lambda m: NonzeroQ(m + 1)))
    rule176 = ReplacementRule(pattern176, lambda e, m, c, p, d, x, a, b : -(b + 2*c*x)*(d + e*x)**(m + 1)*(a + b*x + c*x**2)**p/((m + 1)*(-b*e + 2*c*d)))
    rubi.add(rule176)

    pattern177 = Pattern(Integral(sqrt(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))/(x_*WC('e', S(1)) + WC('d', S(0)))**2, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)))
    rule177 = ReplacementRule(pattern177, lambda e, c, d, x, a, b : Int((b + 2*c*x)/(d + e*x)**2, x)*Sqrt(a + b*x + c*x**2)/(b + 2*c*x))
    rubi.add(rule177)

    pattern178 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*sqrt(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda m: NonzeroQ(m + 2)))
    rule178 = ReplacementRule(pattern178, lambda e, m, c, d, x, a, b : (d + e*x)**(m + 1)*Sqrt(a + b*x + c*x**2)/(e*(m + 2)) - (-b*e + 2*c*d)*Int((d + e*x)**m, x)*Sqrt(a + b*x + c*x**2)/(e*(b + 2*c*x)*(m + 2)))
    rubi.add(rule178)

    pattern179 = Pattern(Integral(1/((x_*WC('e', S(1)) + WC('d', S(0)))**2*sqrt(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)))
    rule179 = ReplacementRule(pattern179, lambda e, c, d, x, a, b : -4*c*e*Sqrt(a + b*x + c*x**2)/((d + e*x)*(-b*e + 2*c*d)**2) + 2*c*Int(1/((d + e*x)*Sqrt(a + b*x + c*x**2)), x)/(-b*e + 2*c*d))
    rubi.add(rule179)

    pattern180 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda p, m: ZeroQ(m + 2*p + 3)), CustomConstraint(lambda m: NonzeroQ(m + 2)))
    rule180 = ReplacementRule(pattern180, lambda e, m, c, p, d, x, a, b : -2*c*e*(d + e*x)**(m + 1)*(a + b*x + c*x**2)**(p + 1)/((-b*e + 2*c*d)**2*(m*p - 1)) - (b + 2*c*x)*(d + e*x)**(m + 1)*(a + b*x + c*x**2)**p/((m + 2)*(-b*e + 2*c*d)))
    rubi.add(rule180)

    pattern181 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda p: NonzeroQ(p + S(3)/2)))
    rule181 = ReplacementRule(pattern181, lambda e, c, p, d, x, a, b : e*(a + b*x + c*x**2)**(p + 1)/(2*c*(p + 1)) + (-b*e + 2*c*d)*Int((a + b*x + c*x**2)**p, x)/(2*c))
    rubi.add(rule181)

    pattern182 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, 1)), CustomConstraint(lambda m: Inequality(-2, LessEqual, m, Less, -1)), CustomConstraint(lambda p: IntegerQ(2*p)))
    rule182 = ReplacementRule(pattern182, lambda e, m, c, p, d, x, a, b : (d + e*x)**(m + 1)*(a + b*x + c*x**2)**p/(e*(m + 1)) - p*(b + 2*c*x)*(d + e*x)**(m + 2)*(a + b*x + c*x**2)**(p - 1)/(e**2*(m + 1)*(m + 2*p + 1)) + p*(2*p - 1)*(-b*e + 2*c*d)*Int((d + e*x)**(m + 1)*(a + b*x + c*x**2)**(p - 1), x)/(e**2*(m + 1)*(m + 2*p + 1)))
    rubi.add(rule182)

    pattern183 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, 1)), CustomConstraint(lambda m: Less(m, -2)), CustomConstraint(lambda p: IntegerQ(2*p)), CustomConstraint(lambda p, m: ~(NegativeIntegerQ(m + 2*p + 3) & Greater(m + 3*p + 3, 0))))
    rule183 = ReplacementRule(pattern183, lambda e, m, c, p, d, x, a, b : 2*c*p*(2*p - 1)*Int((d + e*x)**(m + 2)*(a + b*x + c*x**2)**(p - 1), x)/(e**2*(m + 1)*(m + 2)) + (d + e*x)**(m + 1)*(a + b*x + c*x**2)**p/(e*(m + 1)) - p*(b + 2*c*x)*(d + e*x)**(m + 2)*(a + b*x + c*x**2)**(p - 1)/(e**2*(m + 1)*(m + 2)))
    rubi.add(rule183)

    pattern184 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p)), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p + 1)), CustomConstraint(lambda p, m: ~(NegativeIntegerQ(m + 2*p + 3) & Greater(m + 3*p + 3, 0))), CustomConstraint(lambda m: ~(RationalQ(m) & Less(m, -2))), CustomConstraint(lambda p, m: ~(IntegerQ(m) & Less(0, m, 2*p))), CustomConstraint(lambda p: IntegerQ(2*p)))
    rule184 = ReplacementRule(pattern184, lambda e, m, c, p, d, x, a, b : (d + e*x)**(m + 1)*(a + b*x + c*x**2)**p/(e*(m + 2*p + 1)) - p*(b + 2*c*x)*(d + e*x)**(m + 1)*(-b*e + 2*c*d)*(a + b*x + c*x**2)**(p - 1)/(2*c*e**2*(m + 2*p)*(m + 2*p + 1)) + p*(2*p - 1)*(-b*e + 2*c*d)**2*Int((d + e*x)**m*(a + b*x + c*x**2)**(p - 1), x)/(2*c*e**2*(m + 2*p)*(m + 2*p + 1)))
    rubi.add(rule184)

    pattern185 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda m: Inequality(0, Less, m, LessEqual, 1)), CustomConstraint(lambda p: IntegerQ(2*p)))
    rule185 = ReplacementRule(pattern185, lambda e, m, c, p, d, x, a, b : e**2*m*(m + 2*p + 2)*Int((d + e*x)**(m - 1)*(a + b*x + c*x**2)**(p + 1), x)/((p + 1)*(2*p + 1)*(-b*e + 2*c*d)) - e*(d + e*x)**m*(a + b*x + c*x**2)**(p + 1)*(m + 2*p + 2)/((p + 1)*(2*p + 1)*(-b*e + 2*c*d)) + (b + 2*c*x)*(d + e*x)**(m + 1)*(a + b*x + c*x**2)**p/((2*p + 1)*(-b*e + 2*c*d)))
    rubi.add(rule185)

    pattern186 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda m: Greater(m, 1)), CustomConstraint(lambda p: IntegerQ(2*p)))
    rule186 = ReplacementRule(pattern186, lambda e, m, c, p, d, x, a, b : e**2*m*(m - 1)*Int((d + e*x)**(m - 2)*(a + b*x + c*x**2)**(p + 1), x)/(2*c*(p + 1)*(2*p + 1)) - e*m*(d + e*x)**(m - 1)*(a + b*x + c*x**2)**(p + 1)/(2*c*(p + 1)*(2*p + 1)) + (b + 2*c*x)*(d + e*x)**m*(a + b*x + c*x**2)**p/(2*c*(2*p + 1)))
    rubi.add(rule186)

    pattern187 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda p, m: NonzeroQ(m + p + 1)), CustomConstraint(lambda p: IntegerQ(2*p)))
    rule187 = ReplacementRule(pattern187, lambda e, m, c, p, d, x, a, b : 2*c*e**2*(m + 2*p + 2)*(m + 2*p + 3)*Int((d + e*x)**m*(a + b*x + c*x**2)**(p + 1), x)/((p + 1)*(2*p + 1)*(-b*e + 2*c*d)**2) - 2*c*e*(d + e*x)**(m + 1)*(a + b*x + c*x**2)**(p + 1)*(m + 2*p + 2)/((p + 1)*(2*p + 1)*(-b*e + 2*c*d)**2) + (b + 2*c*x)*(d + e*x)**(m + 1)*(a + b*x + c*x**2)**p/((2*p + 1)*(-b*e + 2*c*d)))
    rubi.add(rule187)

    pattern188 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Greater(m, 0)), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p + 1)), CustomConstraint(lambda p, m: ~(RationalQ(p)) | Inequality(-1, LessEqual, p, Less, 0) | (Equal(m, S(1)/2) & Less(p, 0)) | (IntegerQ(m) & Less(0, m, 2*p))), CustomConstraint(lambda p, m: IntegerQ(m) | IntegerQ(2*p)))
    rule188 = ReplacementRule(pattern188, lambda e, m, c, p, d, x, a, b : m*(-b*e + 2*c*d)*Int((d + e*x)**(m - 1)*(a + b*x + c*x**2)**p, x)/(2*c*(m + 2*p + 1)) + (b + 2*c*x)*(d + e*x)**m*(a + b*x + c*x**2)**p/(2*c*(m + 2*p + 1)))
    rubi.add(rule188)

    pattern189 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, -1)), CustomConstraint(lambda p: IntegerQ(2*p)))
    rule189 = ReplacementRule(pattern189, lambda e, m, c, p, d, x, a, b : 2*c*(m + 2*p + 2)*Int((d + e*x)**(m + 1)*(a + b*x + c*x**2)**p, x)/((m + 1)*(-b*e + 2*c*d)) - (b + 2*c*x)*(d + e*x)**(m + 1)*(a + b*x + c*x**2)**p/((m + 1)*(-b*e + 2*c*d)))
    rubi.add(rule189)

    pattern190 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)))
    rule190 = ReplacementRule(pattern190, lambda e, m, c, p, d, x, a, b : c**(-IntPart(p))*(b/2 + c*x)**(-2*FracPart(p))*(a + b*x + c*x**2)**FracPart(p)*Int((b/2 + c*x)**(2*p)*(d + e*x)**m, x))
    rubi.add(rule190)

    pattern191 = Pattern(Integral((d_ + x_*WC('e', S(1)))**WC('m', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p: IntegerQ(p)))
    rule191 = ReplacementRule(pattern191, lambda e, m, c, p, d, x, a, b : Int((d + e*x)**(m + p)*(a/d + c*x/e)**p, x))
    rubi.add(rule191)

    pattern192 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(d_ + x_*WC('e', S(1)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda m, p, a, d: IntegerQ(p) | (PositiveQ(a) & PositiveQ(d) & IntegerQ(m + p))))
    rule192 = ReplacementRule(pattern192, lambda m, c, p, d, x, a, e : Int((d + e*x)**(m + p)*(a/d + c*x/e)**p, x))
    rubi.add(rule192)

    pattern193 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m: ZeroQ(m + p)))
    rule193 = ReplacementRule(pattern193, lambda e, m, c, p, d, x, a, b : e*(d + e*x)**(m - 1)*(a + b*x + c*x**2)**(p + 1)/(c*(p + 1)))
    rubi.add(rule193)

    pattern194 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m: ZeroQ(m + p)))
    rule194 = ReplacementRule(pattern194, lambda m, c, p, d, x, a, e : e*(a + c*x**2)**(p + 1)*(d + e*x)**(m - 1)/(c*(p + 1)))
    rubi.add(rule194)

    pattern195 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m: ZeroQ(m + 2*p + 2)))
    rule195 = ReplacementRule(pattern195, lambda e, m, c, p, d, x, a, b : e*(d + e*x)**m*(a + b*x + c*x**2)**(p + 1)/((p + 1)*(-b*e + 2*c*d)))
    rubi.add(rule195)

    pattern196 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m: ZeroQ(m + 2*p + 2)))
    rule196 = ReplacementRule(pattern196, lambda m, c, p, d, x, a, e : e*(a + c*x**2)**(p + 1)*(d + e*x)**m/(2*c*d*(p + 1)))
    rubi.add(rule196)

    pattern197 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**2*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)))
    rule197 = ReplacementRule(pattern197, lambda e, c, p, d, x, a, b : -e**2*(p + 2)*Int((a + b*x + c*x**2)**(p + 1), x)/(c*(p + 1)) + e*(d + e*x)*(a + b*x + c*x**2)**(p + 1)/(c*(p + 1)))
    rubi.add(rule197)

    pattern198 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**2, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)))
    rule198 = ReplacementRule(pattern198, lambda c, p, d, x, a, e : -e**2*(p + 2)*Int((a + c*x**2)**(p + 1), x)/(c*(p + 1)) + e*(a + c*x**2)**(p + 1)*(d + e*x)/(c*(p + 1)))
    rubi.add(rule198)

    pattern199 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda m: IntegerQ(m)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p, m: Less(0, -m, p) | Less(p, -m, 0)), CustomConstraint(lambda m: Unequal(m, 2)), CustomConstraint(lambda m: Unequal(m, -1)))
    rule199 = ReplacementRule(pattern199, lambda e, m, c, p, d, x, a, b : Int((a/d + c*x/e)**(-m)*(a + b*x + c*x**2)**(m + p), x))
    rubi.add(rule199)

    pattern200 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda m: IntegerQ(m)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p, m: Less(0, -m, p) | Less(p, -m, 0)), CustomConstraint(lambda m: Unequal(m, 2)), CustomConstraint(lambda m: Unequal(m, -1)))
    rule200 = ReplacementRule(pattern200, lambda m, c, p, d, x, a, e : a**(-m)*d**(2*m)*Int((a + c*x**2)**(m + p)*(d - e*x)**(-m), x))
    rubi.add(rule200)

    pattern201 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m: PositiveIntegerQ(Simplify(m + p))))
    rule201 = ReplacementRule(pattern201, lambda e, m, c, p, d, x, a, b : e*(d + e*x)**(m - 1)*(a + b*x + c*x**2)**(p + 1)/(c*(m + 2*p + 1)) + (-b*e + 2*c*d)*Int((d + e*x)**(m - 1)*(a + b*x + c*x**2)**p, x)*Simplify(m + p)/(c*(m + 2*p + 1)))
    rubi.add(rule201)

    pattern202 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m: PositiveIntegerQ(Simplify(m + p))))
    rule202 = ReplacementRule(pattern202, lambda m, c, p, d, x, a, e : 2*d*Int((a + c*x**2)**p*(d + e*x)**(m - 1), x)*Simplify(m + p)/(m + 2*p + 1) + e*(a + c*x**2)**(p + 1)*(d + e*x)**(m - 1)/(c*(m + 2*p + 1)))
    rubi.add(rule202)

    pattern203 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m: NegativeIntegerQ(Simplify(m + 2*p + 2))))
    rule203 = ReplacementRule(pattern203, lambda e, m, c, p, d, x, a, b : c*Int((d + e*x)**(m + 1)*(a + b*x + c*x**2)**p, x)*Simplify(m + 2*p + 2)/((-b*e + 2*c*d)*(m + p + 1)) - e*(d + e*x)**m*(a + b*x + c*x**2)**(p + 1)/((-b*e + 2*c*d)*(m + p + 1)))
    rubi.add(rule203)

    pattern204 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m: NegativeIntegerQ(Simplify(m + 2*p + 2))))
    rule204 = ReplacementRule(pattern204, lambda m, c, p, d, x, a, e : Int((a + c*x**2)**p*(d + e*x)**(m + 1), x)*Simplify(m + 2*p + 2)/(2*d*(m + p + 1)) - e*(a + c*x**2)**(p + 1)*(d + e*x)**m/(2*c*d*(m + p + 1)))
    rubi.add(rule204)

    pattern205 = Pattern(Integral(1/(sqrt(x_*WC('e', S(1)) + WC('d', S(0)))*sqrt(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)))
    rule205 = ReplacementRule(pattern205, lambda e, c, d, x, a, b : 2*e*Subst(Int(1/(-b*e + 2*c*d + e**2*x**2), x), x, Sqrt(a + b*x + c*x**2)/Sqrt(d + e*x)))
    rubi.add(rule205)

    pattern206 = Pattern(Integral(1/(sqrt(a_ + x_**2*WC('c', S(1)))*sqrt(d_ + x_*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)))
    rule206 = ReplacementRule(pattern206, lambda c, d, x, a, e : 2*e*Subst(Int(1/(2*c*d + e**2*x**2), x), x, Sqrt(a + c*x**2)/Sqrt(d + e*x)))
    rubi.add(rule206)

    pattern207 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda p, m: Less(m, -2) | ZeroQ(m + 2*p + 1)), CustomConstraint(lambda p, m: NonzeroQ(m + p + 1)), CustomConstraint(lambda p: IntegerQ(2*p)))
    rule207 = ReplacementRule(pattern207, lambda e, m, c, p, d, x, a, b : -c*p*Int((d + e*x)**(m + 2)*(a + b*x + c*x**2)**(p - 1), x)/(e**2*(m + p + 1)) + (d + e*x)**(m + 1)*(a + b*x + c*x**2)**p/(e*(m + p + 1)))
    rubi.add(rule207)

    pattern208 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda p, m: Less(m, -2) | ZeroQ(m + 2*p + 1)), CustomConstraint(lambda p, m: NonzeroQ(m + p + 1)), CustomConstraint(lambda p: IntegerQ(2*p)))
    rule208 = ReplacementRule(pattern208, lambda m, c, p, d, x, a, e : -c*p*Int((a + c*x**2)**(p - 1)*(d + e*x)**(m + 2), x)/(e**2*(m + p + 1)) + (a + c*x**2)**p*(d + e*x)**(m + 1)/(e*(m + p + 1)))
    rubi.add(rule208)

    pattern209 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda p, m: Equal(m + p + 1, 0) | Inequality(-2, LessEqual, m, Less, 0)), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p + 1)), CustomConstraint(lambda p: IntegerQ(2*p)))
    rule209 = ReplacementRule(pattern209, lambda e, m, c, p, d, x, a, b : (d + e*x)**(m + 1)*(a + b*x + c*x**2)**p/(e*(m + 2*p + 1)) - p*(-b*e + 2*c*d)*Int((d + e*x)**(m + 1)*(a + b*x + c*x**2)**(p - 1), x)/(e**2*(m + 2*p + 1)))
    rubi.add(rule209)

    pattern210 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda p, m: Equal(m + p + 1, 0) | Inequality(-2, LessEqual, m, Less, 0)), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p + 1)), CustomConstraint(lambda p: IntegerQ(2*p)))
    rule210 = ReplacementRule(pattern210, lambda m, c, p, d, x, a, e : -2*c*d*p*Int((a + c*x**2)**(p - 1)*(d + e*x)**(m + 1), x)/(e**2*(m + 2*p + 1)) + (a + c*x**2)**p*(d + e*x)**(m + 1)/(e*(m + 2*p + 1)))
    rubi.add(rule210)

    pattern211 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda m: Inequality(0, Less, m, LessEqual, 1)), CustomConstraint(lambda p: IntegerQ(2*p)))
    rule211 = ReplacementRule(pattern211, lambda e, m, c, p, d, x, a, b : -(-b*e + 2*c*d)*(m + 2*p + 2)*Int((d + e*x)**(m - 1)*(a + b*x + c*x**2)**(p + 1), x)/((p + 1)*(-4*a*c + b**2)) + (d + e*x)**m*(-b*e + 2*c*d)*(a + b*x + c*x**2)**(p + 1)/(e*(p + 1)*(-4*a*c + b**2)))
    rubi.add(rule211)

    pattern212 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda m: Inequality(0, Less, m, LessEqual, 1)), CustomConstraint(lambda p: IntegerQ(2*p)))
    rule212 = ReplacementRule(pattern212, lambda m, c, p, d, x, a, e : d*(m + 2*p + 2)*Int((a + c*x**2)**(p + 1)*(d + e*x)**(m - 1), x)/(2*a*(p + 1)) - d*(a + c*x**2)**(p + 1)*(d + e*x)**m/(2*a*e*(p + 1)))
    rubi.add(rule212)

    pattern213 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda m: Greater(m, 1)), CustomConstraint(lambda p: IntegerQ(2*p)))
    rule213 = ReplacementRule(pattern213, lambda e, m, c, p, d, x, a, b : -e**2*(m + p)*Int((d + e*x)**(m - 2)*(a + b*x + c*x**2)**(p + 1), x)/(c*(p + 1)) + e*(d + e*x)**(m - 1)*(a + b*x + c*x**2)**(p + 1)/(c*(p + 1)))
    rubi.add(rule213)

    pattern214 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda m: Greater(m, 1)), CustomConstraint(lambda p: IntegerQ(2*p)))
    rule214 = ReplacementRule(pattern214, lambda m, c, p, d, x, a, e : -e**2*(m + p)*Int((a + c*x**2)**(p + 1)*(d + e*x)**(m - 2), x)/(c*(p + 1)) + e*(a + c*x**2)**(p + 1)*(d + e*x)**(m - 1)/(c*(p + 1)))
    rubi.add(rule214)

    pattern215 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: GreaterEqual(m, 1)), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p + 1)), CustomConstraint(lambda p: IntegerQ(2*p)))
    rule215 = ReplacementRule(pattern215, lambda e, m, c, p, d, x, a, b : e*(d + e*x)**(m - 1)*(a + b*x + c*x**2)**(p + 1)/(c*(m + 2*p + 1)) + (m + p)*(-b*e + 2*c*d)*Int((d + e*x)**(m - 1)*(a + b*x + c*x**2)**p, x)/(c*(m + 2*p + 1)))
    rubi.add(rule215)

    pattern216 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: GreaterEqual(m, 1)), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p + 1)), CustomConstraint(lambda p: IntegerQ(2*p)))
    rule216 = ReplacementRule(pattern216, lambda m, c, p, d, x, a, e : 2*d*(m + p)*Int((a + c*x**2)**p*(d + e*x)**(m - 1), x)/(m + 2*p + 1) + e*(a + c*x**2)**(p + 1)*(d + e*x)**(m - 1)/(c*(m + 2*p + 1)))
    rubi.add(rule216)

    pattern217 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, 0)), CustomConstraint(lambda p, m: NonzeroQ(m + p + 1)), CustomConstraint(lambda p: IntegerQ(2*p)))
    rule217 = ReplacementRule(pattern217, lambda e, m, c, p, d, x, a, b : c*(m + 2*p + 2)*Int((d + e*x)**(m + 1)*(a + b*x + c*x**2)**p, x)/((-b*e + 2*c*d)*(m + p + 1)) - e*(d + e*x)**m*(a + b*x + c*x**2)**(p + 1)/((-b*e + 2*c*d)*(m + p + 1)))
    rubi.add(rule217)

    pattern218 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, 0)), CustomConstraint(lambda p, m: NonzeroQ(m + p + 1)), CustomConstraint(lambda p: IntegerQ(2*p)))
    rule218 = ReplacementRule(pattern218, lambda m, c, p, d, x, a, e : (m + 2*p + 2)*Int((a + c*x**2)**p*(d + e*x)**(m + 1), x)/(2*d*(m + p + 1)) - e*(a + c*x**2)**(p + 1)*(d + e*x)**m/(2*c*d*(m + p + 1)))
    rubi.add(rule218)

    pattern219 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule219 = ReplacementRule(pattern219, lambda e, m, c, p, x, b : x**(-m - p)*(e*x)**m*(b + c*x)**(-p)*(b*x + c*x**2)**p*Int(x**(m + p)*(b + c*x)**p, x))
    rubi.add(rule219)

    pattern220 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda a: PositiveQ(a)), CustomConstraint(lambda d: PositiveQ(d)))
    rule220 = ReplacementRule(pattern220, lambda m, c, p, d, x, a, e : Int((d + e*x)**(m + p)*(a/d + c*x/e)**p, x))
    rubi.add(rule220)

    pattern221 = Pattern(Integral((d_ + x_*WC('e', S(1)))**WC('m', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule221 = ReplacementRule(pattern221, lambda e, m, c, p, d, x, a, b : (d + e*x)**(-FracPart(p))*(a/d + c*x/e)**(-FracPart(p))*(a + b*x + c*x**2)**FracPart(p)*Int((d + e*x)**(m + p)*(a/d + c*x/e)**p, x))
    rubi.add(rule221)

    pattern222 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule222 = ReplacementRule(pattern222, lambda m, c, p, d, x, a, e : (a + c*x**2)**FracPart(p)*(d + e*x)**(-FracPart(p))*(a/d + c*x/e)**(-FracPart(p))*Int((d + e*x)**(m + p)*(a/d + c*x/e)**p, x))
    rubi.add(rule222)

    pattern223 = Pattern(Integral(1/((d_ + x_*WC('e', S(1)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda e, d, b, c: ZeroQ(-b*e + 2*c*d)))
    rule223 = ReplacementRule(pattern223, lambda e, c, d, x, a, b : b**2*Int((d + e*x)/(a + b*x + c*x**2), x)/(d**2*(-4*a*c + b**2)) - 4*b*c*Int(1/(b + 2*c*x), x)/(d*(-4*a*c + b**2)))
    rubi.add(rule223)

    pattern224 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda e, d, b, c: ZeroQ(-b*e + 2*c*d)), CustomConstraint(lambda p, m: ZeroQ(m + 2*p + 3)), CustomConstraint(lambda p: NonzeroQ(p + 1)))
    rule224 = ReplacementRule(pattern224, lambda e, m, c, p, d, x, a, b : 2*c*(d + e*x)**(m + 1)*(a + b*x + c*x**2)**(p + 1)/(e*(p + 1)*(-4*a*c + b**2)))
    rubi.add(rule224)

    pattern225 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda e, d, b, c: ZeroQ(-b*e + 2*c*d)), CustomConstraint(lambda p: PositiveIntegerQ(p)), CustomConstraint(lambda p, m: ~(Unequal(p, 1) & ZeroQ(m - 3))))
    rule225 = ReplacementRule(pattern225, lambda e, m, c, p, d, x, a, b : Int(ExpandIntegrand((d + e*x)**m*(a + b*x + c*x**2)**p, x), x))
    rubi.add(rule225)

    pattern226 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda e, d, b, c: ZeroQ(-b*e + 2*c*d)), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p + 3)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda m: Less(m, -1)), CustomConstraint(lambda p, m: ~(EvenQ(m) & Less(m + 2*p + 3, 0))), CustomConstraint(lambda p: IntegerQ(2*p)))
    rule226 = ReplacementRule(pattern226, lambda e, m, c, p, d, x, a, b : -b*p*Int((d + e*x)**(m + 2)*(a + b*x + c*x**2)**(p - 1), x)/(d*e*(m + 1)) + (d + e*x)**(m + 1)*(a + b*x + c*x**2)**p/(e*(m + 1)))
    rubi.add(rule226)

    pattern227 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda e, d, b, c: ZeroQ(-b*e + 2*c*d)), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p + 3)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda m: ~(RationalQ(m) & Less(m, -1))), CustomConstraint(lambda p, m: ~(PositiveIntegerQ(m/2 + S(-1)/2) & (~(IntegerQ(p)) | Less(m, 2*p)))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda p: IntegerQ(2*p)))
    rule227 = ReplacementRule(pattern227, lambda e, m, c, p, d, x, a, b : (d + e*x)**(m + 1)*(a + b*x + c*x**2)**p/(e*(m + 2*p + 1)) - d*p*(-4*a*c + b**2)*Int((d + e*x)**m*(a + b*x + c*x**2)**(p - 1), x)/(b*e*(m + 2*p + 1)))
    rubi.add(rule227)

    pattern228 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda e, d, b, c: ZeroQ(-b*e + 2*c*d)), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p + 3)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda m: Greater(m, 1)), CustomConstraint(lambda p: IntegerQ(2*p)))
    rule228 = ReplacementRule(pattern228, lambda e, m, c, p, d, x, a, b : -d*e*(m - 1)*Int((d + e*x)**(m - 2)*(a + b*x + c*x**2)**(p + 1), x)/(b*(p + 1)) + d*(d + e*x)**(m - 1)*(a + b*x + c*x**2)**(p + 1)/(b*(p + 1)))
    rubi.add(rule228)

    pattern229 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda e, d, b, c: ZeroQ(-b*e + 2*c*d)), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p + 3)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda m: ~(RationalQ(m) & Greater(m, 1))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda p: IntegerQ(2*p)))
    rule229 = ReplacementRule(pattern229, lambda e, m, c, p, d, x, a, b : -2*c*(m + 2*p + 3)*Int((d + e*x)**m*(a + b*x + c*x**2)**(p + 1), x)/((p + 1)*(-4*a*c + b**2)) + 2*c*(d + e*x)**(m + 1)*(a + b*x + c*x**2)**(p + 1)/(e*(p + 1)*(-4*a*c + b**2)))
    rubi.add(rule229)

    pattern230 = Pattern(Integral(1/((d_ + x_*WC('e', S(1)))*sqrt(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda e, d, b, c: ZeroQ(-b*e + 2*c*d)))
    rule230 = ReplacementRule(pattern230, lambda e, c, d, x, a, b : 4*c*Subst(Int(1/(-4*a*c*e + b**2*e + 4*c*e*x**2), x), x, Sqrt(a + b*x + c*x**2)))
    rubi.add(rule230)

    pattern231 = Pattern(Integral(1/(sqrt(d_ + x_*WC('e', S(1)))*sqrt(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda e, d, b, c: ZeroQ(-b*e + 2*c*d)), CustomConstraint(lambda a, b, c: NegativeQ(c/(-4*a*c + b**2))))
    rule231 = ReplacementRule(pattern231, lambda e, c, d, x, a, b : 4*Sqrt(-c/(-4*a*c + b**2))*Subst(Int(1/Sqrt(Simp(-b**2*x**4/(d**2*(-4*a*c + b**2)) + 1, x)), x), x, Sqrt(d + e*x))/e)
    rubi.add(rule231)

    pattern232 = Pattern(Integral(sqrt(d_ + x_*WC('e', S(1)))/sqrt(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda e, d, b, c: ZeroQ(-b*e + 2*c*d)), CustomConstraint(lambda a, b, c: NegativeQ(c/(-4*a*c + b**2))))
    rule232 = ReplacementRule(pattern232, lambda e, c, d, x, a, b : 4*Sqrt(-c/(-4*a*c + b**2))*Subst(Int(x**2/Sqrt(Simp(-b**2*x**4/(d**2*(-4*a*c + b**2)) + 1, x)), x), x, Sqrt(d + e*x))/e)
    rubi.add(rule232)

    pattern233 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_/sqrt(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda e, d, b, c: ZeroQ(-b*e + 2*c*d)), CustomConstraint(lambda m: EqQ(m**2, S(1)/4)))
    rule233 = ReplacementRule(pattern233, lambda e, m, c, d, x, a, b : Int((d + e*x)**m/Sqrt(-a*c/(-4*a*c + b**2) - b*c*x/(-4*a*c + b**2) - c**2*x**2/(-4*a*c + b**2)), x)*Sqrt(-c*(a + b*x + c*x**2)/(-4*a*c + b**2))/Sqrt(a + b*x + c*x**2))
    rubi.add(rule233)

    pattern234 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda e, d, b, c: ZeroQ(-b*e + 2*c*d)), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p + 3)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Greater(m, 1)), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p + 1)), CustomConstraint(lambda p, m: OddQ(m) | IntegerQ(2*p) | (IntegerQ(m) & RationalQ(p))))
    rule234 = ReplacementRule(pattern234, lambda e, m, c, p, d, x, a, b : 2*d*(d + e*x)**(m - 1)*(a + b*x + c*x**2)**(p + 1)/(b*(m + 2*p + 1)) + d**2*(m - 1)*(-4*a*c + b**2)*Int((d + e*x)**(m - 2)*(a + b*x + c*x**2)**p, x)/(b**2*(m + 2*p + 1)))
    rubi.add(rule234)

    pattern235 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda e, d, b, c: ZeroQ(-b*e + 2*c*d)), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p + 3)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, -1)), CustomConstraint(lambda p, m: IntegerQ(2*p) | (IntegerQ(m) & RationalQ(p)) | IntegerQ(m/2 + p + S(3)/2)))
    rule235 = ReplacementRule(pattern235, lambda e, m, c, p, d, x, a, b : b**2*(m + 2*p + 3)*Int((d + e*x)**(m + 2)*(a + b*x + c*x**2)**p, x)/(d**2*(m + 1)*(-4*a*c + b**2)) - 2*b*(d + e*x)**(m + 1)*(a + b*x + c*x**2)**(p + 1)/(d*(m + 1)*(-4*a*c + b**2)))
    rubi.add(rule235)

    pattern236 = Pattern(Integral((d_ + x_*WC('e', S(1)))**WC('m', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda e, d, b, c: ZeroQ(-b*e + 2*c*d)))
    rule236 = ReplacementRule(pattern236, lambda e, m, c, p, d, x, a, b : Subst(Int(x**m*(a - b**2/(4*c) + c*x**2/e**2)**p, x), x, d + e*x)/e)
    rubi.add(rule236)

    pattern237 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda p: PositiveIntegerQ(p)))
    rule237 = ReplacementRule(pattern237, lambda e, m, c, p, d, x, a, b : Int(ExpandIntegrand((d + e*x)**m*(a + b*x + c*x**2)**p, x), x))
    rubi.add(rule237)

    pattern238 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(d_ + x_*WC('e', S(1)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: PositiveIntegerQ(p)), CustomConstraint(lambda p, m: ~(Greater(p, 1) & ZeroQ(m - 1))))
    rule238 = ReplacementRule(pattern238, lambda m, c, p, d, x, a, e : Int(ExpandIntegrand((a + c*x**2)**p*(d + e*x)**m, x), x))
    rubi.add(rule238)

    pattern239 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))/(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda a, b, c: NiceSqrtQ(-4*a*c + b**2)))
    rule239 = ReplacementRule(pattern239, lambda e, c, d, x, a, b : With(List(Set(q, Rt(-4*a*c + b**2, 2))), (c*d - e*(b/2 - q/2))*Int(1/(b/2 + c*x - q/2), x)/q - (c*d - e*(b/2 + q/2))*Int(1/(b/2 + c*x + q/2), x)/q))
    rubi.add(rule239)

    pattern240 = Pattern(Integral((d_ + x_*WC('e', S(1)))/(a_ + x_**2*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda a, c: NiceSqrtQ(-a*c)))
    rule240 = ReplacementRule(pattern240, lambda c, d, x, a, e : With(List(Set(q, Rt(-a*c, 2))), (-c*d/(2*q) + e/2)*Int(1/(c*x + q), x) + (c*d/(2*q) + e/2)*Int(1/(c*x - q), x)))
    rubi.add(rule240)

    pattern241 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))/(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda a, b, c: ~(NiceSqrtQ(-4*a*c + b**2))))
    rule241 = ReplacementRule(pattern241, lambda e, c, d, x, a, b : e*Int((b + 2*c*x)/(a + b*x + c*x**2), x)/(2*c) + (-b*e + 2*c*d)*Int(1/(a + b*x + c*x**2), x)/(2*c))
    rubi.add(rule241)

    pattern242 = Pattern(Integral((d_ + x_*WC('e', S(1)))/(a_ + x_**2*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda a, c: ~(NiceSqrtQ(-a*c))))
    rule242 = ReplacementRule(pattern242, lambda c, d, x, a, e : d*Int(1/(a + c*x**2), x) + e*Int(x/(a + c*x**2), x))
    rubi.add(rule242)

    pattern243 = Pattern(Integral(sqrt(x_*WC('e', S(1)) + WC('d', S(0)))/(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)))
    rule243 = ReplacementRule(pattern243, lambda e, c, d, x, a, b : 2*e*Subst(Int(x**2/(a*e**2 - b*d*e + c*d**2 + c*x**4 - x**2*(-b*e + 2*c*d)), x), x, Sqrt(d + e*x)))
    rubi.add(rule243)

    pattern244 = Pattern(Integral(sqrt(d_ + x_*WC('e', S(1)))/(a_ + x_**2*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)))
    rule244 = ReplacementRule(pattern244, lambda c, d, x, a, e : 2*e*Subst(Int(x**2/(a*e**2 + c*d**2 - 2*c*d*x**2 + c*x**4), x), x, Sqrt(d + e*x)))
    rubi.add(rule244)

    pattern245 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_/(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda m: IntegerQ(m)), CustomConstraint(lambda m: Greater(m, 1)), CustomConstraint(lambda m, d: NonzeroQ(d) | Greater(m, 2)))
    rule245 = ReplacementRule(pattern245, lambda e, m, c, d, x, a, b : Int(PolynomialDivide((d + e*x)**m, a + b*x + c*x**2, x), x))
    rubi.add(rule245)

    pattern246 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_/(a_ + x_**2*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda m: IntegerQ(m)), CustomConstraint(lambda m: Greater(m, 1)), CustomConstraint(lambda m, d: NonzeroQ(d) | Greater(m, 2)))
    rule246 = ReplacementRule(pattern246, lambda m, c, d, x, a, e : Int(PolynomialDivide((d + e*x)**m, a + c*x**2, x), x))
    rubi.add(rule246)

    pattern247 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_/(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Greater(m, 1)))
    rule247 = ReplacementRule(pattern247, lambda e, m, c, d, x, a, b : e*(d + e*x)**(m - 1)/(c*(m - 1)) + Int((d + e*x)**(m - 2)*Simp(-a*e**2 + c*d**2 + e*x*(-b*e + 2*c*d), x)/(a + b*x + c*x**2), x)/c)
    rubi.add(rule247)

    pattern248 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_/(a_ + x_**2*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Greater(m, 1)))
    rule248 = ReplacementRule(pattern248, lambda m, c, d, x, a, e : e*(d + e*x)**(m - 1)/(c*(m - 1)) + Int((d + e*x)**(m - 2)*Simp(-a*e**2 + c*d**2 + 2*c*d*e*x, x)/(a + c*x**2), x)/c)
    rubi.add(rule248)

    pattern249 = Pattern(Integral(1/((x_*WC('e', S(1)) + WC('d', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)))
    rule249 = ReplacementRule(pattern249, lambda e, c, d, x, a, b : e**2*Int(1/(d + e*x), x)/(a*e**2 - b*d*e + c*d**2) + Int((-b*e + c*d - c*e*x)/(a + b*x + c*x**2), x)/(a*e**2 - b*d*e + c*d**2))
    rubi.add(rule249)

    pattern250 = Pattern(Integral(1/((a_ + x_**2*WC('c', S(1)))*(d_ + x_*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)))
    rule250 = ReplacementRule(pattern250, lambda c, d, x, a, e : e**2*Int(1/(d + e*x), x)/(a*e**2 + c*d**2) + Int((c*d - c*e*x)/(a + c*x**2), x)/(a*e**2 + c*d**2))
    rubi.add(rule250)

    pattern251 = Pattern(Integral(1/(sqrt(x_*WC('e', S(1)) + WC('d', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)))
    rule251 = ReplacementRule(pattern251, lambda e, c, d, x, a, b : 2*e*Subst(Int(1/(a*e**2 - b*d*e + c*d**2 + c*x**4 - x**2*(-b*e + 2*c*d)), x), x, Sqrt(d + e*x)))
    rubi.add(rule251)

    pattern252 = Pattern(Integral(1/((a_ + x_**2*WC('c', S(1)))*sqrt(d_ + x_*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)))
    rule252 = ReplacementRule(pattern252, lambda c, d, x, a, e : 2*e*Subst(Int(1/(a*e**2 + c*d**2 - 2*c*d*x**2 + c*x**4), x), x, Sqrt(d + e*x)))
    rubi.add(rule252)

    pattern253 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_/(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, -1)))
    rule253 = ReplacementRule(pattern253, lambda e, m, c, d, x, a, b : e*(d + e*x)**(m + 1)/((m + 1)*(a*e**2 - b*d*e + c*d**2)) + Int((d + e*x)**(m + 1)*Simp(-b*e + c*d - c*e*x, x)/(a + b*x + c*x**2), x)/(a*e**2 - b*d*e + c*d**2))
    rubi.add(rule253)

    pattern254 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_/(a_ + x_**2*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, -1)))
    rule254 = ReplacementRule(pattern254, lambda m, c, d, x, a, e : c*Int((d - e*x)*(d + e*x)**(m + 1)/(a + c*x**2), x)/(a*e**2 + c*d**2) + e*(d + e*x)**(m + 1)/((m + 1)*(a*e**2 + c*d**2)))
    rubi.add(rule254)

    pattern255 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_/(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda m: ~(IntegerQ(m))))
    rule255 = ReplacementRule(pattern255, lambda e, m, c, d, x, a, b : Int(ExpandIntegrand((d + e*x)**m, 1/(a + b*x + c*x**2), x), x))
    rubi.add(rule255)

    pattern256 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_/(a_ + x_**2*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda m: ~(IntegerQ(m))))
    rule256 = ReplacementRule(pattern256, lambda m, c, d, x, a, e : Int(ExpandIntegrand((d + e*x)**m, 1/(a + c*x**2), x), x))
    rubi.add(rule256)

    pattern257 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))/(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**(S(3)/2), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)))
    rule257 = ReplacementRule(pattern257, lambda e, c, d, x, a, b : -2*(-2*a*e + b*d + x*(-b*e + 2*c*d))/((-4*a*c + b**2)*Sqrt(a + b*x + c*x**2)))
    rubi.add(rule257)

    pattern258 = Pattern(Integral((d_ + x_*WC('e', S(1)))/(a_ + x_**2*WC('c', S(1)))**(S(3)/2), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)))
    rule258 = ReplacementRule(pattern258, lambda c, d, x, a, e : (-a*e + c*d*x)/(a*c*Sqrt(a + c*x**2)))
    rubi.add(rule258)

    pattern259 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda p: Unequal(p, S(-3)/2)))
    rule259 = ReplacementRule(pattern259, lambda e, c, p, d, x, a, b : -(2*p + 3)*(-b*e + 2*c*d)*Int((a + b*x + c*x**2)**(p + 1), x)/((p + 1)*(-4*a*c + b**2)) + (a + b*x + c*x**2)**(p + 1)*(-2*a*e + b*d + x*(-b*e + 2*c*d))/((p + 1)*(-4*a*c + b**2)))
    rubi.add(rule259)

    pattern260 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda p: Unequal(p, S(-3)/2)))
    rule260 = ReplacementRule(pattern260, lambda c, p, d, x, a, e : d*(2*p + 3)*Int((a + c*x**2)**(p + 1), x)/(2*a*(p + 1)) + (a + c*x**2)**(p + 1)*(a*e - c*d*x)/(2*a*c*(p + 1)))
    rubi.add(rule260)

    pattern261 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda p: ~(RationalQ(p) & LessEqual(p, -1))))
    rule261 = ReplacementRule(pattern261, lambda e, c, p, d, x, a, b : e*(a + b*x + c*x**2)**(p + 1)/(2*c*(p + 1)) + (-b*e + 2*c*d)*Int((a + b*x + c*x**2)**p, x)/(2*c))
    rubi.add(rule261)

    pattern262 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: ~(RationalQ(p) & LessEqual(p, -1))))
    rule262 = ReplacementRule(pattern262, lambda c, p, d, x, a, e : d*Int((a + c*x**2)**p, x) + e*(a + c*x**2)**(p + 1)/(2*c*(p + 1)))
    rubi.add(rule262)

    pattern263 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda e, d, b, a: ZeroQ(a*e + b*d)), CustomConstraint(lambda e, d, b, c: ZeroQ(b*e + c*d)), CustomConstraint(lambda p, m: PositiveIntegerQ(m - p + 1)), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule263 = ReplacementRule(pattern263, lambda e, m, c, p, d, x, a, b : (d + e*x)**FracPart(p)*(a*d + c*e*x**3)**(-FracPart(p))*(a + b*x + c*x**2)**FracPart(p)*Int((d + e*x)**(m - p)*(a*d + c*e*x**3)**p, x))
    rubi.add(rule263)

    pattern264 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_/sqrt(x_**2*WC('c', S(1)) + x_*WC('b', S(1))), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + c*d)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Equal(m**2, S(1)/4)), CustomConstraint(lambda c: NegativeQ(c)), CustomConstraint(lambda b: RationalQ(b)))
    rule264 = ReplacementRule(pattern264, lambda e, m, c, d, x, b : Int((d + e*x)**m/(Sqrt(b*x)*Sqrt(1 + c*x/b)), x))
    rubi.add(rule264)

    pattern265 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_/sqrt(x_**2*WC('c', S(1)) + x_*WC('b', S(1))), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + c*d)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Equal(m**2, S(1)/4)))
    rule265 = ReplacementRule(pattern265, lambda e, m, c, d, x, b : Int((d + e*x)**m/(Sqrt(x)*Sqrt(b + c*x)), x)*Sqrt(x)*Sqrt(b + c*x)/Sqrt(b*x + c*x**2))
    rubi.add(rule265)

    pattern266 = Pattern(Integral(x_**m_/sqrt(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda m: ZeroQ(m**2 + S(-1)/4)))
    rule266 = ReplacementRule(pattern266, lambda m, c, x, a, b : 2*Subst(Int(x**(2*m + 1)/Sqrt(a + b*x**2 + c*x**4), x), x, Sqrt(x)))
    rubi.add(rule266)

    pattern267 = Pattern(Integral((e_*x_)**m_/sqrt(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda m: ZeroQ(m**2 + S(-1)/4)))
    rule267 = ReplacementRule(pattern267, lambda m, c, b, x, a, e : x**(-m)*(e*x)**m*Int(x**m/Sqrt(a + b*x + c*x**2), x))
    rubi.add(rule267)

    pattern268 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_/sqrt(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda m: ZeroQ(m**2 + S(-1)/4)))
    rule268 = ReplacementRule(pattern268, lambda e, m, c, d, x, a, b : 2*(2*c*(d + e*x)/(-b*e + 2*c*d - e*Rt(-4*a*c + b**2, 2)))**(-m)*(d + e*x)**m*Rt(-4*a*c + b**2, 2)*Sqrt(-c*(a + b*x + c*x**2)/(-4*a*c + b**2))*Subst(Int((2*e*x**2*Rt(-4*a*c + b**2, 2)/(-b*e + 2*c*d - e*Rt(-4*a*c + b**2, 2)) + 1)**m/Sqrt(-x**2 + 1), x), x, Sqrt((b + 2*c*x + Rt(-4*a*c + b**2, 2))/(2*Rt(-4*a*c + b**2, 2))))/(c*Sqrt(a + b*x + c*x**2)))
    rubi.add(rule268)

    pattern269 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_/sqrt(a_ + x_**2*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda m: ZeroQ(m**2 + S(-1)/4)))
    rule269 = ReplacementRule(pattern269, lambda m, c, d, x, a, e : 2*a*(c*(d + e*x)/(-a*e*Rt(-c/a, 2) + c*d))**(-m)*(d + e*x)**m*Rt(-c/a, 2)*Sqrt(1 + c*x**2/a)*Subst(Int((2*a*e*x**2*Rt(-c/a, 2)/(-a*e*Rt(-c/a, 2) + c*d) + 1)**m/Sqrt(-x**2 + 1), x), x, Sqrt(-x*Rt(-c/a, 2)/2 + 1/2))/(c*Sqrt(a + c*x**2)))
    rubi.add(rule269)

    pattern270 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p, m: Equal(m + 2*p + 2, 0)), CustomConstraint(lambda p: Greater(p, 0)))
    rule270 = ReplacementRule(pattern270, lambda e, m, c, p, d, x, a, b : p*(-4*a*c + b**2)*Int((d + e*x)**(m + 2)*(a + b*x + c*x**2)**(p - 1), x)/(2*(m + 1)*(a*e**2 - b*d*e + c*d**2)) - (d + e*x)**(m + 1)*(a + b*x + c*x**2)**p*(-2*a*e + b*d + x*(-b*e + 2*c*d))/(2*(m + 1)*(a*e**2 - b*d*e + c*d**2)))
    rubi.add(rule270)

    pattern271 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p, m: Equal(m + 2*p + 2, 0)), CustomConstraint(lambda p: Greater(p, 0)))
    rule271 = ReplacementRule(pattern271, lambda m, c, p, d, x, a, e : -2*a*c*p*Int((a + c*x**2)**(p - 1)*(d + e*x)**(m + 2), x)/((m + 1)*(a*e**2 + c*d**2)) - (a + c*x**2)**p*(d + e*x)**(m + 1)*(-2*a*e + 2*c*d*x)/(2*(m + 1)*(a*e**2 + c*d**2)))
    rubi.add(rule271)

    pattern272 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p, m: Equal(m + 2*p + 2, 0)), CustomConstraint(lambda p: Less(p, -1)))
    rule272 = ReplacementRule(pattern272, lambda e, m, c, p, d, x, a, b : (d + e*x)**(m - 1)*(a + b*x + c*x**2)**(p + 1)*(-2*a*e + b*d + x*(-b*e + 2*c*d))/((p + 1)*(-4*a*c + b**2)) - 2*(2*p + 3)*(a*e**2 - b*d*e + c*d**2)*Int((d + e*x)**(m - 2)*(a + b*x + c*x**2)**(p + 1), x)/((p + 1)*(-4*a*c + b**2)))
    rubi.add(rule272)

    pattern273 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p, m: Equal(m + 2*p + 2, 0)), CustomConstraint(lambda p: Less(p, -1)))
    rule273 = ReplacementRule(pattern273, lambda m, c, p, d, x, a, e : (a + c*x**2)**(p + 1)*(d + e*x)**(m - 1)*(a*e - c*d*x)/(2*a*c*(p + 1)) + (2*p + 3)*(a*e**2 + c*d**2)*Int((a + c*x**2)**(p + 1)*(d + e*x)**(m - 2), x)/(2*a*c*(p + 1)))
    rubi.add(rule273)

    pattern274 = Pattern(Integral(1/((x_*WC('e', S(1)) + WC('d', S(0)))*sqrt(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)))
    rule274 = ReplacementRule(pattern274, lambda e, c, d, x, a, b : -2*Subst(Int(1/(4*a*e**2 - 4*b*d*e + 4*c*d**2 - x**2), x), x, (2*a*e - b*d - x*(-b*e + 2*c*d))/Sqrt(a + b*x + c*x**2)))
    rubi.add(rule274)

    pattern275 = Pattern(Integral(1/(sqrt(a_ + x_**2*WC('c', S(1)))*(d_ + x_*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)))
    rule275 = ReplacementRule(pattern275, lambda c, d, x, a, e : -Subst(Int(1/(a*e**2 + c*d**2 - x**2), x), x, (a*e - c*d*x)/Sqrt(a + c*x**2)))
    rubi.add(rule275)

    pattern276 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m: ZeroQ(m + 2*p + 2)))
    rule276 = ReplacementRule(pattern276, lambda e, m, c, p, d, x, a, b : ((b + 2*c*x + Rt(-4*a*c + b**2, 2))*(-b*e + 2*c*d + e*Rt(-4*a*c + b**2, 2))/((b + 2*c*x - Rt(-4*a*c + b**2, 2))*(-b*e + 2*c*d - e*Rt(-4*a*c + b**2, 2))))**(-p)*(d + e*x)**(m + 1)*(a + b*x + c*x**2)**p*(-b - 2*c*x + Rt(-4*a*c + b**2, 2))*Hypergeometric2F1(m + 1, -p, m + 2, -4*c*(d + e*x)*Rt(-4*a*c + b**2, 2)/((b + 2*c*x - Rt(-4*a*c + b**2, 2))*(-b*e + 2*c*d - e*Rt(-4*a*c + b**2, 2))))/((m + 1)*(-b*e + 2*c*d + e*Rt(-4*a*c + b**2, 2))))
    rubi.add(rule276)

    pattern277 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m: ZeroQ(m + 2*p + 2)))
    rule277 = ReplacementRule(pattern277, lambda m, c, p, d, x, a, e : ((c*d + e*Rt(-a*c, 2))*(c*x + Rt(-a*c, 2))/((c*d - e*Rt(-a*c, 2))*(c*x - Rt(-a*c, 2))))**(-p)*(a + c*x**2)**p*(d + e*x)**(m + 1)*(-c*x + Rt(-a*c, 2))*Hypergeometric2F1(m + 1, -p, m + 2, 2*c*(d + e*x)*Rt(-a*c, 2)/((c*d - e*Rt(-a*c, 2))*(-c*x + Rt(-a*c, 2))))/((m + 1)*(c*d + e*Rt(-a*c, 2))))
    rubi.add(rule277)

    pattern278 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda p, m: ZeroQ(m + 2*p + 3)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)))
    rule278 = ReplacementRule(pattern278, lambda e, m, c, p, d, x, a, b : m*(-b*e + 2*c*d)*Int((d + e*x)**(m - 1)*(a + b*x + c*x**2)**(p + 1), x)/((p + 1)*(-4*a*c + b**2)) + (b + 2*c*x)*(d + e*x)**m*(a + b*x + c*x**2)**(p + 1)/((p + 1)*(-4*a*c + b**2)))
    rubi.add(rule278)

    pattern279 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p, m: ZeroQ(m + 2*p + 3)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)))
    rule279 = ReplacementRule(pattern279, lambda m, c, p, d, x, a, e : -d*m*Int((a + c*x**2)**(p + 1)*(d + e*x)**(m - 1), x)/(2*a*(p + 1)) - x*(a + c*x**2)**(p + 1)*(d + e*x)**m/(2*a*(p + 1)))
    rubi.add(rule279)

    pattern280 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda p, m: ZeroQ(m + 2*p + 3)))
    rule280 = ReplacementRule(pattern280, lambda e, m, c, p, d, x, a, b : e*(d + e*x)**(m + 1)*(a + b*x + c*x**2)**(p + 1)/((m + 1)*(a*e**2 - b*d*e + c*d**2)) + (-b*e + 2*c*d)*Int((d + e*x)**(m + 1)*(a + b*x + c*x**2)**p, x)/(2*a*e**2 - 2*b*d*e + 2*c*d**2))
    rubi.add(rule280)

    pattern281 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p, m: ZeroQ(m + 2*p + 3)))
    rule281 = ReplacementRule(pattern281, lambda m, c, p, d, x, a, e : c*d*Int((a + c*x**2)**p*(d + e*x)**(m + 1), x)/(a*e**2 + c*d**2) + e*(a + c*x**2)**(p + 1)*(d + e*x)**(m + 1)/((m + 1)*(a*e**2 + c*d**2)))
    rubi.add(rule281)

    pattern282 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda p, m: IntegerQ(p) | (RationalQ(m) & Less(m, -1))), CustomConstraint(lambda m: NonzeroQ(m + 1)), CustomConstraint(lambda p, m: ~(NegativeIntegerQ(m + 2*p + 1))), CustomConstraint(lambda m, c, p, d, b, x, a, e: IntQuadraticQ(a, b, c, d, e, m, p, x)))
    rule282 = ReplacementRule(pattern282, lambda e, m, c, p, d, x, a, b : -p*Int((b + 2*c*x)*(d + e*x)**(m + 1)*(a + b*x + c*x**2)**(p - 1), x)/(e*(m + 1)) + (d + e*x)**(m + 1)*(a + b*x + c*x**2)**p/(e*(m + 1)))
    rubi.add(rule282)

    pattern283 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda p, m: IntegerQ(p) | (RationalQ(m) & Less(m, -1))), CustomConstraint(lambda m: NonzeroQ(m + 1)), CustomConstraint(lambda p, m: ~(NegativeIntegerQ(m + 2*p + 1))), CustomConstraint(lambda m, c, p, d, x, a, e: IntQuadraticQ(a, 0, c, d, e, m, p, x)))
    rule283 = ReplacementRule(pattern283, lambda m, c, p, d, x, a, e : -2*c*p*Int(x*(a + c*x**2)**(p - 1)*(d + e*x)**(m + 1), x)/(e*(m + 1)) + (a + c*x**2)**p*(d + e*x)**(m + 1)/(e*(m + 1)))
    rubi.add(rule283)

    pattern284 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p + 1)), CustomConstraint(lambda m: Less(m, 1) | ~(RationalQ(m))), CustomConstraint(lambda p, m: ~(NegativeIntegerQ(m + 2*p))), CustomConstraint(lambda m, c, p, d, b, x, a, e: IntQuadraticQ(a, b, c, d, e, m, p, x)))
    rule284 = ReplacementRule(pattern284, lambda e, m, c, p, d, x, a, b : -p*Int((d + e*x)**m*(a + b*x + c*x**2)**(p - 1)*Simp(-2*a*e + b*d + x*(-b*e + 2*c*d), x), x)/(e*(m + 2*p + 1)) + (d + e*x)**(m + 1)*(a + b*x + c*x**2)**p/(e*(m + 2*p + 1)))
    rubi.add(rule284)

    pattern285 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p + 1)), CustomConstraint(lambda m: Less(m, 1) | ~(RationalQ(m))), CustomConstraint(lambda p, m: ~(NegativeIntegerQ(m + 2*p))), CustomConstraint(lambda m, c, p, d, x, a, e: IntQuadraticQ(a, 0, c, d, e, m, p, x)))
    rule285 = ReplacementRule(pattern285, lambda m, c, p, d, x, a, e : 2*p*Int((a + c*x**2)**(p - 1)*(d + e*x)**m*Simp(a*e - c*d*x, x), x)/(e*(m + 2*p + 1)) + (a + c*x**2)**p*(d + e*x)**(m + 1)/(e*(m + 2*p + 1)))
    rubi.add(rule285)

    pattern286 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda m: Greater(m, 0)), CustomConstraint(lambda p, m: Less(m, 1) | (Unequal(m, 2) & NegativeIntegerQ(m + 2*p + 3))), CustomConstraint(lambda m, c, p, d, b, x, a, e: IntQuadraticQ(a, b, c, d, e, m, p, x)))
    rule286 = ReplacementRule(pattern286, lambda e, m, c, p, d, x, a, b : (b + 2*c*x)*(d + e*x)**m*(a + b*x + c*x**2)**(p + 1)/((p + 1)*(-4*a*c + b**2)) - Int((d + e*x)**(m - 1)*(a + b*x + c*x**2)**(p + 1)*(b*e*m + 2*c*d*(2*p + 3) + 2*c*e*x*(m + 2*p + 3)), x)/((p + 1)*(-4*a*c + b**2)))
    rubi.add(rule286)

    pattern287 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda m: Greater(m, 0)), CustomConstraint(lambda p, m: Less(m, 1) | (Unequal(m, 2) & NegativeIntegerQ(m + 2*p + 3))), CustomConstraint(lambda m, c, p, d, x, a, e: IntQuadraticQ(a, 0, c, d, e, m, p, x)))
    rule287 = ReplacementRule(pattern287, lambda m, c, p, d, x, a, e : -x*(a + c*x**2)**(p + 1)*(d + e*x)**m/(2*a*(p + 1)) + Int((a + c*x**2)**(p + 1)*(d + e*x)**(m - 1)*(d*(2*p + 3) + e*x*(m + 2*p + 3)), x)/(2*a*(p + 1)))
    rubi.add(rule287)

    pattern288 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda m: Greater(m, 1)), CustomConstraint(lambda m, c, p, d, b, x, a, e: IntQuadraticQ(a, b, c, d, e, m, p, x)))
    rule288 = ReplacementRule(pattern288, lambda e, m, c, p, d, x, a, b : (d + e*x)**(m - 1)*(a + b*x + c*x**2)**(p + 1)*(-2*a*e + b*d + x*(-b*e + 2*c*d))/((p + 1)*(-4*a*c + b**2)) + Int((d + e*x)**(m - 2)*(a + b*x + c*x**2)**(p + 1)*Simp(-2*c*d**2*(2*p + 3) + e*x*(b*e - 2*c*d)*(m + 2*p + 2) + e*(2*a*e*(m - 1) + b*d*(-m + 2*p + 4)), x), x)/((p + 1)*(-4*a*c + b**2)))
    rubi.add(rule288)

    pattern289 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda m: Greater(m, 1)), CustomConstraint(lambda m, c, p, d, x, a, e: IntQuadraticQ(a, 0, c, d, e, m, p, x)))
    rule289 = ReplacementRule(pattern289, lambda m, c, p, d, x, a, e : (a + c*x**2)**(p + 1)*(d + e*x)**(m - 1)*(a*e - c*d*x)/(2*a*c*(p + 1)) - Int((a + c*x**2)**(p + 1)*(d + e*x)**(m - 2)*Simp(a*e**2*(m - 1) - c*d**2*(2*p + 3) - c*d*e*x*(m + 2*p + 2), x), x)/(2*a*c*(p + 1)))
    rubi.add(rule289)

    pattern290 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda m, c, p, d, b, x, a, e: IntQuadraticQ(a, b, c, d, e, m, p, x)))
    rule290 = ReplacementRule(pattern290, lambda e, m, c, p, d, x, a, b : (d + e*x)**(m + 1)*(a + b*x + c*x**2)**(p + 1)*(2*a*c*e - b**2*e + b*c*d + c*x*(-b*e + 2*c*d))/((p + 1)*(-4*a*c + b**2)*(a*e**2 - b*d*e + c*d**2)) + Int((d + e*x)**m*(a + b*x + c*x**2)**(p + 1)*Simp(-2*a*c*e**2*(m + 2*p + 3) + b**2*e**2*(m + p + 2) + b*c*d*e*(-m + 2*p + 2) - 2*c**2*d**2*(2*p + 3) - c*e*x*(-b*e + 2*c*d)*(m + 2*p + 4), x), x)/((p + 1)*(-4*a*c + b**2)*(a*e**2 - b*d*e + c*d**2)))
    rubi.add(rule290)

    pattern291 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda m, c, p, d, x, a, e: IntQuadraticQ(a, 0, c, d, e, m, p, x)))
    rule291 = ReplacementRule(pattern291, lambda m, c, p, d, x, a, e : -(a + c*x**2)**(p + 1)*(d + e*x)**(m + 1)*(a*e + c*d*x)/(2*a*(p + 1)*(a*e**2 + c*d**2)) + Int((a + c*x**2)**(p + 1)*(d + e*x)**m*Simp(a*e**2*(m + 2*p + 3) + c*d**2*(2*p + 3) + c*d*e*x*(m + 2*p + 4), x), x)/(2*a*(p + 1)*(a*e**2 + c*d**2)))
    rubi.add(rule291)

    pattern292 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda m: If(RationalQ(m), Greater(m, 1), SumSimplerQ(m, -2))), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p + 1)), CustomConstraint(lambda m, c, p, d, b, x, a, e: IntQuadraticQ(a, b, c, d, e, m, p, x)))
    rule292 = ReplacementRule(pattern292, lambda e, m, c, p, d, x, a, b : e*(d + e*x)**(m - 1)*(a + b*x + c*x**2)**(p + 1)/(c*(m + 2*p + 1)) + Int((d + e*x)**(m - 2)*(a + b*x + c*x**2)**p*Simp(c*d**2*(m + 2*p + 1) + e*x*(m + p)*(-b*e + 2*c*d) - e*(a*e*(m - 1) + b*d*(p + 1)), x), x)/(c*(m + 2*p + 1)))
    rubi.add(rule292)

    pattern293 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda m: If(RationalQ(m), Greater(m, 1), SumSimplerQ(m, -2))), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p + 1)), CustomConstraint(lambda m, c, p, d, x, a, e: IntQuadraticQ(a, 0, c, d, e, m, p, x)))
    rule293 = ReplacementRule(pattern293, lambda m, c, p, d, x, a, e : e*(a + c*x**2)**(p + 1)*(d + e*x)**(m - 1)/(c*(m + 2*p + 1)) + Int((a + c*x**2)**p*(d + e*x)**(m - 2)*Simp(-a*e**2*(m - 1) + c*d**2*(m + 2*p + 1) + 2*c*d*e*x*(m + p), x), x)/(c*(m + 2*p + 1)))
    rubi.add(rule293)

    pattern294 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda e, m, c, p, d, x, a, b: (IntegerQ(p) & SumSimplerQ(m, 1) & NonzeroQ(m + 1)) | (NonzeroQ(m + 1) & NegativeIntegerQ(Simplify(m + 2*p + 3))) | (RationalQ(m) & Less(m, -1) & IntQuadraticQ(a, b, c, d, e, m, p, x))))
    rule294 = ReplacementRule(pattern294, lambda e, m, c, p, d, x, a, b : e*(d + e*x)**(m + 1)*(a + b*x + c*x**2)**(p + 1)/((m + 1)*(a*e**2 - b*d*e + c*d**2)) + Int((d + e*x)**(m + 1)*(a + b*x + c*x**2)**p*Simp(-b*e*(m + p + 2) + c*d*(m + 1) - c*e*x*(m + 2*p + 3), x), x)/((m + 1)*(a*e**2 - b*d*e + c*d**2)))
    rubi.add(rule294)

    pattern295 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda m, c, p, d, x, a, e: (IntegerQ(p) & SumSimplerQ(m, 1) & NonzeroQ(m + 1)) | (NonzeroQ(m + 1) & NegativeIntegerQ(Simplify(m + 2*p + 3))) | (RationalQ(m) & Less(m, -1) & IntQuadraticQ(a, 0, c, d, e, m, p, x))))
    rule295 = ReplacementRule(pattern295, lambda m, c, p, d, x, a, e : c*Int((a + c*x**2)**p*(d + e*x)**(m + 1)*Simp(d*(m + 1) - e*x*(m + 2*p + 3), x), x)/((m + 1)*(a*e**2 + c*d**2)) + e*(a + c*x**2)**(p + 1)*(d + e*x)**(m + 1)/((m + 1)*(a*e**2 + c*d**2)))
    rubi.add(rule295)

    pattern296 = Pattern(Integral(1/((x_*WC('e', S(1)) + WC('d', S(0)))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**(S(1)/3)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(-3*a*c*e**2 + b**2*e**2 - b*c*d*e + c**2*d**2)), CustomConstraint(lambda d, b, e, c: PosQ(c*e**2*(-b*e + 2*c*d))))
    rule296 = ReplacementRule(pattern296, lambda e, c, d, x, a, b : With(List(Set(q, Rt(3*c*e**2*(-b*e + 2*c*d), 3))), -c*e*ArcTan(1/Sqrt(3) + 2*(-b*e + c*d - c*e*x)/(q*(a + b*x + c*x**2)**(1/3)*Sqrt(3)))*Sqrt(3)/q**2 - 3*c*e*Log(d + e*x)/(2*q**2) + 3*c*e*Log(-b*e + c*d - c*e*x - q*(a + b*x + c*x**2)**(1/3))/(2*q**2)))
    rubi.add(rule296)

    pattern297 = Pattern(Integral(1/((a_ + x_**2*WC('c', S(1)))**(S(1)/3)*(d_ + x_*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda e, d, a, c: ZeroQ(-3*a*e**2 + c*d**2)))
    rule297 = ReplacementRule(pattern297, lambda c, d, x, a, e : With(List(Set(q, Rt(6*c**2*e**2/d**2, 3))), -c*e*ArcTan(2*c*(d - e*x)/(d*q*(a + c*x**2)**(1/3)*Sqrt(3)) + 1/Sqrt(3))*Sqrt(3)/(d**2*q**2) - 3*c*e*Log(d + e*x)/(2*d**2*q**2) + 3*c*e*Log(c*d - c*e*x - d*q*(a + c*x**2)**(1/3))/(2*d**2*q**2)))
    rubi.add(rule297)

    pattern298 = Pattern(Integral(1/((x_*WC('e', S(1)) + WC('d', S(0)))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**(S(1)/3)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(-3*a*c*e**2 + b**2*e**2 - b*c*d*e + c**2*d**2)), CustomConstraint(lambda d, b, e, c: NegQ(c*e**2*(-b*e + 2*c*d))))
    rule298 = ReplacementRule(pattern298, lambda e, c, d, x, a, b : With(List(Set(q, Rt(-3*c*e**2*(-b*e + 2*c*d), 3))), -c*e*ArcTan(1/Sqrt(3) - 2*(-b*e + c*d - c*e*x)/(q*(a + b*x + c*x**2)**(1/3)*Sqrt(3)))*Sqrt(3)/q**2 - 3*c*e*Log(d + e*x)/(2*q**2) + 3*c*e*Log(-b*e + c*d - c*e*x + q*(a + b*x + c*x**2)**(1/3))/(2*q**2)))
    rubi.add(rule298)

    pattern299 = Pattern(Integral(1/((x_*WC('e', S(1)) + WC('d', S(0)))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**(S(1)/3)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(9*a*c*e**2 - 2*b**2*e**2 - b*c*d*e + c**2*d**2)))
    rule299 = ReplacementRule(pattern299, lambda e, c, d, x, a, b : With(List(Set(q, Rt(-4*a*c + b**2, 2))), (b + 2*c*x - q)**(1/3)*(b + 2*c*x + q)**(1/3)*Int(1/((d + e*x)*(b + 2*c*x - q)**(1/3)*(b + 2*c*x + q)**(1/3)), x)/(a + b*x + c*x**2)**(1/3)))
    rubi.add(rule299)

    pattern300 = Pattern(Integral(1/((a_ + x_**2*WC('c', S(1)))**(S(1)/4)*(d_ + x_*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)))
    rule300 = ReplacementRule(pattern300, lambda c, d, x, a, e : d*Int(1/((a + c*x**2)**(1/4)*(d**2 - e**2*x**2)), x) - e*Int(x/((a + c*x**2)**(1/4)*(d**2 - e**2*x**2)), x))
    rubi.add(rule300)

    pattern301 = Pattern(Integral(1/((a_ + x_**2*WC('c', S(1)))**(S(3)/4)*(d_ + x_*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)))
    rule301 = ReplacementRule(pattern301, lambda c, d, x, a, e : d*Int(1/((a + c*x**2)**(3/4)*(d**2 - e**2*x**2)), x) - e*Int(x/((a + c*x**2)**(3/4)*(d**2 - e**2*x**2)), x))
    rubi.add(rule301)

    pattern302 = Pattern(Integral((x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_/(x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: PositiveQ(4*a - b**2/c)), CustomConstraint(lambda p: IntegerQ(4*p)))
    rule302 = ReplacementRule(pattern302, lambda e, c, p, d, x, a, b : (-4*c/(-4*a*c + b**2))**(-p)*Subst(Int(Simp(-x**2/(-4*a*c + b**2) + 1, x)**p/Simp(-b*e + 2*c*d + e*x, x), x), x, b + 2*c*x))
    rubi.add(rule302)

    pattern303 = Pattern(Integral((x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_/(x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: ~(PositiveQ(4*a - b**2/c))), CustomConstraint(lambda p: IntegerQ(4*p)))
    rule303 = ReplacementRule(pattern303, lambda e, c, p, d, x, a, b : (-c*(a + b*x + c*x**2)/(-4*a*c + b**2))**(-p)*(a + b*x + c*x**2)**p*Int((-a*c/(-4*a*c + b**2) - b*c*x/(-4*a*c + b**2) - c**2*x**2/(-4*a*c + b**2))**p/(d + e*x), x))
    rubi.add(rule303)

    pattern304 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda a: PositiveQ(a)), CustomConstraint(lambda c: NegativeQ(c)))
    rule304 = ReplacementRule(pattern304, lambda m, c, p, d, x, a, e : Int((d + e*x)**m*(-x*Rt(-c, 2) + Rt(a, 2))**p*(x*Rt(-c, 2) + Rt(a, 2))**p, x))
    rubi.add(rule304)

    pattern305 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda m: NegativeIntegerQ(m)))
    rule305 = ReplacementRule(pattern305, lambda e, m, c, p, d, x, a, b : With(List(Set(q, Rt(-4*a*c + b**2, 2))), -(e*(b + 2*c*x - q)/(2*c*(d + e*x)))**(-p)*(e*(b + 2*c*x + q)/(2*c*(d + e*x)))**(-p)*(a + b*x + c*x**2)**p*(1/(d + e*x))**(2*p)*Subst(Int(x**(-m - 2*p - 2)*Simp(-x*(d - e*(b - q)/(2*c)) + 1, x)**p*Simp(-x*(d - e*(b + q)/(2*c)) + 1, x)**p, x), x, 1/(d + e*x))/e))
    rubi.add(rule305)

    pattern306 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda m: NegativeIntegerQ(m)))
    rule306 = ReplacementRule(pattern306, lambda m, c, p, d, x, a, e : With(List(Set(q, Rt(-a*c, 2))), -(e*(c*x + q)/(c*(d + e*x)))**(-p)*(-e*(-c*x + q)/(c*(d + e*x)))**(-p)*(a + c*x**2)**p*(1/(d + e*x))**(2*p)*Subst(Int(x**(-m - 2*p - 2)*Simp(-x*(d - e*q/c) + 1, x)**p*Simp(-x*(d + e*q/c) + 1, x)**p, x), x, 1/(d + e*x))/e))
    rubi.add(rule306)

    pattern307 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule307 = ReplacementRule(pattern307, lambda e, m, c, p, d, x, a, b : With(List(Set(q, Rt(-4*a*c + b**2, 2))), (-(d + e*x)/(d - e*(b - q)/(2*c)) + 1)**(-p)*(-(d + e*x)/(d - e*(b + q)/(2*c)) + 1)**(-p)*(a + b*x + c*x**2)**p*Subst(Int(x**m*Simp(-x/(d - e*(b - q)/(2*c)) + 1, x)**p*Simp(-x/(d - e*(b + q)/(2*c)) + 1, x)**p, x), x, d + e*x)/e))
    rubi.add(rule307)

    pattern308 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule308 = ReplacementRule(pattern308, lambda m, c, p, d, x, a, e : With(List(Set(q, Rt(-a*c, 2))), (a + c*x**2)**p*(-(d + e*x)/(d - e*q/c) + 1)**(-p)*(-(d + e*x)/(d + e*q/c) + 1)**(-p)*Subst(Int(x**m*Simp(-x/(d - e*q/c) + 1, x)**p*Simp(-x/(d + e*q/c) + 1, x)**p, x), x, d + e*x)/e))
    rubi.add(rule308)

    pattern309 = Pattern(Integral((u_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(a_ + u_**2*WC('c', S(1)) + u_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule309 = ReplacementRule(pattern309, lambda u, e, m, c, p, d, x, a, b : Subst(Int((d + e*x)**m*(a + b*x + c*x**2)**p, x), x, u)/Coefficient(u, x, 1))
    rubi.add(rule309)

    pattern310 = Pattern(Integral((a_ + u_**2*WC('c', S(1)))**WC('p', S(1))*(u_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule310 = ReplacementRule(pattern310, lambda u, m, c, p, d, x, a, e : Subst(Int((a + c*x**2)**p*(d + e*x)**m, x), x, u)/Coefficient(u, x, 1))
    rubi.add(rule310)

    pattern311 = Pattern(Integral(x_**WC('n', S(1))*(a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n: IntegerQ(n)), CustomConstraint(lambda p: ~(IntegerQ(2*p))))
    rule311 = ReplacementRule(pattern311, lambda c, p, d, x, n, a, e : d*Int(x**n*(a + c*x**2)**p, x) + e*Int(x**(n + 1)*(a + c*x**2)**p, x))
    rubi.add(rule311)

    pattern312 = Pattern(Integral((f_ + x_*WC('g', S(1)))*(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))/sqrt(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)), CustomConstraint(lambda f, g, b, c: ZeroQ(-b*g + 2*c*f)))
    rule312 = ReplacementRule(pattern312, lambda e, m, c, d, f, x, a, g, b : (f + g*x)*Int((d + e*x)**m, x)/Sqrt(a + b*x + c*x**2))
    rubi.add(rule312)

    pattern313 = Pattern(Integral((f_ + x_*WC('g', S(1)))*(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)), CustomConstraint(lambda f, g, b, c: ZeroQ(-b*g + 2*c*f)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m: ZeroQ(m + 2*p + 3)))
    rule313 = ReplacementRule(pattern313, lambda e, m, c, p, d, f, x, a, g, b : -f*g*(d + e*x)**(m + 1)*(a + b*x + c*x**2)**(p + 1)/(b*(p + 1)*(-d*g + e*f)))
    rubi.add(rule313)

    pattern314 = Pattern(Integral((f_ + x_*WC('g', S(1)))*(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)), CustomConstraint(lambda f, g, b, c: ZeroQ(-b*g + 2*c*f)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda m: Greater(m, 0)))
    rule314 = ReplacementRule(pattern314, lambda e, m, c, p, d, f, x, a, g, b : -e*g*m*Int((d + e*x)**(m - 1)*(a + b*x + c*x**2)**(p + 1), x)/(2*c*(p + 1)) + g*(d + e*x)**m*(a + b*x + c*x**2)**(p + 1)/(2*c*(p + 1)))
    rubi.add(rule314)

    pattern315 = Pattern(Integral((f_ + x_*WC('g', S(1)))*(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)), CustomConstraint(lambda f, g, b, c: ZeroQ(-b*g + 2*c*f)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda m: ~(RationalQ(m) & Greater(m, 0))))
    rule315 = ReplacementRule(pattern315, lambda e, m, c, p, d, f, x, a, g, b : e*f*g*(m + 2*p + 3)*Int((d + e*x)**m*(a + b*x + c*x**2)**(p + 1), x)/(b*(p + 1)*(-d*g + e*f)) - f*g*(d + e*x)**(m + 1)*(a + b*x + c*x**2)**(p + 1)/(b*(p + 1)*(-d*g + e*f)))
    rubi.add(rule315)

    pattern316 = Pattern(Integral((f_ + x_*WC('g', S(1)))*(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)), CustomConstraint(lambda f, g, b, c: ZeroQ(-b*g + 2*c*f)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, -1)), CustomConstraint(lambda p: NonzeroQ(2*p + 1)), CustomConstraint(lambda p, m: ~(RationalQ(p)) | (Greater(p, 0) & (~(IntegerQ(m)) | GreaterEqual(m, -2*p - 2) | Less(m, -4*p - 4)))))
    rule316 = ReplacementRule(pattern316, lambda e, m, c, p, d, f, x, a, g, b : -g*(2*p + 1)*Int((d + e*x)**(m + 1)*(a + b*x + c*x**2)**p, x)/(e*(m + 1)) + (d + e*x)**(m + 1)*(f + g*x)*(a + b*x + c*x**2)**p/(e*(m + 1)))
    rubi.add(rule316)

    pattern317 = Pattern(Integral((f_ + x_*WC('g', S(1)))*(x_*WC('e', S(1)) + WC('d', S(0)))**m_*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)), CustomConstraint(lambda f, g, b, c: ZeroQ(-b*g + 2*c*f)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, -1)), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p + 2)))
    rule317 = ReplacementRule(pattern317, lambda e, m, c, p, d, f, x, a, g, b : -g*(m + 2*p + 3)*Int((d + e*x)**(m + 1)*(f + g*x)*(a + b*x + c*x**2)**p, x)/((m + 1)*(-d*g + e*f)) + 2*f*g*(d + e*x)**(m + 1)*(a + b*x + c*x**2)**(p + 1)/(b*(m + 1)*(-d*g + e*f)))
    rubi.add(rule317)

    pattern318 = Pattern(Integral((f_ + x_*WC('g', S(1)))*(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)), CustomConstraint(lambda f, g, b, c: ZeroQ(-b*g + 2*c*f)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda m: PositiveIntegerQ(m)), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p + 2)), CustomConstraint(lambda p, m: ~(RationalQ(p)) | Less(m, 2*p + 2)))
    rule318 = ReplacementRule(pattern318, lambda e, m, c, p, d, f, x, a, g, b : -b*m*(-d*g + e*f)*Int((d + e*x)**(m - 1)*(f + g*x)*(a + b*x + c*x**2)**p, x)/(2*c*f*(m + 2*p + 2)) + g*(d + e*x)**m*(a + b*x + c*x**2)**(p + 1)/(c*(m + 2*p + 2)))
    rubi.add(rule318)

    pattern319 = Pattern(Integral((f_ + x_*WC('g', S(1)))*(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)), CustomConstraint(lambda f, g, b, c: ZeroQ(-b*g + 2*c*f)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p + 2)))
    rule319 = ReplacementRule(pattern319, lambda e, m, c, p, d, f, x, a, g, b : (d + e*x)**(m + 1)*(f + g*x)*(a + b*x + c*x**2)**p/(e*(m + 2*p + 2)) + (2*p + 1)*(-d*g + e*f)*Int((d + e*x)**m*(a + b*x + c*x**2)**p, x)/(e*(m + 2*p + 2)))
    rubi.add(rule319)

    pattern320 = Pattern(Integral((x_*WC('g', S(1)) + WC('f', S(0)))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**p_/(x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)), CustomConstraint(lambda f, g, b, c: NonzeroQ(-b*g + 2*c*f)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, 0)))
    rule320 = ReplacementRule(pattern320, lambda e, c, p, d, f, x, a, g, b : (-b*g + 2*c*f)*Int((a + b*x + c*x**2)**p, x)/(-b*e + 2*c*d) - (-d*g + e*f)*Int((b + 2*c*x)*(a + b*x + c*x**2)**p/(d + e*x), x)/(-b*e + 2*c*d))
    rubi.add(rule320)

    pattern321 = Pattern(Integral((f_ + x_*WC('g', S(1)))*(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)), CustomConstraint(lambda f, g, b, c: NonzeroQ(-b*g + 2*c*f)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda e, m, c, p, d, b: (NonzeroQ(m + 1) & ZeroQ(m + 2*p + 2)) | (NonzeroQ(m - 1) & ZeroQ(-b*e + 2*c*d))))
    rule321 = ReplacementRule(pattern321, lambda e, m, c, p, d, f, x, a, g, b : g*Int((d + e*x)**(m + 1)*(a + b*x + c*x**2)**p, x)/e + (-d*g + e*f)*Int((d + e*x)**m*(a + b*x + c*x**2)**p, x)/e)
    rubi.add(rule321)

    pattern322 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0)))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)), CustomConstraint(lambda f, g, b, c: NonzeroQ(-b*g + 2*c*f)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda p, m: ZeroQ(m + 2*p + 3)))
    rule322 = ReplacementRule(pattern322, lambda m, c, p, d, b, f, x, a, g, e : (-b*g + 2*c*f)*Int((d + e*x)**(m + 1)*(a + b*x + c*x**2)**p, x)/(-b*e + 2*c*d) - (-d*g + e*f)*Int((b + 2*c*x)*(d + e*x)**m*(a + b*x + c*x**2)**p, x)/(-b*e + 2*c*d))
    rubi.add(rule322)

    pattern323 = Pattern(Integral((f_ + x_*WC('g', S(1)))*(x_*WC('e', S(1)) + WC('d', S(0)))**m_*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)), CustomConstraint(lambda f, g, b, c: NonzeroQ(-b*g + 2*c*f)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p + 2)), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p + 3)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, -1)))
    rule323 = ReplacementRule(pattern323, lambda e, m, c, p, d, f, x, a, g, b : (b + 2*c*x)*(d + e*x)**(m + 1)*(d*g - e*f)*(a + b*x + c*x**2)**p/(e*(m + 1)*(-b*e + 2*c*d)) + (2*c*e*f*(m + 2*p + 2) - g*(b*e*(m + 1) + 2*c*d*(2*p + 1)))*Int((d + e*x)**(m + 1)*(a + b*x + c*x**2)**p, x)/(e*(m + 1)*(-b*e + 2*c*d)))
    rubi.add(rule323)

    pattern324 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0)))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)), CustomConstraint(lambda f, g, b, c: NonzeroQ(-b*g + 2*c*f)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda e, d, b, c: NonzeroQ(-b*e + 2*c*d)), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p + 2)), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p + 3)), CustomConstraint(lambda m: ~(RationalQ(m) & Less(m, -1))), CustomConstraint(lambda m, d, f, x, g, e: ~(ZeroQ(m - 1) & SimplerQ(f + g*x, d + e*x))))
    rule324 = ReplacementRule(pattern324, lambda m, c, p, d, b, f, x, a, g, e : g*(b + 2*c*x)*(d + e*x)**(m + 1)*(a + b*x + c*x**2)**p/(2*c*e*(m + 2*p + 2)) + (2*c*e*f*(m + 2*p + 2) - g*(b*e*(m + 1) + 2*c*(2*d*p + d)))*Int((d + e*x)**m*(a + b*x + c*x**2)**p, x)/(2*c*e*(m + 2*p + 2)))
    rubi.add(rule324)

    pattern325 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule325 = ReplacementRule(pattern325, lambda m, c, p, d, b, f, x, n, a, g, e : c**(-IntPart(p))*(b/2 + c*x)**(-2*FracPart(p))*(a + b*x + c*x**2)**FracPart(p)*Int((b/2 + c*x)**(2*p)*(d + e*x)**m*(f + g*x)**n, x))
    rubi.add(rule325)

    pattern326 = Pattern(Integral((d_ + x_*WC('e', S(1)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p: IntegerQ(p)))
    rule326 = ReplacementRule(pattern326, lambda m, c, p, d, b, f, x, n, a, g, e : Int((d + e*x)**(m + p)*(f + g*x)**n*(a/d + c*x/e)**p, x))
    rubi.add(rule326)

    pattern327 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(d_ + x_*WC('e', S(1)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda m, p, a, d: IntegerQ(p) | (PositiveQ(a) & PositiveQ(d) & ZeroQ(m + p))))
    rule327 = ReplacementRule(pattern327, lambda m, c, p, d, f, x, n, a, g, e : Int((d + e*x)**(m + p)*(f + g*x)**n*(a/d + c*x/e)**p, x))
    rubi.add(rule327)

    pattern328 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda m: NegativeIntegerQ(m)), CustomConstraint(lambda p: ~(IntegerQ(2*p))))
    rule328 = ReplacementRule(pattern328, lambda m, c, p, d, b, f, x, n, a, g, e : d**m*e**m*Int((f + g*x)**n*(a*e + c*d*x)**(-m)*(a + b*x + c*x**2)**(m + p), x))
    rubi.add(rule328)

    pattern329 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda m: NegativeIntegerQ(m)), CustomConstraint(lambda p: ~(IntegerQ(2*p))))
    rule329 = ReplacementRule(pattern329, lambda m, c, p, d, f, x, n, a, g, e : d**m*e**m*Int((a + c*x**2)**(m + p)*(f + g*x)**n*(a*e + c*d*x)**(-m), x))
    rubi.add(rule329)

    pattern330 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda e, m, c, p, d, f, g, b: ZeroQ(e*(p + 1)*(-b*g + 2*c*f) + m*(c*e*f + g*(-b*e + c*d)))))
    rule330 = ReplacementRule(pattern330, lambda m, c, p, d, b, f, x, a, g, e : g*(d + e*x)**m*(a + b*x + c*x**2)**(p + 1)/(c*(m + 2*p + 2)))
    rubi.add(rule330)

    pattern331 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda m, p, d, f, g, e: ZeroQ(2*e*f*(p + 1) + m*(d*g + e*f))))
    rule331 = ReplacementRule(pattern331, lambda m, c, p, d, f, x, a, g, e : g*(a + c*x**2)**(p + 1)*(d + e*x)**m/(c*(m + 2*p + 2)))
    rubi.add(rule331)

    pattern332 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda m: Greater(m, 0)))
    rule332 = ReplacementRule(pattern332, lambda m, c, p, d, b, f, x, a, g, e : -e*(e*(p + 1)*(-b*g + 2*c*f) + m*(c*e*f + g*(-b*e + c*d)))*Int((d + e*x)**(m - 1)*(a + b*x + c*x**2)**(p + 1), x)/(c*(p + 1)*(-b*e + 2*c*d)) + (d + e*x)**m*(c*e*f + g*(-b*e + c*d))*(a + b*x + c*x**2)**(p + 1)/(c*(p + 1)*(-b*e + 2*c*d)))
    rubi.add(rule332)

    pattern333 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda m: Greater(m, 0)))
    rule333 = ReplacementRule(pattern333, lambda m, c, p, d, f, x, a, g, e : -e*(2*e*f*(p + 1) + m*(d*g + e*f))*Int((a + c*x**2)**(p + 1)*(d + e*x)**(m - 1), x)/(2*c*d*(p + 1)) + (a + c*x**2)**(p + 1)*(d + e*x)**m*(d*g + e*f)/(2*c*d*(p + 1)))
    rubi.add(rule333)

    pattern334 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p: SumSimplerQ(p, 1)), CustomConstraint(lambda m: SumSimplerQ(m, -1)), CustomConstraint(lambda p: NonzeroQ(p + 1)))
    rule334 = ReplacementRule(pattern334, lambda m, c, p, d, b, f, x, a, g, e : -e*(e*(p + 1)*(-b*g + 2*c*f) + m*(c*e*f + g*(-b*e + c*d)))*Int((d + e*x)**Simplify(m - 1)*(a + b*x + c*x**2)**Simplify(p + 1), x)/(c*(p + 1)*(-b*e + 2*c*d)) + (d + e*x)**m*(c*e*f + g*(-b*e + c*d))*(a + b*x + c*x**2)**(p + 1)/(c*(p + 1)*(-b*e + 2*c*d)))
    rubi.add(rule334)

    pattern335 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: SumSimplerQ(p, 1)), CustomConstraint(lambda m: SumSimplerQ(m, -1)), CustomConstraint(lambda p: NonzeroQ(p + 1)))
    rule335 = ReplacementRule(pattern335, lambda m, c, p, d, f, x, a, g, e : -e*(2*e*f*(p + 1) + m*(d*g + e*f))*Int((a + c*x**2)**Simplify(p + 1)*(d + e*x)**Simplify(m - 1), x)/(2*c*d*(p + 1)) + (a + c*x**2)**(p + 1)*(d + e*x)**m*(d*g + e*f)/(2*c*d*(p + 1)))
    rubi.add(rule335)

    pattern336 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p, m: ZeroQ(m + 2*p + 2) | (Less(m, 0) & Less(p, -1) & RationalQ(m, p)) | (RationalQ(m) & Less(m, -1) & ~(PositiveIntegerQ(m + p + 1)))), CustomConstraint(lambda p, m: NonzeroQ(m + p + 1)))
    rule336 = ReplacementRule(pattern336, lambda m, c, p, d, b, f, x, a, g, e : (d + e*x)**m*(d*g - e*f)*(a + b*x + c*x**2)**(p + 1)/((-b*e + 2*c*d)*(m + p + 1)) + (e*(p + 1)*(-b*g + 2*c*f) + m*(c*e*f + g*(-b*e + c*d)))*Int((d + e*x)**(m + 1)*(a + b*x + c*x**2)**p, x)/(e*(-b*e + 2*c*d)*(m + p + 1)))
    rubi.add(rule336)

    pattern337 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p, m: ZeroQ(m + 2*p + 2) | (Less(m, 0) & Less(p, -1) & RationalQ(m, p)) | (RationalQ(m) & Less(m, -1) & ~(PositiveIntegerQ(m + p + 1)))), CustomConstraint(lambda p, m: NonzeroQ(m + p + 1)))
    rule337 = ReplacementRule(pattern337, lambda m, c, p, d, f, x, a, g, e : (a + c*x**2)**(p + 1)*(d + e*x)**m*(d*g - e*f)/(2*c*d*(m + p + 1)) + (2*c*e*f*(p + 1) + m*(c*d*g + c*e*f))*Int((a + c*x**2)**p*(d + e*x)**(m + 1), x)/(2*c*d*e*(m + p + 1)))
    rubi.add(rule337)

    pattern338 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p + 2)))
    rule338 = ReplacementRule(pattern338, lambda m, c, p, d, b, f, x, a, g, e : g*(d + e*x)**m*(a + b*x + c*x**2)**(p + 1)/(c*(m + 2*p + 2)) + (e*(p + 1)*(-b*g + 2*c*f) + m*(c*e*f + g*(-b*e + c*d)))*Int((d + e*x)**m*(a + b*x + c*x**2)**p, x)/(c*e*(m + 2*p + 2)))
    rubi.add(rule338)

    pattern339 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p + 2)))
    rule339 = ReplacementRule(pattern339, lambda m, c, p, d, f, x, a, g, e : (2*e*f*(p + 1) + m*(d*g + e*f))*Int((a + c*x**2)**p*(d + e*x)**m, x)/(e*(m + 2*p + 2)) + g*(a + c*x**2)**(p + 1)*(d + e*x)**m/(c*(m + 2*p + 2)))
    rubi.add(rule339)

    pattern340 = Pattern(Integral(x_**2*(a_ + x_**2*WC('c', S(1)))**p_*(f_ + x_*WC('g', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda c, a, g, f: ZeroQ(a*g**2 + c*f**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -2)))
    rule340 = ReplacementRule(pattern340, lambda c, p, f, x, a, g : x**2*(a + c*x**2)**(p + 1)*(a*g - c*f*x)/(2*a*c*(p + 1)) - Int(x*(a + c*x**2)**(p + 1)*Simp(2*a*g - c*f*x*(2*p + 5), x), x)/(2*a*c*(p + 1)))
    rubi.add(rule340)

    pattern341 = Pattern(Integral(x_**2*(a_ + x_**2*WC('c', S(1)))**p_*(f_ + x_*WC('g', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda c, a, g, f: ZeroQ(a*g**2 + c*f**2)))
    rule341 = ReplacementRule(pattern341, lambda c, p, f, x, a, g : -f**2*Int((a + c*x**2)**(p + 1)/(f - g*x), x)/c + Int((a + c*x**2)**(p + 1)*(f + g*x), x)/c)
    rubi.add(rule341)

    pattern342 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda n, m: IntegersQ(m, n)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p, m: Less(p, -m, 0) | Less(0, -m, p + 1)))
    rule342 = ReplacementRule(pattern342, lambda m, c, p, d, b, f, x, n, a, g, e : Int((f + g*x)**n*(a/d + c*x/e)**(-m)*(a + b*x + c*x**2)**(m + p), x))
    rubi.add(rule342)

    pattern343 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda n, m: IntegersQ(m, n)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p, m: Less(p, -m, 0) | Less(0, -m, p + 1)))
    rule343 = ReplacementRule(pattern343, lambda m, c, p, d, f, x, n, a, g, e : a**(-m)*d**(2*m)*Int((a + c*x**2)**(m + p)*(d - e*x)**(-m)*(f + g*x)**n, x))
    rubi.add(rule343)

    pattern344 = Pattern(Integral((x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_/(d_ + x_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda n, p: NegativeIntegerQ(n + 2*p)))
    rule344 = ReplacementRule(pattern344, lambda c, p, d, b, f, x, n, a, g, e : -(f + g*x)**n*(a*(-b*e + 2*c*d) + c*x*(-2*a*e + b*d))*(a + b*x + c*x**2)**p/(d*e*p*(-4*a*c + b**2)) - Int((f + g*x)**(n - 1)*(a + b*x + c*x**2)**p*Simp(-2*a*c*(d*g*n - e*f*(2*p + 1)) + b*(a*e*g*n - c*d*f*(2*p + 1)) - c*g*x*(-2*a*e + b*d)*(n + 2*p + 1), x), x)/(d*e*p*(-4*a*c + b**2)))
    rubi.add(rule344)

    pattern345 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))/(d_ + x_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda n, p: NegativeIntegerQ(n + 2*p)))
    rule345 = ReplacementRule(pattern345, lambda c, p, d, f, x, n, a, g, e : (a + c*x**2)**p*(d - e*x)*(f + g*x)**n/(2*d*e*p) - Int((a + c*x**2)**p*(f + g*x)**(n - 1)*Simp(d*g*n - e*f*(2*p + 1) - e*g*x*(n + 2*p + 1), x), x)/(2*d*e*p))
    rubi.add(rule345)

    pattern346 = Pattern(Integral((x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_/(d_ + x_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda n, p: NegativeIntegerQ(n + 2*p)))
    rule346 = ReplacementRule(pattern346, lambda c, p, d, b, f, x, n, a, g, e : -(f + g*x)**(n + 1)*(a + b*x + c*x**2)**p*(a*c*d*(-b*g + 2*c*f) - a*e*(2*a*c*g - b**2*g + b*c*f) + c*x*(-a*e*(-b*g + 2*c*f) + c*d*(-2*a*g + b*f)))/(d*e*p*(-4*a*c + b**2)*(a*g**2 - b*f*g + c*f**2)) - Int((f + g*x)**n*(a + b*x + c*x**2)**p*Simp(2*a*c*(a*e*g**2*(n + 2*p + 1) + c*f*(-d*g*n + 2*e*f*p + e*f)) + b**2*g*(-a*e*g*(n + p + 1) + c*d*f*p) + b*c*(a*g*(d*g*(n + 1) + e*f*(n - 2*p)) - c*d*f**2*(2*p + 1)) + c*g*x*(2*a*c*(d*g + e*f) - b*(a*e*g + c*d*f))*(n + 2*p + 2), x), x)/(d*e*p*(-4*a*c + b**2)*(a*g**2 - b*f*g + c*f**2)))
    rubi.add(rule346)

    pattern347 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))/(d_ + x_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda n, p: NegativeIntegerQ(n + 2*p)))
    rule347 = ReplacementRule(pattern347, lambda c, p, d, f, x, n, a, g, e : (a + c*x**2)**p*(f + g*x)**(n + 1)*(-a*e*g + c*d*f - c*x*(d*g + e*f))/(2*d*e*p*(a*g**2 + c*f**2)) + Int((a + c*x**2)**p*(f + g*x)**n*Simp(a*e*g**2*(n + 2*p + 1) - c*f*(d*g*n - e*(2*f*p + f)) + c*g*x*(d*g + e*f)*(n + 2*p + 2), x), x)/(2*d*e*p*(a*g**2 + c*f**2)))
    rubi.add(rule347)

    pattern348 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m: ZeroQ(m + p)), CustomConstraint(lambda c, d, b, f, g, e: ZeroQ(-b*e*g + c*d*g + c*e*f)), CustomConstraint(lambda n, m: NonzeroQ(m - n - 1)))
    rule348 = ReplacementRule(pattern348, lambda m, c, p, d, b, f, x, n, a, g, e : -e*(d + e*x)**(m - 1)*(f + g*x)**n*(a + b*x + c*x**2)**(p + 1)/(c*(m - n - 1)))
    rubi.add(rule348)

    pattern349 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m: ZeroQ(m + p)), CustomConstraint(lambda d, g, e, f: ZeroQ(d*g + e*f)), CustomConstraint(lambda n, m: NonzeroQ(m - n - 1)))
    rule349 = ReplacementRule(pattern349, lambda m, c, p, d, f, x, n, a, g, e : -e*(a + c*x**2)**(p + 1)*(d + e*x)**(m - 1)*(f + g*x)**n/(c*(m - n - 1)))
    rubi.add(rule349)

    pattern350 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m: ZeroQ(m + p)), CustomConstraint(lambda n, m: ZeroQ(m - n - 2)))
    rule350 = ReplacementRule(pattern350, lambda e, m, c, p, d, f, x, n, a, g, b : -e**2*(d + e*x)**(m - 1)*(f + g*x)**(n + 1)*(a + b*x + c*x**2)**(p + 1)/((n + 1)*(-b*e*g + c*d*g + c*e*f)))
    rubi.add(rule350)

    pattern351 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m: ZeroQ(m + p)), CustomConstraint(lambda n, m: ZeroQ(m - n - 2)))
    rule351 = ReplacementRule(pattern351, lambda m, c, p, d, f, x, n, a, g, e : -e**2*(a + c*x**2)**(p + 1)*(d + e*x)**(m - 1)*(f + g*x)**(n + 1)/(c*(n + 1)*(d*g + e*f)))
    rubi.add(rule351)

    pattern352 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m: ZeroQ(m + p)), CustomConstraint(lambda n, p: RationalQ(n, p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda n: Less(n, -1)), CustomConstraint(lambda n, p: ~(IntegerQ(n + p) & LessEqual(n + p + 2, 0))))
    rule352 = ReplacementRule(pattern352, lambda e, m, c, p, d, f, x, n, a, g, b : c*m*Int((d + e*x)**(m + 1)*(f + g*x)**(n + 1)*(a + b*x + c*x**2)**(p - 1), x)/(e*g*(n + 1)) + (d + e*x)**m*(f + g*x)**(n + 1)*(a + b*x + c*x**2)**p/(g*(n + 1)))
    rubi.add(rule352)

    pattern353 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m: ZeroQ(m + p)), CustomConstraint(lambda n, p: RationalQ(n, p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda n: Less(n, -1)), CustomConstraint(lambda n, p: ~(IntegerQ(n + p) & LessEqual(n + p + 2, 0))))
    rule353 = ReplacementRule(pattern353, lambda m, c, p, d, f, x, n, a, g, e : c*m*Int((a + c*x**2)**(p - 1)*(d + e*x)**(m + 1)*(f + g*x)**(n + 1), x)/(e*g*(n + 1)) + (a + c*x**2)**p*(d + e*x)**m*(f + g*x)**(n + 1)/(g*(n + 1)))
    rubi.add(rule353)

    pattern354 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m: ZeroQ(m + p)), CustomConstraint(lambda n, p: RationalQ(n, p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda n, m: NonzeroQ(m - n - 1)), CustomConstraint(lambda n: ~(PositiveIntegerQ(n))), CustomConstraint(lambda n, p: ~(IntegerQ(n + p) & Less(n + p + 2, 0))))
    rule354 = ReplacementRule(pattern354, lambda m, c, p, d, b, f, x, n, a, g, e : -(d + e*x)**m*(f + g*x)**(n + 1)*(a + b*x + c*x**2)**p/(g*(m - n - 1)) - m*(-b*e*g + c*d*g + c*e*f)*Int((d + e*x)**(m + 1)*(f + g*x)**n*(a + b*x + c*x**2)**(p - 1), x)/(e**2*g*(m - n - 1)))
    rubi.add(rule354)

    pattern355 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m: ZeroQ(m + p)), CustomConstraint(lambda n, p: RationalQ(n, p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda n, m: NonzeroQ(m - n - 1)), CustomConstraint(lambda n: ~(PositiveIntegerQ(n))), CustomConstraint(lambda n, p: ~(IntegerQ(n + p) & Less(n + p + 2, 0))))
    rule355 = ReplacementRule(pattern355, lambda m, c, p, d, f, x, n, a, g, e : -c*m*(d*g + e*f)*Int((a + c*x**2)**(p - 1)*(d + e*x)**(m + 1)*(f + g*x)**n, x)/(e**2*g*(m - n - 1)) - (a + c*x**2)**p*(d + e*x)**m*(f + g*x)**(n + 1)/(g*(m - n - 1)))
    rubi.add(rule355)

    pattern356 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m: ZeroQ(m + p)), CustomConstraint(lambda n, p: RationalQ(n, p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda n: Greater(n, 0)))
    rule356 = ReplacementRule(pattern356, lambda m, c, p, d, b, f, x, n, a, g, e : -e*g*n*Int((d + e*x)**(m - 1)*(f + g*x)**(n - 1)*(a + b*x + c*x**2)**(p + 1), x)/(c*(p + 1)) + e*(d + e*x)**(m - 1)*(f + g*x)**n*(a + b*x + c*x**2)**(p + 1)/(c*(p + 1)))
    rubi.add(rule356)

    pattern357 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m: ZeroQ(m + p)), CustomConstraint(lambda n, p: RationalQ(n, p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda n: Greater(n, 0)))
    rule357 = ReplacementRule(pattern357, lambda m, c, p, d, f, x, n, a, g, e : -e*g*n*Int((a + c*x**2)**(p + 1)*(d + e*x)**(m - 1)*(f + g*x)**(n - 1), x)/(c*(p + 1)) + e*(a + c*x**2)**(p + 1)*(d + e*x)**(m - 1)*(f + g*x)**n/(c*(p + 1)))
    rubi.add(rule357)

    pattern358 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m: ZeroQ(m + p)), CustomConstraint(lambda n, p: RationalQ(n, p)), CustomConstraint(lambda p: Less(p, -1)))
    rule358 = ReplacementRule(pattern358, lambda m, c, p, d, b, f, x, n, a, g, e : e**2*g*(m - n - 2)*Int((d + e*x)**(m - 1)*(f + g*x)**n*(a + b*x + c*x**2)**(p + 1), x)/((p + 1)*(-b*e*g + c*d*g + c*e*f)) + e**2*(d + e*x)**(m - 1)*(f + g*x)**(n + 1)*(a + b*x + c*x**2)**(p + 1)/((p + 1)*(-b*e*g + c*d*g + c*e*f)))
    rubi.add(rule358)

    pattern359 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m: ZeroQ(m + p)), CustomConstraint(lambda n, p: RationalQ(n, p)), CustomConstraint(lambda p: Less(p, -1)))
    rule359 = ReplacementRule(pattern359, lambda m, c, p, d, f, x, n, a, g, e : e**2*g*(m - n - 2)*Int((a + c*x**2)**(p + 1)*(d + e*x)**(m - 1)*(f + g*x)**n, x)/(c*(p + 1)*(d*g + e*f)) + e**2*(a + c*x**2)**(p + 1)*(d + e*x)**(m - 1)*(f + g*x)**(n + 1)/(c*(p + 1)*(d*g + e*f)))
    rubi.add(rule359)

    pattern360 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m: ZeroQ(m + p)), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Greater(n, 0)), CustomConstraint(lambda n, m: NonzeroQ(m - n - 1)), CustomConstraint(lambda p, n: IntegerQ(n) | IntegerQ(2*p)))
    rule360 = ReplacementRule(pattern360, lambda m, c, p, d, b, f, x, n, a, g, e : -e*(d + e*x)**(m - 1)*(f + g*x)**n*(a + b*x + c*x**2)**(p + 1)/(c*(m - n - 1)) - n*(-b*e*g + c*d*g + c*e*f)*Int((d + e*x)**m*(f + g*x)**(n - 1)*(a + b*x + c*x**2)**p, x)/(c*e*(m - n - 1)))
    rubi.add(rule360)

    pattern361 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m: ZeroQ(m + p)), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Greater(n, 0)), CustomConstraint(lambda n, m: NonzeroQ(m - n - 1)), CustomConstraint(lambda p, n: IntegerQ(n) | IntegerQ(2*p)))
    rule361 = ReplacementRule(pattern361, lambda m, c, p, d, f, x, n, a, g, e : -n*(d*g + e*f)*Int((a + c*x**2)**p*(d + e*x)**m*(f + g*x)**(n - 1), x)/(e*(m - n - 1)) - e*(a + c*x**2)**(p + 1)*(d + e*x)**(m - 1)*(f + g*x)**n/(c*(m - n - 1)))
    rubi.add(rule361)

    pattern362 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m: ZeroQ(m + p)), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, -1)), CustomConstraint(lambda p: IntegerQ(2*p)))
    rule362 = ReplacementRule(pattern362, lambda e, m, c, p, d, f, x, n, a, g, b : -c*e*(m - n - 2)*Int((d + e*x)**m*(f + g*x)**(n + 1)*(a + b*x + c*x**2)**p, x)/((n + 1)*(-b*e*g + c*d*g + c*e*f)) - e**2*(d + e*x)**(m - 1)*(f + g*x)**(n + 1)*(a + b*x + c*x**2)**(p + 1)/((n + 1)*(-b*e*g + c*d*g + c*e*f)))
    rubi.add(rule362)

    pattern363 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m: ZeroQ(m + p)), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, -1)), CustomConstraint(lambda p: IntegerQ(2*p)))
    rule363 = ReplacementRule(pattern363, lambda m, c, p, d, f, x, n, a, g, e : -e**2*(a + c*x**2)**(p + 1)*(d + e*x)**(m - 1)*(f + g*x)**(n + 1)/((n + 1)*(c*d*g + c*e*f)) - e*(m - n - 2)*Int((a + c*x**2)**p*(d + e*x)**m*(f + g*x)**(n + 1), x)/((n + 1)*(d*g + e*f)))
    rubi.add(rule363)

    pattern364 = Pattern(Integral(sqrt(d_ + x_*WC('e', S(1)))/((x_*WC('g', S(1)) + WC('f', S(0)))*sqrt(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)))
    rule364 = ReplacementRule(pattern364, lambda e, c, d, f, x, a, g, b : 2*e**2*Subst(Int(1/(-b*e*g + c*(d*g + e*f) + e**2*g*x**2), x), x, Sqrt(a + b*x + c*x**2)/Sqrt(d + e*x)))
    rubi.add(rule364)

    pattern365 = Pattern(Integral(sqrt(d_ + x_*WC('e', S(1)))/(sqrt(a_ + x_**2*WC('c', S(1)))*(x_*WC('g', S(1)) + WC('f', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)))
    rule365 = ReplacementRule(pattern365, lambda c, d, f, x, a, g, e : 2*e**2*Subst(Int(1/(c*(d*g + e*f) + e**2*g*x**2), x), x, Sqrt(a + c*x**2)/Sqrt(d + e*x)))
    rubi.add(rule365)

    pattern366 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m: ZeroQ(m + p - 1)), CustomConstraint(lambda c, p, d, b, f, n, g, e: ZeroQ(b*e*g*(n + 1) - c*d*g*(2*n + p + 3) + c*e*f*(p + 1))), CustomConstraint(lambda n, p: NonzeroQ(n + p + 2)))
    rule366 = ReplacementRule(pattern366, lambda m, c, p, d, b, f, x, n, a, g, e : e**2*(d + e*x)**(m - 2)*(f + g*x)**(n + 1)*(a + b*x + c*x**2)**(p + 1)/(c*g*(n + p + 2)))
    rubi.add(rule366)

    pattern367 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m: ZeroQ(m + p - 1)), CustomConstraint(lambda p, d, f, n, g, e: ZeroQ(-d*g*(2*n + p + 3) + e*f*(p + 1))), CustomConstraint(lambda n, p: NonzeroQ(n + p + 2)))
    rule367 = ReplacementRule(pattern367, lambda m, c, p, d, f, x, n, a, g, e : e**2*(a + c*x**2)**(p + 1)*(d + e*x)**(m - 2)*(f + g*x)**(n + 1)/(c*g*(n + p + 2)))
    rubi.add(rule367)

    pattern368 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m: ZeroQ(m + p - 1)), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, -1)), CustomConstraint(lambda p: IntegerQ(2*p)))
    rule368 = ReplacementRule(pattern368, lambda e, m, c, p, d, f, x, n, a, g, b : e**2*(d + e*x)**(m - 2)*(f + g*x)**(n + 1)*(-d*g + e*f)*(a + b*x + c*x**2)**(p + 1)/(g*(n + 1)*(-b*e*g + c*d*g + c*e*f)) - e*(b*e*g*(n + 1) - c*d*g*(2*n + p + 3) + c*e*f*(p + 1))*Int((d + e*x)**(m - 1)*(f + g*x)**(n + 1)*(a + b*x + c*x**2)**p, x)/(g*(n + 1)*(-b*e*g + c*d*g + c*e*f)))
    rubi.add(rule368)

    pattern369 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m: ZeroQ(m + p - 1)), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, -1)), CustomConstraint(lambda p: IntegerQ(2*p)))
    rule369 = ReplacementRule(pattern369, lambda m, c, p, d, f, x, n, a, g, e : -e*(-d*g*(2*n + p + 3) + e*f*(p + 1))*Int((a + c*x**2)**p*(d + e*x)**(m - 1)*(f + g*x)**(n + 1), x)/(g*(n + 1)*(d*g + e*f)) + e**2*(a + c*x**2)**(p + 1)*(d + e*x)**(m - 2)*(f + g*x)**(n + 1)*(-d*g + e*f)/(c*g*(n + 1)*(d*g + e*f)))
    rubi.add(rule369)

    pattern370 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m: ZeroQ(m + p - 1)), CustomConstraint(lambda n: ~(RationalQ(n) & Less(n, -1))), CustomConstraint(lambda p: IntegerQ(2*p)))
    rule370 = ReplacementRule(pattern370, lambda m, c, p, d, b, f, x, n, a, g, e : e**2*(d + e*x)**(m - 2)*(f + g*x)**(n + 1)*(a + b*x + c*x**2)**(p + 1)/(c*g*(n + p + 2)) - (b*e*g*(n + 1) - c*d*g*(2*n + p + 3) + c*e*f*(p + 1))*Int((d + e*x)**(m - 1)*(f + g*x)**n*(a + b*x + c*x**2)**p, x)/(c*g*(n + p + 2)))
    rubi.add(rule370)

    pattern371 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m: ZeroQ(m + p - 1)), CustomConstraint(lambda n: ~(RationalQ(n) & Less(n, -1))), CustomConstraint(lambda p: IntegerQ(2*p)))
    rule371 = ReplacementRule(pattern371, lambda m, c, p, d, f, x, n, a, g, e : -(-d*g*(2*n + p + 3) + e*f*(p + 1))*Int((a + c*x**2)**p*(d + e*x)**(m - 1)*(f + g*x)**n, x)/(g*(n + p + 2)) + e**2*(a + c*x**2)**(p + 1)*(d + e*x)**(m - 2)*(f + g*x)**(n + 1)/(c*g*(n + p + 2)))
    rubi.add(rule371)

    pattern372 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda n, m: PositiveIntegerQ(m) | IntegersQ(m, n)))
    rule372 = ReplacementRule(pattern372, lambda m, c, p, d, b, f, x, n, a, g, e : Int(ExpandIntegrand((d + e*x)**m*(f + g*x)**n*(a + b*x + c*x**2)**p, x), x))
    rubi.add(rule372)

    pattern373 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: IntegerQ(p + S(-1)/2)), CustomConstraint(lambda n, m: IntegersQ(m, n)), CustomConstraint(lambda p, m: ~(Less(m, 0) & Less(p, 0))), CustomConstraint(lambda p: Unequal(p, S(1)/2)))
    rule373 = ReplacementRule(pattern373, lambda m, c, p, d, f, x, n, a, g, e : Int(ExpandIntegrand(1/Sqrt(a + c*x**2), (a + c*x**2)**(p + 1/2)*(d + e*x)**m*(f + g*x)**n, x), x))
    rubi.add(rule373)

    pattern374 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda n, m: PositiveIntegerQ(m) | IntegersQ(m, n)))
    rule374 = ReplacementRule(pattern374, lambda m, c, p, d, f, x, n, a, g, e : Int(ExpandIntegrand((a + c*x**2)**p*(d + e*x)**m*(f + g*x)**n, x), x))
    rubi.add(rule374)

    pattern375 = Pattern(Integral(x_**2*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_/(d_ + x_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)))
    rule375 = ReplacementRule(pattern375, lambda e, c, p, d, x, a, b : d**2*Int((a + b*x + c*x**2)**p/(d + e*x), x)/e**2 - Int((d - e*x)*(a + b*x + c*x**2)**p, x)/e**2)
    rubi.add(rule375)

    pattern376 = Pattern(Integral(x_**2*(a_ + x_**2*WC('c', S(1)))**p_/(d_ + x_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)))
    rule376 = ReplacementRule(pattern376, lambda c, p, d, x, a, e : d**2*Int((a + c*x**2)**p/(d + e*x), x)/e**2 - Int((a + c*x**2)**p*(d - e*x), x)/e**2)
    rubi.add(rule376)

    pattern377 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**2*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p + 3)))
    rule377 = ReplacementRule(pattern377, lambda e, m, c, p, d, f, x, a, g, b : g*(d + e*x)**m*(f + g*x)*(a + b*x + c*x**2)**(p + 1)/(c*(m + 2*p + 3)) - Int((d + e*x)**m*(a + b*x + c*x**2)**p*Simp(b*e*g*(d*g + e*f*(m + p + 1)) - c*(d**2*g**2 + d*e*f*g*m + e**2*f**2*(m + 2*p + 3)) + e*g*x*(b*e*g*(m + p + 2) - c*(d*g*m + e*f*(m + 2*p + 4))), x), x)/(c*e**2*(m + 2*p + 3)))
    rubi.add(rule377)

    pattern378 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**2, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p + 3)))
    rule378 = ReplacementRule(pattern378, lambda m, c, p, d, f, x, a, g, e : g*(a + c*x**2)**(p + 1)*(d + e*x)**m*(f + g*x)/(c*(m + 2*p + 3)) - Int((a + c*x**2)**p*(d + e*x)**m*Simp(-c*e*g*x*(d*g*m + e*f*(m + 2*p + 4)) - c*(d**2*g**2 + d*e*f*g*m + e**2*f**2*(m + 2*p + 3)), x), x)/(c*e**2*(m + 2*p + 3)))
    rubi.add(rule378)

    pattern379 = Pattern(Integral((x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule379 = ReplacementRule(pattern379, lambda e, m, c, p, f, x, n, g, b : x**(-m - p)*(e*x)**m*(b + c*x)**(-p)*(b*x + c*x**2)**p*Int(x**(m + p)*(b + c*x)**p*(f + g*x)**n, x))
    rubi.add(rule379)

    pattern380 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda a: PositiveQ(a)), CustomConstraint(lambda d: PositiveQ(d)))
    rule380 = ReplacementRule(pattern380, lambda m, c, p, d, f, x, n, a, g, e : Int((d + e*x)**(m + p)*(f + g*x)**n*(a/d + c*x/e)**p, x))
    rubi.add(rule380)

    pattern381 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule381 = ReplacementRule(pattern381, lambda m, c, p, d, b, f, x, n, a, g, e : (d + e*x)**(-FracPart(p))*(a/d + c*x/e)**(-FracPart(p))*(a + b*x + c*x**2)**FracPart(p)*Int((d + e*x)**(m + p)*(f + g*x)**n*(a/d + c*x/e)**p, x))
    rubi.add(rule381)

    pattern382 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(d_ + x_*WC('e', S(1)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: ZeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule382 = ReplacementRule(pattern382, lambda m, c, p, d, f, x, n, a, g, e : (a + c*x**2)**FracPart(p)*(d + e*x)**(-FracPart(p))*(a/d + c*x/e)**(-FracPart(p))*Int((d + e*x)**(m + p)*(f + g*x)**n*(a/d + c*x/e)**p, x))
    rubi.add(rule382)

    pattern383 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p: PositiveIntegerQ(p)))
    rule383 = ReplacementRule(pattern383, lambda m, c, p, d, b, f, x, a, g, e : Int(ExpandIntegrand((d + e*x)**m*(f + g*x)*(a + b*x + c*x**2)**p, x), x))
    rubi.add(rule383)

    pattern384 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: PositiveIntegerQ(p)))
    rule384 = ReplacementRule(pattern384, lambda m, c, p, d, f, x, a, g, e : Int(ExpandIntegrand((a + c*x**2)**p*(d + e*x)**m*(f + g*x), x), x))
    rubi.add(rule384)

    pattern385 = Pattern(Integral((x_*WC('g', S(1)) + WC('f', S(0)))/((x_*WC('e', S(1)) + WC('d', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)))
    rule385 = ReplacementRule(pattern385, lambda c, d, b, f, x, a, g, e : e*(-d*g + e*f)*Int(1/(d + e*x), x)/(a*e**2 - b*d*e + c*d**2) + Int(Simp(a*e*g - b*e*f + c*d*f - c*x*(-d*g + e*f), x)/(a + b*x + c*x**2), x)/(a*e**2 - b*d*e + c*d**2))
    rubi.add(rule385)

    pattern386 = Pattern(Integral((x_*WC('g', S(1)) + WC('f', S(0)))/((a_ + x_**2*WC('c', S(1)))*(x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)))
    rule386 = ReplacementRule(pattern386, lambda c, d, f, x, a, g, e : e*(-d*g + e*f)*Int(1/(d + e*x), x)/(a*e**2 + c*d**2) + Int(Simp(a*e*g + c*d*f - c*x*(-d*g + e*f), x)/(a + c*x**2), x)/(a*e**2 + c*d**2))
    rubi.add(rule386)

    pattern387 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p, m: ZeroQ(Simplify(m + 2*p + 3))), CustomConstraint(lambda c, d, b, f, a, g, e: ZeroQ(-2*a*e*g + b*(d*g + e*f) - 2*c*d*f)))
    rule387 = ReplacementRule(pattern387, lambda m, c, p, d, b, f, x, a, g, e : (d + e*x)**(m + 1)*(d*g - e*f)*(a + b*x + c*x**2)**(p + 1)/(2*(p + 1)*(a*e**2 - b*d*e + c*d**2)))
    rubi.add(rule387)

    pattern388 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p, m: ZeroQ(Simplify(m + 2*p + 3))), CustomConstraint(lambda c, d, f, a, g, e: ZeroQ(a*e*g + c*d*f)))
    rule388 = ReplacementRule(pattern388, lambda m, c, p, d, f, x, a, g, e : (a + c*x**2)**(p + 1)*(d + e*x)**(m + 1)*(d*g - e*f)/(2*(p + 1)*(a*e**2 + c*d**2)))
    rubi.add(rule388)

    pattern389 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p, m: ZeroQ(Simplify(m + 2*p + 3))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda m, c, d, b, e: ~(Equal(m, 1) & (ZeroQ(d) | ZeroQ(-b*e + 2*c*d)))))
    rule389 = ReplacementRule(pattern389, lambda m, c, p, d, b, f, x, a, g, e : -m*(-2*a*e*g + b*(d*g + e*f) - 2*c*d*f)*Int((d + e*x)**(m - 1)*(a + b*x + c*x**2)**(p + 1), x)/((p + 1)*(-4*a*c + b**2)) + (d + e*x)**m*(a + b*x + c*x**2)**(p + 1)*(-2*a*g + b*f + x*(-b*g + 2*c*f))/((p + 1)*(-4*a*c + b**2)))
    rubi.add(rule389)

    pattern390 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p, m: ZeroQ(Simplify(m + 2*p + 3))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda m, d: ~(ZeroQ(d) & Equal(m, 1))))
    rule390 = ReplacementRule(pattern390, lambda m, c, p, d, f, x, a, g, e : -m*(a*e*g + c*d*f)*Int((a + c*x**2)**(p + 1)*(d + e*x)**(m - 1), x)/(2*a*c*(p + 1)) + (a + c*x**2)**(p + 1)*(d + e*x)**m*(a*g - c*f*x)/(2*a*c*(p + 1)))
    rubi.add(rule390)

    pattern391 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p, m: ZeroQ(Simplify(m + 2*p + 3))))
    rule391 = ReplacementRule(pattern391, lambda m, c, p, d, b, f, x, a, g, e : (d + e*x)**(m + 1)*(d*g - e*f)*(a + b*x + c*x**2)**(p + 1)/(2*(p + 1)*(a*e**2 - b*d*e + c*d**2)) - (-2*a*e*g + b*(d*g + e*f) - 2*c*d*f)*Int((d + e*x)**(m + 1)*(a + b*x + c*x**2)**p, x)/(2*a*e**2 - 2*b*d*e + 2*c*d**2))
    rubi.add(rule391)

    pattern392 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p, m: ZeroQ(Simplify(m + 2*p + 3))))
    rule392 = ReplacementRule(pattern392, lambda m, c, p, d, f, x, a, g, e : (a + c*x**2)**(p + 1)*(d + e*x)**(m + 1)*(d*g - e*f)/(2*(p + 1)*(a*e**2 + c*d**2)) + (a*e*g + c*d*f)*Int((a + c*x**2)**p*(d + e*x)**(m + 1), x)/(a*e**2 + c*d**2))
    rubi.add(rule392)

    pattern393 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda c, p, d, b, f, a, g, e: ZeroQ(-2*a*c*e*g + b**2*e*g*(p + 2) + c*(2*p + 3)*(-b*(d*g + e*f) + 2*c*d*f))))
    rule393 = ReplacementRule(pattern393, lambda c, p, d, b, f, x, a, g, e : (a + b*x + c*x**2)**(p + 1)*(-b*e*g*(p + 2) + 2*c*e*g*x*(p + 1) + c*(2*p + 3)*(d*g + e*f))/(2*c**2*(p + 1)*(2*p + 3)))
    rubi.add(rule393)

    pattern394 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(x_*WC('e', S(1)) + WC('d', S(0)))*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda c, p, d, f, a, g, e: ZeroQ(a*e*g - c*d*f*(2*p + 3))))
    rule394 = ReplacementRule(pattern394, lambda c, p, d, f, x, a, g, e : (a + c*x**2)**(p + 1)*(2*e*g*x*(p + 1) + (2*p + 3)*(d*g + e*f))/(2*c*(p + 1)*(2*p + 3)))
    rubi.add(rule394)

    pattern395 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)))
    rule395 = ReplacementRule(pattern395, lambda c, p, d, b, f, x, a, g, e : (a + b*x + c*x**2)**(p + 1)*(-2*a*c*(d*g + e*f) + b*(a*e*g + c*d*f) + x*(b**2*e*g - b*c*(d*g + e*f) + 2*c*(-a*e*g + c*d*f)))/(c*(p + 1)*(-4*a*c + b**2)) - (-2*a*c*e*g + b**2*e*g*(p + 2) + c*(2*p + 3)*(-b*(d*g + e*f) + 2*c*d*f))*Int((a + b*x + c*x**2)**(p + 1), x)/(c*(p + 1)*(-4*a*c + b**2)))
    rubi.add(rule395)

    pattern396 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(x_*WC('e', S(1)) + WC('d', S(0)))*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)))
    rule396 = ReplacementRule(pattern396, lambda c, p, d, f, x, a, g, e : (a + c*x**2)**(p + 1)*(a*(d*g + e*(f + g*x)) - c*d*f*x)/(2*a*c*(p + 1)) - (a*e*g - c*d*f*(2*p + 3))*Int((a + c*x**2)**(p + 1), x)/(2*a*c*(p + 1)))
    rubi.add(rule396)

    pattern397 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p: ~(RationalQ(p) & LessEqual(p, -1))))
    rule397 = ReplacementRule(pattern397, lambda c, p, d, b, f, x, a, g, e : (-2*a*c*e*g + b**2*e*g*(p + 2) + c*(2*p + 3)*(-b*(d*g + e*f) + 2*c*d*f))*Int((a + b*x + c*x**2)**p, x)/(2*c**2*(2*p + 3)) + (a + b*x + c*x**2)**(p + 1)*(-b*e*g*(p + 2) + 2*c*e*g*x*(p + 1) + c*(2*p + 3)*(d*g + e*f))/(2*c**2*(p + 1)*(2*p + 3)))
    rubi.add(rule397)

    pattern398 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(x_*WC('e', S(1)) + WC('d', S(0)))*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: ~(RationalQ(p) & LessEqual(p, -1))))
    rule398 = ReplacementRule(pattern398, lambda c, p, d, f, x, a, g, e : (a + c*x**2)**(p + 1)*(2*e*g*x*(p + 1) + (2*p + 3)*(d*g + e*f))/(2*c*(p + 1)*(2*p + 3)) - (a*e*g - c*d*f*(2*p + 3))*Int((a + c*x**2)**p, x)/(c*(2*p + 3)))
    rubi.add(rule398)

    pattern399 = Pattern(Integral((x_*WC('e', S(1)))**m_*(a_ + x_**2*WC('c', S(1)))**p_*(f_ + x_*WC('g', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: ~(RationalQ(m))), CustomConstraint(lambda p: ~(PositiveIntegerQ(p))))
    rule399 = ReplacementRule(pattern399, lambda m, c, p, f, x, a, g, e : f*Int((e*x)**m*(a + c*x**2)**p, x) + g*Int((e*x)**(m + 1)*(a + c*x**2)**p, x)/e)
    rubi.add(rule399)

    pattern400 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda p, m: ZeroQ(m - p)), CustomConstraint(lambda e, d, b, a: ZeroQ(a*e + b*d)), CustomConstraint(lambda e, d, b, c: ZeroQ(b*e + c*d)))
    rule400 = ReplacementRule(pattern400, lambda e, m, c, p, d, f, x, a, g, b : (d + e*x)**FracPart(p)*(a*d + c*e*x**3)**(-FracPart(p))*(a + b*x + c*x**2)**FracPart(p)*Int((f + g*x)*(a*d + c*e*x**3)**p, x))
    rubi.add(rule400)

    pattern401 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda m: Less(m, -2)), CustomConstraint(lambda p, m: Less(m + 2*p, 0)), CustomConstraint(lambda p, m: ~(NegativeIntegerQ(m + 2*p + 3))))
    rule401 = ReplacementRule(pattern401, lambda m, c, p, d, b, f, x, a, g, e : -p*Int((d + e*x)**(m + 2)*(a + b*x + c*x**2)**(p - 1)*Simp(2*a*c*e*(m + 2)*(-d*g + e*f) + b**2*e*(d*g*(p + 1) - e*f*(m + p + 2)) + b*(a*e**2*g*(m + 1) - c*d*(d*g*(2*p + 1) - e*f*(m + 2*p + 2))) - c*x*(2*c*d*(d*g*(2*p + 1) - e*f*(m + 2*p + 2)) - e*(2*a*e*g*(m + 1) - b*(d*g*(m - 2*p) + e*f*(m + 2*p + 2)))), x), x)/(e**2*(m + 1)*(m + 2)*(a*e**2 - b*d*e + c*d**2)) - (d + e*x)**(m + 1)*(a + b*x + c*x**2)**p*(-d*p*(-b*e + 2*c*d)*(-d*g + e*f) - e*x*(g*(m + 1)*(a*e**2 - b*d*e + c*d**2) + p*(-b*e + 2*c*d)*(-d*g + e*f)) + (d*g - e*f*(m + 2))*(a*e**2 - b*d*e + c*d**2))/(e**2*(m + 1)*(m + 2)*(a*e**2 - b*d*e + c*d**2)))
    rubi.add(rule401)

    pattern402 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda m: Less(m, -2)), CustomConstraint(lambda p, m: Less(m + 2*p, 0)), CustomConstraint(lambda p, m: ~(NegativeIntegerQ(m + 2*p + 3))))
    rule402 = ReplacementRule(pattern402, lambda m, c, p, d, f, x, a, g, e : -p*Int((a + c*x**2)**(p - 1)*(d + e*x)**(m + 2)*Simp(2*a*c*e*(m + 2)*(-d*g + e*f) - c*x*(-2*a*e**2*g*(m + 1) + 2*c*d*(d*g*(2*p + 1) - e*f*(m + 2*p + 2))), x), x)/(e**2*(m + 1)*(m + 2)*(a*e**2 + c*d**2)) - (a + c*x**2)**p*(d + e*x)**(m + 1)*(-2*c*d**2*p*(-d*g + e*f) - e*x*(2*c*d*p*(-d*g + e*f) + g*(m + 1)*(a*e**2 + c*d**2)) + (a*e**2 + c*d**2)*(d*g - e*f*(m + 2)))/(e**2*(m + 1)*(m + 2)*(a*e**2 + c*d**2)))
    rubi.add(rule402)

    pattern403 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda p, m: Equal(p, 1) | (IntegerQ(p) & ~(RationalQ(m))) | (RationalQ(m) & Less(m, -1))), CustomConstraint(lambda m: NonzeroQ(m + 1)), CustomConstraint(lambda p, m: ~(NegativeIntegerQ(m + 2*p + 1))), CustomConstraint(lambda p, m: IntegerQ(m) | IntegerQ(p) | IntegersQ(2*m, 2*p)))
    rule403 = ReplacementRule(pattern403, lambda m, c, p, d, b, f, x, a, g, e : p*Int((d + e*x)**(m + 1)*(a + b*x + c*x**2)**(p - 1)*Simp(-b*e*f*(m + 2*p + 2) + g*(2*a*e*m + 2*a*e + 2*b*d*p + b*d) + x*(-2*c*e*f*(m + 2*p + 2) + g*(b*e*m + b*e + 4*c*d*p + 2*c*d)), x), x)/(e**2*(m + 1)*(m + 2*p + 2)) + (d + e*x)**(m + 1)*(a + b*x + c*x**2)**p*(-d*g*(2*p + 1) + e*f*(m + 2*p + 2) + e*g*x*(m + 1))/(e**2*(m + 1)*(m + 2*p + 2)))
    rubi.add(rule403)

    pattern404 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda p, m: Equal(p, 1) | (IntegerQ(p) & ~(RationalQ(m))) | (RationalQ(m) & Less(m, -1))), CustomConstraint(lambda m: NonzeroQ(m + 1)), CustomConstraint(lambda p, m: ~(NegativeIntegerQ(m + 2*p + 1))), CustomConstraint(lambda p, m: IntegerQ(m) | IntegerQ(p) | IntegersQ(2*m, 2*p)))
    rule404 = ReplacementRule(pattern404, lambda m, c, p, d, f, x, a, g, e : p*Int((a + c*x**2)**(p - 1)*(d + e*x)**(m + 1)*Simp(g*(2*a*e*m + 2*a*e) + x*(-2*c*e*f*(m + 2*p + 2) + g*(4*c*d*p + 2*c*d)), x), x)/(e**2*(m + 1)*(m + 2*p + 2)) + (a + c*x**2)**p*(d + e*x)**(m + 1)*(-d*g*(2*p + 1) + e*f*(m + 2*p + 2) + e*g*x*(m + 1))/(e**2*(m + 1)*(m + 2*p + 2)))
    rubi.add(rule404)

    pattern405 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda p, m: IntegerQ(p) | ~(RationalQ(m)) | Inequality(-1, LessEqual, m, Less, 0)), CustomConstraint(lambda p, m: ~(NegativeIntegerQ(m + 2*p))), CustomConstraint(lambda p, m: IntegerQ(m) | IntegerQ(p) | IntegersQ(2*m, 2*p)))
    rule405 = ReplacementRule(pattern405, lambda m, c, p, d, b, f, x, a, g, e : -p*Int((d + e*x)**m*(a + b*x + c*x**2)**(p - 1)*Simp(c*e*f*(-2*a*e + b*d)*(m + 2*p + 2) + g*(a*e*(b*e*m + b*e - 2*c*d*m) + b*d*(b*e*p - 2*c*d*p - c*d)) + x*(c*e*f*(-b*e + 2*c*d)*(m + 2*p + 2) + g*(b**2*e**2*(m + p + 1) - 2*c**2*d**2*(2*p + 1) - c*e*(2*a*e*(m + 2*p + 1) + b*d*(m - 2*p)))), x), x)/(c*e**2*(m + 2*p + 1)*(m + 2*p + 2)) + (d + e*x)**(m + 1)*(a + b*x + c*x**2)**p*(c*e*f*(m + 2*p + 2) + c*e*g*x*(m + 2*p + 1) - g*(-b*e*p + 2*c*d*p + c*d))/(c*e**2*(m + 2*p + 1)*(m + 2*p + 2)))
    rubi.add(rule405)

    pattern406 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda p, m: IntegerQ(p) | ~(RationalQ(m)) | Inequality(-1, LessEqual, m, Less, 0)), CustomConstraint(lambda p, m: ~(NegativeIntegerQ(m + 2*p))), CustomConstraint(lambda p, m: IntegerQ(m) | IntegerQ(p) | IntegersQ(2*m, 2*p)))
    rule406 = ReplacementRule(pattern406, lambda m, c, p, d, f, x, a, g, e : 2*p*Int((a + c*x**2)**(p - 1)*(d + e*x)**m*Simp(a*c*d*e*g*m + a*c*e**2*f*(m + 2*p + 2) - x*(c**2*d*e*f*(m + 2*p + 2) - g*(a*c*e**2*(m + 2*p + 1) + c**2*d**2*(2*p + 1))), x), x)/(c*e**2*(m + 2*p + 1)*(m + 2*p + 2)) + (a + c*x**2)**p*(d + e*x)**(m + 1)*(-c*d*g*(2*p + 1) + c*e*f*(m + 2*p + 2) + c*e*g*x*(m + 2*p + 1))/(c*e**2*(m + 2*p + 1)*(m + 2*p + 2)))
    rubi.add(rule406)

    pattern407 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda m: Greater(m, 1)), CustomConstraint(lambda e, m, c, p, d, f, a, g, b: ~(NegativeIntegerQ(m + 2*p + 3)) | (Equal(m, 2) & Equal(p, -3) & RationalQ(a, b, c, d, e, f, g))))
    rule407 = ReplacementRule(pattern407, lambda m, c, p, d, b, f, x, a, g, e : -(d + e*x)**(m - 1)*(a + b*x + c*x**2)**(p + 1)*(2*a*c*(d*g + e*f) - b*(a*e*g + c*d*f) - x*(b**2*e*g + 2*c**2*d*f - c*(2*a*e*g + b*d*g + b*e*f)))/(c*(p + 1)*(-4*a*c + b**2)) - Int((d + e*x)**(m - 2)*(a + b*x + c*x**2)**(p + 1)*Simp(b*e*g*(a*e*(m - 1) + b*d*(p + 2)) + 2*c**2*d**2*f*(2*p + 3) - c*(2*a*e*(d*g*m + e*f*(m - 1)) + b*d*(d*g*(2*p + 3) - e*f*(m - 2*p - 4))) + e*x*(b**2*e*g*(m + p + 1) + 2*c**2*d*f*(m + 2*p + 2) - c*(2*a*e*g*m + b*(d*g + e*f)*(m + 2*p + 2))), x), x)/(c*(p + 1)*(-4*a*c + b**2)))
    rubi.add(rule407)

    pattern408 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda m: Greater(m, 1)), CustomConstraint(lambda m, c, p, d, f, a, g, e: ~(NegativeIntegerQ(m + 2*p + 3)) | (Equal(m, 2) & Equal(p, -3) & RationalQ(a, c, d, e, f, g))))
    rule408 = ReplacementRule(pattern408, lambda m, c, p, d, f, x, a, g, e : (a + c*x**2)**(p + 1)*(d + e*x)**(m - 1)*(2*a*(d*g + e*f) - x*(-2*a*e*g + 2*c*d*f))/(4*a*c*(p + 1)) - Int((a + c*x**2)**(p + 1)*(d + e*x)**(m - 2)*Simp(2*a*e*(d*g*m + e*f*(m - 1)) - 2*c*d**2*f*(2*p + 3) + e*x*(2*a*e*g*m - 2*c*d*f*(m + 2*p + 2)), x), x)/(4*a*c*(p + 1)))
    rubi.add(rule408)

    pattern409 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda m: Greater(m, 0)), CustomConstraint(lambda m, d, f, x, g, e: ~(Equal(m, 1) & SimplerQ(d + e*x, f + g*x))), CustomConstraint(lambda p, m: IntegerQ(m) | IntegerQ(p) | IntegersQ(2*m, 2*p)))
    rule409 = ReplacementRule(pattern409, lambda m, c, p, d, b, f, x, a, g, e : (d + e*x)**m*(a + b*x + c*x**2)**(p + 1)*(-2*a*g + b*f + x*(-b*g + 2*c*f))/((p + 1)*(-4*a*c + b**2)) + Int((d + e*x)**(m - 1)*(a + b*x + c*x**2)**(p + 1)*Simp(-e*x*(-b*g + 2*c*f)*(m + 2*p + 3) - f*(b*e*m + 2*c*d*(2*p + 3)) + g*(2*a*e*m + b*d*(2*p + 3)), x), x)/((p + 1)*(-4*a*c + b**2)))
    rubi.add(rule409)

    pattern410 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda m: Greater(m, 0)), CustomConstraint(lambda m, d, f, x, g, e: ~(Equal(m, 1) & SimplerQ(d + e*x, f + g*x))), CustomConstraint(lambda p, m: IntegerQ(m) | IntegerQ(p) | IntegersQ(2*m, 2*p)))
    rule410 = ReplacementRule(pattern410, lambda m, c, p, d, f, x, a, g, e : (a + c*x**2)**(p + 1)*(d + e*x)**m*(a*g - c*f*x)/(2*a*c*(p + 1)) - Int((a + c*x**2)**(p + 1)*(d + e*x)**(m - 1)*Simp(a*e*g*m - c*d*f*(2*p + 3) - c*e*f*x*(m + 2*p + 3), x), x)/(2*a*c*(p + 1)))
    rubi.add(rule410)

    pattern411 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda p, m: IntegerQ(m) | IntegerQ(p) | IntegersQ(2*m, 2*p)))
    rule411 = ReplacementRule(pattern411, lambda m, c, p, d, b, f, x, a, g, e : (d + e*x)**(m + 1)*(a + b*x + c*x**2)**(p + 1)*(-a*g*(-b*e + 2*c*d) + c*x*(f*(-b*e + 2*c*d) - g*(-2*a*e + b*d)) + f*(2*a*c*e - b**2*e + b*c*d))/((p + 1)*(-4*a*c + b**2)*(a*e**2 - b*d*e + c*d**2)) + Int((d + e*x)**m*(a + b*x + c*x**2)**(p + 1)*Simp(c*e*x*(-f*(-b*e + 2*c*d) + g*(-2*a*e + b*d))*(m + 2*p + 4) + f*(-2*a*c*e**2*(m + 2*p + 3) + b**2*e**2*(m + p + 2) + b*c*d*e*(-m + 2*p + 2) - 2*c**2*d**2*(2*p + 3)) - g*(a*e*(b*e*m + b*e - 2*c*d*m) - b*d*(-b*e*p - b*e + 2*c*d*p + 3*c*d)), x), x)/((p + 1)*(-4*a*c + b**2)*(a*e**2 - b*d*e + c*d**2)))
    rubi.add(rule411)

    pattern412 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda p, m: IntegerQ(m) | IntegerQ(p) | IntegersQ(2*m, 2*p)))
    rule412 = ReplacementRule(pattern412, lambda m, c, p, d, f, x, a, g, e : -(a + c*x**2)**(p + 1)*(d + e*x)**(m + 1)*(-a*c*d*g + a*c*e*f + c*x*(a*e*g + c*d*f))/(2*a*c*(p + 1)*(a*e**2 + c*d**2)) + Int((a + c*x**2)**(p + 1)*(d + e*x)**m*Simp(-a*c*d*e*g*m + c*e*x*(a*e*g + c*d*f)*(m + 2*p + 4) + f*(a*c*e**2*(m + 2*p + 3) + c**2*d**2*(2*p + 3)), x), x)/(2*a*c*(p + 1)*(a*e**2 + c*d**2)))
    rubi.add(rule412)

    pattern413 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0)))/(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda m: IntegerQ(m)))
    rule413 = ReplacementRule(pattern413, lambda m, c, d, b, f, x, a, g, e : Int(ExpandIntegrand((d + e*x)**m*(f + g*x)/(a + b*x + c*x**2), x), x))
    rubi.add(rule413)

    pattern414 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0)))/(a_ + x_**2*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda m: IntegerQ(m)))
    rule414 = ReplacementRule(pattern414, lambda m, c, d, f, x, a, g, e : Int(ExpandIntegrand((d + e*x)**m*(f + g*x)/(a + c*x**2), x), x))
    rubi.add(rule414)

    pattern415 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))/(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda m: FractionQ(m)), CustomConstraint(lambda m: Greater(m, 0)))
    rule415 = ReplacementRule(pattern415, lambda m, c, d, b, f, x, a, g, e : g*(d + e*x)**m/(c*m) + Int((d + e*x)**(m - 1)*Simp(-a*e*g + c*d*f + x*(-b*e*g + c*d*g + c*e*f), x)/(a + b*x + c*x**2), x)/c)
    rubi.add(rule415)

    pattern416 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))/(a_ + x_**2*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda m: FractionQ(m)), CustomConstraint(lambda m: Greater(m, 0)))
    rule416 = ReplacementRule(pattern416, lambda m, c, d, f, x, a, g, e : g*(d + e*x)**m/(c*m) + Int((d + e*x)**(m - 1)*Simp(-a*e*g + c*d*f + x*(c*d*g + c*e*f), x)/(a + c*x**2), x)/c)
    rubi.add(rule416)

    pattern417 = Pattern(Integral((x_*WC('g', S(1)) + WC('f', S(0)))/(sqrt(x_*WC('e', S(1)) + WC('d', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)))
    rule417 = ReplacementRule(pattern417, lambda c, d, b, f, x, a, g, e : 2*Subst(Int((-d*g + e*f + g*x**2)/(a*e**2 - b*d*e + c*d**2 + c*x**4 - x**2*(-b*e + 2*c*d)), x), x, Sqrt(d + e*x)))
    rubi.add(rule417)

    pattern418 = Pattern(Integral((x_*WC('g', S(1)) + WC('f', S(0)))/((a_ + x_**2*WC('c', S(1)))*sqrt(x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)))
    rule418 = ReplacementRule(pattern418, lambda c, d, f, x, a, g, e : 2*Subst(Int((-d*g + e*f + g*x**2)/(a*e**2 + c*d**2 - 2*c*d*x**2 + c*x**4), x), x, Sqrt(d + e*x)))
    rubi.add(rule418)

    pattern419 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))/(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda m: FractionQ(m)), CustomConstraint(lambda m: Less(m, -1)))
    rule419 = ReplacementRule(pattern419, lambda m, c, d, b, f, x, a, g, e : (d + e*x)**(m + 1)*(-d*g + e*f)/((m + 1)*(a*e**2 - b*d*e + c*d**2)) + Int((d + e*x)**(m + 1)*Simp(a*e*g - b*e*f + c*d*f - c*x*(-d*g + e*f), x)/(a + b*x + c*x**2), x)/(a*e**2 - b*d*e + c*d**2))
    rubi.add(rule419)

    pattern420 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))/(a_ + x_**2*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda m: FractionQ(m)), CustomConstraint(lambda m: Less(m, -1)))
    rule420 = ReplacementRule(pattern420, lambda m, c, d, f, x, a, g, e : (d + e*x)**(m + 1)*(-d*g + e*f)/((m + 1)*(a*e**2 + c*d**2)) + Int((d + e*x)**(m + 1)*Simp(a*e*g + c*d*f - c*x*(-d*g + e*f), x)/(a + c*x**2), x)/(a*e**2 + c*d**2))
    rubi.add(rule420)

    pattern421 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))/(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda m: ~(RationalQ(m))))
    rule421 = ReplacementRule(pattern421, lambda m, c, d, b, f, x, a, g, e : Int(ExpandIntegrand((d + e*x)**m, (f + g*x)/(a + b*x + c*x**2), x), x))
    rubi.add(rule421)

    pattern422 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))/(a_ + x_**2*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda m: ~(RationalQ(m))))
    rule422 = ReplacementRule(pattern422, lambda m, c, d, f, x, a, g, e : Int(ExpandIntegrand((d + e*x)**m, (f + g*x)/(a + c*x**2), x), x))
    rubi.add(rule422)

    pattern423 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Greater(m, 0)), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p + 2)), CustomConstraint(lambda m, d, f, x, g, e: ~(Equal(m, 1) & SimplerQ(f + g*x, d + e*x))), CustomConstraint(lambda p, m: IntegerQ(m) | IntegerQ(p) | IntegersQ(2*m, 2*p)))
    rule423 = ReplacementRule(pattern423, lambda m, c, p, d, b, f, x, a, g, e : g*(d + e*x)**m*(a + b*x + c*x**2)**(p + 1)/(c*(m + 2*p + 2)) + Int((d + e*x)**(m - 1)*(a + b*x + c*x**2)**p*Simp(d*(p + 1)*(-b*g + 2*c*f) + m*(-a*e*g + c*d*f) + x*(e*(p + 1)*(-b*g + 2*c*f) + m*(-b*e*g + c*d*g + c*e*f)), x), x)/(c*(m + 2*p + 2)))
    rubi.add(rule423)

    pattern424 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Greater(m, 0)), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p + 2)), CustomConstraint(lambda m, d, f, x, g, e: ~(Equal(m, 1) & SimplerQ(f + g*x, d + e*x))), CustomConstraint(lambda p, m: IntegerQ(m) | IntegerQ(p) | IntegersQ(2*m, 2*p)))
    rule424 = ReplacementRule(pattern424, lambda m, c, p, d, f, x, a, g, e : g*(a + c*x**2)**(p + 1)*(d + e*x)**m/(c*(m + 2*p + 2)) + Int((a + c*x**2)**p*(d + e*x)**(m - 1)*Simp(-a*e*g*m + c*d*f*(m + 2*p + 2) + c*x*(d*g*m + e*f*(m + 2*p + 2)), x), x)/(c*(m + 2*p + 2)))
    rubi.add(rule424)

    pattern425 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, -1)), CustomConstraint(lambda p, m: IntegerQ(m) | IntegerQ(p) | IntegersQ(2*m, 2*p)))
    rule425 = ReplacementRule(pattern425, lambda m, c, p, d, b, f, x, a, g, e : (d + e*x)**(m + 1)*(-d*g + e*f)*(a + b*x + c*x**2)**(p + 1)/((m + 1)*(a*e**2 - b*d*e + c*d**2)) + Int((d + e*x)**(m + 1)*(a + b*x + c*x**2)**p*Simp(b*(p + 1)*(d*g - e*f) - c*x*(-d*g + e*f)*(m + 2*p + 3) + (m + 1)*(a*e*g - b*e*f + c*d*f), x), x)/((m + 1)*(a*e**2 - b*d*e + c*d**2)))
    rubi.add(rule425)

    pattern426 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, -1)), CustomConstraint(lambda p, m: IntegerQ(m) | IntegerQ(p) | IntegersQ(2*m, 2*p)))
    rule426 = ReplacementRule(pattern426, lambda m, c, p, d, f, x, a, g, e : (a + c*x**2)**(p + 1)*(d + e*x)**(m + 1)*(-d*g + e*f)/((m + 1)*(a*e**2 + c*d**2)) + Int((a + c*x**2)**p*(d + e*x)**(m + 1)*Simp(-c*x*(-d*g + e*f)*(m + 2*p + 3) + (m + 1)*(a*e*g + c*d*f), x), x)/((m + 1)*(a*e**2 + c*d**2)))
    rubi.add(rule426)

    pattern427 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p, m: NegativeIntegerQ(Simplify(m + 2*p + 3))), CustomConstraint(lambda m: NonzeroQ(m + 1)))
    rule427 = ReplacementRule(pattern427, lambda m, c, p, d, b, f, x, a, g, e : (d + e*x)**(m + 1)*(-d*g + e*f)*(a + b*x + c*x**2)**(p + 1)/((m + 1)*(a*e**2 - b*d*e + c*d**2)) + Int((d + e*x)**(m + 1)*(a + b*x + c*x**2)**p*Simp(b*(p + 1)*(d*g - e*f) - c*x*(-d*g + e*f)*(m + 2*p + 3) + (m + 1)*(a*e*g - b*e*f + c*d*f), x), x)/((m + 1)*(a*e**2 - b*d*e + c*d**2)))
    rubi.add(rule427)

    pattern428 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p, m: NegativeIntegerQ(m + 2*p + 3)), CustomConstraint(lambda m: NonzeroQ(m + 1)))
    rule428 = ReplacementRule(pattern428, lambda m, c, p, d, f, x, a, g, e : (a + c*x**2)**(p + 1)*(d + e*x)**(m + 1)*(-d*g + e*f)/((m + 1)*(a*e**2 + c*d**2)) + Int((a + c*x**2)**p*(d + e*x)**(m + 1)*Simp(-c*x*(-d*g + e*f)*(m + 2*p + 3) + (m + 1)*(a*e*g + c*d*f), x), x)/((m + 1)*(a*e**2 + c*d**2)))
    rubi.add(rule428)

    pattern429 = Pattern(Integral((f_ + x_*WC('g', S(1)))/((x_*WC('e', S(1)) + WC('d', S(0)))*sqrt(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda c, d, b, a, e: ZeroQ(4*c*(a - d) - (b - e)**2)), CustomConstraint(lambda e, d, f, a, g, b: ZeroQ(e*f*(b - e) - 2*g*(-a*e + b*d))), CustomConstraint(lambda e, d, b, a: NonzeroQ(-a*e + b*d)))
    rule429 = ReplacementRule(pattern429, lambda e, c, d, f, x, a, g, b : 4*f*(a - d)*Subst(Int(1/(4*a - 4*d - x**2), x), x, (2*a - 2*d + x*(b - e))/Sqrt(a + b*x + c*x**2))/(-a*e + b*d))
    rubi.add(rule429)

    pattern430 = Pattern(Integral((f_ + x_*WC('g', S(1)))/(sqrt(x_)*sqrt(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)))
    rule430 = ReplacementRule(pattern430, lambda c, f, x, a, g, b : 2*Subst(Int((f + g*x**2)/Sqrt(a + b*x**2 + c*x**4), x), x, Sqrt(x)))
    rubi.add(rule430)

    pattern431 = Pattern(Integral((f_ + x_*WC('g', S(1)))/(sqrt(x_)*sqrt(a_ + x_**2*WC('c', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)))
    rule431 = ReplacementRule(pattern431, lambda c, f, x, a, g : 2*Subst(Int((f + g*x**2)/Sqrt(a + c*x**4), x), x, Sqrt(x)))
    rubi.add(rule431)

    pattern432 = Pattern(Integral((f_ + x_*WC('g', S(1)))/(sqrt(e_*x_)*sqrt(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)))
    rule432 = ReplacementRule(pattern432, lambda c, b, f, x, a, g, e : Int((f + g*x)/(Sqrt(x)*Sqrt(a + b*x + c*x**2)), x)*Sqrt(x)/Sqrt(e*x))
    rubi.add(rule432)

    pattern433 = Pattern(Integral((f_ + x_*WC('g', S(1)))/(sqrt(e_*x_)*sqrt(a_ + x_**2*WC('c', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)))
    rule433 = ReplacementRule(pattern433, lambda c, f, x, a, g, e : Int((f + g*x)/(Sqrt(x)*Sqrt(a + c*x**2)), x)*Sqrt(x)/Sqrt(e*x))
    rubi.add(rule433)

    pattern434 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)))
    rule434 = ReplacementRule(pattern434, lambda m, c, p, d, b, f, x, a, g, e : g*Int((d + e*x)**(m + 1)*(a + b*x + c*x**2)**p, x)/e + (-d*g + e*f)*Int((d + e*x)**m*(a + b*x + c*x**2)**p, x)/e)
    rubi.add(rule434)

    pattern435 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)))
    rule435 = ReplacementRule(pattern435, lambda m, c, p, d, f, x, a, g, e : g*Int((a + c*x**2)**p*(d + e*x)**(m + 1), x)/e + (-d*g + e*f)*Int((a + c*x**2)**p*(d + e*x)**m, x)/e)
    rubi.add(rule435)

    pattern436 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda n, m, p: IntegersQ(m, n, p)))
    rule436 = ReplacementRule(pattern436, lambda m, c, p, d, b, f, x, n, a, g, e : Int(ExpandIntegrand((d + e*x)**m*(f + g*x)**n*(a + b*x + c*x**2)**p, x), x))
    rubi.add(rule436)

    pattern437 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda n, m, p: IntegersQ(m, n, p)))
    rule437 = ReplacementRule(pattern437, lambda m, c, p, d, f, x, n, a, g, e : Int(ExpandIntegrand((a + c*x**2)**p*(d + e*x)**m*(f + g*x)**n, x), x))
    rubi.add(rule437)

    pattern438 = Pattern(Integral((x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_/((x_*WC('e', S(1)) + WC('d', S(0)))*(x_*WC('g', S(1)) + WC('f', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p: FractionQ(p)), CustomConstraint(lambda p: Greater(p, 0)))
    rule438 = ReplacementRule(pattern438, lambda c, p, d, b, f, x, a, g, e : (a*e**2 - b*d*e + c*d**2)*Int((a + b*x + c*x**2)**(p - 1)/(d + e*x), x)/(e*(-d*g + e*f)) - Int((a + b*x + c*x**2)**(p - 1)*Simp(a*e*g - b*e*f + c*d*f - c*x*(-d*g + e*f), x)/(f + g*x), x)/(e*(-d*g + e*f)))
    rubi.add(rule438)

    pattern439 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_/((x_*WC('e', S(1)) + WC('d', S(0)))*(x_*WC('g', S(1)) + WC('f', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p: FractionQ(p)), CustomConstraint(lambda p: Greater(p, 0)))
    rule439 = ReplacementRule(pattern439, lambda c, p, d, f, x, a, g, e : (a*e**2 + c*d**2)*Int((a + c*x**2)**(p - 1)/(d + e*x), x)/(e*(-d*g + e*f)) - Int((a + c*x**2)**(p - 1)*Simp(a*e*g + c*d*f - c*x*(-d*g + e*f), x)/(f + g*x), x)/(e*(-d*g + e*f)))
    rubi.add(rule439)

    pattern440 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda n, p: IntegersQ(n, p)), CustomConstraint(lambda m: FractionQ(m)))
    rule440 = ReplacementRule(pattern440, lambda m, c, p, d, b, f, x, n, a, g, e : With(List(Set(q, Denominator(m))), q*Subst(Int(x**(q*(m + 1) - 1)*(g*x**q/e + (-d*g + e*f)/e)**n*(c*x**(2*q)/e**2 - x**q*(-b*e + 2*c*d)/e**2 + (a*e**2 - b*d*e + c*d**2)/e**2)**p, x), x, (d + e*x)**(1/q))/e))
    rubi.add(rule440)

    pattern441 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda n, p: IntegersQ(n, p)), CustomConstraint(lambda m: FractionQ(m)))
    rule441 = ReplacementRule(pattern441, lambda m, c, p, d, f, x, n, a, g, e : With(List(Set(q, Denominator(m))), q*Subst(Int(x**(q*(m + 1) - 1)*(g*x**q/e + (-d*g + e*f)/e)**n*(-2*c*d*x**q/e**2 + c*x**(2*q)/e**2 + (a*e**2 + c*d**2)/e**2)**p, x), x, (d + e*x)**(1/q))/e))
    rubi.add(rule441)

    pattern442 = Pattern(Integral((d_ + x_*WC('e', S(1)))**WC('m', S(1))*(f_ + x_*WC('g', S(1)))**WC('n', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, m: ZeroQ(m - n)), CustomConstraint(lambda d, g, e, f: ZeroQ(d*g + e*f)), CustomConstraint(lambda f, m, d: IntegerQ(m) | (PositiveQ(d) & PositiveQ(f))))
    rule442 = ReplacementRule(pattern442, lambda m, c, p, d, b, f, x, n, a, g, e : Int((d*f + e*g*x**2)**m*(a + b*x + c*x**2)**p, x))
    rubi.add(rule442)

    pattern443 = Pattern(Integral((d_ + x_*WC('e', S(1)))**WC('m', S(1))*(f_ + x_*WC('g', S(1)))**WC('n', S(1))*(x_**2*WC('c', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, m: ZeroQ(m - n)), CustomConstraint(lambda d, g, e, f: ZeroQ(d*g + e*f)), CustomConstraint(lambda f, m, d: IntegerQ(m) | (PositiveQ(d) & PositiveQ(f))))
    rule443 = ReplacementRule(pattern443, lambda m, c, p, d, f, x, n, a, g, e : Int((a + c*x**2)**p*(d*f + e*g*x**2)**m, x))
    rubi.add(rule443)

    pattern444 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(f_ + x_*WC('g', S(1)))**n_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, m: ZeroQ(m - n)), CustomConstraint(lambda d, g, e, f: ZeroQ(d*g + e*f)))
    rule444 = ReplacementRule(pattern444, lambda e, m, c, p, d, f, x, n, a, g, b : (d + e*x)**FracPart(m)*(f + g*x)**FracPart(m)*(d*f + e*g*x**2)**(-FracPart(m))*Int((d*f + e*g*x**2)**m*(a + b*x + c*x**2)**p, x))
    rubi.add(rule444)

    pattern445 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(f_ + x_*WC('g', S(1)))**n_*(x_**2*WC('c', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, m: ZeroQ(m - n)), CustomConstraint(lambda d, g, e, f: ZeroQ(d*g + e*f)))
    rule445 = ReplacementRule(pattern445, lambda m, c, p, d, f, x, n, a, g, e : (d + e*x)**FracPart(m)*(f + g*x)**FracPart(m)*(d*f + e*g*x**2)**(-FracPart(m))*Int((a + c*x**2)**p*(d*f + e*g*x**2)**m, x))
    rubi.add(rule445)

    pattern446 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda n, m: RationalQ(m, n)))
    rule446 = ReplacementRule(pattern446, lambda m, c, d, b, f, x, n, a, g, e : c*Int(x**2*(d + e*x)**m*(f + g*x)**n, x) + Int((a + b*x)*(d + e*x)**m*(f + g*x)**n, x))
    rubi.add(rule446)

    pattern447 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))*(x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda n, m: RationalQ(m, n)))
    rule447 = ReplacementRule(pattern447, lambda m, c, d, f, x, n, a, g, e : a*Int((d + e*x)**m*(f + g*x)**n, x) + c*Int(x**2*(d + e*x)**m*(f + g*x)**n, x))
    rubi.add(rule447)

    pattern448 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_/(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda m: ~(IntegerQ(m))), CustomConstraint(lambda n: ~(IntegerQ(n))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Greater(m, 0)), CustomConstraint(lambda n: Greater(n, 1)))
    rule448 = ReplacementRule(pattern448, lambda m, c, d, b, f, x, n, a, g, e : g*Int((d + e*x)**(m - 1)*(f + g*x)**(n - 2)*Simp(-b*e*g + c*d*g + 2*c*e*f + c*e*g*x, x), x)/c**2 + Int((d + e*x)**(m - 1)*(f + g*x)**(n - 2)*Simp(a*b*e*g**2 - a*c*d*g**2 - 2*a*c*e*f*g + c**2*d*f**2 + x*(-a*c*e*g**2 + b**2*e*g**2 - b*c*d*g**2 - 2*b*c*e*f*g + 2*c**2*d*f*g + c**2*e*f**2), x)/(a + b*x + c*x**2), x)/c**2)
    rubi.add(rule448)

    pattern449 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_/(a_ + x_**2*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda m: ~(IntegerQ(m))), CustomConstraint(lambda n: ~(IntegerQ(n))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Greater(m, 0)), CustomConstraint(lambda n: Greater(n, 1)))
    rule449 = ReplacementRule(pattern449, lambda m, c, d, f, x, n, a, g, e : g*Int((d + e*x)**(m - 1)*(f + g*x)**(n - 2)*Simp(d*g + 2*e*f + e*g*x, x), x)/c + Int((d + e*x)**(m - 1)*(f + g*x)**(n - 2)*Simp(-a*d*g**2 - 2*a*e*f*g + c*d*f**2 + x*(-a*e*g**2 + 2*c*d*f*g + c*e*f**2), x)/(a + c*x**2), x)/c)
    rubi.add(rule449)

    pattern450 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_/(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda m: ~(IntegerQ(m))), CustomConstraint(lambda n: ~(IntegerQ(n))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Greater(m, 0)), CustomConstraint(lambda n: Greater(n, 0)))
    rule450 = ReplacementRule(pattern450, lambda m, c, d, b, f, x, n, a, g, e : e*g*Int((d + e*x)**(m - 1)*(f + g*x)**(n - 1), x)/c + Int((d + e*x)**(m - 1)*(f + g*x)**(n - 1)*Simp(-a*e*g + c*d*f + x*(-b*e*g + c*d*g + c*e*f), x)/(a + b*x + c*x**2), x)/c)
    rubi.add(rule450)

    pattern451 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_/(a_ + x_**2*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda m: ~(IntegerQ(m))), CustomConstraint(lambda n: ~(IntegerQ(n))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Greater(m, 0)), CustomConstraint(lambda n: Greater(n, 0)))
    rule451 = ReplacementRule(pattern451, lambda m, c, d, f, x, n, a, g, e : e*g*Int((d + e*x)**(m - 1)*(f + g*x)**(n - 1), x)/c + Int((d + e*x)**(m - 1)*(f + g*x)**(n - 1)*Simp(-a*e*g + c*d*f + x*(c*d*g + c*e*f), x)/(a + c*x**2), x)/c)
    rubi.add(rule451)

    pattern452 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_/(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda m: ~(IntegerQ(m))), CustomConstraint(lambda n: ~(IntegerQ(n))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Greater(m, 0)), CustomConstraint(lambda n: Less(n, -1)))
    rule452 = ReplacementRule(pattern452, lambda m, c, d, b, f, x, n, a, g, e : -g*(-d*g + e*f)*Int((d + e*x)**(m - 1)*(f + g*x)**n, x)/(a*g**2 - b*f*g + c*f**2) + Int((d + e*x)**(m - 1)*(f + g*x)**(n + 1)*Simp(a*e*g - b*d*g + c*d*f + c*x*(-d*g + e*f), x)/(a + b*x + c*x**2), x)/(a*g**2 - b*f*g + c*f**2))
    rubi.add(rule452)

    pattern453 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_/(a_ + x_**2*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda m: ~(IntegerQ(m))), CustomConstraint(lambda n: ~(IntegerQ(n))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Greater(m, 0)), CustomConstraint(lambda n: Less(n, -1)))
    rule453 = ReplacementRule(pattern453, lambda m, c, d, f, x, n, a, g, e : -g*(-d*g + e*f)*Int((d + e*x)**(m - 1)*(f + g*x)**n, x)/(a*g**2 + c*f**2) + Int((d + e*x)**(m - 1)*(f + g*x)**(n + 1)*Simp(a*e*g + c*d*f + c*x*(-d*g + e*f), x)/(a + c*x**2), x)/(a*g**2 + c*f**2))
    rubi.add(rule453)

    pattern454 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_/(sqrt(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda m: PositiveIntegerQ(m + S(1)/2)))
    rule454 = ReplacementRule(pattern454, lambda m, c, d, b, f, x, a, g, e : Int(ExpandIntegrand(1/(Sqrt(d + e*x)*Sqrt(f + g*x)), (d + e*x)**(m + 1/2)/(a + b*x + c*x**2), x), x))
    rubi.add(rule454)

    pattern455 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_/(sqrt(x_*WC('g', S(1)) + WC('f', S(0)))*(x_**2*WC('c', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda m: PositiveIntegerQ(m + S(1)/2)))
    rule455 = ReplacementRule(pattern455, lambda m, c, d, f, x, a, g, e : Int(ExpandIntegrand(1/(Sqrt(d + e*x)*Sqrt(f + g*x)), (d + e*x)**(m + 1/2)/(a + c*x**2), x), x))
    rubi.add(rule455)

    pattern456 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_/(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda m: ~(IntegerQ(m))), CustomConstraint(lambda n: ~(IntegerQ(n))))
    rule456 = ReplacementRule(pattern456, lambda m, c, d, b, f, x, n, a, g, e : Int(ExpandIntegrand((d + e*x)**m*(f + g*x)**n, 1/(a + b*x + c*x**2), x), x))
    rubi.add(rule456)

    pattern457 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_/(a_ + x_**2*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda m: ~(IntegerQ(m))), CustomConstraint(lambda n: ~(IntegerQ(n))))
    rule457 = ReplacementRule(pattern457, lambda m, c, d, f, x, n, a, g, e : Int(ExpandIntegrand((d + e*x)**m*(f + g*x)**n, 1/(a + c*x**2), x), x))
    rubi.add(rule457)

    pattern458 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda p, m, n: IntegerQ(p) | IntegersQ(m, n)))
    rule458 = ReplacementRule(pattern458, lambda m, c, p, d, b, f, x, n, a, g, e : Int(ExpandIntegrand((d + e*x)**m*(f + g*x)**n*(a + b*x + c*x**2)**p, x), x))
    rubi.add(rule458)

    pattern459 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda p, m, n: IntegerQ(p) | IntegersQ(m, n)))
    rule459 = ReplacementRule(pattern459, lambda m, c, p, d, f, x, n, a, g, e : Int(ExpandIntegrand((a + c*x**2)**p*(d + e*x)**m*(f + g*x)**n, x), x))
    rubi.add(rule459)

    pattern460 = Pattern(Integral((x_*WC('g', S(1)))**WC('n', S(1))*(x_*WC('e', S(1)) + WC('d', S(0)))**m_*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda p, m: ZeroQ(m - p)), CustomConstraint(lambda e, d, b, a: ZeroQ(a*e + b*d)), CustomConstraint(lambda e, d, b, c: ZeroQ(b*e + c*d)))
    rule460 = ReplacementRule(pattern460, lambda e, m, c, p, d, x, n, a, g, b : (d + e*x)**FracPart(p)*(a*d + c*e*x**3)**(-FracPart(p))*(a + b*x + c*x**2)**FracPart(p)*Int((g*x)**n*(a*d + c*e*x**3)**p, x))
    rubi.add(rule460)

    pattern461 = Pattern(Integral((x_*WC('g', S(1)) + WC('f', S(0)))**n_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_/(x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda n: ~(IntegerQ(n))), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda n, p: RationalQ(n, p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda n: Less(n, -1)))
    rule461 = ReplacementRule(pattern461, lambda c, p, d, b, f, x, n, a, g, e : (a*e**2 - b*d*e + c*d**2)*Int((f + g*x)**(n + 1)*(a + b*x + c*x**2)**(p - 1)/(d + e*x), x)/(e*(-d*g + e*f)) - Int((f + g*x)**n*(a + b*x + c*x**2)**(p - 1)*(a*e*g - b*e*f + c*d*f - c*x*(-d*g + e*f)), x)/(e*(-d*g + e*f)))
    rubi.add(rule461)

    pattern462 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_/(x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda n: ~(IntegerQ(n))), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda n, p: RationalQ(n, p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda n: Less(n, -1)))
    rule462 = ReplacementRule(pattern462, lambda c, p, d, f, x, n, a, g, e : (a*e**2 + c*d**2)*Int((a + c*x**2)**(p - 1)*(f + g*x)**(n + 1)/(d + e*x), x)/(e*(-d*g + e*f)) - Int((a + c*x**2)**(p - 1)*(f + g*x)**n*(a*e*g + c*d*f - c*x*(-d*g + e*f)), x)/(e*(-d*g + e*f)))
    rubi.add(rule462)

    pattern463 = Pattern(Integral((x_*WC('g', S(1)) + WC('f', S(0)))**n_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_/(x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda n: ~(IntegerQ(n))), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda n, p: RationalQ(n, p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda n: Greater(n, 0)))
    rule463 = ReplacementRule(pattern463, lambda c, p, d, b, f, x, n, a, g, e : e*(-d*g + e*f)*Int((f + g*x)**(n - 1)*(a + b*x + c*x**2)**(p + 1)/(d + e*x), x)/(a*e**2 - b*d*e + c*d**2) + Int((f + g*x)**(n - 1)*(a + b*x + c*x**2)**p*(a*e*g - b*e*f + c*d*f - c*x*(-d*g + e*f)), x)/(a*e**2 - b*d*e + c*d**2))
    rubi.add(rule463)

    pattern464 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_/(x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda n: ~(IntegerQ(n))), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda n, p: RationalQ(n, p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda n: Greater(n, 0)))
    rule464 = ReplacementRule(pattern464, lambda c, p, d, f, x, n, a, g, e : e*(-d*g + e*f)*Int((a + c*x**2)**(p + 1)*(f + g*x)**(n - 1)/(d + e*x), x)/(a*e**2 + c*d**2) + Int((a + c*x**2)**p*(f + g*x)**(n - 1)*(a*e*g + c*d*f - c*x*(-d*g + e*f)), x)/(a*e**2 + c*d**2))
    rubi.add(rule464)

    pattern465 = Pattern(Integral(1/((x_*WC('e', S(1)) + WC('d', S(0)))*sqrt(x_*WC('g', S(1)) + WC('f', S(0)))*sqrt(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)))
    rule465 = ReplacementRule(pattern465, lambda c, d, b, f, x, a, g, e : With(List(Set(q, Rt(-4*a*c + b**2, 2))), -2*EllipticPi(e*(-b*g + 2*c*f + g*q)/(2*c*(-d*g + e*f)), ArcSin(Sqrt(2*c/(-b*g + 2*c*f + g*q))*Sqrt(f + g*x)), (-b*g + 2*c*f + g*q)/(-b*g + 2*c*f - g*q))*Sqrt(-g*(b + 2*c*x - q)/(-b*g + 2*c*f + g*q))*Sqrt(-g*(b + 2*c*x + q)/(-b*g + 2*c*f - g*q))/((-d*g + e*f)*Sqrt(2*c/(-b*g + 2*c*f + g*q))*Sqrt(a + b*x + c*x**2))))
    rubi.add(rule465)

    pattern466 = Pattern(Integral(1/(sqrt(a_ + x_**2*WC('c', S(1)))*(x_*WC('e', S(1)) + WC('d', S(0)))*sqrt(x_*WC('g', S(1)) + WC('f', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)))
    rule466 = ReplacementRule(pattern466, lambda c, d, f, x, a, g, e : With(List(Set(q, Rt(-a*c, 2))), -2*EllipticPi(e*(c*f + g*q)/(c*(-d*g + e*f)), ArcSin(Sqrt(c/(c*f + g*q))*Sqrt(f + g*x)), (c*f + g*q)/(c*f - g*q))*Sqrt(-g*(c*x + q)/(c*f - g*q))*Sqrt(g*(-c*x + q)/(c*f + g*q))/((-d*g + e*f)*Sqrt(c/(c*f + g*q))*Sqrt(a + c*x**2))))
    rubi.add(rule466)

    pattern467 = Pattern(Integral((x_*WC('g', S(1)) + WC('f', S(0)))**n_/((x_*WC('e', S(1)) + WC('d', S(0)))*sqrt(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda n: IntegerQ(n + S(1)/2)))
    rule467 = ReplacementRule(pattern467, lambda c, d, b, f, x, n, a, g, e : Int(ExpandIntegrand(1/(Sqrt(f + g*x)*Sqrt(a + b*x + c*x**2)), (f + g*x)**(n + 1/2)/(d + e*x), x), x))
    rubi.add(rule467)

    pattern468 = Pattern(Integral((x_*WC('g', S(1)) + WC('f', S(0)))**n_/(sqrt(a_ + x_**2*WC('c', S(1)))*(x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda n: IntegerQ(n + S(1)/2)))
    rule468 = ReplacementRule(pattern468, lambda c, d, f, x, n, a, g, e : Int(ExpandIntegrand(1/(Sqrt(a + c*x**2)*Sqrt(f + g*x)), (f + g*x)**(n + 1/2)/(d + e*x), x), x))
    rubi.add(rule468)

    pattern469 = Pattern(Integral(1/(sqrt(x_*WC('e', S(1)) + WC('d', S(0)))*sqrt(x_*WC('g', S(1)) + WC('f', S(0)))*sqrt(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)))
    rule469 = ReplacementRule(pattern469, lambda c, d, b, f, x, a, g, e : -2*(d + e*x)*Sqrt((-d*g + e*f)**2*(a + b*x + c*x**2)/((d + e*x)**2*(a*g**2 - b*f*g + c*f**2)))*Subst(Int(1/Sqrt(x**4*(a*e**2 - b*d*e + c*d**2)/(a*g**2 - b*f*g + c*f**2) - x**2*(2*a*e*g - b*d*g - b*e*f + 2*c*d*f)/(a*g**2 - b*f*g + c*f**2) + 1), x), x, Sqrt(f + g*x)/Sqrt(d + e*x))/((-d*g + e*f)*Sqrt(a + b*x + c*x**2)))
    rubi.add(rule469)

    pattern470 = Pattern(Integral(1/(sqrt(a_ + x_**2*WC('c', S(1)))*sqrt(x_*WC('e', S(1)) + WC('d', S(0)))*sqrt(x_*WC('g', S(1)) + WC('f', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)))
    rule470 = ReplacementRule(pattern470, lambda c, d, f, x, a, g, e : -2*(d + e*x)*Sqrt((a + c*x**2)*(-d*g + e*f)**2/((d + e*x)**2*(a*g**2 + c*f**2)))*Subst(Int(1/Sqrt(x**4*(a*e**2 + c*d**2)/(a*g**2 + c*f**2) - x**2*(2*a*e*g + 2*c*d*f)/(a*g**2 + c*f**2) + 1), x), x, Sqrt(f + g*x)/Sqrt(d + e*x))/((-d*g + e*f)*Sqrt(a + c*x**2)))
    rubi.add(rule470)

    pattern471 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(f_ + x_*WC('g', S(1)))**2, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)))
    rule471 = ReplacementRule(pattern471, lambda m, c, p, f, x, a, g, e : Int((e*x)**m*(a + c*x**2)**p*(f**2 + g**2*x**2), x) + 2*f*g*Int((e*x)**(m + 1)*(a + c*x**2)**p, x)/e)
    rubi.add(rule471)

    pattern472 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(f_ + x_*WC('g', S(1)))**3, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)))
    rule472 = ReplacementRule(pattern472, lambda m, c, p, f, x, a, g, e : f*Int((e*x)**m*(a + c*x**2)**p*(f**2 + 3*g**2*x**2), x) + g*Int((e*x)**(m + 1)*(a + c*x**2)**p*(3*f**2 + g**2*x**2), x)/e)
    rubi.add(rule472)

    pattern473 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda c, d, b, a, e: NonzeroQ(a*e**2 - b*d*e + c*d**2)), CustomConstraint(lambda n: PositiveIntegerQ(n)))
    rule473 = ReplacementRule(pattern473, lambda m, c, p, d, b, f, x, n, a, g, e : g*Int((d + e*x)**(m + 1)*(f + g*x)**(n - 1)*(a + b*x + c*x**2)**p, x)/e + (-d*g + e*f)*Int((d + e*x)**m*(f + g*x)**(n - 1)*(a + b*x + c*x**2)**p, x)/e)
    rubi.add(rule473)

    pattern474 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(x_*WC('e', S(1)) + WC('d', S(0)))**m_*(x_*WC('g', S(1)) + WC('f', S(0)))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, g, e, f: NonzeroQ(-d*g + e*f)), CustomConstraint(lambda e, d, a, c: NonzeroQ(a*e**2 + c*d**2)), CustomConstraint(lambda n: PositiveIntegerQ(n)))
    rule474 = ReplacementRule(pattern474, lambda m, c, p, d, f, x, n, a, g, e : g*Int((a + c*x**2)**p*(d + e*x)**(m + 1)*(f + g*x)**(n - 1), x)/e + (-d*g + e*f)*Int((a + c*x**2)**p*(d + e*x)**m*(f + g*x)**(n - 1), x)/e)
    rubi.add(rule474)

    pattern475 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)))
    rule475 = ReplacementRule(pattern475, lambda m, c, p, d, b, f, x, n, a, g, e : Int((d + e*x)**m*(f + g*x)**n*(a + b*x + c*x**2)**p, x))
    rubi.add(rule475)

    pattern476 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)))
    rule476 = ReplacementRule(pattern476, lambda m, c, p, d, f, x, n, a, g, e : Int((a + c*x**2)**p*(d + e*x)**m*(f + g*x)**n, x))
    rubi.add(rule476)

    pattern477 = Pattern(Integral((u_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(u_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))*(a_ + u_**2*WC('c', S(1)) + u_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule477 = ReplacementRule(pattern477, lambda u, m, c, p, d, b, f, x, n, a, g, e : Subst(Int((d + e*x)**m*(f + g*x)**n*(a + b*x + c*x**2)**p, x), x, u)/Coefficient(u, x, 1))
    rubi.add(rule477)

    pattern478 = Pattern(Integral((a_ + u_**2*WC('c', S(1)))**WC('p', S(1))*(u_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(u_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule478 = ReplacementRule(pattern478, lambda u, m, c, p, d, f, x, n, a, g, e : Subst(Int((a + c*x**2)**p*(d + e*x)**m*(f + g*x)**n, x), x, u)/Coefficient(u, x, 1))
    rubi.add(rule478)

    pattern479 = Pattern(Integral((a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda f, d, a, c: ZeroQ(-a*f + c*d)), CustomConstraint(lambda e, d, b, a: ZeroQ(-a*e + b*d)), CustomConstraint(lambda f, p, c: IntegerQ(p) | PositiveQ(c/f)), CustomConstraint(lambda c, q, d, b, f, x, a, e: ~(IntegerQ(q)) | LessEqual(LeafCount(d + e*x + f*x**2), LeafCount(a + b*x + c*x**2))))
    rule479 = ReplacementRule(pattern479, lambda c, q, p, d, b, f, x, a, e : (c/f)**p*Int((d + e*x + f*x**2)**(p + q), x))
    rubi.add(rule479)

    pattern480 = Pattern(Integral((a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda f, d, a, c: ZeroQ(-a*f + c*d)), CustomConstraint(lambda e, d, b, a: ZeroQ(-a*e + b*d)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda q: ~(IntegerQ(q))), CustomConstraint(lambda f, c: ~(PositiveQ(c/f))))
    rule480 = ReplacementRule(pattern480, lambda c, q, p, d, b, f, x, a, e : a**IntPart(p)*d**(-IntPart(p))*(a + b*x + c*x**2)**FracPart(p)*(d + e*x + f*x**2)**(-FracPart(p))*Int((d + e*x + f*x**2)**(p + q), x))
    rubi.add(rule480)

    pattern481 = Pattern(Integral((a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**p_*(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule481 = ReplacementRule(pattern481, lambda c, q, p, d, b, f, x, a, e : (4*c)**(-IntPart(p))*(b + 2*c*x)**(-2*FracPart(p))*(a + b*x + c*x**2)**FracPart(p)*Int((b + 2*c*x)**(2*p)*(d + e*x + f*x**2)**q, x))
    rubi.add(rule481)

    pattern482 = Pattern(Integral((d_ + x_**2*WC('f', S(1)))**WC('q', S(1))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule482 = ReplacementRule(pattern482, lambda c, q, p, d, f, x, a, b : (4*c)**(-IntPart(p))*(b + 2*c*x)**(-2*FracPart(p))*(a + b*x + c*x**2)**FracPart(p)*Int((b + 2*c*x)**(2*p)*(d + f*x**2)**q, x))
    rubi.add(rule482)

    pattern483 = Pattern(Integral((a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda c, q, d, b, f, a, e: ZeroQ(c*(-2*d*f + e**2*(q + 2)) + f*(2*q + 3)*(2*a*f - b*e))), CustomConstraint(lambda q: NonzeroQ(q + 1)), CustomConstraint(lambda q: NonzeroQ(2*q + 3)))
    rule483 = ReplacementRule(pattern483, lambda c, q, d, b, f, x, a, e : (d + e*x + f*x**2)**(q + 1)*(b*f*(2*q + 3) - c*e*(q + 2) + 2*c*f*x*(q + 1))/(2*f**2*(q + 1)*(2*q + 3)))
    rubi.add(rule483)

    pattern484 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda c, q, d, f, a, e: ZeroQ(2*a*f**2*(2*q + 3) + c*(-2*d*f + e**2*(q + 2)))), CustomConstraint(lambda q: NonzeroQ(q + 1)), CustomConstraint(lambda q: NonzeroQ(2*q + 3)))
    rule484 = ReplacementRule(pattern484, lambda c, q, d, f, x, a, e : (-c*e*(q + 2) + 2*c*f*x*(q + 1))*(d + e*x + f*x**2)**(q + 1)/(2*f**2*(q + 1)*(2*q + 3)))
    rubi.add(rule484)

    pattern485 = Pattern(Integral((d_ + x_**2*WC('f', S(1)))**q_*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda q: NonzeroQ(q + 1)), CustomConstraint(lambda c, q, d, f, a: ZeroQ(2*a*f*q + 3*a*f - c*d)))
    rule485 = ReplacementRule(pattern485, lambda c, q, d, f, x, a, b : (d + f*x**2)**(q + 1)*(2*a*f*x*(q + 1) + b*d)/(2*d*f*(q + 1)))
    rubi.add(rule485)

    pattern486 = Pattern(Integral((d_ + x_**2*WC('f', S(1)))**q_*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda q: PositiveIntegerQ(q + 2)))
    rule486 = ReplacementRule(pattern486, lambda c, q, d, f, x, a, b : b*Int(x*(d + f*x**2)**q, x) + Int((a + c*x**2)*(d + f*x**2)**q, x))
    rubi.add(rule486)

    pattern487 = Pattern(Integral((a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda q: PositiveIntegerQ(q + 2)))
    rule487 = ReplacementRule(pattern487, lambda c, q, d, b, f, x, a, e : Int(ExpandIntegrand((a + b*x + c*x**2)*(d + e*x + f*x**2)**q, x), x))
    rubi.add(rule487)

    pattern488 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda q: PositiveIntegerQ(q + 2)))
    rule488 = ReplacementRule(pattern488, lambda c, q, d, f, x, a, e : Int(ExpandIntegrand((a + c*x**2)*(d + e*x + f*x**2)**q, x), x))
    rubi.add(rule488)

    pattern489 = Pattern(Integral((a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda q: RationalQ(q)), CustomConstraint(lambda q: Less(q, -1)), CustomConstraint(lambda c, q, d, b, f, a, e: NonzeroQ(c*(-2*d*f + e**2*(q + 2)) + f*(2*q + 3)*(2*a*f - b*e))))
    rule489 = ReplacementRule(pattern489, lambda c, q, d, b, f, x, a, e : -(c*(-2*d*f + e**2*(q + 2)) + f*(2*q + 3)*(2*a*f - b*e))*Int((d + e*x + f*x**2)**(q + 1), x)/(f*(q + 1)*(-4*d*f + e**2)) + (d + e*x + f*x**2)**(q + 1)*(a*e*f - 2*b*d*f + c*d*e + x*(c*(-2*d*f + e**2) + f*(2*a*f - b*e)))/(f*(q + 1)*(-4*d*f + e**2)))
    rubi.add(rule489)

    pattern490 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda q: RationalQ(q)), CustomConstraint(lambda q: Less(q, -1)), CustomConstraint(lambda c, q, d, f, a, e: NonzeroQ(2*a*f**2*(2*q + 3) + c*(-2*d*f + e**2*(q + 2)))))
    rule490 = ReplacementRule(pattern490, lambda c, q, d, f, x, a, e : -(2*a*f**2*(2*q + 3) + c*(-2*d*f + e**2*(q + 2)))*Int((d + e*x + f*x**2)**(q + 1), x)/(f*(q + 1)*(-4*d*f + e**2)) + (d + e*x + f*x**2)**(q + 1)*(a*e*f + c*d*e + x*(2*a*f**2 + c*(-2*d*f + e**2)))/(f*(q + 1)*(-4*d*f + e**2)))
    rubi.add(rule490)

    pattern491 = Pattern(Integral((d_ + x_**2*WC('f', S(1)))**q_*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda q: RationalQ(q)), CustomConstraint(lambda q: Less(q, -1)), CustomConstraint(lambda c, q, d, f, a: NonzeroQ(2*a*f*q + 3*a*f - c*d)))
    rule491 = ReplacementRule(pattern491, lambda c, q, d, f, x, a, b : (d + f*x**2)**(q + 1)*(b*d - x*(a*f - c*d))/(2*d*f*(q + 1)) + (2*a*f*q + 3*a*f - c*d)*Int((d + f*x**2)**(q + 1), x)/(2*d*f*(q + 1)))
    rubi.add(rule491)

    pattern492 = Pattern(Integral((a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**q_, x_), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda q: ~(PositiveIntegerQ(q))), CustomConstraint(lambda q: ~(RationalQ(q) & LessEqual(q, -1))), CustomConstraint(lambda c, q, d, b, f, a, e: NonzeroQ(c*(-2*d*f + e**2*(q + 2)) + f*(2*q + 3)*(2*a*f - b*e))))
    rule492 = ReplacementRule(pattern492, lambda c, q, d, b, f, x, a, e : (c*(-2*d*f + e**2*(q + 2)) + f*(2*q + 3)*(2*a*f - b*e))*Int((d + e*x + f*x**2)**q, x)/(2*f**2*(2*q + 3)) + (d + e*x + f*x**2)**(q + 1)*(b*f*(2*q + 3) - c*e*(q + 2) + 2*c*f*x*(q + 1))/(2*f**2*(q + 1)*(2*q + 3)))
    rubi.add(rule492)

    pattern493 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**q_, x_), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda q: ~(PositiveIntegerQ(q))), CustomConstraint(lambda q: ~(RationalQ(q) & LessEqual(q, -1))), CustomConstraint(lambda c, q, d, f, a, e: NonzeroQ(2*a*f**2*(2*q + 3) + c*(-2*d*f + e**2*(q + 2)))))
    rule493 = ReplacementRule(pattern493, lambda c, q, d, f, x, a, e : (2*a*f**2*(2*q + 3) + c*(-2*d*f + e**2*(q + 2)))*Int((d + e*x + f*x**2)**q, x)/(2*f**2*(2*q + 3)) + (-c*e*(q + 2) + 2*c*f*x*(q + 1))*(d + e*x + f*x**2)**(q + 1)/(2*f**2*(q + 1)*(2*q + 3)))
    rubi.add(rule493)

    pattern494 = Pattern(Integral((d_ + x_**2*WC('f', S(1)))**q_*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1))), x_), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda q: ~(PositiveIntegerQ(q))), CustomConstraint(lambda q: ~(RationalQ(q) & LessEqual(q, -1))), CustomConstraint(lambda c, q, d, f, a: NonzeroQ(2*a*f*q + 3*a*f - c*d)))
    rule494 = ReplacementRule(pattern494, lambda c, q, d, f, x, a, b : (2*a*f*q + 3*a*f - c*d)*Int((d + f*x**2)**q, x)/(f*(2*q + 3)) + (d + f*x**2)**(q + 1)*(b*f*(2*q + 3) + 2*c*f*x*(q + 1))/(2*f**2*(q + 1)*(2*q + 3)))
    rubi.add(rule494)

    pattern495 = Pattern(Integral((x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda q, p: RationalQ(p, q)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda q: Greater(q, 0)))
    rule495 = ReplacementRule(pattern495, lambda c, q, p, d, b, f, x, a, e : (b + 2*c*x)*(a + b*x + c*x**2)**(p + 1)*(d + e*x + f*x**2)**q/((p + 1)*(-4*a*c + b**2)) - Int((a + b*x + c*x**2)**(p + 1)*(d + e*x + f*x**2)**(q - 1)*Simp(b*e*q + 2*c*d*(2*p + 3) + 2*c*f*x**2*(2*p + 2*q + 3) + x*(2*b*f*q + 2*c*e*(2*p + q + 3)), x), x)/((p + 1)*(-4*a*c + b**2)))
    rubi.add(rule495)

    pattern496 = Pattern(Integral((x_**2*WC('f', S(1)) + WC('d', S(0)))**WC('q', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda q, p: RationalQ(p, q)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda q: Greater(q, 0)))
    rule496 = ReplacementRule(pattern496, lambda c, q, p, d, f, x, a, b : (b + 2*c*x)*(d + f*x**2)**q*(a + b*x + c*x**2)**(p + 1)/((p + 1)*(-4*a*c + b**2)) - Int((d + f*x**2)**(q - 1)*(a + b*x + c*x**2)**(p + 1)*Simp(2*b*f*q*x + 2*c*d*(2*p + 3) + 2*c*f*x**2*(2*p + 2*q + 3), x), x)/((p + 1)*(-4*a*c + b**2)))
    rubi.add(rule496)

    pattern497 = Pattern(Integral((x_**2*WC('c', S(1)) + WC('a', S(0)))**p_*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda q, p: RationalQ(p, q)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda q: Greater(q, 0)))
    rule497 = ReplacementRule(pattern497, lambda c, q, p, d, f, x, a, e : -x*(a + c*x**2)**(p + 1)*(d + e*x + f*x**2)**q/(2*a*(p + 1)) + Int((a + c*x**2)**(p + 1)*(d + e*x + f*x**2)**(q - 1)*Simp(2*c*d*(2*p + 3) + 2*c*e*x*(2*p + q + 3) + 2*c*f*x**2*(2*p + 2*q + 3), x), x)/(4*a*c*(p + 1)))
    rubi.add(rule497)

    pattern498 = Pattern(Integral((x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda e, c, d, f, a, b: NonzeroQ(-(-a*e + b*d)*(-b*f + c*e) + (-a*f + c*d)**2)), CustomConstraint(lambda q, p: ~(IntegerQ(q) & Less(q, -1) & ~(IntegerQ(p)))))
    rule498 = ReplacementRule(pattern498, lambda c, q, p, d, b, f, x, a, e : (a + b*x + c*x**2)**(p + 1)*(d + e*x + f*x**2)**(q + 1)*(2*a*c**2*e + b**3*f - b**2*c*e + b*c*(-3*a*f + c*d) + c*x*(b**2*f + 2*c**2*d - c*(2*a*f + b*e)))/((p + 1)*(-4*a*c + b**2)*(-(-a*e + b*d)*(-b*f + c*e) + (-a*f + c*d)**2)) - Int((a + b*x + c*x**2)**(p + 1)*(d + e*x + f*x**2)**q*Simp(c*f*x**2*(2*p + 2*q + 5)*(b**2*f + 2*c**2*d - c*(2*a*f + b*e)) + 2*c*(p + 1)*(-(-a*e + b*d)*(-b*f + c*e) + (-a*f + c*d)**2) - e*(p + q + 2)*(-2*a*c**2*e - b**3*f + b**2*c*e - b*c*(-3*a*f + c*d)) + x*(2*f*(p + q + 2)*(2*a*c**2*e + b**3*f - b**2*c*e + b*c*(-3*a*f + c*d)) - (b*f*(p + 1) - c*e*(2*p + q + 4))*(b**2*f + 2*c**2*d - c*(2*a*f + b*e))) - (a*f*(p + 1) - c*d*(p + 2))*(b**2*f + 2*c**2*d - c*(2*a*f + b*e)), x), x)/((p + 1)*(-4*a*c + b**2)*(-(-a*e + b*d)*(-b*f + c*e) + (-a*f + c*d)**2)))
    rubi.add(rule498)

    pattern499 = Pattern(Integral((x_**2*WC('f', S(1)) + WC('d', S(0)))**WC('q', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda c, d, f, a, b: NonzeroQ(b**2*d*f + (-a*f + c*d)**2)), CustomConstraint(lambda q, p: ~(IntegerQ(q) & Less(q, -1) & ~(IntegerQ(p)))))
    rule499 = ReplacementRule(pattern499, lambda c, q, p, d, f, x, a, b : (d + f*x**2)**(q + 1)*(a + b*x + c*x**2)**(p + 1)*(b**3*f + b*c*(-3*a*f + c*d) + c*x*(-2*a*c*f + b**2*f + 2*c**2*d))/((p + 1)*(-4*a*c + b**2)*(b**2*d*f + (-a*f + c*d)**2)) - Int((d + f*x**2)**q*(a + b*x + c*x**2)**(p + 1)*Simp(c*f*x**2*(2*p + 2*q + 5)*(-2*a*c*f + b**2*f + 2*c**2*d) + 2*c*(p + 1)*(b**2*d*f + (-a*f + c*d)**2) + x*(-b*f*(p + 1)*(-2*a*c*f + b**2*f + 2*c**2*d) + 2*f*(b**3*f + b*c*(-3*a*f + c*d))*(p + q + 2)) - (a*f*(p + 1) - c*d*(p + 2))*(-2*a*c*f + b**2*f + 2*c**2*d), x), x)/((p + 1)*(-4*a*c + b**2)*(b**2*d*f + (-a*f + c*d)**2)))
    rubi.add(rule499)

    pattern500 = Pattern(Integral((x_**2*WC('c', S(1)) + WC('a', S(0)))**p_*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda c, d, f, a, e: NonzeroQ(a*c*e**2 + (-a*f + c*d)**2)), CustomConstraint(lambda q, p: ~(IntegerQ(q) & Less(q, -1) & ~(IntegerQ(p)))))
    rule500 = ReplacementRule(pattern500, lambda c, q, p, d, f, x, a, e : -(a + c*x**2)**(p + 1)*(2*a*c**2*e + c*x*(-2*a*c*f + 2*c**2*d))*(d + e*x + f*x**2)**(q + 1)/(4*a*c*(p + 1)*(a*c*e**2 + (-a*f + c*d)**2)) + Int((a + c*x**2)**(p + 1)*(d + e*x + f*x**2)**q*Simp(2*a*c**2*e**2*(p + q + 2) + c*f*x**2*(-2*a*c*f + 2*c**2*d)*(2*p + 2*q + 5) + 2*c*(p + 1)*(a*c*e**2 + (-a*f + c*d)**2) + x*(4*a*c**2*e*f*(p + q + 2) + c*e*(-2*a*c*f + 2*c**2*d)*(2*p + q + 4)) - (-2*a*c*f + 2*c**2*d)*(a*f*(p + 1) - c*d*(p + 2)), x), x)/(4*a*c*(p + 1)*(a*c*e**2 + (-a*f + c*d)**2)))
    rubi.add(rule500)

    pattern501 = Pattern(Integral((x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, 1)), CustomConstraint(lambda q, p: NonzeroQ(p + q)), CustomConstraint(lambda q, p: NonzeroQ(2*p + 2*q + 1)))
    rule501 = ReplacementRule(pattern501, lambda c, q, p, d, b, f, x, a, e : (a + b*x + c*x**2)**(p - 1)*(d + e*x + f*x**2)**(q + 1)*(b*f*(3*p + 2*q) - c*e*(2*p + q) + 2*c*f*x*(p + q))/(2*f**2*(p + q)*(2*p + 2*q + 1)) - Int((a + b*x + c*x**2)**(p - 2)*(d + e*x + f*x**2)**q*Simp(x**2*(c*(p + q)*(-c*(2*d*f*(-2*p + 1) + e**2*(3*p + q - 1)) + f*(-2*a*f + b*e)*(4*p + 2*q - 1)) + p*(-p + 1)*(-b*f + c*e)**2) + x*(2*(-p + 1)*(2*p + q)*(-a*f + c*d)*(-b*f + c*e) - (p + q)*(b*(c*(2*p + q)*(-4*d*f + e**2) + f*(2*p + 2*q + 1)*(2*a*f - b*e + 2*c*d)) + e*f*(-p + 1)*(-4*a*c + b**2))) + (-p + 1)*(2*p + q)*(-a*e + b*d)*(-b*f + c*e) - (p + q)*(-a*(c*(2*d*f - e**2*(2*p + q)) + f*(-2*a*f + b*e)*(2*p + 2*q + 1)) + b**2*d*f*(-p + 1)), x), x)/(2*f**2*(p + q)*(2*p + 2*q + 1)))
    rubi.add(rule501)

    pattern502 = Pattern(Integral((x_**2*WC('f', S(1)) + WC('d', S(0)))**WC('q', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, 1)), CustomConstraint(lambda q, p: NonzeroQ(p + q)), CustomConstraint(lambda q, p: NonzeroQ(2*p + 2*q + 1)))
    rule502 = ReplacementRule(pattern502, lambda c, q, p, d, f, x, a, b : (d + f*x**2)**(q + 1)*(b*(3*p + 2*q) + 2*c*x*(p + q))*(a + b*x + c*x**2)**(p - 1)/(2*f*(p + q)*(2*p + 2*q + 1)) - Int((d + f*x**2)**q*(a + b*x + c*x**2)**(p - 2)*Simp(b**2*d*(p - 1)*(2*p + q) + x**2*(b**2*f*p*(-p + 1) + 2*c*(p + q)*(-a*f*(4*p + 2*q - 1) + c*d*(2*p - 1))) - x*(2*b*(-p + 1)*(2*p + q)*(-a*f + c*d) - 2*b*(p + q)*(2*c*d*(2*p + q) - (a*f + c*d)*(2*p + 2*q + 1))) - (p + q)*(-2*a*(-a*f*(2*p + 2*q + 1) + c*d) + b**2*d*(-p + 1)), x), x)/(2*f*(p + q)*(2*p + 2*q + 1)))
    rubi.add(rule502)

    pattern503 = Pattern(Integral((x_**2*WC('c', S(1)) + WC('a', S(0)))**p_*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, 1)), CustomConstraint(lambda q, p: NonzeroQ(p + q)), CustomConstraint(lambda q, p: NonzeroQ(2*p + 2*q + 1)))
    rule503 = ReplacementRule(pattern503, lambda c, q, p, d, f, x, a, e : -c*(a + c*x**2)**(p - 1)*(e*(2*p + q) - 2*f*x*(p + q))*(d + e*x + f*x**2)**(q + 1)/(2*f**2*(p + q)*(2*p + 2*q + 1)) - Int((a + c*x**2)**(p - 2)*(d + e*x + f*x**2)**q*Simp(-a*c*e**2*(-p + 1)*(2*p + q) + a*(p + q)*(-2*a*f**2*(2*p + 2*q + 1) + c*(2*d*f - e**2*(2*p + q))) + x**2*(c**2*e**2*p*(-p + 1) - c*(p + q)*(2*a*f**2*(4*p + 2*q - 1) + c*(2*d*f*(-2*p + 1) + e**2*(3*p + q - 1)))) + x*(4*a*c*e*f*(-p + 1)*(p + q) + 2*c*e*(-p + 1)*(2*p + q)*(-a*f + c*d)), x), x)/(2*f**2*(p + q)*(2*p + 2*q + 1)))
    rubi.add(rule503)

    pattern504 = Pattern(Integral(1/((a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))*(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)))
    rule504 = ReplacementRule(pattern504, lambda c, d, b, f, x, a, e : With(List(Set(q, a**2*f**2 - a*b*e*f - 2*a*c*d*f + a*c*e**2 + b**2*d*f - b*c*d*e + c**2*d**2)), Condition(Int((-a*c*f + b**2*f - b*c*e + c**2*d - x*(-b*c*f + c**2*e))/(a + b*x + c*x**2), x)/q + Int((a*f**2 - b*e*f - c*d*f + c*e**2 + x*(-b*f**2 + c*e*f))/(d + e*x + f*x**2), x)/q, NonzeroQ(q))))
    rubi.add(rule504)

    pattern505 = Pattern(Integral(1/((d_ + x_**2*WC('f', S(1)))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)))
    rule505 = ReplacementRule(pattern505, lambda c, d, f, x, a, b : With(List(Set(q, a**2*f**2 - 2*a*c*d*f + b**2*d*f + c**2*d**2)), Condition(-Int((-a*f**2 + b*f**2*x + c*d*f)/(d + f*x**2), x)/q + Int((-a*c*f + b**2*f + b*c*f*x + c**2*d)/(a + b*x + c*x**2), x)/q, NonzeroQ(q))))
    rubi.add(rule505)

    pattern506 = Pattern(Integral(1/((a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))*sqrt(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda f, b, e, c: ZeroQ(-b*f + c*e)))
    rule506 = ReplacementRule(pattern506, lambda c, d, b, f, x, a, e : -2*e*Subst(Int(1/(e*(-4*a*f + b*e) - x**2*(-a*e + b*d)), x), x, (e + 2*f*x)/Sqrt(d + e*x + f*x**2)))
    rubi.add(rule506)

    pattern507 = Pattern(Integral(1/((a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))*sqrt(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda f, b, e, c: NonzeroQ(-b*f + c*e)), CustomConstraint(lambda a, b, c: PosQ(-4*a*c + b**2)))
    rule507 = ReplacementRule(pattern507, lambda c, d, b, f, x, a, e : With(List(Set(q, Rt(-4*a*c + b**2, 2))), 2*c*Int(1/((b + 2*c*x - q)*Sqrt(d + e*x + f*x**2)), x)/q - 2*c*Int(1/((b + 2*c*x + q)*Sqrt(d + e*x + f*x**2)), x)/q))
    rubi.add(rule507)

    pattern508 = Pattern(Integral(1/((a_ + x_**2*WC('c', S(1)))*sqrt(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda a, c: PosQ(-a*c)))
    rule508 = ReplacementRule(pattern508, lambda c, d, f, x, a, e : Int(1/((a - x*Rt(-a*c, 2))*Sqrt(d + e*x + f*x**2)), x)/2 + Int(1/((a + x*Rt(-a*c, 2))*Sqrt(d + e*x + f*x**2)), x)/2)
    rubi.add(rule508)

    pattern509 = Pattern(Integral(1/(sqrt(d_ + x_**2*WC('f', S(1)))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda a, b, c: PosQ(-4*a*c + b**2)))
    rule509 = ReplacementRule(pattern509, lambda c, d, f, x, a, b : With(List(Set(q, Rt(-4*a*c + b**2, 2))), 2*c*Int(1/((b + 2*c*x - q)*Sqrt(d + f*x**2)), x)/q - 2*c*Int(1/((b + 2*c*x + q)*Sqrt(d + f*x**2)), x)/q))
    rubi.add(rule509)

    pattern510 = Pattern(Integral(1/((x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))*sqrt(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda f, b, e, c: NonzeroQ(-b*f + c*e)), CustomConstraint(lambda a, b, c: NegQ(-4*a*c + b**2)))
    rule510 = ReplacementRule(pattern510, lambda c, d, b, f, x, a, e : With(List(Set(q, Rt(-(-a*e + b*d)*(-b*f + c*e) + (-a*f + c*d)**2, 2))), -Int((-a*f + c*d - q + x*(-b*f + c*e))/((a + b*x + c*x**2)*Sqrt(d + e*x + f*x**2)), x)/(2*q) + Int((-a*f + c*d + q + x*(-b*f + c*e))/((a + b*x + c*x**2)*Sqrt(d + e*x + f*x**2)), x)/(2*q)))
    rubi.add(rule510)

    pattern511 = Pattern(Integral(1/((x_**2*WC('c', S(1)) + WC('a', S(0)))*sqrt(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda a, c: NegQ(-a*c)))
    rule511 = ReplacementRule(pattern511, lambda c, d, f, x, a, e : With(List(Set(q, Rt(a*c*e**2 + (-a*f + c*d)**2, 2))), -Int((-a*f + c*d + c*e*x - q)/((a + c*x**2)*Sqrt(d + e*x + f*x**2)), x)/(2*q) + Int((-a*f + c*d + c*e*x + q)/((a + c*x**2)*Sqrt(d + e*x + f*x**2)), x)/(2*q)))
    rubi.add(rule511)

    pattern512 = Pattern(Integral(1/(sqrt(x_**2*WC('f', S(1)) + WC('d', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda a, b, c: NegQ(-4*a*c + b**2)))
    rule512 = ReplacementRule(pattern512, lambda c, d, f, x, a, b : With(List(Set(q, Rt(b**2*d*f + (-a*f + c*d)**2, 2))), -Int((-a*f - b*f*x + c*d - q)/((a + b*x + c*x**2)*Sqrt(d + f*x**2)), x)/(2*q) + Int((-a*f - b*f*x + c*d + q)/((a + b*x + c*x**2)*Sqrt(d + f*x**2)), x)/(2*q)))
    rubi.add(rule512)

    pattern513 = Pattern(Integral(sqrt(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))/(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)))
    rule513 = ReplacementRule(pattern513, lambda c, d, b, f, x, a, e : c*Int(1/Sqrt(a + b*x + c*x**2), x)/f - Int((-a*f + c*d + x*(-b*f + c*e))/((d + e*x + f*x**2)*Sqrt(a + b*x + c*x**2)), x)/f)
    rubi.add(rule513)

    pattern514 = Pattern(Integral(sqrt(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))/(d_ + x_**2*WC('f', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)))
    rule514 = ReplacementRule(pattern514, lambda c, d, f, x, a, b : c*Int(1/Sqrt(a + b*x + c*x**2), x)/f - Int((-a*f - b*f*x + c*d)/((d + f*x**2)*Sqrt(a + b*x + c*x**2)), x)/f)
    rubi.add(rule514)

    pattern515 = Pattern(Integral(sqrt(a_ + x_**2*WC('c', S(1)))/(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)))
    rule515 = ReplacementRule(pattern515, lambda c, d, f, x, a, e : c*Int(1/Sqrt(a + c*x**2), x)/f - Int((-a*f + c*d + c*e*x)/((d + e*x + f*x**2)*Sqrt(a + c*x**2)), x)/f)
    rubi.add(rule515)

    pattern516 = Pattern(Integral(1/(sqrt(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))*sqrt(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)))
    rule516 = ReplacementRule(pattern516, lambda c, d, b, f, x, a, e : With(List(Set(r, Rt(-4*a*c + b**2, 2))), Int(1/(Sqrt(2*a + x*(b + r))*Sqrt(b + 2*c*x + r)*Sqrt(d + e*x + f*x**2)), x)*Sqrt(2*a + x*(b + r))*Sqrt(b + 2*c*x + r)/Sqrt(a + b*x + c*x**2)))
    rubi.add(rule516)

    pattern517 = Pattern(Integral(1/(sqrt(d_ + x_**2*WC('f', S(1)))*sqrt(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)))
    rule517 = ReplacementRule(pattern517, lambda c, d, f, x, a, b : With(List(Set(r, Rt(-4*a*c + b**2, 2))), Int(1/(Sqrt(2*a + x*(b + r))*Sqrt(d + f*x**2)*Sqrt(b + 2*c*x + r)), x)*Sqrt(2*a + x*(b + r))*Sqrt(b + 2*c*x + r)/Sqrt(a + b*x + c*x**2)))
    rubi.add(rule517)

    pattern518 = Pattern(Integral((x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)))
    rule518 = ReplacementRule(pattern518, lambda c, q, p, d, b, f, x, a, e : Int((a + b*x + c*x**2)**p*(d + e*x + f*x**2)**q, x))
    rubi.add(rule518)

    pattern519 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)))
    rule519 = ReplacementRule(pattern519, lambda c, q, p, d, f, x, a, e : Int((a + c*x**2)**p*(d + e*x + f*x**2)**q, x))
    rubi.add(rule519)

    pattern520 = Pattern(Integral((u_**2*WC('c', S(1)) + u_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1))*(u_**2*WC('f', S(1)) + u_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule520 = ReplacementRule(pattern520, lambda u, e, c, q, p, d, f, x, a, b : Subst(Int((a + b*x + c*x**2)**p*(d + e*x + f*x**2)**q, x), x, u)/Coefficient(u, x, 1))
    rubi.add(rule520)

    pattern521 = Pattern(Integral((u_**2*WC('c', S(1)) + WC('a', S(0)))**WC('p', S(1))*(u_**2*WC('f', S(1)) + u_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule521 = ReplacementRule(pattern521, lambda u, c, q, p, d, f, x, a, e : Subst(Int((a + c*x**2)**p*(d + e*x + f*x**2)**q, x), x, u)/Coefficient(u, x, 1))
    rubi.add(rule521)

    pattern522 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda f, d, a, c: ZeroQ(-a*f + c*d)), CustomConstraint(lambda e, d, b, a: ZeroQ(-a*e + b*d)), CustomConstraint(lambda f, p, c: IntegerQ(p) | PositiveQ(c/f)), CustomConstraint(lambda c, q, d, b, f, x, a, e: ~(IntegerQ(q)) | LessEqual(LeafCount(d + e*x + f*x**2), LeafCount(a + b*x + c*x**2))))
    rule522 = ReplacementRule(pattern522, lambda h, e, m, c, q, p, d, f, x, a, g, b : (c/f)**p*Int((g + h*x)**m*(d + e*x + f*x**2)**(p + q), x))
    rubi.add(rule522)

    pattern523 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda f, d, a, c: ZeroQ(-a*f + c*d)), CustomConstraint(lambda e, d, b, a: ZeroQ(-a*e + b*d)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda q: ~(IntegerQ(q))), CustomConstraint(lambda f, c: ~(PositiveQ(c/f))))
    rule523 = ReplacementRule(pattern523, lambda h, e, m, c, q, p, d, f, x, a, g, b : a**IntPart(p)*d**(-IntPart(p))*(a + b*x + c*x**2)**FracPart(p)*(d + e*x + f*x**2)**(-FracPart(p))*Int((g + h*x)**m*(d + e*x + f*x**2)**(p + q), x))
    rubi.add(rule523)

    pattern524 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**p_*(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)))
    rule524 = ReplacementRule(pattern524, lambda h, e, m, c, q, p, d, f, x, a, g, b : (4*c)**(-IntPart(p))*(b + 2*c*x)**(-2*FracPart(p))*(a + b*x + c*x**2)**FracPart(p)*Int((b + 2*c*x)**(2*p)*(g + h*x)**m*(d + e*x + f*x**2)**q, x))
    rubi.add(rule524)

    pattern525 = Pattern(Integral((d_ + x_**2*WC('f', S(1)))**WC('q', S(1))*(x_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)))
    rule525 = ReplacementRule(pattern525, lambda h, m, c, q, p, d, f, x, a, g, b : (4*c)**(-IntPart(p))*(b + 2*c*x)**(-2*FracPart(p))*(a + b*x + c*x**2)**FracPart(p)*Int((b + 2*c*x)**(2*p)*(d + f*x**2)**q*(g + h*x)**m, x))
    rubi.add(rule525)

    pattern526 = Pattern(Integral((g_ + x_*WC('h', S(1)))**WC('m', S(1))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda h, c, a, g, b: ZeroQ(a*h**2 - b*g*h + c*g**2)), CustomConstraint(lambda h, c, d, f, a, g, e: ZeroQ(a**2*f*h**2 - a*c*e*g*h + c**2*d*g**2)), CustomConstraint(lambda m: IntegerQ(m)))
    rule526 = ReplacementRule(pattern526, lambda h, e, m, c, p, d, f, x, a, g, b : Int((f*h*x/c + d*g/a)**m*(a + b*x + c*x**2)**(m + p), x))
    rubi.add(rule526)

    pattern527 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(g_ + x_*WC('h', S(1)))**WC('m', S(1))*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda h, a, g, c: ZeroQ(a*h**2 + c*g**2)), CustomConstraint(lambda h, c, d, f, a, g, e: ZeroQ(a**2*f*h**2 - a*c*e*g*h + c**2*d*g**2)), CustomConstraint(lambda m: IntegerQ(m)))
    rule527 = ReplacementRule(pattern527, lambda h, m, c, p, d, f, x, a, g, e : Int((a + c*x**2)**(m + p)*(f*h*x/c + d*g/a)**m, x))
    rubi.add(rule527)

    pattern528 = Pattern(Integral((g_ + x_*WC('h', S(1)))**WC('m', S(1))*(x_**2*WC('f', S(1)) + WC('d', S(0)))**WC('m', S(1))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda h, c, a, g, b: ZeroQ(a*h**2 - b*g*h + c*g**2)), CustomConstraint(lambda h, c, d, f, a, g: ZeroQ(a**2*f*h**2 + c**2*d*g**2)), CustomConstraint(lambda m: IntegerQ(m)))
    rule528 = ReplacementRule(pattern528, lambda h, m, c, p, d, f, x, a, g, b : Int((f*h*x/c + d*g/a)**m*(a + b*x + c*x**2)**(m + p), x))
    rubi.add(rule528)

    pattern529 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(g_ + x_*WC('h', S(1)))**WC('m', S(1))*(x_**2*WC('f', S(1)) + WC('d', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda h, a, g, c: ZeroQ(a*h**2 + c*g**2)), CustomConstraint(lambda h, c, d, f, a, g: ZeroQ(a**2*f*h**2 + c**2*d*g**2)), CustomConstraint(lambda m: IntegerQ(m)))
    rule529 = ReplacementRule(pattern529, lambda h, m, c, p, d, f, x, a, g : Int((a + c*x**2)**(m + p)*(f*h*x/c + d*g/a)**m, x))
    rubi.add(rule529)

    pattern530 = Pattern(Integral(x_**WC('p', S(1))*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda e, c, f, a, b: ZeroQ(a*f**2 - b*e*f + c*e**2)), CustomConstraint(lambda p: IntegerQ(p)))
    rule530 = ReplacementRule(pattern530, lambda c, q, p, b, f, x, a, e : Int((a/e + c*x/f)**p*(e*x + f*x**2)**(p + q), x))
    rubi.add(rule530)

    pattern531 = Pattern(Integral(x_**WC('p', S(1))*(a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda f, a, e, c: ZeroQ(a*f**2 + c*e**2)), CustomConstraint(lambda p: IntegerQ(p)))
    rule531 = ReplacementRule(pattern531, lambda c, q, p, f, x, a, e : Int((a/e + c*x/f)**p*(e*x + f*x**2)**(p + q), x))
    rubi.add(rule531)

    pattern532 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1))*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda h, e, m, c, p, f, g, b: ZeroQ(b*f*h*(m + p + 2) + c*(-e*h*(m + 2*p + 3) + 2*f*g*(p + 1)))), CustomConstraint(lambda h, m, c, p, d, f, a, g, b: ZeroQ(b*f*g*(p + 1) + h*(a*f*(m + 1) - c*d*(m + 2*p + 3)))), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p + 3)))
    rule532 = ReplacementRule(pattern532, lambda h, e, m, c, p, d, f, x, a, g, b : f*(g + h*x)**(m + 1)*(a + b*x + c*x**2)**(p + 1)/(c*h*(m + 2*p + 3)))
    rubi.add(rule532)

    pattern533 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(x_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda h, m, c, p, f, g, e: ZeroQ(c*(-e*h*(m + 2*p + 3) + 2*f*g*(p + 1)))), CustomConstraint(lambda h, m, c, p, d, f, a: ZeroQ(h*(a*f*(m + 1) - c*d*(m + 2*p + 3)))), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p + 3)))
    rule533 = ReplacementRule(pattern533, lambda h, m, c, p, d, f, x, a, g, e : f*(a + c*x**2)**(p + 1)*(g + h*x)**(m + 1)/(c*h*(m + 2*p + 3)))
    rubi.add(rule533)

    pattern534 = Pattern(Integral((d_ + x_**2*WC('f', S(1)))*(x_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda h, m, c, p, f, g, b: ZeroQ(b*f*h*(m + p + 2) + 2*c*f*g*(p + 1))), CustomConstraint(lambda h, m, c, p, d, f, a, g, b: ZeroQ(b*f*g*(p + 1) + h*(a*f*(m + 1) - c*d*(m + 2*p + 3)))), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p + 3)))
    rule534 = ReplacementRule(pattern534, lambda h, m, c, p, d, f, x, a, g, b : f*(g + h*x)**(m + 1)*(a + b*x + c*x**2)**(p + 1)/(c*h*(m + 2*p + 3)))
    rubi.add(rule534)

    pattern535 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1))*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda p, m: PositiveIntegerQ(p) | IntegersQ(m, p)))
    rule535 = ReplacementRule(pattern535, lambda h, e, m, c, p, d, f, x, a, g, b : Int(ExpandIntegrand((g + h*x)**m*(a + b*x + c*x**2)**p*(d + e*x + f*x**2), x), x))
    rubi.add(rule535)

    pattern536 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(x_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda p, m: PositiveIntegerQ(p) | IntegersQ(m, p)))
    rule536 = ReplacementRule(pattern536, lambda h, m, c, p, d, f, x, a, g, e : Int(ExpandIntegrand((a + c*x**2)**p*(g + h*x)**m*(d + e*x + f*x**2), x), x))
    rubi.add(rule536)

    pattern537 = Pattern(Integral((d_ + x_**2*WC('f', S(1)))*(x_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda p, m: PositiveIntegerQ(p) | IntegersQ(m, p)))
    rule537 = ReplacementRule(pattern537, lambda h, m, c, p, d, f, x, a, g, b : Int(ExpandIntegrand((d + f*x**2)*(g + h*x)**m*(a + b*x + c*x**2)**p, x), x))
    rubi.add(rule537)

    pattern538 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(g_ + x_*WC('h', S(1)))**WC('m', S(1))*(x_**2*WC('f', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, m: PositiveIntegerQ(p) | IntegersQ(m, p)))
    rule538 = ReplacementRule(pattern538, lambda h, m, c, p, d, f, x, a, g : Int(ExpandIntegrand((a + c*x**2)**p*(d + f*x**2)*(g + h*x)**m, x), x))
    rubi.add(rule538)

    pattern539 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))**m_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1))*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, -1)), CustomConstraint(lambda h, c, a, g, b: NonzeroQ(a*h**2 - b*g*h + c*g**2)))
    rule539 = ReplacementRule(pattern539, lambda h, e, m, c, p, d, f, x, a, g, b : (g + h*x)**(m + 1)*(a + b*x + c*x**2)**(p + 1)*(d*h**2 - e*g*h + f*g**2)/(h*(m + 1)*(a*h**2 - b*g*h + c*g**2)) + Int((g + h*x)**(m + 1)*(a + b*x + c*x**2)**p*Simp(-b*(f*g**2*(p + 1) - h*(-d*h*(m + p + 2) + e*g*(p + 1))) + h*(m + 1)*(a*e*h - a*f*g + c*d*g) - x*(c*(2*f*g**2*(p + 1) - h*(-d*h + e*g)*(m + 2*p + 3)) + f*h*(m + 1)*(-a*h + b*g)), x), x)/(h*(m + 1)*(a*h**2 - b*g*h + c*g**2)))
    rubi.add(rule539)

    pattern540 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(x_*WC('h', S(1)) + WC('g', S(0)))**m_*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, -1)), CustomConstraint(lambda h, a, g, c: NonzeroQ(a*h**2 + c*g**2)))
    rule540 = ReplacementRule(pattern540, lambda h, m, c, p, d, f, x, a, g, e : (a + c*x**2)**(p + 1)*(g + h*x)**(m + 1)*(d*h**2 - e*g*h + f*g**2)/(h*(m + 1)*(a*h**2 + c*g**2)) + Int((a + c*x**2)**p*(g + h*x)**(m + 1)*Simp(h*(m + 1)*(a*e*h - a*f*g + c*d*g) + x*(a*f*h**2*(m + 1) - c*(2*f*g**2*(p + 1) - h*(-d*h + e*g)*(m + 2*p + 3))), x), x)/(h*(m + 1)*(a*h**2 + c*g**2)))
    rubi.add(rule540)

    pattern541 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))**m_*(x_**2*WC('f', S(1)) + WC('d', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, -1)), CustomConstraint(lambda h, c, a, g, b: NonzeroQ(a*h**2 - b*g*h + c*g**2)))
    rule541 = ReplacementRule(pattern541, lambda h, m, c, p, d, f, x, a, g, b : (g + h*x)**(m + 1)*(d*h**2 + f*g**2)*(a + b*x + c*x**2)**(p + 1)/(h*(m + 1)*(a*h**2 - b*g*h + c*g**2)) + Int((g + h*x)**(m + 1)*(a + b*x + c*x**2)**p*Simp(-b*(d*h**2*(m + p + 2) + f*g**2*(p + 1)) + h*(m + 1)*(-a*f*g + c*d*g) - x*(c*(d*h**2*(m + 2*p + 3) + 2*f*g**2*(p + 1)) + f*h*(m + 1)*(-a*h + b*g)), x), x)/(h*(m + 1)*(a*h**2 - b*g*h + c*g**2)))
    rubi.add(rule541)

    pattern542 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(g_ + x_*WC('h', S(1)))**m_*(x_**2*WC('f', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, -1)), CustomConstraint(lambda h, a, g, c: NonzeroQ(a*h**2 + c*g**2)))
    rule542 = ReplacementRule(pattern542, lambda h, m, c, p, d, f, x, a, g : (a + c*x**2)**(p + 1)*(g + h*x)**(m + 1)*(d*h**2 + f*g**2)/(h*(m + 1)*(a*h**2 + c*g**2)) + Int((a + c*x**2)**p*(g + h*x)**(m + 1)*Simp(h*(m + 1)*(-a*f*g + c*d*g) + x*(a*f*h**2*(m + 1) - c*(d*h**2*(m + 2*p + 3) + 2*f*g**2*(p + 1))), x), x)/(h*(m + 1)*(a*h**2 + c*g**2)))
    rubi.add(rule542)

    pattern543 = Pattern(Integral((x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))/((x_*WC('h', S(1)) + WC('g', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**(S(3)/2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda h, c, a, g, b: NonzeroQ(a*h**2 - b*g*h + c*g**2)))
    rule543 = ReplacementRule(pattern543, lambda h, e, c, d, f, x, a, g, b : (d*h**2 - e*g*h + f*g**2)*Int(1/((g + h*x)*Sqrt(a + b*x + c*x**2)), x)/(a*h**2 - b*g*h + c*g**2) + Int((a*e*h - a*f*g - b*d*h + c*d*g + x*(a*f*h - b*f*g - c*d*h + c*e*g))/(a + b*x + c*x**2)**(3/2), x)/(a*h**2 - b*g*h + c*g**2))
    rubi.add(rule543)

    pattern544 = Pattern(Integral((x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))/((a_ + x_**2*WC('c', S(1)))**(S(3)/2)*(x_*WC('h', S(1)) + WC('g', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda h, a, g, c: NonzeroQ(a*h**2 + c*g**2)))
    rule544 = ReplacementRule(pattern544, lambda h, c, d, f, x, a, g, e : (d*h**2 - e*g*h + f*g**2)*Int(1/((g + h*x)*Sqrt(a + c*x**2)), x)/(a*h**2 + c*g**2) + Int((a*e*h - a*f*g + c*d*g + x*(a*f*h - c*d*h + c*e*g))/(a + c*x**2)**(3/2), x)/(a*h**2 + c*g**2))
    rubi.add(rule544)

    pattern545 = Pattern(Integral((x_**2*WC('f', S(1)) + WC('d', S(0)))/((x_*WC('h', S(1)) + WC('g', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**(S(3)/2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda h, c, a, g, b: NonzeroQ(a*h**2 - b*g*h + c*g**2)))
    rule545 = ReplacementRule(pattern545, lambda h, c, d, f, x, a, g, b : (d*h**2 + f*g**2)*Int(1/((g + h*x)*Sqrt(a + b*x + c*x**2)), x)/(a*h**2 - b*g*h + c*g**2) + Int((-a*f*g - b*d*h + c*d*g - x*(-a*f*h + b*f*g + c*d*h))/(a + b*x + c*x**2)**(3/2), x)/(a*h**2 - b*g*h + c*g**2))
    rubi.add(rule545)

    pattern546 = Pattern(Integral((x_**2*WC('f', S(1)) + WC('d', S(0)))/((a_ + x_**2*WC('c', S(1)))**(S(3)/2)*(g_ + x_*WC('h', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda h, a, g, c: NonzeroQ(a*h**2 + c*g**2)))
    rule546 = ReplacementRule(pattern546, lambda h, c, d, f, x, a, g : (d*h**2 + f*g**2)*Int(1/((g + h*x)*Sqrt(a + c*x**2)), x)/(a*h**2 + c*g**2) + Int((-a*f*g + c*d*g - x*(-a*f*h + c*d*h))/(a + c*x**2)**(3/2), x)/(a*h**2 + c*g**2))
    rubi.add(rule546)

    pattern547 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))**m_*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda m: Greater(m, 1)))
    rule547 = ReplacementRule(pattern547, lambda h, e, m, c, p, d, f, x, a, g, b : (g + h*x)**m*(a + b*x + c*x**2)**(p + 1)*(a*b*f - 2*a*c*e + b*c*d + x*(c*(-b*e + 2*c*d) + f*(-2*a*c + b**2)))/(c*(p + 1)*(-4*a*c + b**2)) - Int((g + h*x)**(m - 1)*(a + b*x + c*x**2)**(p + 1)*Simp(g*(c*(2*p + 3)*(-b*e + 2*c*d) - f*(2*a*c - b**2*(p + 2))) + h*m*(a*b*f - 2*a*c*e + b*c*d) + h*x*(c*(-b*e + 2*c*d)*(m + 2*p + 3) - f*(2*a*c*(m + 1) - b**2*(m + p + 2))), x), x)/(c*(p + 1)*(-4*a*c + b**2)))
    rubi.add(rule547)

    pattern548 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(x_*WC('h', S(1)) + WC('g', S(0)))**m_*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda m: Greater(m, 1)))
    rule548 = ReplacementRule(pattern548, lambda h, m, c, p, d, f, x, a, g, e : (a + c*x**2)**(p + 1)*(g + h*x)**m*(a*e - x*(-a*f + c*d))/(2*a*c*(p + 1)) - Int((a + c*x**2)**(p + 1)*(g + h*x)**(m - 1)*Simp(a*(e*h*m + f*g) - c*d*g*(2*p + 3) + h*x*(a*f*(m + 1) - c*d*(m + 2*p + 3)), x), x)/(2*a*c*(p + 1)))
    rubi.add(rule548)

    pattern549 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))**m_*(x_**2*WC('f', S(1)) + WC('d', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda m: Greater(m, 1)))
    rule549 = ReplacementRule(pattern549, lambda h, m, c, p, d, f, x, a, g, b : (g + h*x)**m*(a + b*x + c*x**2)**(p + 1)*(a*b*f + b*c*d + x*(2*c**2*d + f*(-2*a*c + b**2)))/(c*(p + 1)*(-4*a*c + b**2)) - Int((g + h*x)**(m - 1)*(a + b*x + c*x**2)**(p + 1)*Simp(g*(2*c**2*d*(2*p + 3) - f*(2*a*c - b**2*(p + 2))) + h*m*(a*b*f + b*c*d) + h*x*(2*c**2*d*(m + 2*p + 3) - f*(2*a*c*(m + 1) - b**2*(m + p + 2))), x), x)/(c*(p + 1)*(-4*a*c + b**2)))
    rubi.add(rule549)

    pattern550 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(g_ + x_*WC('h', S(1)))**m_*(x_**2*WC('f', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda m: Greater(m, 1)))
    rule550 = ReplacementRule(pattern550, lambda h, m, c, p, d, f, x, a, g : x*(a + c*x**2)**(p + 1)*(g + h*x)**m*(a*f - c*d)/(2*a*c*(p + 1)) - Int((a + c*x**2)**(p + 1)*(g + h*x)**(m - 1)*Simp(a*f*g - c*d*g*(2*p + 3) + h*x*(a*f*(m + 1) - c*d*(m + 2*p + 3)), x), x)/(2*a*c*(p + 1)))
    rubi.add(rule550)

    pattern551 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda h, c, a, g, b: NonzeroQ(c*g**2 - h*(-a*h + b*g))))
    rule551 = ReplacementRule(pattern551, lambda h, e, m, c, p, d, f, x, a, g, b : (g + h*x)**(m + 1)*(a + b*x + c*x**2)**(p + 1)*(x*(b*f*(-a*h + b*g) + 2*c**2*d*g - c*(-2*a*e*h + 2*a*f*g + b*d*h + b*e*g)) + (-a*e + b*d)*(-b*h + 2*c*g) - (-a*f + c*d)*(-2*a*h + b*g))/((p + 1)*(-4*a*c + b**2)*(c*g**2 - h*(-a*h + b*g))) - Int((g + h*x)**m*(a + b*x + c*x**2)**(p + 1)*Simp(g*(p + 2)*(-2*a*(-c*e*h + c*f*g) + b**2*f*g - b*(a*f*h + c*d*h + c*e*g) + 2*c**2*d*g) + h*x*(m + 2*p + 4)*(-2*a*(-c*e*h + c*f*g) + b**2*f*g - b*(a*f*h + c*d*h + c*e*g) + 2*c**2*d*g) - h*(-(-a*e + b*d)*(-b*h + 2*c*g) + (-a*f + c*d)*(-2*a*h + b*g))*(m + p + 2) + (p + 1)*(c*g**2 - h*(-a*h + b*g))*(2*a*f - b*e + 2*c*d), x), x)/((p + 1)*(-4*a*c + b**2)*(c*g**2 - h*(-a*h + b*g))))
    rubi.add(rule551)

    pattern552 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(x_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda h, a, g, c: NonzeroQ(a*h**2 + c*g**2)))
    rule552 = ReplacementRule(pattern552, lambda h, m, c, p, d, f, x, a, g, e : (a + c*x**2)**(p + 1)*(g + h*x)**(m + 1)*(a*c*e*g - a*h*(-a*f + c*d) - c*x*(a*e*h - a*f*g + c*d*g))/(2*a*c*(p + 1)*(a*h**2 + c*g**2)) + Int((a + c*x**2)**(p + 1)*(g + h*x)**m*Simp(g*(p + 2)*(-a*(-c*e*h + c*f*g) + c**2*d*g) + h*x*(-a*(-c*e*h + c*f*g) + c**2*d*g)*(m + 2*p + 4) - h*(a*c*e*g - a*h*(-a*f + c*d))*(m + p + 2) + (p + 1)*(a*f + c*d)*(a*h**2 + c*g**2), x), x)/(2*a*c*(p + 1)*(a*h**2 + c*g**2)))
    rubi.add(rule552)

    pattern553 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(x_**2*WC('f', S(1)) + WC('d', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda h, c, a, g, b: NonzeroQ(c*g**2 - h*(-a*h + b*g))))
    rule553 = ReplacementRule(pattern553, lambda h, m, c, p, d, f, x, a, g, b : (g + h*x)**(m + 1)*(a + b*x + c*x**2)**(p + 1)*(b*d*(-b*h + 2*c*g) + x*(b*f*(-a*h + b*g) + 2*c**2*d*g - c*(2*a*f*g + b*d*h)) - (-a*f + c*d)*(-2*a*h + b*g))/((p + 1)*(-4*a*c + b**2)*(c*g**2 - h*(-a*h + b*g))) - Int((g + h*x)**m*(a + b*x + c*x**2)**(p + 1)*Simp(g*(p + 2)*(-2*a*c*f*g + b**2*f*g - b*(a*f*h + c*d*h) + 2*c**2*d*g) + h*x*(m + 2*p + 4)*(-2*a*c*f*g + b**2*f*g - b*(a*f*h + c*d*h) + 2*c**2*d*g) - h*(-b*d*(-b*h + 2*c*g) + (-a*f + c*d)*(-2*a*h + b*g))*(m + p + 2) + 2*(p + 1)*(a*f + c*d)*(c*g**2 - h*(-a*h + b*g)), x), x)/((p + 1)*(-4*a*c + b**2)*(c*g**2 - h*(-a*h + b*g))))
    rubi.add(rule553)

    pattern554 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**p_*(g_ + x_*WC('h', S(1)))**WC('m', S(1))*(x_**2*WC('f', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda h, a, g, c: NonzeroQ(a*h**2 + c*g**2)))
    rule554 = ReplacementRule(pattern554, lambda h, m, c, p, d, f, x, a, g : (a + c*x**2)**(p + 1)*(g + h*x)**(m + 1)*(-a*h*(-a*f + c*d) - c*x*(-a*f*g + c*d*g))/(2*a*c*(p + 1)*(a*h**2 + c*g**2)) + Int((a + c*x**2)**(p + 1)*(g + h*x)**m*Simp(a*h**2*(-a*f + c*d)*(m + p + 2) + g*(p + 2)*(-a*c*f*g + c**2*d*g) + h*x*(-a*c*f*g + c**2*d*g)*(m + 2*p + 4) + (p + 1)*(a*f + c*d)*(a*h**2 + c*g**2), x), x)/(2*a*c*(p + 1)*(a*h**2 + c*g**2)))
    rubi.add(rule554)

    pattern555 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1))*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda p, m: ZeroQ(m + 2*p + 3)))
    rule555 = ReplacementRule(pattern555, lambda h, e, m, c, p, d, f, x, a, g, b : f*Int((g + h*x)**(m + 2)*(a + b*x + c*x**2)**p, x)/h**2 - Int((g + h*x)**m*(a + b*x + c*x**2)**p*(-d*h**2 + f*g**2 + h*x*(-e*h + 2*f*g)), x)/h**2)
    rubi.add(rule555)

    pattern556 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(x_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda p, m: ZeroQ(m + 2*p + 3)))
    rule556 = ReplacementRule(pattern556, lambda h, m, c, p, d, f, x, a, g, e : f*Int((a + c*x**2)**p*(g + h*x)**(m + 2), x)/h**2 - Int((a + c*x**2)**p*(g + h*x)**m*(-d*h**2 + f*g**2 + h*x*(-e*h + 2*f*g)), x)/h**2)
    rubi.add(rule556)

    pattern557 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(x_**2*WC('f', S(1)) + WC('d', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda p, m: ZeroQ(m + 2*p + 3)))
    rule557 = ReplacementRule(pattern557, lambda h, m, c, p, d, f, x, a, g, b : f*Int((g + h*x)**(m + 2)*(a + b*x + c*x**2)**p, x)/h**2 - Int((g + h*x)**m*(a + b*x + c*x**2)**p*(-d*h**2 + f*g**2 + 2*f*g*h*x), x)/h**2)
    rubi.add(rule557)

    pattern558 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(g_ + x_*WC('h', S(1)))**WC('m', S(1))*(x_**2*WC('f', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda p, m: ZeroQ(m + 2*p + 3)))
    rule558 = ReplacementRule(pattern558, lambda h, m, c, p, d, f, x, a, g : f*Int((a + c*x**2)**p*(g + h*x)**(m + 2), x)/h**2 - Int((a + c*x**2)**p*(g + h*x)**m*(-d*h**2 + f*g**2 + 2*f*g*h*x), x)/h**2)
    rubi.add(rule558)

    pattern559 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1))*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p + 3)))
    rule559 = ReplacementRule(pattern559, lambda h, e, m, c, p, d, f, x, a, g, b : f*(g + h*x)**(m + 1)*(a + b*x + c*x**2)**(p + 1)/(c*h*(m + 2*p + 3)) - Int((g + h*x)**m*(a + b*x + c*x**2)**p*Simp(b*f*g*(p + 1) + h*(a*f*(m + 1) - c*d*(m + 2*p + 3)) + x*(b*f*h*(m + p + 2) + c*(-e*h*(m + 2*p + 3) + 2*f*g*(p + 1))), x), x)/(c*h*(m + 2*p + 3)))
    rubi.add(rule559)

    pattern560 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(x_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p + 3)))
    rule560 = ReplacementRule(pattern560, lambda h, m, c, p, d, f, x, a, g, e : f*(a + c*x**2)**(p + 1)*(g + h*x)**(m + 1)/(c*h*(m + 2*p + 3)) - Int((a + c*x**2)**p*(g + h*x)**m*Simp(c*x*(-e*h*(m + 2*p + 3) + 2*f*g*(p + 1)) + h*(a*f*(m + 1) - c*d*(m + 2*p + 3)), x), x)/(c*h*(m + 2*p + 3)))
    rubi.add(rule560)

    pattern561 = Pattern(Integral((d_ + x_**2*WC('f', S(1)))*(x_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p + 3)))
    rule561 = ReplacementRule(pattern561, lambda h, m, c, p, d, f, x, a, g, b : f*(g + h*x)**(m + 1)*(a + b*x + c*x**2)**(p + 1)/(c*h*(m + 2*p + 3)) - Int((g + h*x)**m*(a + b*x + c*x**2)**p*Simp(b*f*g*(p + 1) + f*x*(b*h*(m + p + 2) + 2*c*g*(p + 1)) + h*(a*f*(m + 1) - c*d*(m + 2*p + 3)), x), x)/(c*h*(m + 2*p + 3)))
    rubi.add(rule561)

    pattern562 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**2*WC('f', S(1)))*(g_ + x_*WC('h', S(1)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda p, m: NonzeroQ(m + 2*p + 3)))
    rule562 = ReplacementRule(pattern562, lambda h, m, c, p, d, f, x, a, g : f*(a + c*x**2)**(p + 1)*(g + h*x)**(m + 1)/(c*h*(m + 2*p + 3)) - Int((a + c*x**2)**p*(g + h*x)**m*Simp(2*c*f*g*x*(p + 1) + h*(a*f*(m + 1) - c*d*(m + 2*p + 3)), x), x)/(c*h*(m + 2*p + 3)))
    rubi.add(rule562)

    pattern563 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda q, p: IntegersQ(p, q)), CustomConstraint(lambda p: Greater(p, 0)))
    rule563 = ReplacementRule(pattern563, lambda h, e, c, q, p, d, f, x, a, g, b : Int(ExpandIntegrand((g + h*x)*(a + b*x + c*x**2)**p*(d + e*x + f*x**2)**q, x), x))
    rubi.add(rule563)

    pattern564 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(x_*WC('h', S(1)) + WC('g', S(0)))*(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda q, p: IntegersQ(p, q)), CustomConstraint(lambda q, p: Greater(p, 0) | Greater(q, 0)))
    rule564 = ReplacementRule(pattern564, lambda h, c, q, p, d, f, x, a, g, e : Int(ExpandIntegrand((a + c*x**2)**p*(g + h*x)*(d + e*x + f*x**2)**q, x), x))
    rubi.add(rule564)

    pattern565 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda q, p: RationalQ(p, q)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda q: Greater(q, 0)))
    rule565 = ReplacementRule(pattern565, lambda h, e, c, q, p, d, f, x, a, g, b : (a + b*x + c*x**2)**(p + 1)*(d + e*x + f*x**2)**q*(-2*a*h + b*g - x*(b*h - 2*c*g))/((p + 1)*(-4*a*c + b**2)) - Int((a + b*x + c*x**2)**(p + 1)*(d + e*x + f*x**2)**(q - 1)*Simp(-d*(2*p + 3)*(b*h - 2*c*g) + e*q*(-2*a*h + b*g) - f*x**2*(b*h - 2*c*g)*(2*p + 2*q + 3) + x*(-e*(b*h - 2*c*g)*(2*p + q + 3) + 2*f*q*(-2*a*h + b*g)), x), x)/((p + 1)*(-4*a*c + b**2)))
    rubi.add(rule565)

    pattern566 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(x_*WC('h', S(1)) + WC('g', S(0)))*(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda q, p: RationalQ(p, q)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda q: Greater(q, 0)))
    rule566 = ReplacementRule(pattern566, lambda h, c, q, p, d, f, x, a, g, e : (a + c*x**2)**(p + 1)*(a*h - c*g*x)*(d + e*x + f*x**2)**q/(2*a*c*(p + 1)) + Int((a + c*x**2)**(p + 1)*(d + e*x + f*x**2)**(q - 1)*Simp(-a*e*h*q + c*d*g*(2*p + 3) + c*f*g*x**2*(2*p + 2*q + 3) + x*(-2*a*f*h*q + c*e*g*(2*p + q + 3)), x), x)/(2*a*c*(p + 1)))
    rubi.add(rule566)

    pattern567 = Pattern(Integral((d_ + x_**2*WC('f', S(1)))**WC('q', S(1))*(x_*WC('h', S(1)) + WC('g', S(0)))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda q, p: RationalQ(p, q)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda q: Greater(q, 0)))
    rule567 = ReplacementRule(pattern567, lambda h, c, q, p, d, f, x, a, g, b : (d + f*x**2)**q*(a + b*x + c*x**2)**(p + 1)*(-2*a*h + b*g - x*(b*h - 2*c*g))/((p + 1)*(-4*a*c + b**2)) - Int((d + f*x**2)**(q - 1)*(a + b*x + c*x**2)**(p + 1)*Simp(-d*(2*p + 3)*(b*h - 2*c*g) + 2*f*q*x*(-2*a*h + b*g) - f*x**2*(b*h - 2*c*g)*(2*p + 2*q + 3), x), x)/((p + 1)*(-4*a*c + b**2)))
    rubi.add(rule567)

    pattern568 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda e, c, d, f, a, b: NonzeroQ(-(-a*e + b*d)*(-b*f + c*e) + (-a*f + c*d)**2)), CustomConstraint(lambda q, p: ~(IntegerQ(q) & Less(q, -1) & ~(IntegerQ(p)))))
    rule568 = ReplacementRule(pattern568, lambda h, e, c, q, p, d, f, x, a, g, b : (a + b*x + c*x**2)**(p + 1)*(d + e*x + f*x**2)**(q + 1)*(c*g*(2*a*c*e - b*(a*f + c*d)) + c*x*(g*(b**2*f + 2*c**2*d - c*(2*a*f + b*e)) - h*(a*b*f - 2*a*c*e + b*c*d)) + (-a*h + b*g)*(b**2*f + 2*c**2*d - c*(2*a*f + b*e)))/((p + 1)*(-4*a*c + b**2)*(-(-a*e + b*d)*(-b*f + c*e) + (-a*f + c*d)**2)) + Int((a + b*x + c*x**2)**(p + 1)*(d + e*x + f*x**2)**q*Simp(-c*f*x**2*(2*p + 2*q + 5)*(2*a*c*e*h + b**2*f*g - b*(a*f*h + c*d*h + c*e*g) + 2*c*g*(-a*f + c*d)) - e*(c*g*(2*a*c*e - b*(a*f + c*d)) + (-a*h + b*g)*(b**2*f + 2*c**2*d - c*(2*a*f + b*e)))*(p + q + 2) - x*(2*f*(c*g*(2*a*c*e - b*(a*f + c*d)) + (-a*h + b*g)*(b**2*f + 2*c**2*d - c*(2*a*f + b*e)))*(p + q + 2) - (b*f*(p + 1) - c*e*(2*p + q + 4))*(2*a*c*e*h + b**2*f*g - b*(a*f*h + c*d*h + c*e*g) + 2*c*g*(-a*f + c*d))) + (p + 1)*(b*h - 2*c*g)*(-(-a*e + b*d)*(-b*f + c*e) + (-a*f + c*d)**2) + (a*f*(p + 1) - c*d*(p + 2))*(2*a*c*e*h + b**2*f*g - b*(a*f*h + c*d*h + c*e*g) + 2*c*g*(-a*f + c*d)), x), x)/((p + 1)*(-4*a*c + b**2)*(-(-a*e + b*d)*(-b*f + c*e) + (-a*f + c*d)**2)))
    rubi.add(rule568)

    pattern569 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(x_*WC('h', S(1)) + WC('g', S(0)))*(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda c, d, f, a, e: NonzeroQ(a*c*e**2 + (-a*f + c*d)**2)), CustomConstraint(lambda q, p: ~(IntegerQ(q) & Less(q, -1) & ~(IntegerQ(p)))))
    rule569 = ReplacementRule(pattern569, lambda h, c, q, p, d, f, x, a, g, e : -(a + c*x**2)**(p + 1)*(d + e*x + f*x**2)**(q + 1)*(2*a*c**2*e*g - a*h*(-2*a*c*f + 2*c**2*d) + c*x*(2*a*c*e*h + g*(-2*a*c*f + 2*c**2*d)))/(4*a*c*(p + 1)*(a*c*e**2 + (-a*f + c*d)**2)) - Int((a + c*x**2)**(p + 1)*(d + e*x + f*x**2)**q*Simp(-c*f*x**2*(2*a*c*e*h + 2*c*g*(-a*f + c*d))*(2*p + 2*q + 5) - 2*c*g*(p + 1)*(a*c*e**2 + (-a*f + c*d)**2) - e*(2*a*c**2*e*g - a*h*(-2*a*c*f + 2*c**2*d))*(p + q + 2) - x*(c*e*(2*a*c*e*h + 2*c*g*(-a*f + c*d))*(2*p + q + 4) + 2*f*(2*a*c**2*e*g - a*h*(-2*a*c*f + 2*c**2*d))*(p + q + 2)) + (a*f*(p + 1) - c*d*(p + 2))*(2*a*c*e*h + 2*c*g*(-a*f + c*d)), x), x)/(4*a*c*(p + 1)*(a*c*e**2 + (-a*f + c*d)**2)))
    rubi.add(rule569)

    pattern570 = Pattern(Integral((d_ + x_**2*WC('f', S(1)))**WC('q', S(1))*(x_*WC('h', S(1)) + WC('g', S(0)))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda c, d, f, a, b: NonzeroQ(b**2*d*f + (-a*f + c*d)**2)), CustomConstraint(lambda q, p: ~(IntegerQ(q) & Less(q, -1) & ~(IntegerQ(p)))))
    rule570 = ReplacementRule(pattern570, lambda h, c, q, p, d, f, x, a, g, b : (d + f*x**2)**(q + 1)*(a + b*x + c*x**2)**(p + 1)*(-b*c*g*(a*f + c*d) + c*x*(g*(-2*a*c*f + b**2*f + 2*c**2*d) - h*(a*b*f + b*c*d)) + (-a*h + b*g)*(-2*a*c*f + b**2*f + 2*c**2*d))/((p + 1)*(-4*a*c + b**2)*(b**2*d*f + (-a*f + c*d)**2)) + Int((d + f*x**2)**q*(a + b*x + c*x**2)**(p + 1)*Simp(-c*f*x**2*(2*p + 2*q + 5)*(b**2*f*g - b*(a*f*h + c*d*h) + 2*c*g*(-a*f + c*d)) - x*(-b*f*(p + 1)*(b**2*f*g - b*(a*f*h + c*d*h) + 2*c*g*(-a*f + c*d)) + 2*f*(-b*c*g*(a*f + c*d) + (-a*h + b*g)*(-2*a*c*f + b**2*f + 2*c**2*d))*(p + q + 2)) + (p + 1)*(b*h - 2*c*g)*(b**2*d*f + (-a*f + c*d)**2) + (a*f*(p + 1) - c*d*(p + 2))*(b**2*f*g - b*(a*f*h + c*d*h) + 2*c*g*(-a*f + c*d)), x), x)/((p + 1)*(-4*a*c + b**2)*(b**2*d*f + (-a*f + c*d)**2)))
    rubi.add(rule570)

    pattern571 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda q, p: NonzeroQ(p + q + 1)))
    rule571 = ReplacementRule(pattern571, lambda h, e, c, q, p, d, f, x, a, g, b : h*(a + b*x + c*x**2)**p*(d + e*x + f*x**2)**(q + 1)/(2*f*(p + q + 1)) - Int((a + b*x + c*x**2)**(p - 1)*(d + e*x + f*x**2)**q*Simp(a*(e*h - 2*f*g)*(p + q + 1) + h*p*(-a*e + b*d) + x**2*(c*(e*h - 2*f*g)*(p + q + 1) + h*p*(-b*f + c*e)) + x*(b*(e*h - 2*f*g)*(p + q + 1) + 2*h*p*(-a*f + c*d)), x), x)/(2*f*(p + q + 1)))
    rubi.add(rule571)

    pattern572 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(x_*WC('h', S(1)) + WC('g', S(0)))*(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda q, p: NonzeroQ(p + q + 1)))
    rule572 = ReplacementRule(pattern572, lambda h, c, q, p, d, f, x, a, g, e : h*(a + c*x**2)**p*(d + e*x + f*x**2)**(q + 1)/(2*f*(p + q + 1)) + Int((a + c*x**2)**(p - 1)*(d + e*x + f*x**2)**q*Simp(a*e*h*p - a*(e*h - 2*f*g)*(p + q + 1) - 2*h*p*x*(-a*f + c*d) - x**2*(c*e*h*p + c*(e*h - 2*f*g)*(p + q + 1)), x), x)/(2*f*(p + q + 1)))
    rubi.add(rule572)

    pattern573 = Pattern(Integral((d_ + x_**2*WC('f', S(1)))**WC('q', S(1))*(x_*WC('h', S(1)) + WC('g', S(0)))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda q, p: NonzeroQ(p + q + 1)))
    rule573 = ReplacementRule(pattern573, lambda h, c, q, p, d, f, x, a, g, b : h*(d + f*x**2)**(q + 1)*(a + b*x + c*x**2)**p/(2*f*(p + q + 1)) - Int((d + f*x**2)**q*(a + b*x + c*x**2)**(p - 1)*Simp(-2*a*f*g*(p + q + 1) + b*d*h*p + x**2*(-b*f*h*p - 2*c*f*g*(p + q + 1)) + x*(-2*b*f*g*(p + q + 1) + 2*h*p*(-a*f + c*d)), x), x)/(2*f*(p + q + 1)))
    rubi.add(rule573)

    pattern574 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))/((a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))*(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)))
    rule574 = ReplacementRule(pattern574, lambda h, c, d, b, f, x, a, g, e : With(List(Set(q, Simplify(a**2*f**2 - a*b*e*f - 2*a*c*d*f + a*c*e**2 + b**2*d*f - b*c*d*e + c**2*d**2))), Condition(Int(Simp(-a*b*f*h + a*c*e*h - a*c*f*g + b**2*f*g - b*c*e*g + c**2*d*g + c*x*(-a*f*h + b*f*g + c*d*h - c*e*g), x)/(a + b*x + c*x**2), x)/q + Int(Simp(a*f**2*g + b*d*f*h - b*e*f*g - c*d*e*h - c*d*f*g + c*e**2*g - f*x*(-a*f*h + b*f*g + c*d*h - c*e*g), x)/(d + e*x + f*x**2), x)/q, NonzeroQ(q))))
    rubi.add(rule574)

    pattern575 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))/((d_ + x_**2*WC('f', S(1)))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)))
    rule575 = ReplacementRule(pattern575, lambda h, c, d, f, x, a, g, b : With(List(Set(q, Simplify(a**2*f**2 - 2*a*c*d*f + b**2*d*f + c**2*d**2))), Condition(Int(Simp(a*f**2*g + b*d*f*h - c*d*f*g - f*x*(-a*f*h + b*f*g + c*d*h), x)/(d + f*x**2), x)/q + Int(Simp(-a*b*f*h - a*c*f*g + b**2*f*g + c**2*d*g + c*x*(-a*f*h + b*f*g + c*d*h), x)/(a + b*x + c*x**2), x)/q, NonzeroQ(q))))
    rubi.add(rule575)

    pattern576 = Pattern(Integral((g_ + x_*WC('h', S(1)))/((a_ + x_**2*WC('c', S(1)))*sqrt(d_ + x_**2*WC('f', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda a, c: PositiveQ(a*c)))
    rule576 = ReplacementRule(pattern576, lambda h, c, d, f, x, a, g : g*Int(1/((a + c*x**2)*Sqrt(d + f*x**2)), x) + h*Int(x/((a + c*x**2)*Sqrt(d + f*x**2)), x))
    rubi.add(rule576)

    pattern577 = Pattern(Integral((g_ + x_*WC('h', S(1)))/((a_ + x_**2*WC('c', S(1)))*sqrt(d_ + x_**2*WC('f', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda a, c: ~(PositiveQ(a*c))))
    rule577 = ReplacementRule(pattern577, lambda h, c, d, f, x, a, g : With(List(Set(q, Rt(-a*c, 2))), (-c*g - h*q)*Int(1/((-c*x + q)*Sqrt(d + f*x**2)), x)/(2*q) - (c*g - h*q)*Int(1/((c*x + q)*Sqrt(d + f*x**2)), x)/(2*q)))
    rubi.add(rule577)

    pattern578 = Pattern(Integral((g_ + x_*WC('h', S(1)))/((a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))*sqrt(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda f, b, e, c: ZeroQ(-b*f + c*e)), CustomConstraint(lambda h, g, e, f: ZeroQ(e*h - 2*f*g)))
    rule578 = ReplacementRule(pattern578, lambda h, c, d, b, f, x, a, g, e : -2*g*Subst(Int(1/(-a*e + b*d - b*x**2), x), x, Sqrt(d + e*x + f*x**2)))
    rubi.add(rule578)

    pattern579 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))/((a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))*sqrt(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda f, b, e, c: ZeroQ(-b*f + c*e)), CustomConstraint(lambda h, g, e, f: NonzeroQ(e*h - 2*f*g)))
    rule579 = ReplacementRule(pattern579, lambda h, e, c, d, f, x, a, g, b : h*Int((e + 2*f*x)/((a + b*x + c*x**2)*Sqrt(d + e*x + f*x**2)), x)/(2*f) + (-e*h + 2*f*g)*Int(1/((a + b*x + c*x**2)*Sqrt(d + e*x + f*x**2)), x)/(2*f))
    rubi.add(rule579)

    pattern580 = Pattern(Integral(x_/((a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))*sqrt(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda e, d, b, a: ZeroQ(-a*e + b*d)))
    rule580 = ReplacementRule(pattern580, lambda c, d, b, f, x, a, e : -2*e*Subst(Int((-d*x**2 + 1)/(-b*f + c*e + d**2*x**4*(-b*f + c*e) - e*x**2*(2*a*f - b*e + 2*c*d)), x), x, (1 + x*(e + Sqrt(-4*d*f + e**2))/(2*d))/Sqrt(d + e*x + f*x**2)))
    rubi.add(rule580)

    pattern581 = Pattern(Integral((g_ + x_*WC('h', S(1)))/((a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))*sqrt(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda e, d, b, a: ZeroQ(-a*e + b*d)), CustomConstraint(lambda h, d, g, e: ZeroQ(2*d*h - e*g)))
    rule581 = ReplacementRule(pattern581, lambda h, c, d, b, f, x, a, g, e : g*Subst(Int(1/(a + x**2*(-a*f + c*d)), x), x, x/Sqrt(d + e*x + f*x**2)))
    rubi.add(rule581)

    pattern582 = Pattern(Integral((g_ + x_*WC('h', S(1)))/((a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))*sqrt(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda e, d, b, a: ZeroQ(-a*e + b*d)), CustomConstraint(lambda h, d, g, e: NonzeroQ(2*d*h - e*g)))
    rule582 = ReplacementRule(pattern582, lambda h, c, d, b, f, x, a, g, e : h*Int((2*d + e*x)/((a + b*x + c*x**2)*Sqrt(d + e*x + f*x**2)), x)/e + (-2*d*h + e*g)*Int(1/((a + b*x + c*x**2)*Sqrt(d + e*x + f*x**2)), x)/e)
    rubi.add(rule582)

    pattern583 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))/((x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))*sqrt(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda e, d, b, a: NonzeroQ(-a*e + b*d)), CustomConstraint(lambda h, c, d, b, f, a, g, e: ZeroQ(g**2*(-b*f + c*e) - 2*g*h*(-a*f + c*d) + h**2*(-a*e + b*d))))
    rule583 = ReplacementRule(pattern583, lambda h, e, c, d, f, x, a, g, b : -2*g*(-2*a*h + b*g)*Subst(Int(1/Simp(g*(-4*a*c + b**2)*(-2*a*h + b*g) - x**2*(-a*e + b*d), x), x), x, Simp(-2*a*h + b*g - x*(b*h - 2*c*g), x)/Sqrt(d + e*x + f*x**2)))
    rubi.add(rule583)

    pattern584 = Pattern(Integral((g_ + x_*WC('h', S(1)))/((a_ + x_**2*WC('c', S(1)))*sqrt(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda h, c, d, f, a, g, e: ZeroQ(a*e*h**2 - c*e*g**2 + 2*g*h*(-a*f + c*d))))
    rule584 = ReplacementRule(pattern584, lambda h, c, d, f, x, a, g, e : -2*a*g*h*Subst(Int(1/Simp(2*a**2*c*g*h + a*e*x**2, x), x), x, Simp(a*h - c*g*x, x)/Sqrt(d + e*x + f*x**2)))
    rubi.add(rule584)

    pattern585 = Pattern(Integral((g_ + x_*WC('h', S(1)))/(sqrt(d_ + x_**2*WC('f', S(1)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda h, c, d, f, a, g, b: ZeroQ(b*d*h**2 - b*f*g**2 - 2*g*h*(-a*f + c*d))))
    rule585 = ReplacementRule(pattern585, lambda h, c, d, f, x, a, g, b : -2*g*(-2*a*h + b*g)*Subst(Int(1/Simp(-b*d*x**2 + g*(-4*a*c + b**2)*(-2*a*h + b*g), x), x), x, Simp(-2*a*h + b*g - x*(b*h - 2*c*g), x)/Sqrt(d + f*x**2)))
    rubi.add(rule585)

    pattern586 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))/((a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))*sqrt(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda a, b, c: PosQ(-4*a*c + b**2)))
    rule586 = ReplacementRule(pattern586, lambda h, e, c, d, f, x, a, g, b : With(List(Set(q, Rt(-4*a*c + b**2, 2))), (2*c*g - h*(b - q))*Int(1/((b + 2*c*x - q)*Sqrt(d + e*x + f*x**2)), x)/q - (2*c*g - h*(b + q))*Int(1/((b + 2*c*x + q)*Sqrt(d + e*x + f*x**2)), x)/q))
    rubi.add(rule586)

    pattern587 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))/((a_ + x_**2*WC('c', S(1)))*sqrt(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda a, c: PosQ(-a*c)))
    rule587 = ReplacementRule(pattern587, lambda h, c, d, f, x, a, g, e : With(List(Set(q, Rt(-a*c, 2))), (-c*g/(2*q) + h/2)*Int(1/((c*x + q)*Sqrt(d + e*x + f*x**2)), x) + (c*g/(2*q) + h/2)*Int(1/((c*x - q)*Sqrt(d + e*x + f*x**2)), x)))
    rubi.add(rule587)

    pattern588 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))/(sqrt(d_ + x_**2*WC('f', S(1)))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda a, b, c: PosQ(-4*a*c + b**2)))
    rule588 = ReplacementRule(pattern588, lambda h, c, d, f, x, a, g, b : With(List(Set(q, Rt(-4*a*c + b**2, 2))), (2*c*g - h*(b - q))*Int(1/((b + 2*c*x - q)*Sqrt(d + f*x**2)), x)/q - (2*c*g - h*(b + q))*Int(1/((b + 2*c*x + q)*Sqrt(d + f*x**2)), x)/q))
    rubi.add(rule588)

    pattern589 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))/((x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))*sqrt(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda e, d, b, a: NonzeroQ(-a*e + b*d)), CustomConstraint(lambda a, b, c: NegQ(-4*a*c + b**2)))
    rule589 = ReplacementRule(pattern589, lambda h, e, c, d, f, x, a, g, b : With(List(Set(q, Rt(-(-a*e + b*d)*(-b*f + c*e) + (-a*f + c*d)**2, 2))), Int(Simp(-g*(-a*f + c*d - q) + h*(-a*e + b*d) - x*(g*(-b*f + c*e) - h*(-a*f + c*d + q)), x)/((a + b*x + c*x**2)*Sqrt(d + e*x + f*x**2)), x)/(2*q) - Int(Simp(-g*(-a*f + c*d + q) + h*(-a*e + b*d) - x*(g*(-b*f + c*e) - h*(-a*f + c*d - q)), x)/((a + b*x + c*x**2)*Sqrt(d + e*x + f*x**2)), x)/(2*q)))
    rubi.add(rule589)

    pattern590 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))/((a_ + x_**2*WC('c', S(1)))*sqrt(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda a, c: NegQ(-a*c)))
    rule590 = ReplacementRule(pattern590, lambda h, c, d, f, x, a, g, e : With(List(Set(q, Rt(a*c*e**2 + (-a*f + c*d)**2, 2))), Int(Simp(-a*e*h - g*(-a*f + c*d - q) + x*(-c*e*g + h*(-a*f + c*d + q)), x)/((a + c*x**2)*Sqrt(d + e*x + f*x**2)), x)/(2*q) - Int(Simp(-a*e*h - g*(-a*f + c*d + q) + x*(-c*e*g + h*(-a*f + c*d - q)), x)/((a + c*x**2)*Sqrt(d + e*x + f*x**2)), x)/(2*q)))
    rubi.add(rule590)

    pattern591 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))/(sqrt(d_ + x_**2*WC('f', S(1)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda a, b, c: NegQ(-4*a*c + b**2)))
    rule591 = ReplacementRule(pattern591, lambda h, c, d, f, x, a, g, b : With(List(Set(q, Rt(b**2*d*f + (-a*f + c*d)**2, 2))), Int(Simp(b*d*h - g*(-a*f + c*d - q) + x*(b*f*g + h*(-a*f + c*d + q)), x)/((a + b*x + c*x**2)*Sqrt(d + f*x**2)), x)/(2*q) - Int(Simp(b*d*h - g*(-a*f + c*d + q) + x*(b*f*g + h*(-a*f + c*d - q)), x)/((a + b*x + c*x**2)*Sqrt(d + f*x**2)), x)/(2*q)))
    rubi.add(rule591)

    pattern592 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))/(sqrt(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))*sqrt(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)))
    rule592 = ReplacementRule(pattern592, lambda h, c, d, b, f, x, a, g, e : With(List(Set(s, Rt(-4*a*c + b**2, 2)), Set(t, Rt(-4*d*f + e**2, 2))), Int((g + h*x)/(Sqrt(2*a + x*(b + s))*Sqrt(2*d + x*(e + t))*Sqrt(b + 2*c*x + s)*Sqrt(e + 2*f*x + t)), x)*Sqrt(2*a + x*(b + s))*Sqrt(2*d + x*(e + t))*Sqrt(b + 2*c*x + s)*Sqrt(e + 2*f*x + t)/(Sqrt(a + b*x + c*x**2)*Sqrt(d + e*x + f*x**2))))
    rubi.add(rule592)

    pattern593 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))/(sqrt(d_ + x_**2*WC('f', S(1)))*sqrt(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)))
    rule593 = ReplacementRule(pattern593, lambda h, c, d, f, x, a, g, b : With(List(Set(s, Rt(-4*a*c + b**2, 2)), Set(t, Rt(-4*d*f, 2))), Int((g + h*x)/(Sqrt(2*a + x*(b + s))*Sqrt(2*d + t*x)*Sqrt(2*f*x + t)*Sqrt(b + 2*c*x + s)), x)*Sqrt(2*a + x*(b + s))*Sqrt(2*d + t*x)*Sqrt(2*f*x + t)*Sqrt(b + 2*c*x + s)/(Sqrt(d + f*x**2)*Sqrt(a + b*x + c*x**2))))
    rubi.add(rule593)

    pattern594 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))/((x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**(S(1)/3)*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda f, b, e, c: ZeroQ(-b*f + c*e)), CustomConstraint(lambda c, d, f, a, b: ZeroQ(c**2*d - f*(-3*a*c + b**2))), CustomConstraint(lambda h, c, a, g, b: ZeroQ(9*a*c*h**2 - 2*b**2*h**2 - b*c*g*h + c**2*g**2)), CustomConstraint(lambda h, g, b, c: PositiveQ(-9*c*h**2/(-b*h + 2*c*g)**2)))
    rule594 = ReplacementRule(pattern594, lambda h, e, c, d, f, x, a, g, b : With(List(Set(q, 3**(2/3)*(-c*h**2/(-b*h + 2*c*g)**2)**(1/3))), h*q*ArcTan(-2**(2/3)*(-3*h*(b + 2*c*x)/(-b*h + 2*c*g) + 1)**(2/3)/((3*h*(b + 2*c*x)/(-b*h + 2*c*g) + 1)**(1/3)*Sqrt(3)) + 1/Sqrt(3))*Sqrt(3)/f - 3*h*q*Log((-3*h*(b + 2*c*x)/(-b*h + 2*c*g) + 1)**(2/3) + 2**(1/3)*(3*h*(b + 2*c*x)/(-b*h + 2*c*g) + 1)**(1/3))/(2*f) + h*q*Log(d + e*x + f*x**2)/(2*f)))
    rubi.add(rule594)

    pattern595 = Pattern(Integral((g_ + x_*WC('h', S(1)))/((a_ + x_**2*WC('c', S(1)))**(S(1)/3)*(d_ + x_**2*WC('f', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda f, d, a, c: ZeroQ(3*a*f + c*d)), CustomConstraint(lambda h, a, g, c: ZeroQ(9*a*h**2 + c*g**2)), CustomConstraint(lambda a: PositiveQ(a)))
    rule595 = ReplacementRule(pattern595, lambda h, c, d, f, x, a, g : 2**(1/3)*h*ArcTan(-2**(2/3)*(1 - 3*h*x/g)**(2/3)/((1 + 3*h*x/g)**(1/3)*Sqrt(3)) + 1/Sqrt(3))*Sqrt(3)/(2*a**(1/3)*f) + 2**(1/3)*h*Log(d + f*x**2)/(4*a**(1/3)*f) - 3*2**(1/3)*h*Log((1 - 3*h*x/g)**(2/3) + 2**(1/3)*(1 + 3*h*x/g)**(1/3))/(4*a**(1/3)*f))
    rubi.add(rule595)

    pattern596 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))/((x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**(S(1)/3)*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda f, b, e, c: ZeroQ(-b*f + c*e)), CustomConstraint(lambda c, d, f, a, b: ZeroQ(c**2*d - f*(-3*a*c + b**2))), CustomConstraint(lambda h, c, a, g, b: ZeroQ(9*a*c*h**2 - 2*b**2*h**2 - b*c*g*h + c**2*g**2)), CustomConstraint(lambda a, b, c: ~(PositiveQ(4*a - b**2/c))))
    rule596 = ReplacementRule(pattern596, lambda h, e, c, d, f, x, a, g, b : With(List(Set(q, -c/(-4*a*c + b**2))), (q*(a + b*x + c*x**2))**(1/3)*Int((g + h*x)/((d + e*x + f*x**2)*(a*q + b*q*x + c*q*x**2)**(1/3)), x)/(a + b*x + c*x**2)**(1/3)))
    rubi.add(rule596)

    pattern597 = Pattern(Integral((g_ + x_*WC('h', S(1)))/((a_ + x_**2*WC('c', S(1)))**(S(1)/3)*(d_ + x_**2*WC('f', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda f, d, a, c: ZeroQ(3*a*f + c*d)), CustomConstraint(lambda h, a, g, c: ZeroQ(9*a*h**2 + c*g**2)), CustomConstraint(lambda a: ~(PositiveQ(a))))
    rule597 = ReplacementRule(pattern597, lambda h, c, d, f, x, a, g : (1 + c*x**2/a)**(1/3)*Int((g + h*x)/((1 + c*x**2/a)**(1/3)*(d + f*x**2)), x)/(a + c*x**2)**(1/3))
    rubi.add(rule597)

    pattern598 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)))
    rule598 = ReplacementRule(pattern598, lambda h, e, c, q, p, d, f, x, a, g, b : Int((g + h*x)*(a + b*x + c*x**2)**p*(d + e*x + f*x**2)**q, x))
    rubi.add(rule598)

    pattern599 = Pattern(Integral((x_*WC('h', S(1)) + WC('g', S(0)))*(x_**2*WC('c', S(1)) + WC('a', S(0)))**p_*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)))
    rule599 = ReplacementRule(pattern599, lambda h, c, q, p, d, f, x, a, g, e : Int((a + c*x**2)**p*(g + h*x)*(d + e*x + f*x**2)**q, x))
    rubi.add(rule599)

    pattern600 = Pattern(Integral((u_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(u_**2*WC('c', S(1)) + u_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1))*(u_**2*WC('f', S(1)) + u_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule600 = ReplacementRule(pattern600, lambda u, h, e, m, c, q, p, d, f, x, a, g, b : Subst(Int((g + h*x)**m*(a + b*x + c*x**2)**p*(d + e*x + f*x**2)**q, x), x, u)/Coefficient(u, x, 1))
    rubi.add(rule600)

    pattern601 = Pattern(Integral((u_*WC('h', S(1)) + WC('g', S(0)))**WC('m', S(1))*(u_**2*WC('c', S(1)) + WC('a', S(0)))**WC('p', S(1))*(u_**2*WC('f', S(1)) + u_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule601 = ReplacementRule(pattern601, lambda u, h, m, c, q, p, d, f, x, a, g, e : Subst(Int((a + c*x**2)**p*(g + h*x)**m*(d + e*x + f*x**2)**q, x), x, u)/Coefficient(u, x, 1))
    rubi.add(rule601)

    pattern602 = Pattern(Integral(u_**WC('p', S(1))*v_**WC('q', S(1))*z_**WC('m', S(1)), x_), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda x, z: LinearQ(z, x)), CustomConstraint(lambda x, u, v: QuadraticQ(List(u, v), x)), CustomConstraint(lambda x, u, z, v: ~(LinearMatchQ(z, x) & QuadraticMatchQ(List(u, v), x))))
    rule602 = ReplacementRule(pattern602, lambda u, v, m, q, p, z, x : Int(ExpandToSum(u, x)**p*ExpandToSum(v, x)**q*ExpandToSum(z, x)**m, x))
    rubi.add(rule602)

    pattern603 = Pattern(Integral((d_ + x_*WC('e', S(1)))**WC('m', S(1))*(f_ + x_*WC('g', S(1)))**WC('n', S(1))*(x_*WC('i', S(1)) + WC('h', S(0)))**WC('q', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda i, x: FreeQ(i, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, g, e, f: ZeroQ(d*g + e*f)), CustomConstraint(lambda n, m: ZeroQ(m - n)), CustomConstraint(lambda f, m, d: IntegerQ(m) | (PositiveQ(d) & PositiveQ(f))))
    rule603 = ReplacementRule(pattern603, lambda h, m, c, q, p, d, b, f, x, i, n, a, g, e : Int((h + i*x)**q*(d*f + e*g*x**2)**m*(a + b*x + c*x**2)**p, x))
    rubi.add(rule603)

    pattern604 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*(x_*WC('g', S(1)) + WC('f', S(0)))**WC('n', S(1))*(x_*WC('i', S(1)) + WC('h', S(0)))**WC('q', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda i, x: FreeQ(i, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda p: PositiveIntegerQ(p)), CustomConstraint(lambda m: NegativeIntegerQ(m)))
    rule604 = ReplacementRule(pattern604, lambda h, m, c, q, p, d, b, f, x, i, n, a, g, e : Int(ExpandIntegrand((d + e*x)**m*(f + g*x)**n*(h + i*x)**q*(a + b*x + c*x**2)**p, x), x))
    rubi.add(rule604)

    pattern605 = Pattern(Integral((d_ + x_*WC('e', S(1)))**m_*(f_ + x_*WC('g', S(1)))**n_*(x_*WC('i', S(1)) + WC('h', S(0)))**WC('q', S(1))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda h, x: FreeQ(h, x)), CustomConstraint(lambda i, x: FreeQ(i, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, g, e, f: ZeroQ(d*g + e*f)), CustomConstraint(lambda n, m: ZeroQ(m - n)))
    rule605 = ReplacementRule(pattern605, lambda h, m, c, q, p, d, b, f, x, i, n, a, g, e : (d + e*x)**FracPart(m)*(f + g*x)**FracPart(m)*(d*f + e*g*x**2)**(-FracPart(m))*Int((h + i*x)**q*(d*f + e*g*x**2)**m*(a + b*x + c*x**2)**p, x))
    rubi.add(rule605)

    pattern606 = Pattern(Integral((a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1))*(x_**2*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda f, d, a, c: ZeroQ(-a*f + c*d)), CustomConstraint(lambda e, d, b, a: ZeroQ(-a*e + b*d)), CustomConstraint(lambda f, p, c: IntegerQ(p) | PositiveQ(c/f)), CustomConstraint(lambda c, q, d, b, f, x, a, e: ~(IntegerQ(q)) | LessEqual(LeafCount(d + e*x + f*x**2), LeafCount(a + b*x + c*x**2))))
    rule606 = ReplacementRule(pattern606, lambda A, e, c, q, p, d, f, x, C, B, a, b : (c/f)**p*Int((A + B*x + C*x**2)*(d + e*x + f*x**2)**(p + q), x))
    rubi.add(rule606)

    pattern607 = Pattern(Integral((x_**2*WC('C', S(1)) + WC('A', S(0)))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda f, d, a, c: ZeroQ(-a*f + c*d)), CustomConstraint(lambda e, d, b, a: ZeroQ(-a*e + b*d)), CustomConstraint(lambda f, p, c: IntegerQ(p) | PositiveQ(c/f)), CustomConstraint(lambda c, q, d, b, f, x, a, e: ~(IntegerQ(q)) | LessEqual(LeafCount(d + e*x + f*x**2), LeafCount(a + b*x + c*x**2))))
    rule607 = ReplacementRule(pattern607, lambda A, e, c, q, p, d, b, f, x, a, C : (c/f)**p*Int((A + C*x**2)*(d + e*x + f*x**2)**(p + q), x))
    rubi.add(rule607)

    pattern608 = Pattern(Integral((a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1))*(x_**2*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda f, d, a, c: ZeroQ(-a*f + c*d)), CustomConstraint(lambda e, d, b, a: ZeroQ(-a*e + b*d)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda q: ~(IntegerQ(q))), CustomConstraint(lambda f, c: ~(PositiveQ(c/f))))
    rule608 = ReplacementRule(pattern608, lambda A, e, c, q, p, d, f, x, C, B, a, b : a**IntPart(p)*d**(-IntPart(p))*(a + b*x + c*x**2)**FracPart(p)*(d + e*x + f*x**2)**(-FracPart(p))*Int((A + B*x + C*x**2)*(d + e*x + f*x**2)**(p + q), x))
    rubi.add(rule608)

    pattern609 = Pattern(Integral((x_**2*WC('C', S(1)) + WC('A', S(0)))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda f, d, a, c: ZeroQ(-a*f + c*d)), CustomConstraint(lambda e, d, b, a: ZeroQ(-a*e + b*d)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda q: ~(IntegerQ(q))), CustomConstraint(lambda f, c: ~(PositiveQ(c/f))))
    rule609 = ReplacementRule(pattern609, lambda A, e, c, q, p, d, b, f, x, a, C : a**IntPart(p)*d**(-IntPart(p))*(a + b*x + c*x**2)**FracPart(p)*(d + e*x + f*x**2)**(-FracPart(p))*Int((A + C*x**2)*(d + e*x + f*x**2)**(p + q), x))
    rubi.add(rule609)

    pattern610 = Pattern(Integral((a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(x_**2*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0)))*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)))
    rule610 = ReplacementRule(pattern610, lambda A, e, c, q, p, d, f, x, C, B, a, b : (4*c)**(-IntPart(p))*(b + 2*c*x)**(-2*FracPart(p))*(a + b*x + c*x**2)**FracPart(p)*Int((b + 2*c*x)**(2*p)*(A + B*x + C*x**2)*(d + e*x + f*x**2)**q, x))
    rubi.add(rule610)

    pattern611 = Pattern(Integral((x_**2*WC('C', S(1)) + WC('A', S(0)))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)))
    rule611 = ReplacementRule(pattern611, lambda A, e, c, q, p, d, b, f, x, a, C : (4*c)**(-IntPart(p))*(b + 2*c*x)**(-2*FracPart(p))*(a + b*x + c*x**2)**FracPart(p)*Int((A + C*x**2)*(b + 2*c*x)**(2*p)*(d + e*x + f*x**2)**q, x))
    rubi.add(rule611)

    pattern612 = Pattern(Integral((x_**2*WC('f', S(1)) + WC('d', S(0)))**WC('q', S(1))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(x_**2*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)))
    rule612 = ReplacementRule(pattern612, lambda A, c, q, p, d, f, x, C, B, a, b : (4*c)**(-IntPart(p))*(b + 2*c*x)**(-2*FracPart(p))*(a + b*x + c*x**2)**FracPart(p)*Int((b + 2*c*x)**(2*p)*(d + f*x**2)**q*(A + B*x + C*x**2), x))
    rubi.add(rule612)

    pattern613 = Pattern(Integral((x_**2*WC('C', S(1)) + WC('A', S(0)))*(x_**2*WC('f', S(1)) + WC('d', S(0)))**WC('q', S(1))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda a, b, c: ZeroQ(-4*a*c + b**2)))
    rule613 = ReplacementRule(pattern613, lambda A, c, q, p, d, b, f, x, a, C : (4*c)**(-IntPart(p))*(b + 2*c*x)**(-2*FracPart(p))*(a + b*x + c*x**2)**FracPart(p)*Int((A + C*x**2)*(b + 2*c*x)**(2*p)*(d + f*x**2)**q, x))
    rubi.add(rule613)

    pattern614 = Pattern(Integral((a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1))*(x_**2*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda q, p: IntegersQ(p, q)), CustomConstraint(lambda p: Greater(p, 0)))
    rule614 = ReplacementRule(pattern614, lambda A, e, c, q, p, d, f, x, C, B, a, b : Int(ExpandIntegrand((A + B*x + C*x**2)*(a + b*x + c*x**2)**p*(d + e*x + f*x**2)**q, x), x))
    rubi.add(rule614)

    pattern615 = Pattern(Integral((x_**2*WC('C', S(1)) + WC('A', S(0)))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda q, p: IntegersQ(p, q)), CustomConstraint(lambda p: Greater(p, 0)))
    rule615 = ReplacementRule(pattern615, lambda A, e, c, q, p, d, b, f, x, a, C : Int(ExpandIntegrand((A + C*x**2)*(a + b*x + c*x**2)**p*(d + e*x + f*x**2)**q, x), x))
    rubi.add(rule615)

    pattern616 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1))*(x_**2*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda q, p: IntegersQ(p, q)), CustomConstraint(lambda q, p: Greater(p, 0) | Greater(q, 0)))
    rule616 = ReplacementRule(pattern616, lambda A, e, c, q, p, d, f, x, B, a, C : Int(ExpandIntegrand((a + c*x**2)**p*(A + B*x + C*x**2)*(d + e*x + f*x**2)**q, x), x))
    rubi.add(rule616)

    pattern617 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(x_**2*WC('C', S(1)) + WC('A', S(0)))*(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda q, p: IntegersQ(p, q)), CustomConstraint(lambda q, p: Greater(p, 0) | Greater(q, 0)))
    rule617 = ReplacementRule(pattern617, lambda A, c, q, p, d, f, x, C, a, e : Int(ExpandIntegrand((A + C*x**2)*(a + c*x**2)**p*(d + e*x + f*x**2)**q, x), x))
    rubi.add(rule617)

    pattern618 = Pattern(Integral((a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1))*(x_**2*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda q, p: RationalQ(p, q)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda q: Greater(q, 0)))
    rule618 = ReplacementRule(pattern618, lambda A, e, c, q, p, d, f, x, C, B, a, b : (a + b*x + c*x**2)**(p + 1)*(d + e*x + f*x**2)**q*(A*b*c - 2*B*a*c + C*a*b - x*(-C*(-2*a*c + b**2) + c*(-2*A*c + B*b)))/(c*(p + 1)*(-4*a*c + b**2)) - Int((a + b*x + c*x**2)**(p + 1)*(d + e*x + f*x**2)**(q - 1)*Simp(-d*(C*(2*a*c - b**2*(p + 2)) + c*(2*p + 3)*(-2*A*c + B*b)) + e*q*(A*b*c - 2*B*a*c + C*a*b) - f*x**2*(C*(2*a*c*(2*q + 1) - b**2*(p + 2*q + 2)) + c*(-2*A*c + B*b)*(2*p + 2*q + 3)) + x*(-e*(C*(2*a*c*(q + 1) - b**2*(p + q + 2)) + c*(-2*A*c + B*b)*(2*p + q + 3)) + 2*f*q*(A*b*c - 2*B*a*c + C*a*b)), x), x)/(c*(p + 1)*(-4*a*c + b**2)))
    rubi.add(rule618)

    pattern619 = Pattern(Integral((x_**2*WC('C', S(1)) + WC('A', S(0)))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda q, p: RationalQ(p, q)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda q: Greater(q, 0)))
    rule619 = ReplacementRule(pattern619, lambda A, e, c, q, p, d, b, f, x, a, C : (a + b*x + c*x**2)**(p + 1)*(d + e*x + f*x**2)**q*(A*b*c + C*a*b + x*(2*A*c**2 + C*(-2*a*c + b**2)))/(c*(p + 1)*(-4*a*c + b**2)) - Int((a + b*x + c*x**2)**(p + 1)*(d + e*x + f*x**2)**(q - 1)*Simp(A*c*(b*e*q + 2*c*d*(2*p + 3)) - C*(-a*b*e*q + 2*a*c*d - b**2*d*(p + 2)) - f*x**2*(-2*A*c**2*(2*p + 2*q + 3) + C*(2*a*c*(2*q + 1) - b**2*(p + 2*q + 2))) + x*(2*A*c*(b*f*q + c*e*(2*p + q + 3)) + C*(2*a*b*f*q - 2*a*c*e*(q + 1) + b**2*e*(p + q + 2))), x), x)/(c*(p + 1)*(-4*a*c + b**2)))
    rubi.add(rule619)

    pattern620 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1))*(x_**2*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda q, p: RationalQ(p, q)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda q: Greater(q, 0)))
    rule620 = ReplacementRule(pattern620, lambda A, e, c, q, p, d, f, x, B, a, C : (a + c*x**2)**(p + 1)*(B*a - x*(A*c - C*a))*(d + e*x + f*x**2)**q/(2*a*c*(p + 1)) + Int((a + c*x**2)**(p + 1)*(d + e*x + f*x**2)**(q - 1)*Simp(A*c*d*(2*p + 3) - a*(B*e*q + C*d) - f*x**2*(-A*c*(2*p + 2*q + 3) + C*a*(2*q + 1)) + x*(A*c*e*(2*p + q + 3) - a*(2*B*f*q + C*e*(q + 1))), x), x)/(2*a*c*(p + 1)))
    rubi.add(rule620)

    pattern621 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(x_**2*WC('C', S(1)) + WC('A', S(0)))*(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda q, p: RationalQ(p, q)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda q: Greater(q, 0)))
    rule621 = ReplacementRule(pattern621, lambda A, c, q, p, d, f, x, C, a, e : x*(a + c*x**2)**(p + 1)*(-A*c + C*a)*(d + e*x + f*x**2)**q/(2*a*c*(p + 1)) + Int((a + c*x**2)**(p + 1)*(d + e*x + f*x**2)**(q - 1)*Simp(A*c*d*(2*p + 3) - C*a*d - f*x**2*(-A*c*(2*p + 2*q + 3) + C*a*(2*q + 1)) + x*(A*c*e*(2*p + q + 3) - C*a*e*(q + 1)), x), x)/(2*a*c*(p + 1)))
    rubi.add(rule621)

    pattern622 = Pattern(Integral((d_ + x_**2*WC('f', S(1)))**WC('q', S(1))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(x_**2*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda q, p: RationalQ(p, q)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda q: Greater(q, 0)))
    rule622 = ReplacementRule(pattern622, lambda A, c, q, p, d, f, x, C, B, a, b : (d + f*x**2)**q*(a + b*x + c*x**2)**(p + 1)*(A*b*c - 2*B*a*c + C*a*b - x*(-C*(-2*a*c + b**2) + c*(-2*A*c + B*b)))/(c*(p + 1)*(-4*a*c + b**2)) - Int((d + f*x**2)**(q - 1)*(a + b*x + c*x**2)**(p + 1)*Simp(-d*(C*(2*a*c - b**2*(p + 2)) + c*(2*p + 3)*(-2*A*c + B*b)) + 2*f*q*x*(A*b*c - 2*B*a*c + C*a*b) - f*x**2*(C*(2*a*c*(2*q + 1) - b**2*(p + 2*q + 2)) + c*(-2*A*c + B*b)*(2*p + 2*q + 3)), x), x)/(c*(p + 1)*(-4*a*c + b**2)))
    rubi.add(rule622)

    pattern623 = Pattern(Integral((d_ + x_**2*WC('f', S(1)))**WC('q', S(1))*(x_**2*WC('C', S(1)) + WC('A', S(0)))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda q, p: RationalQ(p, q)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda q: Greater(q, 0)))
    rule623 = ReplacementRule(pattern623, lambda A, c, q, p, d, b, f, x, a, C : (d + f*x**2)**q*(a + b*x + c*x**2)**(p + 1)*(A*b*c + C*a*b + x*(2*A*c**2 + C*(-2*a*c + b**2)))/(c*(p + 1)*(-4*a*c + b**2)) - Int((d + f*x**2)**(q - 1)*(a + b*x + c*x**2)**(p + 1)*Simp(2*A*c**2*d*(2*p + 3) - C*(2*a*c*d - b**2*d*(p + 2)) - f*x**2*(-2*A*c**2*(2*p + 2*q + 3) + C*(2*a*c*(2*q + 1) - b**2*(p + 2*q + 2))) + x*(2*A*b*c*f*q + 2*C*a*b*f*q), x), x)/(c*(p + 1)*(-4*a*c + b**2)))
    rubi.add(rule623)

    pattern624 = Pattern(Integral((a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1))*(x_**2*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda e, c, d, f, a, b: NonzeroQ(-(-a*e + b*d)*(-b*f + c*e) + (-a*f + c*d)**2)), CustomConstraint(lambda q, p: ~(IntegerQ(q) & Less(q, -1) & ~(IntegerQ(p)))))
    rule624 = ReplacementRule(pattern624, lambda A, e, c, q, p, d, f, x, C, B, a, b : (a + b*x + c*x**2)**(p + 1)*(d + e*x + f*x**2)**(q + 1)*(c*x*(A*(b**2*f + 2*c**2*d - c*(2*a*f + b*e)) - B*(a*b*f - 2*a*c*e + b*c*d) + C*(-a*b*e - 2*a*(-a*f + c*d) + b**2*d)) + (A*b - B*a)*(b**2*f + 2*c**2*d - c*(2*a*f + b*e)) + (A*c - C*a)*(2*a*c*e - b*(a*f + c*d)))/((p + 1)*(-4*a*c + b**2)*(-(-a*e + b*d)*(-b*f + c*e) + (-a*f + c*d)**2)) + Int((a + b*x + c*x**2)**(p + 1)*(d + e*x + f*x**2)**q*Simp(-c*f*x**2*(2*p + 2*q + 5)*(2*A*c*(-a*f + c*d) - 2*a*(-B*c*e - C*a*f + C*c*d) + b**2*(A*f + C*d) - b*(A*c*e + B*a*f + B*c*d + C*a*e)) - e*((A*b - B*a)*(b**2*f + 2*c**2*d - c*(2*a*f + b*e)) + (A*c - C*a)*(2*a*c*e - b*(a*f + c*d)))*(p + q + 2) - x*(2*f*((A*b - B*a)*(b**2*f + 2*c**2*d - c*(2*a*f + b*e)) + (A*c - C*a)*(2*a*c*e - b*(a*f + c*d)))*(p + q + 2) - (b*f*(p + 1) - c*e*(2*p + q + 4))*(2*A*c*(-a*f + c*d) - 2*a*(-B*c*e - C*a*f + C*c*d) + b**2*(A*f + C*d) - b*(A*c*e + B*a*f + B*c*d + C*a*e))) + (p + 1)*(-(-a*e + b*d)*(-b*f + c*e) + (-a*f + c*d)**2)*(-2*A*c + B*b - 2*C*a) + (a*f*(p + 1) - c*d*(p + 2))*(2*A*c*(-a*f + c*d) - 2*a*(-B*c*e - C*a*f + C*c*d) + b**2*(A*f + C*d) - b*(A*c*e + B*a*f + B*c*d + C*a*e)), x), x)/((p + 1)*(-4*a*c + b**2)*(-(-a*e + b*d)*(-b*f + c*e) + (-a*f + c*d)**2)))
    rubi.add(rule624)

    pattern625 = Pattern(Integral((x_**2*WC('C', S(1)) + WC('A', S(0)))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda e, c, d, f, a, b: NonzeroQ(-(-a*e + b*d)*(-b*f + c*e) + (-a*f + c*d)**2)), CustomConstraint(lambda q, p: ~(IntegerQ(q) & Less(q, -1) & ~(IntegerQ(p)))))
    rule625 = ReplacementRule(pattern625, lambda A, e, c, q, p, d, b, f, x, a, C : (a + b*x + c*x**2)**(p + 1)*(d + e*x + f*x**2)**(q + 1)*(A*b*(b**2*f + 2*c**2*d - c*(2*a*f + b*e)) + c*x*(A*(b**2*f + 2*c**2*d - c*(2*a*f + b*e)) + C*(-a*b*e - 2*a*(-a*f + c*d) + b**2*d)) + (A*c - C*a)*(2*a*c*e - b*(a*f + c*d)))/((p + 1)*(-4*a*c + b**2)*(-(-a*e + b*d)*(-b*f + c*e) + (-a*f + c*d)**2)) + Int((a + b*x + c*x**2)**(p + 1)*(d + e*x + f*x**2)**q*Simp(-c*f*x**2*(2*p + 2*q + 5)*(2*A*c*(-a*f + c*d) - 2*a*(-C*a*f + C*c*d) + b**2*(A*f + C*d) - b*(A*c*e + C*a*e)) - e*(A*b*(b**2*f + 2*c**2*d - c*(2*a*f + b*e)) + (A*c - C*a)*(2*a*c*e - b*(a*f + c*d)))*(p + q + 2) - x*(2*f*(A*b*(b**2*f + 2*c**2*d - c*(2*a*f + b*e)) + (A*c - C*a)*(2*a*c*e - b*(a*f + c*d)))*(p + q + 2) - (b*f*(p + 1) - c*e*(2*p + q + 4))*(2*A*c*(-a*f + c*d) - 2*a*(-C*a*f + C*c*d) + b**2*(A*f + C*d) - b*(A*c*e + C*a*e))) + (p + 1)*(-2*A*c - 2*C*a)*(-(-a*e + b*d)*(-b*f + c*e) + (-a*f + c*d)**2) + (a*f*(p + 1) - c*d*(p + 2))*(2*A*c*(-a*f + c*d) - 2*a*(-C*a*f + C*c*d) + b**2*(A*f + C*d) - b*(A*c*e + C*a*e)), x), x)/((p + 1)*(-4*a*c + b**2)*(-(-a*e + b*d)*(-b*f + c*e) + (-a*f + c*d)**2)))
    rubi.add(rule625)

    pattern626 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1))*(x_**2*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda c, d, f, a, e: NonzeroQ(a*c*e**2 + (-a*f + c*d)**2)), CustomConstraint(lambda q, p: ~(IntegerQ(q) & Less(q, -1) & ~(IntegerQ(p)))))
    rule626 = ReplacementRule(pattern626, lambda A, e, c, q, p, d, f, x, B, a, C : -(a + c*x**2)**(p + 1)*(d + e*x + f*x**2)**(q + 1)*(-B*a*(-2*a*c*f + 2*c**2*d) + 2*a*c*e*(A*c - C*a) + c*x*(A*(-2*a*c*f + 2*c**2*d) + 2*B*a*c*e - 2*C*a*(-a*f + c*d)))/(4*a*c*(p + 1)*(a*c*e**2 + (-a*f + c*d)**2)) - Int((a + c*x**2)**(p + 1)*(d + e*x + f*x**2)**q*Simp(-c*f*x**2*(2*A*c*(-a*f + c*d) - 2*a*(-B*c*e - C*a*f + C*c*d))*(2*p + 2*q + 5) - e*(-B*a*(-2*a*c*f + 2*c**2*d) + 2*a*c*e*(A*c - C*a))*(p + q + 2) - x*(c*e*(2*A*c*(-a*f + c*d) - 2*a*(-B*c*e - C*a*f + C*c*d))*(2*p + q + 4) + 2*f*(-B*a*(-2*a*c*f + 2*c**2*d) + 2*a*c*e*(A*c - C*a))*(p + q + 2)) + (p + 1)*(-2*A*c - 2*C*a)*(a*c*e**2 + (-a*f + c*d)**2) + (2*A*c*(-a*f + c*d) - 2*a*(-B*c*e - C*a*f + C*c*d))*(a*f*(p + 1) - c*d*(p + 2)), x), x)/(4*a*c*(p + 1)*(a*c*e**2 + (-a*f + c*d)**2)))
    rubi.add(rule626)

    pattern627 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(x_**2*WC('C', S(1)) + WC('A', S(0)))*(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda c, d, f, a, e: NonzeroQ(a*c*e**2 + (-a*f + c*d)**2)), CustomConstraint(lambda q, p: ~(IntegerQ(q) & Less(q, -1) & ~(IntegerQ(p)))))
    rule627 = ReplacementRule(pattern627, lambda A, c, q, p, d, f, x, C, a, e : -(a + c*x**2)**(p + 1)*(2*a*c*e*(A*c - C*a) + c*x*(A*(-2*a*c*f + 2*c**2*d) - 2*C*a*(-a*f + c*d)))*(d + e*x + f*x**2)**(q + 1)/(4*a*c*(p + 1)*(a*c*e**2 + (-a*f + c*d)**2)) - Int((a + c*x**2)**(p + 1)*(d + e*x + f*x**2)**q*Simp(-2*a*c*e**2*(A*c - C*a)*(p + q + 2) - c*f*x**2*(2*A*c*(-a*f + c*d) - 2*a*(-C*a*f + C*c*d))*(2*p + 2*q + 5) - x*(4*a*c*e*f*(A*c - C*a)*(p + q + 2) + c*e*(2*A*c*(-a*f + c*d) - 2*a*(-C*a*f + C*c*d))*(2*p + q + 4)) + (p + 1)*(-2*A*c - 2*C*a)*(a*c*e**2 + (-a*f + c*d)**2) + (2*A*c*(-a*f + c*d) - 2*a*(-C*a*f + C*c*d))*(a*f*(p + 1) - c*d*(p + 2)), x), x)/(4*a*c*(p + 1)*(a*c*e**2 + (-a*f + c*d)**2)))
    rubi.add(rule627)

    pattern628 = Pattern(Integral((d_ + x_**2*WC('f', S(1)))**WC('q', S(1))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(x_**2*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda c, d, f, a, b: NonzeroQ(b**2*d*f + (-a*f + c*d)**2)), CustomConstraint(lambda q, p: ~(IntegerQ(q) & Less(q, -1) & ~(IntegerQ(p)))))
    rule628 = ReplacementRule(pattern628, lambda A, c, q, p, d, f, x, C, B, a, b : (d + f*x**2)**(q + 1)*(a + b*x + c*x**2)**(p + 1)*(-b*(A*c - C*a)*(a*f + c*d) + c*x*(A*(-2*a*c*f + b**2*f + 2*c**2*d) - B*(a*b*f + b*c*d) + C*(-2*a*(-a*f + c*d) + b**2*d)) + (A*b - B*a)*(-2*a*c*f + b**2*f + 2*c**2*d))/((p + 1)*(-4*a*c + b**2)*(b**2*d*f + (-a*f + c*d)**2)) + Int((d + f*x**2)**q*(a + b*x + c*x**2)**(p + 1)*Simp(-c*f*x**2*(2*p + 2*q + 5)*(2*A*c*(-a*f + c*d) - 2*a*(-C*a*f + C*c*d) + b**2*(A*f + C*d) - b*(B*a*f + B*c*d)) - x*(-b*f*(p + 1)*(2*A*c*(-a*f + c*d) - 2*a*(-C*a*f + C*c*d) + b**2*(A*f + C*d) - b*(B*a*f + B*c*d)) + 2*f*(-b*(A*c - C*a)*(a*f + c*d) + (A*b - B*a)*(-2*a*c*f + b**2*f + 2*c**2*d))*(p + q + 2)) + (p + 1)*(b**2*d*f + (-a*f + c*d)**2)*(-2*A*c + B*b - 2*C*a) + (a*f*(p + 1) - c*d*(p + 2))*(2*A*c*(-a*f + c*d) - 2*a*(-C*a*f + C*c*d) + b**2*(A*f + C*d) - b*(B*a*f + B*c*d)), x), x)/((p + 1)*(-4*a*c + b**2)*(b**2*d*f + (-a*f + c*d)**2)))
    rubi.add(rule628)

    pattern629 = Pattern(Integral((d_ + x_**2*WC('f', S(1)))**WC('q', S(1))*(x_**2*WC('C', S(1)) + WC('A', S(0)))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda c, d, f, a, b: NonzeroQ(b**2*d*f + (-a*f + c*d)**2)), CustomConstraint(lambda q, p: ~(IntegerQ(q) & Less(q, -1) & ~(IntegerQ(p)))))
    rule629 = ReplacementRule(pattern629, lambda A, c, q, p, d, b, f, x, a, C : (d + f*x**2)**(q + 1)*(a + b*x + c*x**2)**(p + 1)*(A*b*(-2*a*c*f + b**2*f + 2*c**2*d) - b*(A*c - C*a)*(a*f + c*d) + c*x*(A*(-2*a*c*f + b**2*f + 2*c**2*d) + C*(-2*a*(-a*f + c*d) + b**2*d)))/((p + 1)*(-4*a*c + b**2)*(b**2*d*f + (-a*f + c*d)**2)) + Int((d + f*x**2)**q*(a + b*x + c*x**2)**(p + 1)*Simp(-c*f*x**2*(2*p + 2*q + 5)*(2*A*c*(-a*f + c*d) - 2*a*(-C*a*f + C*c*d) + b**2*(A*f + C*d)) - x*(-b*f*(p + 1)*(2*A*c*(-a*f + c*d) - 2*a*(-C*a*f + C*c*d) + b**2*(A*f + C*d)) + 2*f*(A*b*(-2*a*c*f + b**2*f + 2*c**2*d) - b*(A*c - C*a)*(a*f + c*d))*(p + q + 2)) + (p + 1)*(-2*A*c - 2*C*a)*(b**2*d*f + (-a*f + c*d)**2) + (a*f*(p + 1) - c*d*(p + 2))*(2*A*c*(-a*f + c*d) - 2*a*(-C*a*f + C*c*d) + b**2*(A*f + C*d)), x), x)/((p + 1)*(-4*a*c + b**2)*(b**2*d*f + (-a*f + c*d)**2)))
    rubi.add(rule629)

    pattern630 = Pattern(Integral((a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1))*(x_**2*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda q, p: NonzeroQ(p + q + 1)), CustomConstraint(lambda q, p: NonzeroQ(2*p + 2*q + 3)))
    rule630 = ReplacementRule(pattern630, lambda A, e, c, q, p, d, f, x, C, B, a, b : (a + b*x + c*x**2)**p*(d + e*x + f*x**2)**(q + 1)*(B*c*f*(2*p + 2*q + 3) + 2*C*c*f*x*(p + q + 1) + C*(b*f*p - c*e*(2*p + q + 2)))/(2*c*f**2*(p + q + 1)*(2*p + 2*q + 3)) - Int((a + b*x + c*x**2)**(p - 1)*(d + e*x + f*x**2)**q*Simp(p*(-a*e + b*d)*(C*(q + 1)*(-b*f + c*e) - c*(-B*f + C*e)*(2*p + 2*q + 3)) + x**2*(p*(-b*f + c*e)*(C*(q + 1)*(-b*f + c*e) - c*(-B*f + C*e)*(2*p + 2*q + 3)) + (C*f**2*p*(-4*a*c + b**2) - c**2*(C*(-4*d*f + e**2)*(2*p + q + 2) + f*(2*p + 2*q + 3)*(2*A*f - B*e + 2*C*d)))*(p + q + 1)) + x*(2*p*(-a*f + c*d)*(C*(q + 1)*(-b*f + c*e) - c*(-B*f + C*e)*(2*p + 2*q + 3)) + (C*e*f*p*(-4*a*c + b**2) - b*c*(C*(-4*d*f + e**2)*(2*p + q + 2) + f*(2*p + 2*q + 3)*(2*A*f - B*e + 2*C*d)))*(p + q + 1)) + (C*b**2*d*f*p + a*c*(C*(2*d*f - e**2*(2*p + q + 2)) + f*(-2*A*f + B*e)*(2*p + 2*q + 3)))*(p + q + 1), x), x)/(2*c*f**2*(p + q + 1)*(2*p + 2*q + 3)))
    rubi.add(rule630)

    pattern631 = Pattern(Integral((x_**2*WC('C', S(1)) + WC('A', S(0)))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda q, p: NonzeroQ(p + q + 1)), CustomConstraint(lambda q, p: NonzeroQ(2*p + 2*q + 3)))
    rule631 = ReplacementRule(pattern631, lambda A, e, c, q, p, d, b, f, x, a, C : (2*C*c*f*x*(p + q + 1) + C*(b*f*p - c*e*(2*p + q + 2)))*(a + b*x + c*x**2)**p*(d + e*x + f*x**2)**(q + 1)/(2*c*f**2*(p + q + 1)*(2*p + 2*q + 3)) - Int((a + b*x + c*x**2)**(p - 1)*(d + e*x + f*x**2)**q*Simp(p*(-a*e + b*d)*(-C*c*e*(2*p + 2*q + 3) + C*(q + 1)*(-b*f + c*e)) + x**2*(p*(-b*f + c*e)*(-C*c*e*(2*p + 2*q + 3) + C*(q + 1)*(-b*f + c*e)) + (C*f**2*p*(-4*a*c + b**2) - c**2*(C*(-4*d*f + e**2)*(2*p + q + 2) + f*(2*A*f + 2*C*d)*(2*p + 2*q + 3)))*(p + q + 1)) + x*(2*p*(-a*f + c*d)*(-C*c*e*(2*p + 2*q + 3) + C*(q + 1)*(-b*f + c*e)) + (C*e*f*p*(-4*a*c + b**2) - b*c*(C*(-4*d*f + e**2)*(2*p + q + 2) + f*(2*A*f + 2*C*d)*(2*p + 2*q + 3)))*(p + q + 1)) + (C*b**2*d*f*p + a*c*(-2*A*f**2*(2*p + 2*q + 3) + C*(2*d*f - e**2*(2*p + q + 2))))*(p + q + 1), x), x)/(2*c*f**2*(p + q + 1)*(2*p + 2*q + 3)))
    rubi.add(rule631)

    pattern632 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1))*(x_**2*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda q, p: NonzeroQ(p + q + 1)), CustomConstraint(lambda q, p: NonzeroQ(2*p + 2*q + 3)))
    rule632 = ReplacementRule(pattern632, lambda A, e, c, q, p, d, f, x, B, a, C : (a + c*x**2)**p*(d + e*x + f*x**2)**(q + 1)*(B*c*f*(2*p + 2*q + 3) - C*c*e*(2*p + q + 2) + 2*C*c*f*x*(p + q + 1))/(2*c*f**2*(p + q + 1)*(2*p + 2*q + 3)) - Int((a + c*x**2)**(p - 1)*(d + e*x + f*x**2)**q*Simp(a*c*(C*(2*d*f - e**2*(2*p + q + 2)) + f*(-2*A*f + B*e)*(2*p + 2*q + 3))*(p + q + 1) - a*e*p*(C*c*e*(q + 1) - c*(-B*f + C*e)*(2*p + 2*q + 3)) + x**2*(c*e*p*(C*c*e*(q + 1) - c*(-B*f + C*e)*(2*p + 2*q + 3)) + (-4*C*a*c*f**2*p - c**2*(C*(-4*d*f + e**2)*(2*p + q + 2) + f*(2*p + 2*q + 3)*(2*A*f - B*e + 2*C*d)))*(p + q + 1)) + x*(-4*C*a*c*e*f*p*(p + q + 1) + 2*p*(-a*f + c*d)*(C*c*e*(q + 1) - c*(-B*f + C*e)*(2*p + 2*q + 3))), x), x)/(2*c*f**2*(p + q + 1)*(2*p + 2*q + 3)))
    rubi.add(rule632)

    pattern633 = Pattern(Integral((a_ + x_**2*WC('c', S(1)))**WC('p', S(1))*(x_**2*WC('C', S(1)) + WC('A', S(0)))*(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda q, p: NonzeroQ(p + q + 1)), CustomConstraint(lambda q, p: NonzeroQ(2*p + 2*q + 3)))
    rule633 = ReplacementRule(pattern633, lambda A, c, q, p, d, f, x, C, a, e : (a + c*x**2)**p*(-C*c*e*(2*p + q + 2) + 2*C*c*f*x*(p + q + 1))*(d + e*x + f*x**2)**(q + 1)/(2*c*f**2*(p + q + 1)*(2*p + 2*q + 3)) - Int((a + c*x**2)**(p - 1)*(d + e*x + f*x**2)**q*Simp(a*c*(-2*A*f**2*(2*p + 2*q + 3) + C*(2*d*f - e**2*(2*p + q + 2)))*(p + q + 1) - a*e*p*(C*c*e*(q + 1) - C*c*e*(2*p + 2*q + 3)) + x**2*(c*e*p*(C*c*e*(q + 1) - C*c*e*(2*p + 2*q + 3)) + (-4*C*a*c*f**2*p - c**2*(C*(-4*d*f + e**2)*(2*p + q + 2) + f*(2*A*f + 2*C*d)*(2*p + 2*q + 3)))*(p + q + 1)) + x*(-4*C*a*c*e*f*p*(p + q + 1) + 2*p*(-a*f + c*d)*(C*c*e*(q + 1) - C*c*e*(2*p + 2*q + 3))), x), x)/(2*c*f**2*(p + q + 1)*(2*p + 2*q + 3)))
    rubi.add(rule633)

    pattern634 = Pattern(Integral((d_ + x_**2*WC('f', S(1)))**WC('q', S(1))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1))*(x_**2*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda q, p: NonzeroQ(p + q + 1)), CustomConstraint(lambda q, p: NonzeroQ(2*p + 2*q + 3)))
    rule634 = ReplacementRule(pattern634, lambda A, c, q, p, d, f, x, C, B, a, b : (d + f*x**2)**(q + 1)*(a + b*x + c*x**2)**p*(B*c*f*(2*p + 2*q + 3) + C*b*f*p + 2*C*c*f*x*(p + q + 1))/(2*c*f**2*(p + q + 1)*(2*p + 2*q + 3)) - Int((d + f*x**2)**q*(a + b*x + c*x**2)**(p - 1)*Simp(b*d*p*(B*c*f*(2*p + 2*q + 3) - C*b*f*(q + 1)) + x**2*(-b*f*p*(B*c*f*(2*p + 2*q + 3) - C*b*f*(q + 1)) + (C*f**2*p*(-4*a*c + b**2) - c**2*(-4*C*d*f*(2*p + q + 2) + f*(2*A*f + 2*C*d)*(2*p + 2*q + 3)))*(p + q + 1)) + x*(-b*c*(-4*C*d*f*(2*p + q + 2) + f*(2*A*f + 2*C*d)*(2*p + 2*q + 3))*(p + q + 1) + 2*p*(-a*f + c*d)*(B*c*f*(2*p + 2*q + 3) - C*b*f*(q + 1))) + (C*b**2*d*f*p + a*c*(-2*A*f**2*(2*p + 2*q + 3) + 2*C*d*f))*(p + q + 1), x), x)/(2*c*f**2*(p + q + 1)*(2*p + 2*q + 3)))
    rubi.add(rule634)

    pattern635 = Pattern(Integral((d_ + x_**2*WC('f', S(1)))**WC('q', S(1))*(x_**2*WC('C', S(1)) + WC('A', S(0)))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda q, p: NonzeroQ(p + q + 1)), CustomConstraint(lambda q, p: NonzeroQ(2*p + 2*q + 3)))
    rule635 = ReplacementRule(pattern635, lambda A, c, q, p, d, b, f, x, a, C : (d + f*x**2)**(q + 1)*(C*b*f*p + 2*C*c*f*x*(p + q + 1))*(a + b*x + c*x**2)**p/(2*c*f**2*(p + q + 1)*(2*p + 2*q + 3)) - Int((d + f*x**2)**q*(a + b*x + c*x**2)**(p - 1)*Simp(-C*b**2*d*f*p*(q + 1) + x**2*(C*b**2*f**2*p*(q + 1) + (C*f**2*p*(-4*a*c + b**2) - c**2*(-4*C*d*f*(2*p + q + 2) + f*(2*A*f + 2*C*d)*(2*p + 2*q + 3)))*(p + q + 1)) + x*(-2*C*b*f*p*(q + 1)*(-a*f + c*d) - b*c*(-4*C*d*f*(2*p + q + 2) + f*(2*A*f + 2*C*d)*(2*p + 2*q + 3))*(p + q + 1)) + (C*b**2*d*f*p + a*c*(-2*A*f**2*(2*p + 2*q + 3) + 2*C*d*f))*(p + q + 1), x), x)/(2*c*f**2*(p + q + 1)*(2*p + 2*q + 3)))
    rubi.add(rule635)

    pattern636 = Pattern(Integral((x_**2*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0)))/((a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))*(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)))
    rule636 = ReplacementRule(pattern636, lambda A, e, c, d, b, f, x, B, a, C : With(List(Set(q, a**2*f**2 - a*b*e*f - 2*a*c*d*f + a*c*e**2 + b**2*d*f - b*c*d*e + c**2*d**2)), Condition(Int((-A*a*c*f + A*b**2*f - A*b*c*e + A*c**2*d - B*a*b*f + B*a*c*e + C*a**2*f - C*a*c*d + c*x*(A*b*f - A*c*e - B*a*f + B*c*d + C*a*e - C*b*d))/(a + b*x + c*x**2), x)/q + Int((A*a*f**2 - A*b*e*f - A*c*d*f + A*c*e**2 + B*b*d*f - B*c*d*e - C*a*d*f + C*c*d**2 - f*x*(A*b*f - A*c*e - B*a*f + B*c*d + C*a*e - C*b*d))/(d + e*x + f*x**2), x)/q, NonzeroQ(q))))
    rubi.add(rule636)

    pattern637 = Pattern(Integral((x_**2*WC('C', S(1)) + WC('A', S(0)))/((a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))*(d_ + x_**2*WC('f', S(1)) + x_*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)))
    rule637 = ReplacementRule(pattern637, lambda A, e, c, d, b, f, x, a, C : With(List(Set(q, a**2*f**2 - a*b*e*f - 2*a*c*d*f + a*c*e**2 + b**2*d*f - b*c*d*e + c**2*d**2)), Condition(Int((-A*a*c*f + A*b**2*f - A*b*c*e + A*c**2*d + C*a**2*f - C*a*c*d + c*x*(A*b*f - A*c*e + C*a*e - C*b*d))/(a + b*x + c*x**2), x)/q + Int((A*a*f**2 - A*b*e*f - A*c*d*f + A*c*e**2 - C*a*d*f + C*c*d**2 - f*x*(A*b*f - A*c*e + C*a*e - C*b*d))/(d + e*x + f*x**2), x)/q, NonzeroQ(q))))
    rubi.add(rule637)

    pattern638 = Pattern(Integral((x_**2*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0)))/((d_ + x_**2*WC('f', S(1)))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)))
    rule638 = ReplacementRule(pattern638, lambda A, c, d, b, f, x, B, a, C : With(List(Set(q, a**2*f**2 - 2*a*c*d*f + b**2*d*f + c**2*d**2)), Condition(Int((A*a*f**2 - A*c*d*f + B*b*d*f - C*a*d*f + C*c*d**2 - f*x*(A*b*f - B*a*f + B*c*d - C*b*d))/(d + f*x**2), x)/q + Int((-A*a*c*f + A*b**2*f + A*c**2*d - B*a*b*f + C*a**2*f - C*a*c*d + c*x*(A*b*f - B*a*f + B*c*d - C*b*d))/(a + b*x + c*x**2), x)/q, NonzeroQ(q))))
    rubi.add(rule638)

    pattern639 = Pattern(Integral((x_**2*WC('C', S(1)) + WC('A', S(0)))/((d_ + x_**2*WC('f', S(1)))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)))
    rule639 = ReplacementRule(pattern639, lambda A, c, d, b, f, x, a, C : With(List(Set(q, a**2*f**2 - 2*a*c*d*f + b**2*d*f + c**2*d**2)), Condition(Int((A*a*f**2 - A*c*d*f - C*a*d*f + C*c*d**2 - f*x*(A*b*f - C*b*d))/(d + f*x**2), x)/q + Int((-A*a*c*f + A*b**2*f + A*c**2*d + C*a**2*f - C*a*c*d + c*x*(A*b*f - C*b*d))/(a + b*x + c*x**2), x)/q, NonzeroQ(q))))
    rubi.add(rule639)

    pattern640 = Pattern(Integral((x_**2*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0)))/((a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))*sqrt(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)))
    rule640 = ReplacementRule(pattern640, lambda A, e, c, d, b, f, x, B, a, C : C*Int(1/Sqrt(d + e*x + f*x**2), x)/c + Int((A*c - C*a + x*(B*c - C*b))/((a + b*x + c*x**2)*Sqrt(d + e*x + f*x**2)), x)/c)
    rubi.add(rule640)

    pattern641 = Pattern(Integral((x_**2*WC('C', S(1)) + WC('A', S(0)))/((a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))*sqrt(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)))
    rule641 = ReplacementRule(pattern641, lambda A, e, c, d, b, f, x, a, C : C*Int(1/Sqrt(d + e*x + f*x**2), x)/c + Int((A*c - C*a - C*b*x)/((a + b*x + c*x**2)*Sqrt(d + e*x + f*x**2)), x)/c)
    rubi.add(rule641)

    pattern642 = Pattern(Integral((x_**2*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0)))/((a_ + x_**2*WC('c', S(1)))*sqrt(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)))
    rule642 = ReplacementRule(pattern642, lambda A, e, c, d, f, x, B, a, C : C*Int(1/Sqrt(d + e*x + f*x**2), x)/c + Int((A*c + B*c*x - C*a)/((a + c*x**2)*Sqrt(d + e*x + f*x**2)), x)/c)
    rubi.add(rule642)

    pattern643 = Pattern(Integral((x_**2*WC('C', S(1)) + WC('A', S(0)))/((a_ + x_**2*WC('c', S(1)))*sqrt(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda d, e, f: NonzeroQ(-4*d*f + e**2)))
    rule643 = ReplacementRule(pattern643, lambda A, c, d, f, x, C, a, e : C*Int(1/Sqrt(d + e*x + f*x**2), x)/c + (A*c - C*a)*Int(1/((a + c*x**2)*Sqrt(d + e*x + f*x**2)), x)/c)
    rubi.add(rule643)

    pattern644 = Pattern(Integral((x_**2*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0)))/(sqrt(x_**2*WC('f', S(1)) + WC('d', S(0)))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)))
    rule644 = ReplacementRule(pattern644, lambda A, c, d, b, f, x, B, a, C : C*Int(1/Sqrt(d + f*x**2), x)/c + Int((A*c - C*a + x*(B*c - C*b))/((a + b*x + c*x**2)*Sqrt(d + f*x**2)), x)/c)
    rubi.add(rule644)

    pattern645 = Pattern(Integral((x_**2*WC('C', S(1)) + WC('A', S(0)))/(sqrt(x_**2*WC('f', S(1)) + WC('d', S(0)))*(a_ + x_**2*WC('c', S(1)) + x_*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-4*a*c + b**2)))
    rule645 = ReplacementRule(pattern645, lambda A, c, d, b, f, x, a, C : C*Int(1/Sqrt(d + f*x**2), x)/c + Int((A*c - C*a - C*b*x)/((a + b*x + c*x**2)*Sqrt(d + f*x**2)), x)/c)
    rubi.add(rule645)

    pattern646 = Pattern(Integral((x_**2*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)))
    rule646 = ReplacementRule(pattern646, lambda A, e, c, q, p, d, f, x, C, B, a, b : Int((A + B*x + C*x**2)*(a + b*x + c*x**2)**p*(d + e*x + f*x**2)**q, x))
    rubi.add(rule646)

    pattern647 = Pattern(Integral((x_**2*WC('C', S(1)) + WC('A', S(0)))*(x_**2*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**p_*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)))
    rule647 = ReplacementRule(pattern647, lambda A, e, c, q, p, d, b, f, x, a, C : Int((A + C*x**2)*(a + b*x + c*x**2)**p*(d + e*x + f*x**2)**q, x))
    rubi.add(rule647)

    pattern648 = Pattern(Integral((x_**2*WC('c', S(1)) + WC('a', S(0)))**p_*(x_**2*WC('C', S(1)) + x_*WC('B', S(1)) + WC('A', S(0)))*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)))
    rule648 = ReplacementRule(pattern648, lambda A, e, c, q, p, d, f, x, B, a, C : Int((a + c*x**2)**p*(A + B*x + C*x**2)*(d + e*x + f*x**2)**q, x))
    rubi.add(rule648)

    pattern649 = Pattern(Integral((x_**2*WC('C', S(1)) + WC('A', S(0)))*(x_**2*WC('c', S(1)) + WC('a', S(0)))**p_*(x_**2*WC('f', S(1)) + x_*WC('e', S(1)) + WC('d', S(0)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)))
    rule649 = ReplacementRule(pattern649, lambda A, e, c, q, p, d, f, x, a, C : Int((A + C*x**2)*(a + c*x**2)**p*(d + e*x + f*x**2)**q, x))
    rubi.add(rule649)

    pattern650 = Pattern(Integral((u_**2*WC('C', S(1)) + u_*WC('B', S(1)) + WC('A', S(0)))*(u_**2*WC('c', S(1)) + u_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1))*(u_**2*WC('f', S(1)) + u_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule650 = ReplacementRule(pattern650, lambda A, u, e, c, q, p, d, f, x, C, B, a, b : Subst(Int((A + B*x + C*x**2)*(a + b*x + c*x**2)**p*(d + e*x + f*x**2)**q, x), x, u)/Coefficient(u, x, 1))
    rubi.add(rule650)

    pattern651 = Pattern(Integral((u_*WC('B', S(1)) + WC('A', S(0)))*(u_**2*WC('c', S(1)) + u_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1))*(u_**2*WC('f', S(1)) + u_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule651 = ReplacementRule(pattern651, lambda A, u, e, c, q, p, d, f, x, B, a, b : Subst(Int((A + B*x)*(a + b*x + c*x**2)**p*(d + e*x + f*x**2)**q, x), x, u)/Coefficient(u, x, 1))
    rubi.add(rule651)

    pattern652 = Pattern(Integral((u_**2*WC('C', S(1)) + WC('A', S(0)))*(u_**2*WC('c', S(1)) + u_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1))*(u_**2*WC('f', S(1)) + u_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule652 = ReplacementRule(pattern652, lambda A, u, e, c, q, p, d, f, x, C, a, b : Subst(Int((A + C*x**2)*(a + b*x + c*x**2)**p*(d + e*x + f*x**2)**q, x), x, u)/Coefficient(u, x, 1))
    rubi.add(rule652)

    pattern653 = Pattern(Integral((u_**2*WC('c', S(1)) + WC('a', S(0)))**WC('p', S(1))*(u_**2*WC('C', S(1)) + u_*WC('B', S(1)) + WC('A', S(0)))*(u_**2*WC('f', S(1)) + u_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule653 = ReplacementRule(pattern653, lambda A, u, e, c, q, p, d, f, x, B, a, C : Subst(Int((a + c*x**2)**p*(A + B*x + C*x**2)*(d + e*x + f*x**2)**q, x), x, u)/Coefficient(u, x, 1))
    rubi.add(rule653)

    pattern654 = Pattern(Integral((u_*WC('B', S(1)) + WC('A', S(0)))*(u_**2*WC('c', S(1)) + WC('a', S(0)))**WC('p', S(1))*(u_**2*WC('f', S(1)) + u_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule654 = ReplacementRule(pattern654, lambda A, u, c, q, p, d, f, x, B, a, e : Subst(Int((A + B*x)*(a + c*x**2)**p*(d + e*x + f*x**2)**q, x), x, u)/Coefficient(u, x, 1))
    rubi.add(rule654)

    pattern655 = Pattern(Integral((u_**2*WC('C', S(1)) + WC('A', S(0)))*(u_**2*WC('c', S(1)) + WC('a', S(0)))**WC('p', S(1))*(u_**2*WC('f', S(1)) + u_*WC('e', S(1)) + WC('d', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule655 = ReplacementRule(pattern655, lambda A, u, e, c, q, p, d, f, x, a, C : Subst(Int((A + C*x**2)*(a + c*x**2)**p*(d + e*x + f*x**2)**q, x), x, u)/Coefficient(u, x, 1))
    rubi.add(rule655)

    pattern656 = Pattern(Integral((x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)))
    rule656 = ReplacementRule(pattern656, lambda x, n, p, b : b**IntPart(p)*x**(-n*FracPart(p))*(b*x**n)**FracPart(p)*Int(x**(n*p), x))
    rubi.add(rule656)

    pattern657 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, p: ZeroQ(p + 1 + 1/n)))
    rule657 = ReplacementRule(pattern657, lambda p, x, n, a, b : x*(a + b*x**n)**(p + 1)/a)
    rubi.add(rule657)

    pattern658 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, p: NegativeIntegerQ(p + 1 + 1/n)), CustomConstraint(lambda p: NonzeroQ(p + 1)))
    rule658 = ReplacementRule(pattern658, lambda p, x, n, a, b : -x*(a + b*x**n)**(p + 1)/(a*n*(p + 1)) + (n*(p + 1) + 1)*Int((a + b*x**n)**(p + 1), x)/(a*n*(p + 1)))
    rubi.add(rule658)

    pattern659 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**2, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n: NonzeroQ(3*n + 1)))
    rule659 = ReplacementRule(pattern659, lambda x, n, a, b : Int(a**2 + 2*a*b*x**n + b**2*x**(2*n), x))
    rubi.add(rule659)

    pattern660 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, 0)), CustomConstraint(lambda p: IntegerQ(p)))
    rule660 = ReplacementRule(pattern660, lambda p, x, n, a, b : Int(x**(n*p)*(a*x**(-n) + b)**p, x))
    rubi.add(rule660)

    pattern661 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda n, p: PositiveIntegerQ(n, p)))
    rule661 = ReplacementRule(pattern661, lambda p, x, n, a, b : Int(ExpandIntegrand((a + b*x**n)**p, x), x))
    rubi.add(rule661)

    pattern662 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda p, n: IntegerQ(2*p) | (Equal(n, 2) & IntegerQ(3*p)) | (Equal(n, 2) & IntegerQ(4*p)) | Less(Denominator(p + 1/n), Denominator(p))))
    rule662 = ReplacementRule(pattern662, lambda p, x, n, a, b : a*n*p*Int((a + b*x**n)**(p - 1), x)/(n*p + 1) + x*(a + b*x**n)**p/(n*p + 1))
    rubi.add(rule662)

    pattern663 = Pattern(Integral((a_ + x_**2*WC('b', S(1)))**(S(-5)/4), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a, b: PosQ(b/a)), CustomConstraint(lambda a: PositiveQ(a)))
    rule663 = ReplacementRule(pattern663, lambda x, a, b : 2*EllipticE(ArcTan(x*Rt(b/a, 2))/2, 2)/(a**(5/4)*Rt(b/a, 2)))
    rubi.add(rule663)

    pattern664 = Pattern(Integral((a_ + x_**2*WC('b', S(1)))**(S(-5)/4), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a, b: PosQ(b/a)), CustomConstraint(lambda a: ~(PositiveQ(a))))
    rule664 = ReplacementRule(pattern664, lambda x, a, b : (1 + b*x**2/a)**(1/4)*Int((1 + b*x**2/a)**(-5/4), x)/(a*(a + b*x**2)**(1/4)))
    rubi.add(rule664)

    pattern665 = Pattern(Integral((a_ + x_**2*WC('b', S(1)))**(S(-7)/6), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)))
    rule665 = ReplacementRule(pattern665, lambda x, a, b : Subst(Int((-b*x**2 + 1)**(-1/3), x), x, x/Sqrt(a + b*x**2))/((a/(a + b*x**2))**(2/3)*(a + b*x**2)**(2/3)))
    rubi.add(rule665)

    pattern666 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda p, n: IntegerQ(2*p) | (Equal(n, 2) & IntegerQ(3*p)) | (Equal(n, 2) & IntegerQ(4*p)) | Less(Denominator(p + 1/n), Denominator(p))))
    rule666 = ReplacementRule(pattern666, lambda p, x, n, a, b : -x*(a + b*x**n)**(p + 1)/(a*n*(p + 1)) + (n*(p + 1) + 1)*Int((a + b*x**n)**(p + 1), x)/(a*n*(p + 1)))
    rubi.add(rule666)

    pattern667 = Pattern(Integral(1/(a_ + x_**3*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)))
    rule667 = ReplacementRule(pattern667, lambda x, a, b : Int((-x*Rt(b, 3) + 2*Rt(a, 3))/(x**2*Rt(b, 3)**2 - x*Rt(a, 3)*Rt(b, 3) + Rt(a, 3)**2), x)/(3*Rt(a, 3)**2) + Int(1/(x*Rt(b, 3) + Rt(a, 3)), x)/(3*Rt(a, 3)**2))
    rubi.add(rule667)

    pattern668 = Pattern(Integral(1/(a_ + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda n: PositiveIntegerQ(n/2 + S(-3)/2)), CustomConstraint(lambda a, b: PosQ(a/b)))
    rule668 = ReplacementRule(pattern668, lambda x, n, a, b : Module(List(Set(r, Numerator(Rt(a/b, n))), Set(s, Denominator(Rt(a/b, n))), k, u), CompoundExpression(Set(u, Int((r - s*x*Cos(Pi*(2*k - 1)/n))/(r**2 - 2*r*s*x*Cos(Pi*(2*k - 1)/n) + s**2*x**2), x)), Dist(2*r/(a*n), Sum(u, List(k, 1, n/2 - 1/2)), x) + r*Int(1/(r + s*x), x)/(a*n))))
    rubi.add(rule668)

    pattern669 = Pattern(Integral(1/(a_ + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda n: PositiveIntegerQ(n/2 + S(-3)/2)), CustomConstraint(lambda a, b: NegQ(a/b)))
    rule669 = ReplacementRule(pattern669, lambda x, n, a, b : Module(List(Set(r, Numerator(Rt(-a/b, n))), Set(s, Denominator(Rt(-a/b, n))), k, u), CompoundExpression(Set(u, Int((r + s*x*Cos(Pi*(2*k - 1)/n))/(r**2 + 2*r*s*x*Cos(Pi*(2*k - 1)/n) + s**2*x**2), x)), Dist(2*r/(a*n), Sum(u, List(k, 1, n/2 - 1/2)), x) + r*Int(1/(r - s*x), x)/(a*n))))
    rubi.add(rule669)

    pattern670 = Pattern(Integral(1/(a_ + x_**2*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a, b: PosQ(a/b)), CustomConstraint(lambda a, b: PositiveQ(a) | PositiveQ(b)))
    rule670 = ReplacementRule(pattern670, lambda x, a, b : ArcTan(x*Rt(b, 2)/Rt(a, 2))/(Rt(a, 2)*Rt(b, 2)))
    rubi.add(rule670)

    pattern671 = Pattern(Integral(1/(a_ + x_**2*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a, b: PosQ(a/b)), CustomConstraint(lambda a, b: NegativeQ(a) | NegativeQ(b)))
    rule671 = ReplacementRule(pattern671, lambda x, a, b : -ArcTan(x*Rt(-b, 2)/Rt(-a, 2))/(Rt(-a, 2)*Rt(-b, 2)))
    rubi.add(rule671)

    pattern672 = Pattern(Integral(1/(a_ + x_**2*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a, b: PosQ(a/b)))
    rule672 = ReplacementRule(pattern672, lambda x, a, b : ArcTan(x/Rt(a/b, 2))*Rt(a/b, 2)/a)
    rubi.add(rule672)

    pattern673 = Pattern(Integral(1/(a_ + x_**2*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a, b: NegQ(a/b)), CustomConstraint(lambda a, b: NegativeQ(b) | PositiveQ(a)))
    rule673 = ReplacementRule(pattern673, lambda x, a, b : ArcTanh(x*Rt(-b, 2)/Rt(a, 2))/(Rt(a, 2)*Rt(-b, 2)))
    rubi.add(rule673)

    pattern674 = Pattern(Integral(1/(a_ + x_**2*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a, b: NegQ(a/b)), CustomConstraint(lambda a, b: NegativeQ(a) | PositiveQ(b)))
    rule674 = ReplacementRule(pattern674, lambda x, a, b : -ArcTanh(x*Rt(b, 2)/Rt(-a, 2))/(Rt(-a, 2)*Rt(b, 2)))
    rubi.add(rule674)

    pattern675 = Pattern(Integral(1/(a_ + x_**2*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a, b: NegQ(a/b)))
    rule675 = ReplacementRule(pattern675, lambda x, a, b : ArcTanh(x/Rt(-a/b, 2))*Rt(-a/b, 2)/a)
    rubi.add(rule675)

    pattern676 = Pattern(Integral(1/(a_ + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda n: PositiveIntegerQ(n/4 + S(-1)/2)), CustomConstraint(lambda a, b: PosQ(a/b)))
    rule676 = ReplacementRule(pattern676, lambda x, n, a, b : Module(List(Set(r, Numerator(Rt(a/b, n))), Set(s, Denominator(Rt(a/b, n))), k, u, v), CompoundExpression(Set(u, Int((r - s*x*Cos(Pi*(2*k - 1)/n))/(r**2 - 2*r*s*x*Cos(Pi*(2*k - 1)/n) + s**2*x**2), x) + Int((r + s*x*Cos(Pi*(2*k - 1)/n))/(r**2 + 2*r*s*x*Cos(Pi*(2*k - 1)/n) + s**2*x**2), x)), Dist(2*r/(a*n), Sum(u, List(k, 1, n/4 - 1/2)), x) + 2*r**2*Int(1/(r**2 + s**2*x**2), x)/(a*n))))
    rubi.add(rule676)

    pattern677 = Pattern(Integral(1/(a_ + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda n: PositiveIntegerQ(n/4 + S(-1)/2)), CustomConstraint(lambda a, b: NegQ(a/b)))
    rule677 = ReplacementRule(pattern677, lambda x, n, a, b : Module(List(Set(r, Numerator(Rt(-a/b, n))), Set(s, Denominator(Rt(-a/b, n))), k, u), CompoundExpression(Set(u, Int((r - s*x*Cos(2*Pi*k/n))/(r**2 - 2*r*s*x*Cos(2*Pi*k/n) + s**2*x**2), x) + Int((r + s*x*Cos(2*Pi*k/n))/(r**2 + 2*r*s*x*Cos(2*Pi*k/n) + s**2*x**2), x)), Dist(2*r/(a*n), Sum(u, List(k, 1, n/4 - 1/2)), x) + 2*r**2*Int(1/(r**2 - s**2*x**2), x)/(a*n))))
    rubi.add(rule677)

    pattern678 = Pattern(Integral(1/(a_ + x_**4*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a, b: PositiveQ(a/b) | (AtomQ(SplitProduct(SumBaseQ, a)) & AtomQ(SplitProduct(SumBaseQ, b)) & PosQ(a/b))))
    rule678 = ReplacementRule(pattern678, lambda x, a, b : With(List(Set(r, Numerator(Rt(a/b, 2))), Set(s, Denominator(Rt(a/b, 2)))), Int((r - s*x**2)/(a + b*x**4), x)/(2*r) + Int((r + s*x**2)/(a + b*x**4), x)/(2*r)))
    rubi.add(rule678)

    pattern679 = Pattern(Integral(1/(a_ + x_**4*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a, b: ~(PositiveQ(a/b))))
    rule679 = ReplacementRule(pattern679, lambda x, a, b : With(List(Set(r, Numerator(Rt(-a/b, 2))), Set(s, Denominator(Rt(-a/b, 2)))), r*Int(1/(r - s*x**2), x)/(2*a) + r*Int(1/(r + s*x**2), x)/(2*a)))
    rubi.add(rule679)

    pattern680 = Pattern(Integral(1/(a_ + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda n: PositiveIntegerQ(n/4 - 1)), CustomConstraint(lambda a, b: PositiveQ(a/b)))
    rule680 = ReplacementRule(pattern680, lambda x, n, a, b : With(List(Set(r, Numerator(Rt(a/b, 4))), Set(s, Denominator(Rt(a/b, 4)))), r*Int((r*Sqrt(2) - s*x**(n/4))/(r**2 - r*s*x**(n/4)*Sqrt(2) + s**2*x**(n/2)), x)/(2*a*Sqrt(2)) + r*Int((r*Sqrt(2) + s*x**(n/4))/(r**2 + r*s*x**(n/4)*Sqrt(2) + s**2*x**(n/2)), x)/(2*a*Sqrt(2))))
    rubi.add(rule680)

    pattern681 = Pattern(Integral(1/(a_ + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda n: PositiveIntegerQ(n/4 - 1)), CustomConstraint(lambda a, b: ~(PositiveQ(a/b))))
    rule681 = ReplacementRule(pattern681, lambda x, n, a, b : With(List(Set(r, Numerator(Rt(-a/b, 2))), Set(s, Denominator(Rt(-a/b, 2)))), r*Int(1/(r - s*x**(n/2)), x)/(2*a) + r*Int(1/(r + s*x**(n/2)), x)/(2*a)))
    rubi.add(rule681)

    pattern682 = Pattern(Integral(1/sqrt(a_ + x_**2*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a: PositiveQ(a)), CustomConstraint(lambda b: PosQ(b)))
    rule682 = ReplacementRule(pattern682, lambda x, a, b : ArcSinh(x*Rt(b, 2)/Sqrt(a))/Rt(b, 2))
    rubi.add(rule682)

    pattern683 = Pattern(Integral(1/sqrt(a_ + x_**2*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a: PositiveQ(a)), CustomConstraint(lambda b: NegQ(b)))
    rule683 = ReplacementRule(pattern683, lambda x, a, b : ArcSin(x*Rt(-b, 2)/Sqrt(a))/Rt(-b, 2))
    rubi.add(rule683)

    pattern684 = Pattern(Integral(1/sqrt(a_ + x_**2*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a: ~(PositiveQ(a))))
    rule684 = ReplacementRule(pattern684, lambda x, a, b : Subst(Int(1/(-b*x**2 + 1), x), x, x/Sqrt(a + b*x**2)))
    rubi.add(rule684)

    pattern685 = Pattern(Integral(1/sqrt(a_ + x_**3*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a: PosQ(a)))
    rule685 = ReplacementRule(pattern685, lambda x, a, b : With(List(Set(r, Numer(Rt(b/a, 3))), Set(s, Denom(Rt(b/a, 3)))), 2*3**(3/4)*(r*x + s)*EllipticF(ArcSin((r*x + s*(-Sqrt(3) + 1))/(r*x + s*(Sqrt(3) + 1))), -4*Sqrt(3) - 7)*Sqrt((r**2*x**2 - r*s*x + s**2)/(r*x + s*(Sqrt(3) + 1))**2)*Sqrt(Sqrt(3) + 2)/(3*r*Sqrt(s*(r*x + s)/(r*x + s*(Sqrt(3) + 1))**2)*Sqrt(a + b*x**3))))
    rubi.add(rule685)

    pattern686 = Pattern(Integral(1/sqrt(a_ + x_**3*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a: NegQ(a)))
    rule686 = ReplacementRule(pattern686, lambda x, a, b : With(List(Set(r, Numer(Rt(b/a, 3))), Set(s, Denom(Rt(b/a, 3)))), 2*3**(3/4)*(r*x + s)*EllipticF(ArcSin((r*x + s*(Sqrt(3) + 1))/(r*x + s*(-Sqrt(3) + 1))), 4*Sqrt(3) - 7)*Sqrt((r**2*x**2 - r*s*x + s**2)/(r*x + s*(-Sqrt(3) + 1))**2)*Sqrt(-Sqrt(3) + 2)/(3*r*Sqrt(-s*(r*x + s)/(r*x + s*(-Sqrt(3) + 1))**2)*Sqrt(a + b*x**3))))
    rubi.add(rule686)

    pattern687 = Pattern(Integral(1/sqrt(a_ + x_**4*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a, b: PosQ(b/a)))
    rule687 = ReplacementRule(pattern687, lambda x, a, b : With(List(Set(q, Rt(b/a, 4))), (q**2*x**2 + 1)*EllipticF(2*ArcTan(q*x), 1/2)*Sqrt((a + b*x**4)/(a*(q**2*x**2 + 1)**2))/(2*q*Sqrt(a + b*x**4))))
    rubi.add(rule687)

    pattern688 = Pattern(Integral(1/sqrt(a_ + x_**4*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a, b: NegQ(b/a)), CustomConstraint(lambda a: PositiveQ(a)))
    rule688 = ReplacementRule(pattern688, lambda x, a, b : EllipticF(ArcSin(x*Rt(-b, 4)/Rt(a, 4)), -1)/(Rt(a, 4)*Rt(-b, 4)))
    rubi.add(rule688)

    pattern689 = Pattern(Integral(1/sqrt(a_ + x_**4*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a: NegativeQ(a)), CustomConstraint(lambda b: PositiveQ(b)))
    rule689 = ReplacementRule(pattern689, lambda x, a, b : With(List(Set(q, Rt(-a*b, 2))), Condition(EllipticF(ArcSin(x/Sqrt((a + q*x**2)/(2*q))), 1/2)*Sqrt((a + q*x**2)/q)*Sqrt(-a + q*x**2)/(Sqrt(2)*Sqrt(-a)*Sqrt(a + b*x**4)), IntegerQ(q))))
    rubi.add(rule689)

    pattern690 = Pattern(Integral(1/sqrt(a_ + x_**4*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a: NegativeQ(a)), CustomConstraint(lambda b: PositiveQ(b)))
    rule690 = ReplacementRule(pattern690, lambda x, a, b : With(List(Set(q, Rt(-a*b, 2))), EllipticF(ArcSin(x/Sqrt((a + q*x**2)/(2*q))), 1/2)*Sqrt((a + q*x**2)/q)*Sqrt((a - q*x**2)/(a + q*x**2))/(Sqrt(2)*Sqrt(a/(a + q*x**2))*Sqrt(a + b*x**4))))
    rubi.add(rule690)

    pattern691 = Pattern(Integral(1/sqrt(a_ + x_**4*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a, b: NegQ(b/a)), CustomConstraint(lambda a: ~(PositiveQ(a))))
    rule691 = ReplacementRule(pattern691, lambda x, a, b : Int(1/Sqrt(1 + b*x**4/a), x)*Sqrt(1 + b*x**4/a)/Sqrt(a + b*x**4))
    rubi.add(rule691)

    pattern692 = Pattern(Integral(1/sqrt(a_ + x_**6*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)))
    rule692 = ReplacementRule(pattern692, lambda x, a, b : With(List(Set(r, Numer(Rt(b/a, 3))), Set(s, Denom(Rt(b/a, 3)))), 3**(3/4)*x*(r*x**2 + s)*EllipticF(ArcCos((r*x**2*(-Sqrt(3) + 1) + s)/(r*x**2*(Sqrt(3) + 1) + s)), Sqrt(3)/4 + 1/2)*Sqrt((r**2*x**4 - r*s*x**2 + s**2)/(r*x**2*(Sqrt(3) + 1) + s)**2)/(6*s*Sqrt(r*x**2*(r*x**2 + s)/(r*x**2*(Sqrt(3) + 1) + s)**2)*Sqrt(a + b*x**6))))
    rubi.add(rule692)

    pattern693 = Pattern(Integral(1/sqrt(a_ + x_**8*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)))
    rule693 = ReplacementRule(pattern693, lambda x, a, b : Int((-x**2*Rt(b/a, 4) + 1)/Sqrt(a + b*x**8), x)/2 + Int((x**2*Rt(b/a, 4) + 1)/Sqrt(a + b*x**8), x)/2)
    rubi.add(rule693)

    pattern694 = Pattern(Integral((a_ + x_**2*WC('b', S(1)))**(S(-1)/4), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a, b: PosQ(b/a)))
    rule694 = ReplacementRule(pattern694, lambda x, a, b : -a*Int((a + b*x**2)**(-5/4), x) + 2*x/(a + b*x**2)**(1/4))
    rubi.add(rule694)

    pattern695 = Pattern(Integral((a_ + x_**2*WC('b', S(1)))**(S(-1)/4), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a, b: NegQ(b/a)), CustomConstraint(lambda a: PositiveQ(a)))
    rule695 = ReplacementRule(pattern695, lambda x, a, b : 2*EllipticE(ArcSin(x*Rt(-b/a, 2))/2, 2)/(a**(1/4)*Rt(-b/a, 2)))
    rubi.add(rule695)

    pattern696 = Pattern(Integral((a_ + x_**2*WC('b', S(1)))**(S(-1)/4), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a, b: NegQ(b/a)), CustomConstraint(lambda a: ~(PositiveQ(a))))
    rule696 = ReplacementRule(pattern696, lambda x, a, b : (1 + b*x**2/a)**(1/4)*Int((1 + b*x**2/a)**(-1/4), x)/(a + b*x**2)**(1/4))
    rubi.add(rule696)

    pattern697 = Pattern(Integral((a_ + x_**2*WC('b', S(1)))**(S(-3)/4), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a: PositiveQ(a)), CustomConstraint(lambda a, b: PosQ(b/a)))
    rule697 = ReplacementRule(pattern697, lambda x, a, b : 2*EllipticF(ArcTan(x*Rt(b/a, 2))/2, 2)/(a**(3/4)*Rt(b/a, 2)))
    rubi.add(rule697)

    pattern698 = Pattern(Integral((a_ + x_**2*WC('b', S(1)))**(S(-3)/4), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a: PositiveQ(a)), CustomConstraint(lambda a, b: NegQ(b/a)))
    rule698 = ReplacementRule(pattern698, lambda x, a, b : 2*EllipticF(ArcSin(x*Rt(-b/a, 2))/2, 2)/(a**(3/4)*Rt(-b/a, 2)))
    rubi.add(rule698)

    pattern699 = Pattern(Integral((a_ + x_**2*WC('b', S(1)))**(S(-3)/4), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a: ~(PositiveQ(a))))
    rule699 = ReplacementRule(pattern699, lambda x, a, b : (1 + b*x**2/a)**(3/4)*Int((1 + b*x**2/a)**(-3/4), x)/(a + b*x**2)**(3/4))
    rubi.add(rule699)

    pattern700 = Pattern(Integral((a_ + x_**2*WC('b', S(1)))**(S(-1)/3), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)))
    rule700 = ReplacementRule(pattern700, lambda x, a, b : 3*Sqrt(b*x**2)*Subst(Int(x/Sqrt(-a + x**3), x), x, (a + b*x**2)**(1/3))/(2*b*x))
    rubi.add(rule700)

    pattern701 = Pattern(Integral((a_ + x_**2*WC('b', S(1)))**(S(-2)/3), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)))
    rule701 = ReplacementRule(pattern701, lambda x, a, b : 3*Sqrt(b*x**2)*Subst(Int(1/Sqrt(-a + x**3), x), x, (a + b*x**2)**(1/3))/(2*b*x))
    rubi.add(rule701)

    pattern702 = Pattern(Integral((a_ + x_**4*WC('b', S(1)))**(S(-3)/4), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)))
    rule702 = ReplacementRule(pattern702, lambda x, a, b : x**3*(a/(b*x**4) + 1)**(3/4)*Int(1/(x**3*(a/(b*x**4) + 1)**(3/4)), x)/(a + b*x**4)**(3/4))
    rubi.add(rule702)

    pattern703 = Pattern(Integral((a_ + x_**2*WC('b', S(1)))**(S(-1)/6), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)))
    rule703 = ReplacementRule(pattern703, lambda x, a, b : -a*Int((a + b*x**2)**(-7/6), x)/2 + 3*x/(2*(a + b*x**2)**(1/6)))
    rubi.add(rule703)

    pattern704 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(-1, p, 0)), CustomConstraint(lambda p: Unequal(p, S(-1)/2)), CustomConstraint(lambda p, n: IntegerQ(p + 1/n)))
    rule704 = ReplacementRule(pattern704, lambda p, x, n, a, b : a**(p + 1/n)*Subst(Int((-b*x**n + 1)**(-p - 1 - 1/n), x), x, x*(a + b*x**n)**(-1/n)))
    rubi.add(rule704)

    pattern705 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(-1, p, 0)), CustomConstraint(lambda p: Unequal(p, S(-1)/2)), CustomConstraint(lambda p, n: Less(Denominator(p + 1/n), Denominator(p))))
    rule705 = ReplacementRule(pattern705, lambda p, x, n, a, b : (a/(a + b*x**n))**(p + 1/n)*(a + b*x**n)**(p + 1/n)*Subst(Int((-b*x**n + 1)**(-p - 1 - 1/n), x), x, x*(a + b*x**n)**(-1/n)))
    rubi.add(rule705)

    pattern706 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n: NegativeIntegerQ(n)))
    rule706 = ReplacementRule(pattern706, lambda p, x, n, a, b : -Subst(Int((a + b*x**(-n))**p/x**2, x), x, 1/x))
    rubi.add(rule706)

    pattern707 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n: FractionQ(n)))
    rule707 = ReplacementRule(pattern707, lambda p, x, n, a, b : With(List(Set(k, Denominator(n))), k*Subst(Int(x**(k - 1)*(a + b*x**(k*n))**p, x), x, x**(1/k))))
    rubi.add(rule707)

    pattern708 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p: PositiveIntegerQ(p)))
    rule708 = ReplacementRule(pattern708, lambda p, x, n, a, b : Int(ExpandIntegrand((a + b*x**n)**p, x), x))
    rubi.add(rule708)

    pattern709 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda p: ~(PositiveIntegerQ(p))), CustomConstraint(lambda n: ~(IntegerQ(1/n))), CustomConstraint(lambda n, p: ~(NegativeIntegerQ(Simplify(p + 1/n)))), CustomConstraint(lambda p, a: IntegerQ(p) | PositiveQ(a)))
    rule709 = ReplacementRule(pattern709, lambda p, x, n, a, b : a**p*x*Hypergeometric2F1(-p, 1/n, 1 + 1/n, -b*x**n/a))
    rubi.add(rule709)

    pattern710 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda p: ~(PositiveIntegerQ(p))), CustomConstraint(lambda n: ~(IntegerQ(1/n))), CustomConstraint(lambda n, p: ~(NegativeIntegerQ(Simplify(p + 1/n)))), CustomConstraint(lambda p, a: ~(IntegerQ(p) | PositiveQ(a))))
    rule710 = ReplacementRule(pattern710, lambda p, x, n, a, b : a**IntPart(p)*(1 + b*x**n/a)**(-FracPart(p))*(a + b*x**n)**FracPart(p)*Int((1 + b*x**n/a)**p, x))
    rubi.add(rule710)

    pattern711 = Pattern(Integral((u_**n_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule711 = ReplacementRule(pattern711, lambda u, p, x, n, a, b : Subst(Int((a + b*x**n)**p, x), x, u)/Coefficient(u, x, 1))
    rubi.add(rule711)

    pattern712 = Pattern(Integral((x_**n_*WC('b1', S(1)) + WC('a1', S(0)))**WC('p', S(1))*(x_**n_*WC('b2', S(1)) + WC('a2', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda p, a2, a1: IntegerQ(p) | (PositiveQ(a1) & PositiveQ(a2))))
    rule712 = ReplacementRule(pattern712, lambda b1, a1, b2, p, a2, x, n : Int((a1*a2 + b1*b2*x**(2*n))**p, x))
    rubi.add(rule712)

    pattern713 = Pattern(Integral((a1_ + x_**WC('n', S(1))*WC('b1', S(1)))**WC('p', S(1))*(a2_ + x_**WC('n', S(1))*WC('b2', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda n: PositiveIntegerQ(2*n)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda p, n: IntegerQ(2*p) | Less(Denominator(p + 1/n), Denominator(p))))
    rule713 = ReplacementRule(pattern713, lambda b1, a1, b2, p, a2, x, n : 2*a1*a2*n*p*Int((a1 + b1*x**n)**(p - 1)*(a2 + b2*x**n)**(p - 1), x)/(2*n*p + 1) + x*(a1 + b1*x**n)**p*(a2 + b2*x**n)**p/(2*n*p + 1))
    rubi.add(rule713)

    pattern714 = Pattern(Integral((a1_ + x_**WC('n', S(1))*WC('b1', S(1)))**p_*(a2_ + x_**WC('n', S(1))*WC('b2', S(1)))**p_, x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda n: PositiveIntegerQ(2*n)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda p, n: IntegerQ(2*p) | Less(Denominator(p + 1/n), Denominator(p))))
    rule714 = ReplacementRule(pattern714, lambda b1, a1, b2, p, a2, x, n : -x*(a1 + b1*x**n)**(p + 1)*(a2 + b2*x**n)**(p + 1)/(2*a1*a2*n*(p + 1)) + (2*n*(p + 1) + 1)*Int((a1 + b1*x**n)**(p + 1)*(a2 + b2*x**n)**(p + 1), x)/(2*a1*a2*n*(p + 1)))
    rubi.add(rule714)

    pattern715 = Pattern(Integral((a1_ + x_**n_*WC('b1', S(1)))**p_*(a2_ + x_**n_*WC('b2', S(1)))**p_, x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda n: NegativeIntegerQ(2*n)))
    rule715 = ReplacementRule(pattern715, lambda b1, a1, b2, p, a2, x, n : -Subst(Int((a1 + b1*x**(-n))**p*(a2 + b2*x**(-n))**p/x**2, x), x, 1/x))
    rubi.add(rule715)

    pattern716 = Pattern(Integral((a1_ + x_**n_*WC('b1', S(1)))**p_*(a2_ + x_**n_*WC('b2', S(1)))**p_, x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda n: FractionQ(2*n)))
    rule716 = ReplacementRule(pattern716, lambda b1, a1, b2, p, a2, x, n : With(List(Set(k, Denominator(2*n))), k*Subst(Int(x**(k - 1)*(a1 + b1*x**(k*n))**p*(a2 + b2*x**(k*n))**p, x), x, x**(1/k))))
    rubi.add(rule716)

    pattern717 = Pattern(Integral((x_**n_*WC('b1', S(1)) + WC('a1', S(0)))**p_*(x_**n_*WC('b2', S(1)) + WC('a2', S(0)))**p_, x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule717 = ReplacementRule(pattern717, lambda b1, a1, b2, a2, p, x, n : (a1 + b1*x**n)**FracPart(p)*(a2 + b2*x**n)**FracPart(p)*(a1*a2 + b1*b2*x**(2*n))**(-FracPart(p))*Int((a1*a2 + b1*b2*x**(2*n))**p, x))
    rubi.add(rule717)

    pattern718 = Pattern(Integral((x_*WC('c', S(1)))**WC('m', S(1))*(a1_ + x_**n_*WC('b1', S(1)))**p_*(a2_ + x_**n_*WC('b2', S(1)))**p_, x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda p, a2, a1: IntegerQ(p) | (PositiveQ(a1) & PositiveQ(a2))))
    rule718 = ReplacementRule(pattern718, lambda b1, a1, b2, m, c, p, a2, x, n : Int((c*x)**m*(a1*a2 + b1*b2*x**(2*n))**p, x))
    rubi.add(rule718)

    pattern719 = Pattern(Integral((x_*WC('c', S(1)))**WC('m', S(1))*(x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m, c: IntegerQ(m) | PositiveQ(c)), CustomConstraint(lambda n, m: IntegerQ(Simplify((m + 1)/n))))
    rule719 = ReplacementRule(pattern719, lambda m, c, p, x, n, b : b**(-Simplify((m + 1)/n) + 1)*c**m*Subst(Int((b*x)**(p + Simplify((m + 1)/n) - 1), x), x, x**n)/n)
    rubi.add(rule719)

    pattern720 = Pattern(Integral((x_*WC('c', S(1)))**WC('m', S(1))*(x_**WC('n', S(1))*WC('b', S(1)))**p_, x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m, c: IntegerQ(m) | PositiveQ(c)), CustomConstraint(lambda n, m: ~(IntegerQ(Simplify((m + 1)/n)))))
    rule720 = ReplacementRule(pattern720, lambda m, c, p, x, n, b : b**IntPart(p)*c**m*x**(-n*FracPart(p))*(b*x**n)**FracPart(p)*Int(x**(m + n*p), x))
    rubi.add(rule720)

    pattern721 = Pattern(Integral((c_*x_)**m_*(x_**WC('n', S(1))*WC('b', S(1)))**p_, x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: ~(IntegerQ(m))))
    rule721 = ReplacementRule(pattern721, lambda m, c, p, x, n, b : c**IntPart(m)*x**(-FracPart(m))*(c*x)**FracPart(m)*Int(x**m*(b*x**n)**p, x))
    rubi.add(rule721)

    pattern722 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p: IntegerQ(p)), CustomConstraint(lambda n: NegQ(n)))
    rule722 = ReplacementRule(pattern722, lambda m, p, x, n, a, b : Int(x**(m + n*p)*(a*x**(-n) + b)**p, x))
    rubi.add(rule722)

    pattern723 = Pattern(Integral((x_*WC('c', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, m, p: ZeroQ(p + 1 + (m + 1)/n)), CustomConstraint(lambda m: NonzeroQ(m + 1)))
    rule723 = ReplacementRule(pattern723, lambda m, c, p, x, n, a, b : (c*x)**(m + 1)*(a + b*x**n)**(p + 1)/(a*c*(m + 1)))
    rubi.add(rule723)

    pattern724 = Pattern(Integral((x_*WC('c', S(1)))**WC('m', S(1))*(a1_ + x_**n_*WC('b1', S(1)))**p_*(a2_ + x_**n_*WC('b2', S(1)))**p_, x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda n, m, p: ZeroQ(p + 1 + (m + 1)/(2*n))), CustomConstraint(lambda m: NonzeroQ(m + 1)))
    rule724 = ReplacementRule(pattern724, lambda b1, a1, b2, m, c, p, a2, x, n : (c*x)**(m + 1)*(a1 + b1*x**n)**(p + 1)*(a2 + b2*x**n)**(p + 1)/(a1*a2*c*(m + 1)))
    rubi.add(rule724)

    pattern725 = Pattern(Integral(x_**WC('m', S(1))*(x_**n_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, m: IntegerQ(Simplify((m + 1)/n))))
    rule725 = ReplacementRule(pattern725, lambda m, p, x, n, a, b : Subst(Int(x**(Simplify((m + 1)/n) - 1)*(a + b*x)**p, x), x, x**n)/n)
    rubi.add(rule725)

    pattern726 = Pattern(Integral(x_**WC('m', S(1))*(a1_ + x_**n_*WC('b1', S(1)))**p_*(a2_ + x_**n_*WC('b2', S(1)))**p_, x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda n, m: IntegerQ(Simplify((m + 1)/(2*n)))))
    rule726 = ReplacementRule(pattern726, lambda b1, a1, b2, m, p, a2, x, n : Subst(Int(x**(Simplify((m + 1)/n) - 1)*(a1 + b1*x)**p*(a2 + b2*x)**p, x), x, x**n)/n)
    rubi.add(rule726)

    pattern727 = Pattern(Integral((c_*x_)**m_*(a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, m: IntegerQ(Simplify((m + 1)/n))))
    rule727 = ReplacementRule(pattern727, lambda m, c, p, x, n, a, b : c**IntPart(m)*x**(-FracPart(m))*(c*x)**FracPart(m)*Int(x**m*(a + b*x**n)**p, x))
    rubi.add(rule727)

    pattern728 = Pattern(Integral((c_*x_)**m_*(a1_ + x_**n_*WC('b1', S(1)))**p_*(a2_ + x_**n_*WC('b2', S(1)))**p_, x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda n, m: IntegerQ(Simplify((m + 1)/(2*n)))))
    rule728 = ReplacementRule(pattern728, lambda b1, a1, b2, m, c, p, a2, x, n : c**IntPart(m)*x**(-FracPart(m))*(c*x)**FracPart(m)*Int(x**m*(a1 + b1*x**n)**p*(a2 + b2*x**n)**p, x))
    rubi.add(rule728)

    pattern729 = Pattern(Integral((x_*WC('c', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p: PositiveIntegerQ(p)))
    rule729 = ReplacementRule(pattern729, lambda m, c, p, x, n, a, b : Int(ExpandIntegrand((c*x)**m*(a + b*x**n)**p, x), x))
    rubi.add(rule729)

    pattern730 = Pattern(Integral(x_**m_*(a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, m, p: NegativeIntegerQ(Simplify(p + 1 + (m + 1)/n))), CustomConstraint(lambda m: NonzeroQ(m + 1)))
    rule730 = ReplacementRule(pattern730, lambda m, p, x, n, a, b : -b*(m + n*(p + 1) + 1)*Int(x**(m + n)*(a + b*x**n)**p, x)/(a*(m + 1)) + x**(m + 1)*(a + b*x**n)**(p + 1)/(a*(m + 1)))
    rubi.add(rule730)

    pattern731 = Pattern(Integral(x_**m_*(a1_ + x_**n_*WC('b1', S(1)))**p_*(a2_ + x_**n_*WC('b2', S(1)))**p_, x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda n, m, p: NegativeIntegerQ(Simplify(p + 1 + (m + 1)/(2*n)))), CustomConstraint(lambda m: NonzeroQ(m + 1)))
    rule731 = ReplacementRule(pattern731, lambda b1, a1, b2, m, p, a2, x, n : -b1*b2*(m + 2*n*(p + 1) + 1)*Int(x**(m + 2*n)*(a1 + b1*x**n)**p*(a2 + b2*x**n)**p, x)/(a1*a2*(m + 1)) + x**(m + 1)*(a1 + b1*x**n)**(p + 1)*(a2 + b2*x**n)**(p + 1)/(a1*a2*(m + 1)))
    rubi.add(rule731)

    pattern732 = Pattern(Integral((x_*WC('c', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, m, p: NegativeIntegerQ(Simplify(p + 1 + (m + 1)/n))), CustomConstraint(lambda p: NonzeroQ(p + 1)))
    rule732 = ReplacementRule(pattern732, lambda m, c, p, x, n, a, b : (m + n*(p + 1) + 1)*Int((c*x)**m*(a + b*x**n)**(p + 1), x)/(a*n*(p + 1)) - (c*x)**(m + 1)*(a + b*x**n)**(p + 1)/(a*c*n*(p + 1)))
    rubi.add(rule732)

    pattern733 = Pattern(Integral((x_*WC('c', S(1)))**WC('m', S(1))*(a1_ + x_**n_*WC('b1', S(1)))**p_*(a2_ + x_**n_*WC('b2', S(1)))**p_, x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda n, m, p: NegativeIntegerQ(Simplify(p + 1 + (m + 1)/(2*n)))), CustomConstraint(lambda p: NonzeroQ(p + 1)))
    rule733 = ReplacementRule(pattern733, lambda b1, a1, b2, m, c, p, a2, x, n : (m + 2*n*(p + 1) + 1)*Int((c*x)**m*(a1 + b1*x**n)**(p + 1)*(a2 + b2*x**n)**(p + 1), x)/(2*a1*a2*n*(p + 1)) - (c*x)**(m + 1)*(a1 + b1*x**n)**(p + 1)*(a2 + b2*x**n)**(p + 1)/(2*a1*a2*c*n*(p + 1)))
    rubi.add(rule733)

    pattern734 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: IntegerQ(m)))
    rule734 = ReplacementRule(pattern734, lambda m, p, x, n, a, b : With(List(Set(k, GCD(m + 1, n))), Condition(Subst(Int(x**(-1 + (m + 1)/k)*(a + b*x**(n/k))**p, x), x, x**k)/k, Unequal(k, 1))))
    rubi.add(rule734)

    pattern735 = Pattern(Integral(x_**WC('m', S(1))*(a1_ + x_**n_*WC('b1', S(1)))**p_*(a2_ + x_**n_*WC('b2', S(1)))**p_, x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda n: PositiveIntegerQ(2*n)), CustomConstraint(lambda m: IntegerQ(m)))
    rule735 = ReplacementRule(pattern735, lambda b1, a1, b2, m, p, a2, x, n : With(List(Set(k, GCD(m + 1, 2*n))), Condition(Subst(Int(x**(-1 + (m + 1)/k)*(a1 + b1*x**(n/k))**p*(a2 + b2*x**(n/k))**p, x), x, x**k)/k, Unequal(k, 1))))
    rubi.add(rule735)

    pattern736 = Pattern(Integral((x_*WC('c', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda m: Less(m, -1)), CustomConstraint(lambda n, m, p: ~(NegativeIntegerQ((m + n*p + n + 1)/n))), CustomConstraint(lambda m, c, p, x, n, a, b: IntBinomialQ(a, b, c, n, m, p, x)))
    rule736 = ReplacementRule(pattern736, lambda m, c, p, x, n, a, b : -b*c**(-n)*n*p*Int((c*x)**(m + n)*(a + b*x**n)**(p - 1), x)/(m + 1) + (c*x)**(m + 1)*(a + b*x**n)**p/(c*(m + 1)))
    rubi.add(rule736)

    pattern737 = Pattern(Integral((x_*WC('c', S(1)))**WC('m', S(1))*(a1_ + x_**n_*WC('b1', S(1)))**p_*(a2_ + x_**n_*WC('b2', S(1)))**p_, x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda n: PositiveIntegerQ(2*n)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda n, m, p: NonzeroQ(m + 2*n*p + 1)), CustomConstraint(lambda b1, a1, b2, m, c, a2, p, x, n: IntBinomialQ(a1*a2, b1*b2, c, n, m, p, x)))
    rule737 = ReplacementRule(pattern737, lambda b1, a1, b2, m, c, p, a2, x, n : 2*a1*a2*n*p*Int((c*x)**m*(a1 + b1*x**n)**(p - 1)*(a2 + b2*x**n)**(p - 1), x)/(m + 2*n*p + 1) + (c*x)**(m + 1)*(a1 + b1*x**n)**p*(a2 + b2*x**n)**p/(c*(m + 2*n*p + 1)))
    rubi.add(rule737)

    pattern738 = Pattern(Integral((x_*WC('c', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda n, m, p: NonzeroQ(m + n*p + 1)), CustomConstraint(lambda m, c, p, x, n, a, b: IntBinomialQ(a, b, c, n, m, p, x)))
    rule738 = ReplacementRule(pattern738, lambda m, c, p, x, n, a, b : a*n*p*Int((c*x)**m*(a + b*x**n)**(p - 1), x)/(m + n*p + 1) + (c*x)**(m + 1)*(a + b*x**n)**p/(c*(m + n*p + 1)))
    rubi.add(rule738)

    pattern739 = Pattern(Integral(x_**2/(a_ + x_**4*WC('b', S(1)))**(S(5)/4), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a, b: PosQ(b/a)))
    rule739 = ReplacementRule(pattern739, lambda x, a, b : x*(a/(b*x**4) + 1)**(1/4)*Int(1/(x**3*(a/(b*x**4) + 1)**(5/4)), x)/(b*(a + b*x**4)**(1/4)))
    rubi.add(rule739)

    pattern740 = Pattern(Integral(x_**m_/(a_ + x_**4*WC('b', S(1)))**(S(5)/4), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a, b: PosQ(b/a)), CustomConstraint(lambda m: PositiveIntegerQ(m/4 + S(-1)/2)))
    rule740 = ReplacementRule(pattern740, lambda x, m, b, a : -a*(m - 3)*Int(x**(m - 4)/(a + b*x**4)**(5/4), x)/(b*(m - 4)) + x**(m - 3)/(b*(a + b*x**4)**(1/4)*(m - 4)))
    rubi.add(rule740)

    pattern741 = Pattern(Integral(x_**m_/(a_ + x_**4*WC('b', S(1)))**(S(5)/4), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a, b: PosQ(b/a)), CustomConstraint(lambda m: NegativeIntegerQ(m/4 + S(-1)/2)))
    rule741 = ReplacementRule(pattern741, lambda x, m, b, a : -b*m*Int(x**(m + 4)/(a + b*x**4)**(5/4), x)/(a*(m + 1)) + x**(m + 1)/(a*(a + b*x**4)**(1/4)*(m + 1)))
    rubi.add(rule741)

    pattern742 = Pattern(Integral(sqrt(x_*WC('c', S(1)))/(a_ + x_**2*WC('b', S(1)))**(S(5)/4), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda a, b: PosQ(b/a)))
    rule742 = ReplacementRule(pattern742, lambda x, a, b, c : (a/(b*x**2) + 1)**(1/4)*Int(1/(x**2*(a/(b*x**2) + 1)**(5/4)), x)*Sqrt(c*x)/(b*(a + b*x**2)**(1/4)))
    rubi.add(rule742)

    pattern743 = Pattern(Integral((x_*WC('c', S(1)))**m_/(a_ + x_**2*WC('b', S(1)))**(S(5)/4), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda a, b: PosQ(b/a)), CustomConstraint(lambda m: IntegerQ(2*m)), CustomConstraint(lambda m: Greater(m, S(3)/2)))
    rule743 = ReplacementRule(pattern743, lambda m, c, x, a, b : -2*a*c**2*(m - 1)*Int((c*x)**(m - 2)/(a + b*x**2)**(5/4), x)/(b*(2*m - 3)) + 2*c*(c*x)**(m - 1)/(b*(a + b*x**2)**(1/4)*(2*m - 3)))
    rubi.add(rule743)

    pattern744 = Pattern(Integral((x_*WC('c', S(1)))**m_/(a_ + x_**2*WC('b', S(1)))**(S(5)/4), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda a, b: PosQ(b/a)), CustomConstraint(lambda m: IntegerQ(2*m)), CustomConstraint(lambda m: Less(m, -1)))
    rule744 = ReplacementRule(pattern744, lambda m, c, x, a, b : -b*(2*m + 1)*Int((c*x)**(m + 2)/(a + b*x**2)**(5/4), x)/(2*a*c**2*(m + 1)) + (c*x)**(m + 1)/(a*c*(a + b*x**2)**(1/4)*(m + 1)))
    rubi.add(rule744)

    pattern745 = Pattern(Integral(x_**2/(a_ + x_**4*WC('b', S(1)))**(S(5)/4), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a, b: NegQ(b/a)))
    rule745 = ReplacementRule(pattern745, lambda x, a, b : -Int(1/(x**2*(a + b*x**4)**(1/4)), x)/b - 1/(b*x*(a + b*x**4)**(1/4)))
    rubi.add(rule745)

    pattern746 = Pattern(Integral((x_*WC('c', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda n, m: Greater(m + 1, n)), CustomConstraint(lambda n, m, p: ~(NegativeIntegerQ((m + n*(p + 1) + 1)/n))), CustomConstraint(lambda m, c, p, x, n, a, b: IntBinomialQ(a, b, c, n, m, p, x)))
    rule746 = ReplacementRule(pattern746, lambda m, c, p, x, n, a, b : -c**n*(m - n + 1)*Int((c*x)**(m - n)*(a + b*x**n)**(p + 1), x)/(b*n*(p + 1)) + c**(n - 1)*(c*x)**(m - n + 1)*(a + b*x**n)**(p + 1)/(b*n*(p + 1)))
    rubi.add(rule746)

    pattern747 = Pattern(Integral((x_*WC('c', S(1)))**WC('m', S(1))*(a1_ + x_**n_*WC('b1', S(1)))**p_*(a2_ + x_**n_*WC('b2', S(1)))**p_, x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda n: PositiveIntegerQ(2*n)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda n, m: Greater(m + 1, 2*n)), CustomConstraint(lambda n, m, p: ~(NegativeIntegerQ((m + 2*n*(p + 1) + 1)/(2*n)))), CustomConstraint(lambda b1, a1, b2, m, c, a2, p, x, n: IntBinomialQ(a1*a2, b1*b2, c, n, m, p, x)))
    rule747 = ReplacementRule(pattern747, lambda b1, a1, b2, m, c, p, a2, x, n : -c**(2*n)*(m - 2*n + 1)*Int((c*x)**(m - 2*n)*(a1 + b1*x**n)**(p + 1)*(a2 + b2*x**n)**(p + 1), x)/(2*b1*b2*n*(p + 1)) + c**(2*n - 1)*(c*x)**(m - 2*n + 1)*(a1 + b1*x**n)**(p + 1)*(a2 + b2*x**n)**(p + 1)/(2*b1*b2*n*(p + 1)))
    rubi.add(rule747)

    pattern748 = Pattern(Integral((x_*WC('c', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda m, c, p, x, n, a, b: IntBinomialQ(a, b, c, n, m, p, x)))
    rule748 = ReplacementRule(pattern748, lambda m, c, p, x, n, a, b : (m + n*(p + 1) + 1)*Int((c*x)**m*(a + b*x**n)**(p + 1), x)/(a*n*(p + 1)) - (c*x)**(m + 1)*(a + b*x**n)**(p + 1)/(a*c*n*(p + 1)))
    rubi.add(rule748)

    pattern749 = Pattern(Integral((x_*WC('c', S(1)))**WC('m', S(1))*(a1_ + x_**n_*WC('b1', S(1)))**p_*(a2_ + x_**n_*WC('b2', S(1)))**p_, x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda n: PositiveIntegerQ(2*n)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda b1, a1, b2, m, c, a2, p, x, n: IntBinomialQ(a1*a2, b1*b2, c, n, m, p, x)))
    rule749 = ReplacementRule(pattern749, lambda b1, a1, b2, m, c, p, a2, x, n : (m + 2*n*(p + 1) + 1)*Int((c*x)**m*(a1 + b1*x**n)**(p + 1)*(a2 + b2*x**n)**(p + 1), x)/(2*a1*a2*n*(p + 1)) - (c*x)**(m + 1)*(a1 + b1*x**n)**(p + 1)*(a2 + b2*x**n)**(p + 1)/(2*a1*a2*c*n*(p + 1)))
    rubi.add(rule749)

    pattern750 = Pattern(Integral(x_/(a_ + x_**3*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)))
    rule750 = ReplacementRule(pattern750, lambda x, a, b : Int((x*Rt(b, 3) + Rt(a, 3))/(x**2*Rt(b, 3)**2 - x*Rt(a, 3)*Rt(b, 3) + Rt(a, 3)**2), x)/(3*Rt(a, 3)*Rt(b, 3)) - Int(1/(x*Rt(b, 3) + Rt(a, 3)), x)/(3*Rt(a, 3)*Rt(b, 3)))
    rubi.add(rule750)

    pattern751 = Pattern(Integral(x_**WC('m', S(1))/(a_ + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda n: PositiveIntegerQ(n/2 + S(-1)/2)), CustomConstraint(lambda m: PositiveIntegerQ(m)), CustomConstraint(lambda n, m: Less(m, n - 1)), CustomConstraint(lambda a, b: PosQ(a/b)))
    rule751 = ReplacementRule(pattern751, lambda m, x, n, a, b : Module(List(Set(r, Numerator(Rt(a/b, n))), Set(s, Denominator(Rt(a/b, n))), k, u), CompoundExpression(Set(u, Int((r*Cos(Pi*m*(2*k - 1)/n) - s*x*Cos(Pi*(2*k - 1)*(m + 1)/n))/(r**2 - 2*r*s*x*Cos(Pi*(2*k - 1)/n) + s**2*x**2), x)), Dist(2*r**(m + 1)*s**(-m)/(a*n), Sum(u, List(k, 1, n/2 - 1/2)), x) - s**(-m)*(-r)**(m + 1)*Int(1/(r + s*x), x)/(a*n))))
    rubi.add(rule751)

    pattern752 = Pattern(Integral(x_**WC('m', S(1))/(a_ + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda n, m: PositiveIntegerQ(m, n/2 + S(-1)/2)), CustomConstraint(lambda m: PositiveIntegerQ(m)), CustomConstraint(lambda n, m: Less(m, n - 1)), CustomConstraint(lambda a, b: NegQ(a/b)))
    rule752 = ReplacementRule(pattern752, lambda m, x, n, a, b : Module(List(Set(r, Numerator(Rt(-a/b, n))), Set(s, Denominator(Rt(-a/b, n))), k, u), CompoundExpression(Set(u, Int((r*Cos(Pi*m*(2*k - 1)/n) + s*x*Cos(Pi*(2*k - 1)*(m + 1)/n))/(r**2 + 2*r*s*x*Cos(Pi*(2*k - 1)/n) + s**2*x**2), x)), -Dist(2*s**(-m)*(-r)**(m + 1)/(a*n), Sum(u, List(k, 1, n/2 - 1/2)), x) + r**(m + 1)*s**(-m)*Int(1/(r - s*x), x)/(a*n))))
    rubi.add(rule752)

    pattern753 = Pattern(Integral(x_**WC('m', S(1))/(a_ + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda n, m: PositiveIntegerQ(m, n/4 + S(-1)/2)), CustomConstraint(lambda m: PositiveIntegerQ(m)), CustomConstraint(lambda n, m: Less(m, n - 1)), CustomConstraint(lambda a, b: PosQ(a/b)))
    rule753 = ReplacementRule(pattern753, lambda m, x, n, a, b : Module(List(Set(r, Numerator(Rt(a/b, n))), Set(s, Denominator(Rt(a/b, n))), k, u), CompoundExpression(Set(u, Int((r*Cos(Pi*m*(2*k - 1)/n) - s*x*Cos(Pi*(2*k - 1)*(m + 1)/n))/(r**2 - 2*r*s*x*Cos(Pi*(2*k - 1)/n) + s**2*x**2), x) + Int((r*Cos(Pi*m*(2*k - 1)/n) + s*x*Cos(Pi*(2*k - 1)*(m + 1)/n))/(r**2 + 2*r*s*x*Cos(Pi*(2*k - 1)/n) + s**2*x**2), x)), 2*(-1)**(m/2)*r**(m + 2)*s**(-m)*Int(1/(r**2 + s**2*x**2), x)/(a*n) + Dist(2*r**(m + 1)*s**(-m)/(a*n), Sum(u, List(k, 1, n/4 - 1/2)), x))))
    rubi.add(rule753)

    pattern754 = Pattern(Integral(x_**WC('m', S(1))/(a_ + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda n, m: PositiveIntegerQ(m, n/4 + S(-1)/2)), CustomConstraint(lambda m: PositiveIntegerQ(m)), CustomConstraint(lambda n, m: Less(m, n - 1)), CustomConstraint(lambda a, b: NegQ(a/b)))
    rule754 = ReplacementRule(pattern754, lambda m, x, n, a, b : Module(List(Set(r, Numerator(Rt(-a/b, n))), Set(s, Denominator(Rt(-a/b, n))), k, u), CompoundExpression(Set(u, Int((r*Cos(2*Pi*k*m/n) - s*x*Cos(2*Pi*k*(m + 1)/n))/(r**2 - 2*r*s*x*Cos(2*Pi*k/n) + s**2*x**2), x) + Int((r*Cos(2*Pi*k*m/n) + s*x*Cos(2*Pi*k*(m + 1)/n))/(r**2 + 2*r*s*x*Cos(2*Pi*k/n) + s**2*x**2), x)), Dist(2*r**(m + 1)*s**(-m)/(a*n), Sum(u, List(k, 1, n/4 - 1/2)), x) + 2*r**(m + 2)*s**(-m)*Int(1/(r**2 - s**2*x**2), x)/(a*n))))
    rubi.add(rule754)

    pattern755 = Pattern(Integral(x_**2/(a_ + x_**4*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a, b: PositiveQ(a/b) | (AtomQ(SplitProduct(SumBaseQ, a)) & AtomQ(SplitProduct(SumBaseQ, b)) & PosQ(a/b))))
    rule755 = ReplacementRule(pattern755, lambda x, a, b : With(List(Set(r, Numerator(Rt(a/b, 2))), Set(s, Denominator(Rt(a/b, 2)))), -Int((r - s*x**2)/(a + b*x**4), x)/(2*s) + Int((r + s*x**2)/(a + b*x**4), x)/(2*s)))
    rubi.add(rule755)

    pattern756 = Pattern(Integral(x_**2/(a_ + x_**4*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a, b: ~(PositiveQ(a/b))))
    rule756 = ReplacementRule(pattern756, lambda x, a, b : With(List(Set(r, Numerator(Rt(-a/b, 2))), Set(s, Denominator(Rt(-a/b, 2)))), -s*Int(1/(r - s*x**2), x)/(2*b) + s*Int(1/(r + s*x**2), x)/(2*b)))
    rubi.add(rule756)

    pattern757 = Pattern(Integral(x_**WC('m', S(1))/(a_ + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda n, m: PositiveIntegerQ(m, n/4)), CustomConstraint(lambda m: PositiveIntegerQ(m)), CustomConstraint(lambda n, m: Less(m, n - 1)), CustomConstraint(lambda a, b: PositiveQ(a/b)))
    rule757 = ReplacementRule(pattern757, lambda m, x, n, a, b : With(List(Set(r, Numerator(Rt(a/b, 4))), Set(s, Denominator(Rt(a/b, 4)))), s**3*Int(x**(m - n/4)/(r**2 - r*s*x**(n/4)*Sqrt(2) + s**2*x**(n/2)), x)/(2*b*r*Sqrt(2)) - s**3*Int(x**(m - n/4)/(r**2 + r*s*x**(n/4)*Sqrt(2) + s**2*x**(n/2)), x)/(2*b*r*Sqrt(2))))
    rubi.add(rule757)

    pattern758 = Pattern(Integral(x_**m_/(a_ + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda n, m: PositiveIntegerQ(m, n/4)), CustomConstraint(lambda m: PositiveIntegerQ(m)), CustomConstraint(lambda n, m: Less(m, n/2)), CustomConstraint(lambda a, b: ~(PositiveQ(a/b))))
    rule758 = ReplacementRule(pattern758, lambda m, x, n, a, b : With(List(Set(r, Numerator(Rt(-a/b, 2))), Set(s, Denominator(Rt(-a/b, 2)))), r*Int(x**m/(r - s*x**(n/2)), x)/(2*a) + r*Int(x**m/(r + s*x**(n/2)), x)/(2*a)))
    rubi.add(rule758)

    pattern759 = Pattern(Integral(x_**m_/(a_ + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda n, m: PositiveIntegerQ(m, n/4)), CustomConstraint(lambda m: PositiveIntegerQ(m)), CustomConstraint(lambda n, m: Inequality(n/2, LessEqual, m, Less, n)), CustomConstraint(lambda a, b: ~(PositiveQ(a/b))))
    rule759 = ReplacementRule(pattern759, lambda m, x, n, a, b : With(List(Set(r, Numerator(Rt(-a/b, 2))), Set(s, Denominator(Rt(-a/b, 2)))), -s*Int(x**(m - n/2)/(r - s*x**(n/2)), x)/(2*b) + s*Int(x**(m - n/2)/(r + s*x**(n/2)), x)/(2*b)))
    rubi.add(rule759)

    pattern760 = Pattern(Integral(x_**m_/(a_ + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda n, m: PositiveIntegerQ(m, n)), CustomConstraint(lambda n, m: Greater(m, 2*n - 1)))
    rule760 = ReplacementRule(pattern760, lambda m, x, n, a, b : Int(PolynomialDivide(x**m, a + b*x**n, x), x))
    rubi.add(rule760)

    pattern761 = Pattern(Integral(x_/sqrt(a_ + x_**3*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a: PosQ(a)))
    rule761 = ReplacementRule(pattern761, lambda x, a, b : With(List(Set(r, Numer(Rt(b/a, 3))), Set(s, Denom(Rt(b/a, 3)))), s*Int(1/Sqrt(a + b*x**3), x)*Sqrt(2)/(r*Sqrt(Sqrt(3) + 2)) + Int((r*x + s*(-Sqrt(3) + 1))/Sqrt(a + b*x**3), x)/r))
    rubi.add(rule761)

    pattern762 = Pattern(Integral(x_/sqrt(a_ + x_**3*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a: NegQ(a)))
    rule762 = ReplacementRule(pattern762, lambda x, a, b : With(List(Set(r, Numer(Rt(b/a, 3))), Set(s, Denom(Rt(b/a, 3)))), -s*Int(1/Sqrt(a + b*x**3), x)*Sqrt(2)/(r*Sqrt(-Sqrt(3) + 2)) + Int((r*x + s*(Sqrt(3) + 1))/Sqrt(a + b*x**3), x)/r))
    rubi.add(rule762)

    pattern763 = Pattern(Integral(x_**2/sqrt(a_ + x_**4*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a, b: PosQ(b/a)))
    rule763 = ReplacementRule(pattern763, lambda x, a, b : With(List(Set(q, Rt(b/a, 2))), -Int((-q*x**2 + 1)/Sqrt(a + b*x**4), x)/q + Int(1/Sqrt(a + b*x**4), x)/q))
    rubi.add(rule763)

    pattern764 = Pattern(Integral(x_**2/sqrt(a_ + x_**4*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a: NegativeQ(a)), CustomConstraint(lambda b: PositiveQ(b)))
    rule764 = ReplacementRule(pattern764, lambda x, a, b : With(List(Set(q, Rt(-b/a, 2))), -Int((-q*x**2 + 1)/Sqrt(a + b*x**4), x)/q + Int(1/Sqrt(a + b*x**4), x)/q))
    rubi.add(rule764)

    pattern765 = Pattern(Integral(x_**2/sqrt(a_ + x_**4*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a, b: NegQ(b/a)))
    rule765 = ReplacementRule(pattern765, lambda x, a, b : With(List(Set(q, Rt(-b/a, 2))), Int((q*x**2 + 1)/Sqrt(a + b*x**4), x)/q - Int(1/Sqrt(a + b*x**4), x)/q))
    rubi.add(rule765)

    pattern766 = Pattern(Integral(x_**4/sqrt(a_ + x_**6*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)))
    rule766 = ReplacementRule(pattern766, lambda x, a, b : With(List(Set(r, Numer(Rt(b/a, 3))), Set(s, Denom(Rt(b/a, 3)))), s**2*(Sqrt(3) - 1)*Int(1/Sqrt(a + b*x**6), x)/(2*r**2) - Int((-2*r**2*x**4 + s**2*(Sqrt(3) - 1))/Sqrt(a + b*x**6), x)/(2*r**2)))
    rubi.add(rule766)

    pattern767 = Pattern(Integral(x_**2/sqrt(a_ + x_**8*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)))
    rule767 = ReplacementRule(pattern767, lambda x, a, b : -Int((-x**2*Rt(b/a, 4) + 1)/Sqrt(a + b*x**8), x)/(2*Rt(b/a, 4)) + Int((x**2*Rt(b/a, 4) + 1)/Sqrt(a + b*x**8), x)/(2*Rt(b/a, 4)))
    rubi.add(rule767)

    pattern768 = Pattern(Integral(x_**2/(a_ + x_**4*WC('b', S(1)))**(S(1)/4), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a, b: PosQ(b/a)))
    rule768 = ReplacementRule(pattern768, lambda x, a, b : -a*Int(x**2/(a + b*x**4)**(5/4), x)/2 + x**3/(2*(a + b*x**4)**(1/4)))
    rubi.add(rule768)

    pattern769 = Pattern(Integral(x_**2/(a_ + x_**4*WC('b', S(1)))**(S(1)/4), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a, b: NegQ(b/a)))
    rule769 = ReplacementRule(pattern769, lambda x, a, b : a*Int(1/(x**2*(a + b*x**4)**(1/4)), x)/(2*b) + (a + b*x**4)**(3/4)/(2*b*x))
    rubi.add(rule769)

    pattern770 = Pattern(Integral(1/(x_**2*(a_ + x_**4*WC('b', S(1)))**(S(1)/4)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a, b: PosQ(b/a)))
    rule770 = ReplacementRule(pattern770, lambda x, a, b : -b*Int(x**2/(a + b*x**4)**(5/4), x) - 1/(x*(a + b*x**4)**(1/4)))
    rubi.add(rule770)

    pattern771 = Pattern(Integral(1/(x_**2*(a_ + x_**4*WC('b', S(1)))**(S(1)/4)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda a, b: NegQ(b/a)))
    rule771 = ReplacementRule(pattern771, lambda x, a, b : x*(a/(b*x**4) + 1)**(1/4)*Int(1/(x**3*(a/(b*x**4) + 1)**(1/4)), x)/(a + b*x**4)**(1/4))
    rubi.add(rule771)

    pattern772 = Pattern(Integral(sqrt(c_*x_)/(a_ + x_**2*WC('b', S(1)))**(S(1)/4), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda a, b: PosQ(b/a)))
    rule772 = ReplacementRule(pattern772, lambda x, a, b, c : -a*Int(Sqrt(c*x)/(a + b*x**2)**(5/4), x)/2 + x*Sqrt(c*x)/(a + b*x**2)**(1/4))
    rubi.add(rule772)

    pattern773 = Pattern(Integral(sqrt(c_*x_)/(a_ + x_**2*WC('b', S(1)))**(S(1)/4), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda a, b: NegQ(b/a)))
    rule773 = ReplacementRule(pattern773, lambda x, a, b, c : a*c**2*Int(1/((c*x)**(3/2)*(a + b*x**2)**(1/4)), x)/(2*b) + c*(a + b*x**2)**(3/4)/(b*Sqrt(c*x)))
    rubi.add(rule773)

    pattern774 = Pattern(Integral(1/((x_*WC('c', S(1)))**(S(3)/2)*(a_ + x_**2*WC('b', S(1)))**(S(1)/4)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda a, b: PosQ(b/a)))
    rule774 = ReplacementRule(pattern774, lambda x, a, b, c : -b*Int(Sqrt(c*x)/(a + b*x**2)**(5/4), x)/c**2 - 2/(c*(a + b*x**2)**(1/4)*Sqrt(c*x)))
    rubi.add(rule774)

    pattern775 = Pattern(Integral(1/((x_*WC('c', S(1)))**(S(3)/2)*(a_ + x_**2*WC('b', S(1)))**(S(1)/4)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda a, b: NegQ(b/a)))
    rule775 = ReplacementRule(pattern775, lambda x, a, b, c : (a/(b*x**2) + 1)**(1/4)*Int(1/(x**2*(a/(b*x**2) + 1)**(1/4)), x)*Sqrt(c*x)/(c**2*(a + b*x**2)**(1/4)))
    rubi.add(rule775)

    pattern776 = Pattern(Integral((x_*WC('c', S(1)))**m_*(a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda n, m: Greater(m, n - 1)), CustomConstraint(lambda n, m, p: NonzeroQ(m + n*p + 1)), CustomConstraint(lambda m, c, p, x, n, a, b: IntBinomialQ(a, b, c, n, m, p, x)))
    rule776 = ReplacementRule(pattern776, lambda m, c, p, x, n, a, b : -a*c**n*(m - n + 1)*Int((c*x)**(m - n)*(a + b*x**n)**p, x)/(b*(m + n*p + 1)) + c**(n - 1)*(c*x)**(m - n + 1)*(a + b*x**n)**(p + 1)/(b*(m + n*p + 1)))
    rubi.add(rule776)

    pattern777 = Pattern(Integral((x_*WC('c', S(1)))**m_*(a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda n, m: SumSimplerQ(m, -n)), CustomConstraint(lambda n, m, p: NonzeroQ(m + n*p + 1)), CustomConstraint(lambda n, m, p: NegativeIntegerQ(Simplify(p + (m + 1)/n))))
    rule777 = ReplacementRule(pattern777, lambda m, c, p, x, n, a, b : -a*c**n*(m - n + 1)*Int((c*x)**(m - n)*(a + b*x**n)**p, x)/(b*(m + n*p + 1)) + c**(n - 1)*(c*x)**(m - n + 1)*(a + b*x**n)**(p + 1)/(b*(m + n*p + 1)))
    rubi.add(rule777)

    pattern778 = Pattern(Integral((x_*WC('c', S(1)))**m_*(a1_ + x_**n_*WC('b1', S(1)))**p_*(a2_ + x_**n_*WC('b2', S(1)))**p_, x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda n: PositiveIntegerQ(2*n)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda n, m: Greater(m, 2*n - 1)), CustomConstraint(lambda n, m, p: NonzeroQ(m + 2*n*p + 1)), CustomConstraint(lambda b1, a1, b2, m, c, a2, p, x, n: IntBinomialQ(a1*a2, b1*b2, c, n, m, p, x)))
    rule778 = ReplacementRule(pattern778, lambda b1, a1, b2, m, c, p, a2, x, n : -a1*a2*c**(2*n)*(m - 2*n + 1)*Int((c*x)**(m - 2*n)*(a1 + b1*x**n)**p*(a2 + b2*x**n)**p, x)/(b1*b2*(m + 2*n*p + 1)) + c**(2*n - 1)*(c*x)**(m - 2*n + 1)*(a1 + b1*x**n)**(p + 1)*(a2 + b2*x**n)**(p + 1)/(b1*b2*(m + 2*n*p + 1)))
    rubi.add(rule778)

    pattern779 = Pattern(Integral((x_*WC('c', S(1)))**m_*(a1_ + x_**n_*WC('b1', S(1)))**p_*(a2_ + x_**n_*WC('b2', S(1)))**p_, x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda n: PositiveIntegerQ(2*n)), CustomConstraint(lambda n, m: SumSimplerQ(m, -2*n)), CustomConstraint(lambda n, m, p: NonzeroQ(m + 2*n*p + 1)), CustomConstraint(lambda n, m, p: NegativeIntegerQ(Simplify(p + (m + 1)/(2*n)))))
    rule779 = ReplacementRule(pattern779, lambda b1, a1, b2, m, c, p, a2, x, n : -a1*a2*c**(2*n)*(m - 2*n + 1)*Int((c*x)**(m - 2*n)*(a1 + b1*x**n)**p*(a2 + b2*x**n)**p, x)/(b1*b2*(m + 2*n*p + 1)) + c**(2*n - 1)*(c*x)**(m - 2*n + 1)*(a1 + b1*x**n)**(p + 1)*(a2 + b2*x**n)**(p + 1)/(b1*b2*(m + 2*n*p + 1)))
    rubi.add(rule779)

    pattern780 = Pattern(Integral((x_*WC('c', S(1)))**m_*(a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, -1)), CustomConstraint(lambda m, c, p, x, n, a, b: IntBinomialQ(a, b, c, n, m, p, x)))
    rule780 = ReplacementRule(pattern780, lambda m, c, p, x, n, a, b : -b*c**(-n)*(m + n*(p + 1) + 1)*Int((c*x)**(m + n)*(a + b*x**n)**p, x)/(a*(m + 1)) + (c*x)**(m + 1)*(a + b*x**n)**(p + 1)/(a*c*(m + 1)))
    rubi.add(rule780)

    pattern781 = Pattern(Integral((x_*WC('c', S(1)))**m_*(a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda n, m: SumSimplerQ(m, n)), CustomConstraint(lambda n, m, p: NegativeIntegerQ(Simplify(p + (m + 1)/n))))
    rule781 = ReplacementRule(pattern781, lambda m, c, p, x, n, a, b : -b*c**(-n)*(m + n*(p + 1) + 1)*Int((c*x)**(m + n)*(a + b*x**n)**p, x)/(a*(m + 1)) + (c*x)**(m + 1)*(a + b*x**n)**(p + 1)/(a*c*(m + 1)))
    rubi.add(rule781)

    pattern782 = Pattern(Integral((x_*WC('c', S(1)))**m_*(a1_ + x_**n_*WC('b1', S(1)))**p_*(a2_ + x_**n_*WC('b2', S(1)))**p_, x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda n: PositiveIntegerQ(2*n)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, -1)), CustomConstraint(lambda b1, a1, b2, m, c, a2, p, x, n: IntBinomialQ(a1*a2, b1*b2, c, n, m, p, x)))
    rule782 = ReplacementRule(pattern782, lambda b1, a1, b2, m, c, p, a2, x, n : -b1*b2*c**(-2*n)*(m + 2*n*(p + 1) + 1)*Int((c*x)**(m + 2*n)*(a1 + b1*x**n)**p*(a2 + b2*x**n)**p, x)/(a1*a2*(m + 1)) + (c*x)**(m + 1)*(a1 + b1*x**n)**(p + 1)*(a2 + b2*x**n)**(p + 1)/(a1*a2*c*(m + 1)))
    rubi.add(rule782)

    pattern783 = Pattern(Integral((x_*WC('c', S(1)))**m_*(a1_ + x_**n_*WC('b1', S(1)))**p_*(a2_ + x_**n_*WC('b2', S(1)))**p_, x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda n: PositiveIntegerQ(2*n)), CustomConstraint(lambda n, m: SumSimplerQ(m, 2*n)), CustomConstraint(lambda n, m, p: NegativeIntegerQ(Simplify(p + (m + 1)/(2*n)))))
    rule783 = ReplacementRule(pattern783, lambda b1, a1, b2, m, c, p, a2, x, n : -b1*b2*c**(-2*n)*(m + 2*n*(p + 1) + 1)*Int((c*x)**(m + 2*n)*(a1 + b1*x**n)**p*(a2 + b2*x**n)**p, x)/(a1*a2*(m + 1)) + (c*x)**(m + 1)*(a1 + b1*x**n)**(p + 1)*(a2 + b2*x**n)**(p + 1)/(a1*a2*c*(m + 1)))
    rubi.add(rule783)

    pattern784 = Pattern(Integral((x_*WC('c', S(1)))**m_*(a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: FractionQ(m)), CustomConstraint(lambda m, c, p, x, n, a, b: IntBinomialQ(a, b, c, n, m, p, x)))
    rule784 = ReplacementRule(pattern784, lambda m, c, p, x, n, a, b : With(List(Set(k, Denominator(m))), k*Subst(Int(x**(k*(m + 1) - 1)*(a + b*c**(-n)*x**(k*n))**p, x), x, (c*x)**(1/k))/c))
    rubi.add(rule784)

    pattern785 = Pattern(Integral((x_*WC('c', S(1)))**m_*(a1_ + x_**n_*WC('b1', S(1)))**p_*(a2_ + x_**n_*WC('b2', S(1)))**p_, x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda n: PositiveIntegerQ(2*n)), CustomConstraint(lambda m: FractionQ(m)), CustomConstraint(lambda b1, a1, b2, m, c, a2, p, x, n: IntBinomialQ(a1*a2, b1*b2, c, n, m, p, x)))
    rule785 = ReplacementRule(pattern785, lambda b1, a1, b2, m, c, p, a2, x, n : With(List(Set(k, Denominator(m))), k*Subst(Int(x**(k*(m + 1) - 1)*(a1 + b1*c**(-n)*x**(k*n))**p*(a2 + b2*c**(-n)*x**(k*n))**p, x), x, (c*x)**(1/k))/c))
    rubi.add(rule785)

    pattern786 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(-1, p, 0)), CustomConstraint(lambda p: Unequal(p, S(-1)/2)), CustomConstraint(lambda p, m, n: IntegersQ(m, p + (m + 1)/n)))
    rule786 = ReplacementRule(pattern786, lambda m, p, x, n, a, b : a**(p + (m + 1)/n)*Subst(Int(x**m*(-b*x**n + 1)**(-p - 1 - (m + 1)/n), x), x, x*(a + b*x**n)**(-1/n)))
    rubi.add(rule786)

    pattern787 = Pattern(Integral(x_**WC('m', S(1))*(a1_ + x_**n_*WC('b1', S(1)))**p_*(a2_ + x_**n_*WC('b2', S(1)))**p_, x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda n: PositiveIntegerQ(2*n)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(-1, p, 0)), CustomConstraint(lambda p: Unequal(p, S(-1)/2)), CustomConstraint(lambda p, m, n: IntegersQ(m, p + (m + 1)/(2*n))))
    rule787 = ReplacementRule(pattern787, lambda b1, a1, b2, m, p, a2, x, n : (a1*a2)**(p + (m + 1)/(2*n))*Subst(Int(x**m*(-b1*x**n + 1)**(-p - 1 - (m + 1)/(2*n))*(-b2*x**n + 1)**(-p - 1 - (m + 1)/(2*n)), x), x, x*(a1 + b1*x**n)**(-1/(2*n))*(a2 + b2*x**n)**(-1/(2*n))))
    rubi.add(rule787)

    pattern788 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(-1, p, 0)), CustomConstraint(lambda p: Unequal(p, S(-1)/2)), CustomConstraint(lambda m: IntegerQ(m)), CustomConstraint(lambda p, m, n: Less(Denominator(p + (m + 1)/n), Denominator(p))))
    rule788 = ReplacementRule(pattern788, lambda m, p, x, n, a, b : (a/(a + b*x**n))**(p + (m + 1)/n)*(a + b*x**n)**(p + (m + 1)/n)*Subst(Int(x**m*(-b*x**n + 1)**(-p - 1 - (m + 1)/n), x), x, x*(a + b*x**n)**(-1/n)))
    rubi.add(rule788)

    pattern789 = Pattern(Integral(x_**WC('m', S(1))*(a1_ + x_**n_*WC('b1', S(1)))**p_*(a2_ + x_**n_*WC('b2', S(1)))**p_, x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda n: PositiveIntegerQ(2*n)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(-1, p, 0)), CustomConstraint(lambda p: Unequal(p, S(-1)/2)), CustomConstraint(lambda m: IntegerQ(m)), CustomConstraint(lambda p, m, n: Less(Denominator(p + (m + 1)/(2*n)), Denominator(p))))
    rule789 = ReplacementRule(pattern789, lambda b1, a1, b2, m, p, a2, x, n : (a1/(a1 + b1*x**n))**(p + (m + 1)/(2*n))*(a2/(a2 + b2*x**n))**(p + (m + 1)/(2*n))*(a1 + b1*x**n)**(p + (m + 1)/(2*n))*(a2 + b2*x**n)**(p + (m + 1)/(2*n))*Subst(Int(x**m*(-b1*x**n + 1)**(-p - 1 - (m + 1)/(2*n))*(-b2*x**n + 1)**(-p - 1 - (m + 1)/(2*n)), x), x, x*(a1 + b1*x**n)**(-1/(2*n))*(a2 + b2*x**n)**(-1/(2*n))))
    rubi.add(rule789)

    pattern790 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda m: IntegerQ(m)))
    rule790 = ReplacementRule(pattern790, lambda m, p, x, n, a, b : -Subst(Int(x**(-m - 2)*(a + b*x**(-n))**p, x), x, 1/x))
    rubi.add(rule790)

    pattern791 = Pattern(Integral(x_**WC('m', S(1))*(a1_ + x_**n_*WC('b1', S(1)))**p_*(a2_ + x_**n_*WC('b2', S(1)))**p_, x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda n: NegativeIntegerQ(2*n)), CustomConstraint(lambda m: IntegerQ(m)))
    rule791 = ReplacementRule(pattern791, lambda b1, a1, b2, m, p, a2, x, n : -Subst(Int(x**(-m - 2)*(a1 + b1*x**(-n))**p*(a2 + b2*x**(-n))**p, x), x, 1/x))
    rubi.add(rule791)

    pattern792 = Pattern(Integral((x_*WC('c', S(1)))**m_*(a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda m: FractionQ(m)))
    rule792 = ReplacementRule(pattern792, lambda m, c, p, x, n, a, b : With(List(Set(k, Denominator(m))), -k*Subst(Int(x**(-k*(m + 1) - 1)*(a + b*c**(-n)*x**(-k*n))**p, x), x, (c*x)**(-1/k))/c))
    rubi.add(rule792)

    pattern793 = Pattern(Integral((x_*WC('c', S(1)))**m_*(a1_ + x_**n_*WC('b1', S(1)))**p_*(a2_ + x_**n_*WC('b2', S(1)))**p_, x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda n: NegativeIntegerQ(2*n)), CustomConstraint(lambda m: FractionQ(m)))
    rule793 = ReplacementRule(pattern793, lambda b1, a1, b2, m, c, p, a2, x, n : With(List(Set(k, Denominator(m))), -k*Subst(Int(x**(-k*(m + 1) - 1)*(a1 + b1*c**(-n)*x**(-k*n))**p*(a2 + b2*c**(-n)*x**(-k*n))**p, x), x, (c*x)**(-1/k))/c))
    rubi.add(rule793)

    pattern794 = Pattern(Integral((x_*WC('c', S(1)))**m_*(a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda m: ~(RationalQ(m))))
    rule794 = ReplacementRule(pattern794, lambda m, c, p, x, n, a, b : -(c*x)**m*(1/x)**m*Subst(Int(x**(-m - 2)*(a + b*x**(-n))**p, x), x, 1/x))
    rubi.add(rule794)

    pattern795 = Pattern(Integral((x_*WC('c', S(1)))**m_*(a1_ + x_**n_*WC('b1', S(1)))**p_*(a2_ + x_**n_*WC('b2', S(1)))**p_, x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda n: NegativeIntegerQ(2*n)), CustomConstraint(lambda m: ~(RationalQ(m))))
    rule795 = ReplacementRule(pattern795, lambda b1, a1, b2, m, c, p, a2, x, n : -(c*x)**m*(1/x)**m*Subst(Int(x**(-m - 2)*(a1 + b1*x**(-n))**p*(a2 + b2*x**(-n))**p, x), x, 1/x))
    rubi.add(rule795)

    pattern796 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n: FractionQ(n)))
    rule796 = ReplacementRule(pattern796, lambda m, p, x, n, a, b : With(List(Set(k, Denominator(n))), k*Subst(Int(x**(k*(m + 1) - 1)*(a + b*x**(k*n))**p, x), x, x**(1/k))))
    rubi.add(rule796)

    pattern797 = Pattern(Integral(x_**WC('m', S(1))*(a1_ + x_**n_*WC('b1', S(1)))**p_*(a2_ + x_**n_*WC('b2', S(1)))**p_, x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda n: FractionQ(2*n)))
    rule797 = ReplacementRule(pattern797, lambda b1, a1, b2, m, p, a2, x, n : With(List(Set(k, Denominator(2*n))), k*Subst(Int(x**(k*(m + 1) - 1)*(a1 + b1*x**(k*n))**p*(a2 + b2*x**(k*n))**p, x), x, x**(1/k))))
    rubi.add(rule797)

    pattern798 = Pattern(Integral((c_*x_)**m_*(a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n: FractionQ(n)))
    rule798 = ReplacementRule(pattern798, lambda m, c, p, x, n, a, b : c**IntPart(m)*x**(-FracPart(m))*(c*x)**FracPart(m)*Int(x**m*(a + b*x**n)**p, x))
    rubi.add(rule798)

    pattern799 = Pattern(Integral((c_*x_)**m_*(a1_ + x_**n_*WC('b1', S(1)))**p_*(a2_ + x_**n_*WC('b2', S(1)))**p_, x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda n: FractionQ(2*n)))
    rule799 = ReplacementRule(pattern799, lambda b1, a1, b2, m, c, p, a2, x, n : c**IntPart(m)*x**(-FracPart(m))*(c*x)**FracPart(m)*Int(x**m*(a1 + b1*x**n)**p*(a2 + b2*x**n)**p, x))
    rubi.add(rule799)

    pattern800 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, m: IntegerQ(Simplify(n/(m + 1)))), CustomConstraint(lambda n: ~(IntegerQ(n))))
    rule800 = ReplacementRule(pattern800, lambda m, p, x, n, a, b : Subst(Int((a + b*x**Simplify(n/(m + 1)))**p, x), x, x**(m + 1))/(m + 1))
    rubi.add(rule800)

    pattern801 = Pattern(Integral(x_**WC('m', S(1))*(a1_ + x_**n_*WC('b1', S(1)))**p_*(a2_ + x_**n_*WC('b2', S(1)))**p_, x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda n, m: IntegerQ(Simplify(2*n/(m + 1)))), CustomConstraint(lambda n: ~(IntegerQ(2*n))))
    rule801 = ReplacementRule(pattern801, lambda b1, a1, b2, m, p, a2, x, n : Subst(Int((a1 + b1*x**Simplify(n/(m + 1)))**p*(a2 + b2*x**Simplify(n/(m + 1)))**p, x), x, x**(m + 1))/(m + 1))
    rubi.add(rule801)

    pattern802 = Pattern(Integral((c_*x_)**m_*(a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, m: IntegerQ(Simplify(n/(m + 1)))), CustomConstraint(lambda n: ~(IntegerQ(n))))
    rule802 = ReplacementRule(pattern802, lambda m, c, p, x, n, a, b : c**IntPart(m)*x**(-FracPart(m))*(c*x)**FracPart(m)*Int(x**m*(a + b*x**n)**p, x))
    rubi.add(rule802)

    pattern803 = Pattern(Integral((c_*x_)**m_*(a1_ + x_**n_*WC('b1', S(1)))**p_*(a2_ + x_**n_*WC('b2', S(1)))**p_, x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda n, m: IntegerQ(Simplify(2*n/(m + 1)))), CustomConstraint(lambda n: ~(IntegerQ(2*n))))
    rule803 = ReplacementRule(pattern803, lambda b1, a1, b2, m, c, p, a2, x, n : c**IntPart(m)*x**(-FracPart(m))*(c*x)**FracPart(m)*Int(x**m*(a1 + b1*x**n)**p*(a2 + b2*x**n)**p, x))
    rubi.add(rule803)

    pattern804 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, m, p: ZeroQ(p + (m + 1)/n)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, 0)))
    rule804 = ReplacementRule(pattern804, lambda m, p, x, n, a, b : -b*n*p*Int(x**(m + n)*(a + b*x**n)**(p - 1), x)/(m + 1) + x**(m + 1)*(a + b*x**n)**p/(m + 1))
    rubi.add(rule804)

    pattern805 = Pattern(Integral(x_**WC('m', S(1))*(a1_ + x_**n_*WC('b1', S(1)))**p_*(a2_ + x_**n_*WC('b2', S(1)))**p_, x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda n, m, p: ZeroQ(p + (m + 1)/(2*n))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, 0)))
    rule805 = ReplacementRule(pattern805, lambda b1, a1, b2, m, p, a2, x, n : -2*b1*b2*n*p*Int(x**(m + n)*(a1 + b1*x**n)**(p - 1)*(a2 + b2*x**n)**(p - 1), x)/(m + 1) + x**(m + 1)*(a1 + b1*x**n)**p*(a2 + b2*x**n)**p/(m + 1))
    rubi.add(rule805)

    pattern806 = Pattern(Integral((c_*x_)**m_*(a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, m, p: ZeroQ(p + (m + 1)/n)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, 0)))
    rule806 = ReplacementRule(pattern806, lambda m, c, p, x, n, a, b : c**IntPart(m)*x**(-FracPart(m))*(c*x)**FracPart(m)*Int(x**m*(a + b*x**n)**p, x))
    rubi.add(rule806)

    pattern807 = Pattern(Integral((c_*x_)**m_*(a1_ + x_**n_*WC('b1', S(1)))**p_*(a2_ + x_**n_*WC('b2', S(1)))**p_, x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda n, m, p: ZeroQ(p + (m + 1)/(2*n))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, 0)))
    rule807 = ReplacementRule(pattern807, lambda b1, a1, b2, m, c, p, a2, x, n : c**IntPart(m)*x**(-FracPart(m))*(c*x)**FracPart(m)*Int(x**m*(a1 + b1*x**n)**p*(a2 + b2*x**n)**p, x))
    rubi.add(rule807)

    pattern808 = Pattern(Integral((x_*WC('c', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, m, n: IntegerQ(p + Simplify((m + 1)/n))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda n, m, p: NonzeroQ(m + n*p + 1)))
    rule808 = ReplacementRule(pattern808, lambda m, c, p, x, n, a, b : a*n*p*Int((c*x)**m*(a + b*x**n)**(p - 1), x)/(m + n*p + 1) + (c*x)**(m + 1)*(a + b*x**n)**p/(c*(m + n*p + 1)))
    rubi.add(rule808)

    pattern809 = Pattern(Integral((x_*WC('c', S(1)))**WC('m', S(1))*(a1_ + x_**n_*WC('b1', S(1)))**p_*(a2_ + x_**n_*WC('b2', S(1)))**p_, x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda p, m, n: IntegerQ(p + Simplify((m + 1)/(2*n)))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda n, m, p: NonzeroQ(m + 2*n*p + 1)))
    rule809 = ReplacementRule(pattern809, lambda b1, a1, b2, m, c, p, a2, x, n : 2*a1*a2*n*p*Int((c*x)**m*(a1 + b1*x**n)**(p - 1)*(a2 + b2*x**n)**(p - 1), x)/(m + 2*n*p + 1) + (c*x)**(m + 1)*(a1 + b1*x**n)**p*(a2 + b2*x**n)**p/(c*(m + 2*n*p + 1)))
    rubi.add(rule809)

    pattern810 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, m, n: IntegerQ(p + Simplify((m + 1)/n))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(-1, p, 0)))
    rule810 = ReplacementRule(pattern810, lambda m, p, x, n, a, b : With(List(Set(k, Denominator(p))), a**(p + Simplify((m + 1)/n))*k*Subst(Int(x**(k*Simplify((m + 1)/n) - 1)*(-b*x**k + 1)**(-p - Simplify((m + 1)/n) - 1), x), x, x**(n/k)*(a + b*x**n)**(-1/k))/n))
    rubi.add(rule810)

    pattern811 = Pattern(Integral(x_**WC('m', S(1))*(a1_ + x_**n_*WC('b1', S(1)))**p_*(a2_ + x_**n_*WC('b2', S(1)))**p_, x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda p, m, n: IntegerQ(p + Simplify((m + 1)/(2*n)))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(-1, p, 0)))
    rule811 = ReplacementRule(pattern811, lambda b1, a1, b2, m, p, a2, x, n : With(List(Set(k, Denominator(p))), k*(a1*a2)**(p + Simplify((m + 1)/(2*n)))*Subst(Int(x**(k*Simplify((m + 1)/(2*n)) - 1)*(-b1*x**k + 1)**(-p - Simplify((m + 1)/(2*n)) - 1)*(-b2*x**k + 1)**(-p - Simplify((m + 1)/(2*n)) - 1), x), x, x**(2*n/k)*(a1 + b1*x**n)**(-1/k)*(a2 + b2*x**n)**(-1/k))/(2*n)))
    rubi.add(rule811)

    pattern812 = Pattern(Integral((c_*x_)**m_*(a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, m, n: IntegerQ(p + Simplify((m + 1)/n))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(-1, p, 0)))
    rule812 = ReplacementRule(pattern812, lambda m, c, p, x, n, a, b : c**IntPart(m)*x**(-FracPart(m))*(c*x)**FracPart(m)*Int(x**m*(a + b*x**n)**p, x))
    rubi.add(rule812)

    pattern813 = Pattern(Integral((c_*x_)**m_*(a1_ + x_**n_*WC('b1', S(1)))**p_*(a2_ + x_**n_*WC('b2', S(1)))**p_, x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda p, m, n: IntegerQ(p + Simplify((m + 1)/(2*n)))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(-1, p, 0)))
    rule813 = ReplacementRule(pattern813, lambda b1, a1, b2, m, c, p, a2, x, n : c**IntPart(m)*x**(-FracPart(m))*(c*x)**FracPart(m)*Int(x**m*(a1 + b1*x**n)**p*(a2 + b2*x**n)**p, x))
    rubi.add(rule813)

    pattern814 = Pattern(Integral((x_*WC('c', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, m, n: IntegerQ(p + Simplify((m + 1)/n))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)))
    rule814 = ReplacementRule(pattern814, lambda m, c, p, x, n, a, b : (m + n*(p + 1) + 1)*Int((c*x)**m*(a + b*x**n)**(p + 1), x)/(a*n*(p + 1)) - (c*x)**(m + 1)*(a + b*x**n)**(p + 1)/(a*c*n*(p + 1)))
    rubi.add(rule814)

    pattern815 = Pattern(Integral((x_*WC('c', S(1)))**WC('m', S(1))*(a1_ + x_**n_*WC('b1', S(1)))**p_*(a2_ + x_**n_*WC('b2', S(1)))**p_, x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda p, m, n: IntegerQ(p + Simplify((m + 1)/n))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)))
    rule815 = ReplacementRule(pattern815, lambda b1, a1, b2, m, c, p, a2, x, n : (m + 2*n*(p + 1) + 1)*Int((c*x)**m*(a1 + b1*x**n)**(p + 1)*(a2 + b2*x**n)**(p + 1), x)/(2*a1*a2*n*(p + 1)) - (c*x)**(m + 1)*(a1 + b1*x**n)**(p + 1)*(a2 + b2*x**n)**(p + 1)/(2*a1*a2*c*n*(p + 1)))
    rubi.add(rule815)

    pattern816 = Pattern(Integral(x_**WC('m', S(1))/(a_ + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, m: FractionQ(Simplify((m + 1)/n))), CustomConstraint(lambda n, m: SumSimplerQ(m, -n)))
    rule816 = ReplacementRule(pattern816, lambda m, x, n, a, b : With(List(Set(mn, Simplify(m - n))), -a*Int(x**mn/(a + b*x**n), x)/b + x**(mn + 1)/(b*(mn + 1))))
    rubi.add(rule816)

    pattern817 = Pattern(Integral(x_**m_/(a_ + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, m: FractionQ(Simplify((m + 1)/n))), CustomConstraint(lambda n, m: SumSimplerQ(m, n)))
    rule817 = ReplacementRule(pattern817, lambda m, x, n, a, b : -b*Int(x**Simplify(m + n)/(a + b*x**n), x)/a + x**(m + 1)/(a*(m + 1)))
    rubi.add(rule817)

    pattern818 = Pattern(Integral((c_*x_)**m_/(a_ + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, m: FractionQ(Simplify((m + 1)/n))), CustomConstraint(lambda n, m: SumSimplerQ(m, n) | SumSimplerQ(m, -n)))
    rule818 = ReplacementRule(pattern818, lambda m, c, x, n, a, b : c**IntPart(m)*x**(-FracPart(m))*(c*x)**FracPart(m)*Int(x**m/(a + b*x**n), x))
    rubi.add(rule818)

    pattern819 = Pattern(Integral((x_*WC('c', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda p: ~(PositiveIntegerQ(p))), CustomConstraint(lambda p, a: NegativeIntegerQ(p) | PositiveQ(a)))
    rule819 = ReplacementRule(pattern819, lambda m, c, p, x, n, a, b : a**p*(c*x)**(m + 1)*Hypergeometric2F1(-p, (m + 1)/n, 1 + (m + 1)/n, -b*x**n/a)/(c*(m + 1)))
    rubi.add(rule819)

    pattern820 = Pattern(Integral((x_*WC('c', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda p: ~(PositiveIntegerQ(p))), CustomConstraint(lambda p, a: ~(NegativeIntegerQ(p) | PositiveQ(a))))
    rule820 = ReplacementRule(pattern820, lambda m, c, p, x, n, a, b : a**IntPart(p)*(1 + b*x**n/a)**(-FracPart(p))*(a + b*x**n)**FracPart(p)*Int((c*x)**m*(1 + b*x**n/a)**p, x))
    rubi.add(rule820)

    pattern821 = Pattern(Integral(x_**WC('m', S(1))*(a_ + v_**n_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda x, v: LinearQ(v, x)), CustomConstraint(lambda m: IntegerQ(m)), CustomConstraint(lambda x, v: NonzeroQ(v - x)))
    rule821 = ReplacementRule(pattern821, lambda v, m, p, x, n, a, b : Coefficient(v, x, 1)**(-m - 1)*Subst(Int(SimplifyIntegrand((a + b*x**n)**p*(x - Coefficient(v, x, 0))**m, x), x), x, v))
    rubi.add(rule821)

    pattern822 = Pattern(Integral(u_**WC('m', S(1))*(a_ + v_**n_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda x, u, v: LinearPairQ(u, v, x)))
    rule822 = ReplacementRule(pattern822, lambda u, v, m, p, x, n, a, b : u**m*v**(-m)*Subst(Int(x**m*(a + b*x**n)**p, x), x, v)/Coefficient(v, x, 1))
    rubi.add(rule822)

    pattern823 = Pattern(Integral((x_*WC('c', S(1)))**WC('m', S(1))*(a1_ + x_**n_*WC('b1', S(1)))**p_*(a2_ + x_**n_*WC('b2', S(1)))**p_, x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule823 = ReplacementRule(pattern823, lambda b1, a1, b2, m, c, p, a2, x, n : (a1 + b1*x**n)**FracPart(p)*(a2 + b2*x**n)**FracPart(p)*(a1*a2 + b1*b2*x**(2*n))**(-FracPart(p))*Int((c*x)**m*(a1*a2 + b1*b2*x**(2*n))**p, x))
    rubi.add(rule823)

    pattern824 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda q, p: PositiveIntegerQ(p, q)))
    rule824 = ReplacementRule(pattern824, lambda c, q, p, d, x, n, a, b : Int(ExpandIntegrand((a + b*x**n)**p*(c + d*x**n)**q, x), x))
    rubi.add(rule824)

    pattern825 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda q, p: IntegersQ(p, q)), CustomConstraint(lambda n: NegQ(n)))
    rule825 = ReplacementRule(pattern825, lambda c, q, p, d, x, n, a, b : Int(x**(n*(p + q))*(a*x**(-n) + b)**p*(c*x**(-n) + d)**q, x))
    rubi.add(rule825)

    pattern826 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n: NegativeIntegerQ(n)))
    rule826 = ReplacementRule(pattern826, lambda c, q, p, d, x, n, a, b : -Subst(Int((a + b*x**(-n))**p*(c + d*x**(-n))**q/x**2, x), x, 1/x))
    rubi.add(rule826)

    pattern827 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n: FractionQ(n)))
    rule827 = ReplacementRule(pattern827, lambda c, q, p, d, x, n, a, b : With(List(Set(g, Denominator(n))), g*Subst(Int(x**(g - 1)*(a + b*x**(g*n))**p*(c + d*x**(g*n))**q, x), x, x**(1/g))))
    rubi.add(rule827)

    pattern828 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_/(c_ + x_**n_*WC('d', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n, p: ZeroQ(n*p + 1)), CustomConstraint(lambda n: IntegerQ(n)))
    rule828 = ReplacementRule(pattern828, lambda c, p, d, x, n, a, b : Subst(Int(1/(c - x**n*(-a*d + b*c)), x), x, x*(a + b*x**n)**(-1/n)))
    rubi.add(rule828)

    pattern829 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda q, n, p: ZeroQ(n*(p + q + 1) + 1)), CustomConstraint(lambda q: RationalQ(q)), CustomConstraint(lambda q: Greater(q, 0)), CustomConstraint(lambda p: NonzeroQ(p + 1)))
    rule829 = ReplacementRule(pattern829, lambda c, q, p, d, x, n, a, b : -c*q*Int((a + b*x**n)**(p + 1)*(c + d*x**n)**(q - 1), x)/(a*(p + 1)) - x*(a + b*x**n)**(p + 1)*(c + d*x**n)**q/(a*n*(p + 1)))
    rubi.add(rule829)

    pattern830 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda q, n, p: ZeroQ(n*(p + q + 1) + 1)), CustomConstraint(lambda p: NegativeIntegerQ(p)))
    rule830 = ReplacementRule(pattern830, lambda c, q, p, d, x, n, a, b : a**p*c**(-p - 1)*x*(c + d*x**n)**(-1/n)*Hypergeometric2F1(1/n, -p, 1 + 1/n, x**n*(a*d - b*c)/(a*(c + d*x**n))))
    rubi.add(rule830)

    pattern831 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda q, n, p: ZeroQ(n*(p + q + 1) + 1)))
    rule831 = ReplacementRule(pattern831, lambda c, q, p, d, x, n, a, b : x*(c*(a + b*x**n)/(a*(c + d*x**n)))**(-p)*(a + b*x**n)**p*(c + d*x**n)**(-p - 1/n)*Hypergeometric2F1(1/n, -p, 1 + 1/n, x**n*(a*d - b*c)/(a*(c + d*x**n)))/c)
    rubi.add(rule831)

    pattern832 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda q, n, p: ZeroQ(n*(p + q + 2) + 1)), CustomConstraint(lambda c, q, p, d, a, b: ZeroQ(a*d*(p + 1) + b*c*(q + 1))))
    rule832 = ReplacementRule(pattern832, lambda c, q, p, d, x, n, a, b : x*(a + b*x**n)**(p + 1)*(c + d*x**n)**(q + 1)/(a*c))
    rubi.add(rule832)

    pattern833 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda q, n, p: ZeroQ(n*(p + q + 2) + 1)), CustomConstraint(lambda q, p: (RationalQ(p) & Less(p, -1)) | ~(RationalQ(q) & Less(q, -1))), CustomConstraint(lambda p: NonzeroQ(p + 1)))
    rule833 = ReplacementRule(pattern833, lambda c, q, p, d, x, n, a, b : -b*x*(a + b*x**n)**(p + 1)*(c + d*x**n)**(q + 1)/(a*n*(p + 1)*(-a*d + b*c)) + (b*c + n*(p + 1)*(-a*d + b*c))*Int((a + b*x**n)**(p + 1)*(c + d*x**n)**q, x)/(a*n*(p + 1)*(-a*d + b*c)))
    rubi.add(rule833)

    pattern834 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda c, p, d, n, a, b: ZeroQ(a*d - b*c*(n*(p + 1) + 1))))
    rule834 = ReplacementRule(pattern834, lambda c, p, d, x, n, a, b : c*x*(a + b*x**n)**(p + 1)/a)
    rubi.add(rule834)

    pattern835 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda p, n: NegativeIntegerQ(p + 1/n) | (RationalQ(p) & Less(p, -1))))
    rule835 = ReplacementRule(pattern835, lambda c, p, d, x, n, a, b : x*(a + b*x**n)**(p + 1)*(a*d - b*c)/(a*b*n*(p + 1)) - (a*d - b*c*(n*(p + 1) + 1))*Int((a + b*x**n)**(p + 1), x)/(a*b*n*(p + 1)))
    rubi.add(rule835)

    pattern836 = Pattern(Integral((c_ + x_**n_*WC('d', S(1)))/(a_ + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, 0)))
    rule836 = ReplacementRule(pattern836, lambda c, d, x, n, a, b : c*x/a - (-a*d + b*c)*Int(1/(a*x**(-n) + b), x)/a)
    rubi.add(rule836)

    pattern837 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n, p: NonzeroQ(n*(p + 1) + 1)))
    rule837 = ReplacementRule(pattern837, lambda c, p, d, x, n, a, b : d*x*(a + b*x**n)**(p + 1)/(b*(n*(p + 1) + 1)) - (a*d - b*c*(n*(p + 1) + 1))*Int((a + b*x**n)**p, x)/(b*(n*(p + 1) + 1)))
    rubi.add(rule837)

    pattern838 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n, p: PositiveIntegerQ(n, p)), CustomConstraint(lambda q: NegativeIntegerQ(q)), CustomConstraint(lambda q, p: GreaterEqual(p, -q)))
    rule838 = ReplacementRule(pattern838, lambda c, q, p, d, x, n, a, b : Int(PolynomialDivide((a + b*x**n)**p, (c + d*x**n)**(-q), x), x))
    rubi.add(rule838)

    pattern839 = Pattern(Integral(1/((a_ + x_**n_*WC('b', S(1)))*(c_ + x_**n_*WC('d', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)))
    rule839 = ReplacementRule(pattern839, lambda c, d, x, n, a, b : b*Int(1/(a + b*x**n), x)/(-a*d + b*c) - d*Int(1/(c + d*x**n), x)/(-a*d + b*c))
    rubi.add(rule839)

    pattern840 = Pattern(Integral(1/((a_ + x_**2*WC('b', S(1)))**(S(1)/3)*(c_ + x_**2*WC('d', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda d, a, b, c: ZeroQ(3*a*d + b*c)), CustomConstraint(lambda a, b: PosQ(b/a)))
    rule840 = ReplacementRule(pattern840, lambda c, d, x, a, b : Int(1/((a + b*x**2)**(1/3)*(-x*Rt(b/a, 2) + Sqrt(3))), x)*Sqrt(3)/(2*c) + Int(1/((a + b*x**2)**(1/3)*(x*Rt(b/a, 2) + Sqrt(3))), x)*Sqrt(3)/(2*c))
    rubi.add(rule840)

    pattern841 = Pattern(Integral(1/((a_ + x_**2*WC('b', S(1)))**(S(1)/3)*(c_ + x_**2*WC('d', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda d, a, b, c: ZeroQ(3*a*d + b*c)), CustomConstraint(lambda a, b: NegQ(b/a)))
    rule841 = ReplacementRule(pattern841, lambda c, d, x, a, b : Int((-x*Rt(-b/a, 2) + 3)/((a + b*x**2)**(1/3)*(c + d*x**2)), x)/6 + Int((x*Rt(-b/a, 2) + 3)/((a + b*x**2)**(1/3)*(c + d*x**2)), x)/6)
    rubi.add(rule841)

    pattern842 = Pattern(Integral((a_ + x_**2*WC('b', S(1)))**(S(2)/3)/(c_ + x_**2*WC('d', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda d, a, b, c: ZeroQ(3*a*d + b*c)))
    rule842 = ReplacementRule(pattern842, lambda c, d, x, a, b : b*Int((a + b*x**2)**(-1/3), x)/d - (-a*d + b*c)*Int(1/((a + b*x**2)**(1/3)*(c + d*x**2)), x)/d)
    rubi.add(rule842)

    pattern843 = Pattern(Integral(1/((a_ + x_**2*WC('b', S(1)))**(S(1)/4)*(c_ + x_**2*WC('d', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)))
    rule843 = ReplacementRule(pattern843, lambda c, d, x, a, b : Sqrt(-b*x**2/a)*Subst(Int(1/((a + b*x)**(1/4)*(c + d*x)*Sqrt(-b*x/a)), x), x, x**2)/(2*x))
    rubi.add(rule843)

    pattern844 = Pattern(Integral(1/((a_ + x_**2*WC('b', S(1)))**(S(3)/4)*(c_ + x_**2*WC('d', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)))
    rule844 = ReplacementRule(pattern844, lambda c, d, x, a, b : Sqrt(-b*x**2/a)*Subst(Int(1/((a + b*x)**(3/4)*(c + d*x)*Sqrt(-b*x/a)), x), x, x**2)/(2*x))
    rubi.add(rule844)

    pattern845 = Pattern(Integral((a_ + x_**2*WC('b', S(1)))**WC('p', S(1))/(c_ + x_**2*WC('d', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda p: Equal(p, S(1)/2) | Equal(Denominator(p), 4)))
    rule845 = ReplacementRule(pattern845, lambda c, p, d, x, a, b : b*Int((a + b*x**2)**(p - 1), x)/d - (-a*d + b*c)*Int((a + b*x**2)**(p - 1)/(c + d*x**2), x)/d)
    rubi.add(rule845)

    pattern846 = Pattern(Integral((a_ + x_**2*WC('b', S(1)))**p_/(c_ + x_**2*WC('d', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda p: Equal(Denominator(p), 4)), CustomConstraint(lambda p: Equal(p, S(-7)/4) | Equal(p, S(-5)/4)))
    rule846 = ReplacementRule(pattern846, lambda c, p, d, x, a, b : b*Int((a + b*x**2)**p, x)/(-a*d + b*c) - d*Int((a + b*x**2)**(p + 1)/(c + d*x**2), x)/(-a*d + b*c))
    rubi.add(rule846)

    pattern847 = Pattern(Integral(sqrt(a_ + x_**4*WC('b', S(1)))/(c_ + x_**4*WC('d', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: ZeroQ(a*d + b*c)), CustomConstraint(lambda a, b: PosQ(a*b)))
    rule847 = ReplacementRule(pattern847, lambda c, d, x, a, b : a*Subst(Int(1/(-4*a*b*x**4 + 1), x), x, x/Sqrt(a + b*x**4))/c)
    rubi.add(rule847)

    pattern848 = Pattern(Integral(sqrt(a_ + x_**4*WC('b', S(1)))/(c_ + x_**4*WC('d', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: ZeroQ(a*d + b*c)), CustomConstraint(lambda a, b: NegQ(a*b)))
    rule848 = ReplacementRule(pattern848, lambda c, d, x, a, b : With(List(Set(q, Rt(-a*b, 4))), a*ArcTan(q*x*(a + q**2*x**2)/(a*Sqrt(a + b*x**4)))/(2*c*q) + a*ArcTanh(q*x*(a - q**2*x**2)/(a*Sqrt(a + b*x**4)))/(2*c*q)))
    rubi.add(rule848)

    pattern849 = Pattern(Integral(sqrt(a_ + x_**4*WC('b', S(1)))/(c_ + x_**4*WC('d', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)))
    rule849 = ReplacementRule(pattern849, lambda c, d, x, a, b : b*Int(1/Sqrt(a + b*x**4), x)/d - (-a*d + b*c)*Int(1/((c + d*x**4)*Sqrt(a + b*x**4)), x)/d)
    rubi.add(rule849)

    pattern850 = Pattern(Integral((a_ + x_**4*WC('b', S(1)))**(S(1)/4)/(c_ + x_**4*WC('d', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)))
    rule850 = ReplacementRule(pattern850, lambda c, d, x, a, b : Sqrt(a/(a + b*x**4))*Sqrt(a + b*x**4)*Subst(Int(1/((c - x**4*(-a*d + b*c))*Sqrt(-b*x**4 + 1)), x), x, x/(a + b*x**4)**(1/4)))
    rubi.add(rule850)

    pattern851 = Pattern(Integral((a_ + x_**4*WC('b', S(1)))**p_/(c_ + x_**4*WC('d', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Equal(p, S(3)/4) | Equal(p, S(5)/4)))
    rule851 = ReplacementRule(pattern851, lambda c, p, d, x, a, b : b*Int((a + b*x**4)**(p - 1), x)/d - (-a*d + b*c)*Int((a + b*x**4)**(p - 1)/(c + d*x**4), x)/d)
    rubi.add(rule851)

    pattern852 = Pattern(Integral(1/(sqrt(a_ + x_**4*WC('b', S(1)))*(c_ + x_**4*WC('d', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)))
    rule852 = ReplacementRule(pattern852, lambda c, d, x, a, b : Int(1/((-x**2*Rt(-d/c, 2) + 1)*Sqrt(a + b*x**4)), x)/(2*c) + Int(1/((x**2*Rt(-d/c, 2) + 1)*Sqrt(a + b*x**4)), x)/(2*c))
    rubi.add(rule852)

    pattern853 = Pattern(Integral(1/((a_ + x_**4*WC('b', S(1)))**(S(3)/4)*(c_ + x_**4*WC('d', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)))
    rule853 = ReplacementRule(pattern853, lambda c, d, x, a, b : b*Int((a + b*x**4)**(-3/4), x)/(-a*d + b*c) - d*Int((a + b*x**4)**(1/4)/(c + d*x**4), x)/(-a*d + b*c))
    rubi.add(rule853)

    pattern854 = Pattern(Integral(sqrt(a_ + x_**2*WC('b', S(1)))/(c_ + x_**2*WC('d', S(1)))**(S(3)/2), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda a, b: PosQ(b/a)), CustomConstraint(lambda d, c: PosQ(d/c)))
    rule854 = ReplacementRule(pattern854, lambda c, d, x, a, b : EllipticE(ArcTan(x*Rt(d/c, 2)), 1 - b*c/(a*d))*Sqrt(a + b*x**2)/(c*Rt(d/c, 2)*Sqrt(c*(a + b*x**2)/(a*(c + d*x**2)))*Sqrt(c + d*x**2)))
    rubi.add(rule854)

    pattern855 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda q, p: RationalQ(p, q)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda q: Less(0, q, 1)), CustomConstraint(lambda c, q, p, d, x, n, a, b: IntBinomialQ(a, b, c, d, n, p, q, x)))
    rule855 = ReplacementRule(pattern855, lambda c, q, p, d, x, n, a, b : -x*(a + b*x**n)**(p + 1)*(c + d*x**n)**q/(a*n*(p + 1)) + Int((a + b*x**n)**(p + 1)*(c + d*x**n)**(q - 1)*Simp(c*(n*(p + 1) + 1) + d*x**n*(n*(p + q + 1) + 1), x), x)/(a*n*(p + 1)))
    rubi.add(rule855)

    pattern856 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda q, p: RationalQ(p, q)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda q: Greater(q, 1)), CustomConstraint(lambda c, q, p, d, x, n, a, b: IntBinomialQ(a, b, c, d, n, p, q, x)))
    rule856 = ReplacementRule(pattern856, lambda c, q, p, d, x, n, a, b : x*(a + b*x**n)**(p + 1)*(c + d*x**n)**(q - 1)*(a*d - b*c)/(a*b*n*(p + 1)) - Int((a + b*x**n)**(p + 1)*(c + d*x**n)**(q - 2)*Simp(c*(a*d - b*c*(n*(p + 1) + 1)) + d*x**n*(a*d*(n*(q - 1) + 1) - b*c*(n*(p + q) + 1)), x), x)/(a*b*n*(p + 1)))
    rubi.add(rule856)

    pattern857 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda q, p: ~(IntegerQ(q) & Less(q, -1) & ~(IntegerQ(p)))), CustomConstraint(lambda c, q, p, d, x, n, a, b: IntBinomialQ(a, b, c, d, n, p, q, x)))
    rule857 = ReplacementRule(pattern857, lambda c, q, p, d, x, n, a, b : -b*x*(a + b*x**n)**(p + 1)*(c + d*x**n)**(q + 1)/(a*n*(p + 1)*(-a*d + b*c)) + Int((a + b*x**n)**(p + 1)*(c + d*x**n)**q*Simp(b*c + b*d*x**n*(n*(p + q + 2) + 1) + n*(p + 1)*(-a*d + b*c), x), x)/(a*n*(p + 1)*(-a*d + b*c)))
    rubi.add(rule857)

    pattern858 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q, p: IntegersQ(p, q)), CustomConstraint(lambda q, p: Greater(p + q, 0)))
    rule858 = ReplacementRule(pattern858, lambda c, q, p, d, x, n, a, b : Int(ExpandIntegrand((a + b*x**n)**p*(c + d*x**n)**q, x), x))
    rubi.add(rule858)

    pattern859 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda q: RationalQ(q)), CustomConstraint(lambda q: Greater(q, 1)), CustomConstraint(lambda q, n, p: NonzeroQ(n*(p + q) + 1)), CustomConstraint(lambda p: ~(IntegerQ(p) & Greater(p, 1))), CustomConstraint(lambda c, q, p, d, x, n, a, b: IntBinomialQ(a, b, c, d, n, p, q, x)))
    rule859 = ReplacementRule(pattern859, lambda c, q, p, d, x, n, a, b : d*x*(a + b*x**n)**(p + 1)*(c + d*x**n)**(q - 1)/(b*(n*(p + q) + 1)) + Int((a + b*x**n)**p*(c + d*x**n)**(q - 2)*Simp(c*(-a*d + b*c*(n*(p + q) + 1)) + d*x**n*(-a*d*(n*(q - 1) + 1) + b*c*(n*(p + 2*q - 1) + 1)), x), x)/(b*(n*(p + q) + 1)))
    rubi.add(rule859)

    pattern860 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda q, p: RationalQ(p, q)), CustomConstraint(lambda q: Greater(q, 0)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda c, q, p, d, x, n, a, b: IntBinomialQ(a, b, c, d, n, p, q, x)))
    rule860 = ReplacementRule(pattern860, lambda c, q, p, d, x, n, a, b : n*Int((a + b*x**n)**(p - 1)*(c + d*x**n)**(q - 1)*Simp(a*c*(p + q) + x**n*(a*d*(p + q) + q*(-a*d + b*c)), x), x)/(n*(p + q) + 1) + x*(a + b*x**n)**p*(c + d*x**n)**q/(n*(p + q) + 1))
    rubi.add(rule860)

    pattern861 = Pattern(Integral(1/(sqrt(a_ + x_**2*WC('b', S(1)))*sqrt(c_ + x_**2*WC('d', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, c: PosQ(d/c)), CustomConstraint(lambda a, b: PosQ(b/a)), CustomConstraint(lambda c, a, b, d: ~(SimplerSqrtQ(b/a, d/c))))
    rule861 = ReplacementRule(pattern861, lambda c, d, x, a, b : EllipticF(ArcTan(x*Rt(d/c, 2)), 1 - b*c/(a*d))*Sqrt(a + b*x**2)/(a*Rt(d/c, 2)*Sqrt(c*(a + b*x**2)/(a*(c + d*x**2)))*Sqrt(c + d*x**2)))
    rubi.add(rule861)

    pattern862 = Pattern(Integral(1/(sqrt(a_ + x_**2*WC('b', S(1)))*sqrt(c_ + x_**2*WC('d', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, c: NegQ(d/c)), CustomConstraint(lambda c: PositiveQ(c)), CustomConstraint(lambda a: PositiveQ(a)), CustomConstraint(lambda c, a, b, d: ~(NegQ(b/a) & SimplerSqrtQ(-b/a, -d/c))))
    rule862 = ReplacementRule(pattern862, lambda c, d, x, a, b : EllipticF(ArcSin(x*Rt(-d/c, 2)), b*c/(a*d))/(Rt(-d/c, 2)*Sqrt(a)*Sqrt(c)))
    rubi.add(rule862)

    pattern863 = Pattern(Integral(1/(sqrt(a_ + x_**2*WC('b', S(1)))*sqrt(c_ + x_**2*WC('d', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, c: NegQ(d/c)), CustomConstraint(lambda c: PositiveQ(c)), CustomConstraint(lambda d, a, b, c: PositiveQ(a - b*c/d)))
    rule863 = ReplacementRule(pattern863, lambda c, d, x, a, b : -EllipticF(ArcCos(x*Rt(-d/c, 2)), b*c/(-a*d + b*c))/(Rt(-d/c, 2)*Sqrt(c)*Sqrt(a - b*c/d)))
    rubi.add(rule863)

    pattern864 = Pattern(Integral(1/(sqrt(a_ + x_**2*WC('b', S(1)))*sqrt(c_ + x_**2*WC('d', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda c: ~(PositiveQ(c))))
    rule864 = ReplacementRule(pattern864, lambda c, d, x, a, b : Int(1/(Sqrt(1 + d*x**2/c)*Sqrt(a + b*x**2)), x)*Sqrt(1 + d*x**2/c)/Sqrt(c + d*x**2))
    rubi.add(rule864)

    pattern865 = Pattern(Integral(sqrt(a_ + x_**2*WC('b', S(1)))/sqrt(c_ + x_**2*WC('d', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, c: PosQ(d/c)), CustomConstraint(lambda a, b: PosQ(b/a)))
    rule865 = ReplacementRule(pattern865, lambda c, d, x, a, b : a*Int(1/(Sqrt(a + b*x**2)*Sqrt(c + d*x**2)), x) + b*Int(x**2/(Sqrt(a + b*x**2)*Sqrt(c + d*x**2)), x))
    rubi.add(rule865)

    pattern866 = Pattern(Integral(sqrt(a_ + x_**2*WC('b', S(1)))/sqrt(c_ + x_**2*WC('d', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, c: PosQ(d/c)), CustomConstraint(lambda a, b: NegQ(b/a)))
    rule866 = ReplacementRule(pattern866, lambda c, d, x, a, b : b*Int(Sqrt(c + d*x**2)/Sqrt(a + b*x**2), x)/d - (-a*d + b*c)*Int(1/(Sqrt(a + b*x**2)*Sqrt(c + d*x**2)), x)/d)
    rubi.add(rule866)

    pattern867 = Pattern(Integral(sqrt(a_ + x_**2*WC('b', S(1)))/sqrt(c_ + x_**2*WC('d', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, c: NegQ(d/c)), CustomConstraint(lambda c: PositiveQ(c)), CustomConstraint(lambda a: PositiveQ(a)))
    rule867 = ReplacementRule(pattern867, lambda c, d, x, a, b : EllipticE(ArcSin(x*Rt(-d/c, 2)), b*c/(a*d))*Sqrt(a)/(Rt(-d/c, 2)*Sqrt(c)))
    rubi.add(rule867)

    pattern868 = Pattern(Integral(sqrt(a_ + x_**2*WC('b', S(1)))/sqrt(c_ + x_**2*WC('d', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, c: NegQ(d/c)), CustomConstraint(lambda c: PositiveQ(c)), CustomConstraint(lambda d, a, b, c: PositiveQ(a - b*c/d)))
    rule868 = ReplacementRule(pattern868, lambda c, d, x, a, b : -EllipticE(ArcCos(x*Rt(-d/c, 2)), b*c/(-a*d + b*c))*Sqrt(a - b*c/d)/(Rt(-d/c, 2)*Sqrt(c)))
    rubi.add(rule868)

    pattern869 = Pattern(Integral(sqrt(a_ + x_**2*WC('b', S(1)))/sqrt(c_ + x_**2*WC('d', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, c: NegQ(d/c)), CustomConstraint(lambda c: PositiveQ(c)), CustomConstraint(lambda a: ~(PositiveQ(a))))
    rule869 = ReplacementRule(pattern869, lambda c, d, x, a, b : Int(Sqrt(1 + b*x**2/a)/Sqrt(c + d*x**2), x)*Sqrt(a + b*x**2)/Sqrt(1 + b*x**2/a))
    rubi.add(rule869)

    pattern870 = Pattern(Integral(sqrt(a_ + x_**2*WC('b', S(1)))/sqrt(c_ + x_**2*WC('d', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, c: NegQ(d/c)), CustomConstraint(lambda c: ~(PositiveQ(c))))
    rule870 = ReplacementRule(pattern870, lambda c, d, x, a, b : Int(Sqrt(a + b*x**2)/Sqrt(1 + d*x**2/c), x)*Sqrt(1 + d*x**2/c)/Sqrt(c + d*x**2))
    rubi.add(rule870)

    pattern871 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda p: PositiveIntegerQ(p)))
    rule871 = ReplacementRule(pattern871, lambda c, q, p, d, x, n, a, b : Int(ExpandIntegrand((a + b*x**n)**p*(c + d*x**n)**q, x), x))
    rubi.add(rule871)

    pattern872 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n: NonzeroQ(n + 1)), CustomConstraint(lambda a: PositiveQ(a)), CustomConstraint(lambda c: PositiveQ(c)))
    rule872 = ReplacementRule(pattern872, lambda c, q, p, d, x, n, a, b : a**p*c**q*x*AppellF1(1/n, -p, -q, 1 + 1/n, -b*x**n/a, -d*x**n/c))
    rubi.add(rule872)

    pattern873 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n: NonzeroQ(n + 1)), CustomConstraint(lambda a: ~(PositiveQ(a))))
    rule873 = ReplacementRule(pattern873, lambda c, q, p, d, x, n, a, b : a**IntPart(p)*(1 + b*x**n/a)**(-FracPart(p))*(a + b*x**n)**FracPart(p)*Int((1 + b*x**n/a)**p*(c + d*x**n)**q, x))
    rubi.add(rule873)

    pattern874 = Pattern(Integral((a_ + x_**WC('n', S(1))*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**WC('mn', S(1))*WC('d', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda mn, n: EqQ(mn, -n)), CustomConstraint(lambda q: IntegerQ(q)), CustomConstraint(lambda n, p: PosQ(n) | ~(IntegerQ(p))))
    rule874 = ReplacementRule(pattern874, lambda mn, c, q, p, d, x, n, a, b : Int(x**(-n*q)*(a + b*x**n)**p*(c*x**n + d)**q, x))
    rubi.add(rule874)

    pattern875 = Pattern(Integral((a_ + x_**WC('n', S(1))*WC('b', S(1)))**p_*(c_ + x_**WC('mn', S(1))*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda mn, n: EqQ(mn, -n)), CustomConstraint(lambda q: ~(IntegerQ(q))), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule875 = ReplacementRule(pattern875, lambda mn, c, q, p, d, x, n, a, b : x**(n*FracPart(q))*(c + d*x**(-n))**FracPart(q)*(c*x**n + d)**(-FracPart(q))*Int(x**(-n*q)*(a + b*x**n)**p*(c*x**n + d)**q, x))
    rubi.add(rule875)

    pattern876 = Pattern(Integral((u_**n_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1))*(u_**n_*WC('d', S(1)) + WC('c', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule876 = ReplacementRule(pattern876, lambda u, c, q, p, d, x, n, a, b : Subst(Int((a + b*x**n)**p*(c + d*x**n)**q, x), x, u)/Coefficient(u, x, 1))
    rubi.add(rule876)

    pattern877 = Pattern(Integral(u_**WC('p', S(1))*v_**WC('q', S(1)), x_), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda x, u, v: PseudoBinomialPairQ(u, v, x)))
    rule877 = ReplacementRule(pattern877, lambda u, v, q, p, x : Int(NormalizePseudoBinomial(u, x)**p*NormalizePseudoBinomial(v, x)**q, x))
    rubi.add(rule877)

    pattern878 = Pattern(Integral(u_**WC('p', S(1))*v_**WC('q', S(1))*x_**WC('m', S(1)), x_), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda p, m: IntegersQ(p, m/p)), CustomConstraint(lambda u, v, m, p, x: PseudoBinomialPairQ(u*x**(m/p), v, x)))
    rule878 = ReplacementRule(pattern878, lambda u, v, m, q, p, x : Int(NormalizePseudoBinomial(v, x)**q*NormalizePseudoBinomial(u*x**(m/p), x)**p, x))
    rubi.add(rule878)

    pattern879 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda m, e: IntegerQ(m) | PositiveQ(e)), CustomConstraint(lambda n, m: IntegerQ(Simplify((m + 1)/n))))
    rule879 = ReplacementRule(pattern879, lambda e, m, c, q, p, d, x, n, b : b**(-Simplify((m + 1)/n) + 1)*e**m*Subst(Int((b*x)**(p + Simplify((m + 1)/n) - 1)*(c + d*x)**q, x), x, x**n)/n)
    rubi.add(rule879)

    pattern880 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(x_**WC('n', S(1))*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda m, e: IntegerQ(m) | PositiveQ(e)), CustomConstraint(lambda n, m: ~(IntegerQ(Simplify((m + 1)/n)))))
    rule880 = ReplacementRule(pattern880, lambda e, m, c, q, p, d, x, n, b : b**IntPart(p)*e**m*x**(-n*FracPart(p))*(b*x**n)**FracPart(p)*Int(x**(m + n*p)*(c + d*x**n)**q, x))
    rubi.add(rule880)

    pattern881 = Pattern(Integral((e_*x_)**m_*(x_**WC('n', S(1))*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda m: ~(IntegerQ(m))))
    rule881 = ReplacementRule(pattern881, lambda m, c, q, p, d, b, x, n, e : e**IntPart(m)*x**(-FracPart(m))*(e*x)**FracPart(m)*Int(x**m*(b*x**n)**p*(c + d*x**n)**q, x))
    rubi.add(rule881)

    pattern882 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n, m: ZeroQ(m - n + 1)))
    rule882 = ReplacementRule(pattern882, lambda m, c, q, p, d, x, n, a, b : Subst(Int((a + b*x)**p*(c + d*x)**q, x), x, x**n)/n)
    rubi.add(rule882)

    pattern883 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda q, p: IntegersQ(p, q)), CustomConstraint(lambda n: NegQ(n)))
    rule883 = ReplacementRule(pattern883, lambda m, c, q, p, d, x, n, a, b : Int(x**(m + n*(p + q))*(a*x**(-n) + b)**p*(c*x**(-n) + d)**q, x))
    rubi.add(rule883)

    pattern884 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n, m: IntegerQ(Simplify((m + 1)/n))))
    rule884 = ReplacementRule(pattern884, lambda m, c, q, p, d, x, n, a, b : Subst(Int(x**(Simplify((m + 1)/n) - 1)*(a + b*x)**p*(c + d*x)**q, x), x, x**n)/n)
    rubi.add(rule884)

    pattern885 = Pattern(Integral((e_*x_)**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n, m: IntegerQ(Simplify((m + 1)/n))))
    rule885 = ReplacementRule(pattern885, lambda e, m, c, q, p, d, x, n, a, b : e**IntPart(m)*x**(-FracPart(m))*(e*x)**FracPart(m)*Int(x**m*(a + b*x**n)**p*(c + d*x**n)**q, x))
    rubi.add(rule885)

    pattern886 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda q, p: PositiveIntegerQ(p, q)))
    rule886 = ReplacementRule(pattern886, lambda e, m, c, q, p, d, x, n, a, b : Int(ExpandIntegrand((e*x)**m*(a + b*x**n)**p*(c + d*x**n)**q, x), x))
    rubi.add(rule886)

    pattern887 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda m, c, p, d, n, a, b: ZeroQ(a*d*(m + 1) - b*c*(m + n*(p + 1) + 1))), CustomConstraint(lambda m: NonzeroQ(m + 1)))
    rule887 = ReplacementRule(pattern887, lambda e, m, c, p, d, x, n, a, b : c*(e*x)**(m + 1)*(a + b*x**n)**(p + 1)/(a*e*(m + 1)))
    rubi.add(rule887)

    pattern888 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(a1_ + x_**WC('non2', S(1))*WC('b1', S(1)))**WC('p', S(1))*(a2_ + x_**WC('non2', S(1))*WC('b2', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1))), x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda non2, n: ZeroQ(-n/2 + non2)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda b1, a1, b2, m, c, a2, d, p, n: ZeroQ(a1*a2*d*(m + 1) - b1*b2*c*(m + n*(p + 1) + 1))), CustomConstraint(lambda m: NonzeroQ(m + 1)))
    rule888 = ReplacementRule(pattern888, lambda b1, a1, b2, m, c, non2, p, d, a2, x, n, e : c*(e*x)**(m + 1)*(a1 + b1*x**(n/2))**(p + 1)*(a2 + b2*x**(n/2))**(p + 1)/(a1*a2*e*(m + 1)))
    rubi.add(rule888)

    pattern889 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n, m, p: ZeroQ(m + n*(p + 1) + 1)), CustomConstraint(lambda n, e: IntegerQ(n) | PositiveQ(e)), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda n, m: (Greater(n, 0) & Less(m, -1)) | (Less(n, 0) & Greater(m + n, -1))))
    rule889 = ReplacementRule(pattern889, lambda e, m, c, p, d, x, n, a, b : d*e**(-n)*Int((e*x)**(m + n)*(a + b*x**n)**p, x) + c*(e*x)**(m + 1)*(a + b*x**n)**(p + 1)/(a*e*(m + 1)))
    rubi.add(rule889)

    pattern890 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n, m, p: ZeroQ(m + n*(p + 1) + 1)), CustomConstraint(lambda m: NonzeroQ(m + 1)))
    rule890 = ReplacementRule(pattern890, lambda e, m, c, p, d, x, n, a, b : d*Int((e*x)**m*(a + b*x**n)**(p + 1), x)/b + (e*x)**(m + 1)*(a + b*x**n)**(p + 1)*(-a*d + b*c)/(a*b*e*(m + 1)))
    rubi.add(rule890)

    pattern891 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n, e: IntegerQ(n) | PositiveQ(e)), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda n, m: (Greater(n, 0) & Less(m, -1)) | (Less(n, 0) & Greater(m + n, -1))), CustomConstraint(lambda p: ~(IntegerQ(p) & Less(p, -1))))
    rule891 = ReplacementRule(pattern891, lambda e, m, c, p, d, x, n, a, b : c*(e*x)**(m + 1)*(a + b*x**n)**(p + 1)/(a*e*(m + 1)) + e**(-n)*(a*d*(m + 1) - b*c*(m + n*(p + 1) + 1))*Int((e*x)**(m + n)*(a + b*x**n)**p, x)/(a*(m + 1)))
    rubi.add(rule891)

    pattern892 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(a1_ + x_**WC('non2', S(1))*WC('b1', S(1)))**WC('p', S(1))*(a2_ + x_**WC('non2', S(1))*WC('b2', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1))), x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda non2, n: ZeroQ(-n/2 + non2)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda n, e: IntegerQ(n) | PositiveQ(e)), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda n, m: (Greater(n, 0) & Less(m, -1)) | (Less(n, 0) & Greater(m + n, -1))), CustomConstraint(lambda p: ~(IntegerQ(p) & Less(p, -1))))
    rule892 = ReplacementRule(pattern892, lambda b1, a1, b2, m, c, non2, p, d, a2, x, n, e : c*(e*x)**(m + 1)*(a1 + b1*x**(n/2))**(p + 1)*(a2 + b2*x**(n/2))**(p + 1)/(a1*a2*e*(m + 1)) + e**(-n)*(a1*a2*d*(m + 1) - b1*b2*c*(m + n*(p + 1) + 1))*Int((e*x)**(m + n)*(a1 + b1*x**(n/2))**p*(a2 + b2*x**(n/2))**p, x)/(a1*a2*(m + 1)))
    rubi.add(rule892)

    pattern893 = Pattern(Integral(x_**m_*(a_ + x_**2*WC('b', S(1)))**p_*(c_ + x_**2*WC('d', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda m: PositiveIntegerQ(m/2)), CustomConstraint(lambda p, m: IntegerQ(p) | Equal(m + 2*p + 1, 0)))
    rule893 = ReplacementRule(pattern893, lambda m, c, p, d, x, a, b : b**(-m/2 - 1)*x*(-a)**(m/2 - 1)*(a + b*x**2)**(p + 1)*(-a*d + b*c)/(2*(p + 1)) + b**(-m/2 - 1)*Int((a + b*x**2)**(p + 1)*ExpandToSum(2*b*x**2*(p + 1)*Together((b**(m/2)*x**(m - 2)*(c + d*x**2) - (-a)**(m/2 - 1)*(-a*d + b*c))/(a + b*x**2)) - (-a)**(m/2 - 1)*(-a*d + b*c), x), x)/(2*(p + 1)))
    rubi.add(rule893)

    pattern894 = Pattern(Integral(x_**m_*(a_ + x_**2*WC('b', S(1)))**p_*(c_ + x_**2*WC('d', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda m: NegativeIntegerQ(m/2)), CustomConstraint(lambda p, m: IntegerQ(p) | Equal(m + 2*p + 1, 0)))
    rule894 = ReplacementRule(pattern894, lambda m, c, p, d, x, a, b : b**(-m/2 - 1)*x*(-a)**(m/2 - 1)*(a + b*x**2)**(p + 1)*(-a*d + b*c)/(2*(p + 1)) + b**(-m/2 - 1)*Int(x**m*(a + b*x**2)**(p + 1)*ExpandToSum(2*b*(p + 1)*Together((b**(m/2)*(c + d*x**2) - x**(-m + 2)*(-a)**(m/2 - 1)*(-a*d + b*c))/(a + b*x**2)) - x**(-m)*(-a)**(m/2 - 1)*(-a*d + b*c), x), x)/(2*(p + 1)))
    rubi.add(rule894)

    pattern895 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda p, m, n: IntegerQ(p) | ~(RationalQ(m)) | (PositiveIntegerQ(n) & NegativeIntegerQ(p + S(1)/2) & LessEqual(-1, m, -n*(p + 1)))))
    rule895 = ReplacementRule(pattern895, lambda e, m, c, p, d, x, n, a, b : -(a*d*(m + 1) - b*c*(m + n*(p + 1) + 1))*Int((e*x)**m*(a + b*x**n)**(p + 1), x)/(a*b*n*(p + 1)) + (e*x)**(m + 1)*(a + b*x**n)**(p + 1)*(a*d - b*c)/(a*b*e*n*(p + 1)))
    rubi.add(rule895)

    pattern896 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(a1_ + x_**WC('non2', S(1))*WC('b1', S(1)))**WC('p', S(1))*(a2_ + x_**WC('non2', S(1))*WC('b2', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1))), x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda non2, n: ZeroQ(-n/2 + non2)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda p, m, n: IntegerQ(p) | ~(RationalQ(m)) | (PositiveIntegerQ(n) & NegativeIntegerQ(p + S(1)/2) & LessEqual(-1, m, -n*(p + 1)))))
    rule896 = ReplacementRule(pattern896, lambda b1, a1, b2, m, c, non2, p, d, a2, x, n, e : -(a1*a2*d*(m + 1) - b1*b2*c*(m + n*(p + 1) + 1))*Int((e*x)**m*(a1 + b1*x**(n/2))**(p + 1)*(a2 + b2*x**(n/2))**(p + 1), x)/(a1*a2*b1*b2*n*(p + 1)) + (e*x)**(m + 1)*(a1 + b1*x**(n/2))**(p + 1)*(a2 + b2*x**(n/2))**(p + 1)*(a1*a2*d - b1*b2*c)/(a1*a2*b1*b2*e*n*(p + 1)))
    rubi.add(rule896)

    pattern897 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n, m, p: NonzeroQ(m + n*(p + 1) + 1)))
    rule897 = ReplacementRule(pattern897, lambda e, m, c, p, d, x, n, a, b : d*(e*x)**(m + 1)*(a + b*x**n)**(p + 1)/(b*e*(m + n*(p + 1) + 1)) - (a*d*(m + 1) - b*c*(m + n*(p + 1) + 1))*Int((e*x)**m*(a + b*x**n)**p, x)/(b*(m + n*(p + 1) + 1)))
    rubi.add(rule897)

    pattern898 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(a1_ + x_**WC('non2', S(1))*WC('b1', S(1)))**WC('p', S(1))*(a2_ + x_**WC('non2', S(1))*WC('b2', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1))), x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda non2, n: ZeroQ(-n/2 + non2)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda n, m, p: NonzeroQ(m + n*(p + 1) + 1)))
    rule898 = ReplacementRule(pattern898, lambda b1, a1, b2, m, c, non2, p, d, a2, x, n, e : d*(e*x)**(m + 1)*(a1 + b1*x**(n/2))**(p + 1)*(a2 + b2*x**(n/2))**(p + 1)/(b1*b2*e*(m + n*(p + 1) + 1)) - (a1*a2*d*(m + 1) - b1*b2*c*(m + n*(p + 1) + 1))*Int((e*x)**m*(a1 + b1*x**(n/2))**p*(a2 + b2*x**(n/2))**p, x)/(b1*b2*(m + n*(p + 1) + 1)))
    rubi.add(rule898)

    pattern899 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_/(c_ + x_**n_*WC('d', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p: PositiveIntegerQ(p)), CustomConstraint(lambda m: IntegerQ(m) | ~(RationalQ(m)) | PositiveIntegerQ(2*m + 2)))
    rule899 = ReplacementRule(pattern899, lambda e, m, c, p, d, x, n, a, b : Int(ExpandIntegrand((e*x)**m*(a + b*x**n)**p/(c + d*x**n), x), x))
    rubi.add(rule899)

    pattern900 = Pattern(Integral((x_*WC('e', S(1)))**m_*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**2, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Less(m, -1)), CustomConstraint(lambda n: Greater(n, 0)))
    rule900 = ReplacementRule(pattern900, lambda e, m, c, p, d, x, n, a, b : c**2*(e*x)**(m + 1)*(a + b*x**n)**(p + 1)/(a*e*(m + 1)) - e**(-n)*Int((e*x)**(m + n)*(a + b*x**n)**p*Simp(-a*d**2*x**n*(m + 1) + b*c**2*n*(p + 1) + c*(m + 1)*(-2*a*d + b*c), x), x)/(a*(m + 1)))
    rubi.add(rule900)

    pattern901 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**2, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)))
    rule901 = ReplacementRule(pattern901, lambda e, m, c, p, d, x, n, a, b : Int((e*x)**m*(a + b*x**n)**(p + 1)*Simp(a*b*d**2*n*x**n*(p + 1) + b**2*c**2*n*(p + 1) + (m + 1)*(-a*d + b*c)**2, x), x)/(a*b**2*n*(p + 1)) - (e*x)**(m + 1)*(a + b*x**n)**(p + 1)*(-a*d + b*c)**2/(a*b**2*e*n*(p + 1)))
    rubi.add(rule901)

    pattern902 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**2, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda n, m, p: NonzeroQ(m + n*(p + 2) + 1)))
    rule902 = ReplacementRule(pattern902, lambda e, m, c, p, d, x, n, a, b : d**2*e**(-n - 1)*(e*x)**(m + n + 1)*(a + b*x**n)**(p + 1)/(b*(m + n*(p + 2) + 1)) + Int((e*x)**m*(a + b*x**n)**p*Simp(b*c**2*(m + n*(p + 2) + 1) + d*x**n*(2*b*c*n*(p + 1) + (-a*d + 2*b*c)*(m + n + 1)), x), x)/(b*(m + n*(p + 2) + 1)))
    rubi.add(rule902)

    pattern903 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: IntegerQ(m)))
    rule903 = ReplacementRule(pattern903, lambda m, c, q, p, d, x, n, a, b : With(List(Set(k, GCD(m + 1, n))), Condition(Subst(Int(x**(-1 + (m + 1)/k)*(a + b*x**(n/k))**p*(c + d*x**(n/k))**q, x), x, x**k)/k, Unequal(k, 1))))
    rubi.add(rule903)

    pattern904 = Pattern(Integral((x_*WC('e', S(1)))**m_*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: FractionQ(m)), CustomConstraint(lambda p: IntegerQ(p)))
    rule904 = ReplacementRule(pattern904, lambda e, m, c, q, p, d, x, n, a, b : With(List(Set(k, Denominator(m))), k*Subst(Int(x**(k*(m + 1) - 1)*(a + b*e**(-n)*x**(k*n))**p*(c + d*e**(-n)*x**(k*n))**q, x), x, (e*x)**(1/k))/e))
    rubi.add(rule904)

    pattern905 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q, p, m: RationalQ(m, p, q)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda q: Greater(q, 0)), CustomConstraint(lambda n, m: Greater(m - n + 1, 0)), CustomConstraint(lambda m, c, q, p, d, b, x, n, a, e: IntBinomialQ(a, b, c, d, e, m, n, p, q, x)))
    rule905 = ReplacementRule(pattern905, lambda e, m, c, q, p, d, x, n, a, b : -e**n*Int((e*x)**(m - n)*(a + b*x**n)**(p + 1)*(c + d*x**n)**(q - 1)*Simp(c*(m - n + 1) + d*x**n*(m + n*(q - 1) + 1), x), x)/(b*n*(p + 1)) + e**(n - 1)*(e*x)**(m - n + 1)*(a + b*x**n)**(p + 1)*(c + d*x**n)**q/(b*n*(p + 1)))
    rubi.add(rule905)

    pattern906 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q, p: RationalQ(p, q)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda q: Greater(q, 1)), CustomConstraint(lambda m, c, q, p, d, b, x, n, a, e: IntBinomialQ(a, b, c, d, e, m, n, p, q, x)))
    rule906 = ReplacementRule(pattern906, lambda e, m, c, q, p, d, x, n, a, b : Int((e*x)**m*(a + b*x**n)**(p + 1)*(c + d*x**n)**(q - 2)*Simp(c*(b*c*n*(p + 1) + (m + 1)*(-a*d + b*c)) + d*x**n*(b*c*n*(p + 1) + (-a*d + b*c)*(m + n*(q - 1) + 1)), x), x)/(a*b*n*(p + 1)) + (e*x)**(m + 1)*(a + b*x**n)**(p + 1)*(c + d*x**n)**(q - 1)*(a*d - b*c)/(a*b*e*n*(p + 1)))
    rubi.add(rule906)

    pattern907 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q, p: RationalQ(p, q)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda q: Less(0, q, 1)), CustomConstraint(lambda m, c, q, p, d, b, x, n, a, e: IntBinomialQ(a, b, c, d, e, m, n, p, q, x)))
    rule907 = ReplacementRule(pattern907, lambda e, m, c, q, p, d, x, n, a, b : Int((e*x)**m*(a + b*x**n)**(p + 1)*(c + d*x**n)**(q - 1)*Simp(c*(m + n*(p + 1) + 1) + d*x**n*(m + n*(p + q + 1) + 1), x), x)/(a*n*(p + 1)) - (e*x)**(m + 1)*(a + b*x**n)**(p + 1)*(c + d*x**n)**q/(a*e*n*(p + 1)))
    rubi.add(rule907)

    pattern908 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda n, m: Greater(m - n + 1, n)), CustomConstraint(lambda m, c, q, p, d, b, x, n, a, e: IntBinomialQ(a, b, c, d, e, m, n, p, q, x)))
    rule908 = ReplacementRule(pattern908, lambda e, m, c, q, p, d, x, n, a, b : -a*e**(2*n - 1)*(e*x)**(m - 2*n + 1)*(a + b*x**n)**(p + 1)*(c + d*x**n)**(q + 1)/(b*n*(p + 1)*(-a*d + b*c)) + e**(2*n)*Int((e*x)**(m - 2*n)*(a + b*x**n)**(p + 1)*(c + d*x**n)**q*Simp(a*c*(m - 2*n + 1) + x**n*(a*d*(m + n*q - n + 1) + b*c*n*(p + 1)), x), x)/(b*n*(p + 1)*(-a*d + b*c)))
    rubi.add(rule908)

    pattern909 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda n, m: Inequality(n, GreaterEqual, m - n + 1, Greater, 0)), CustomConstraint(lambda m, c, q, p, d, b, x, n, a, e: IntBinomialQ(a, b, c, d, e, m, n, p, q, x)))
    rule909 = ReplacementRule(pattern909, lambda e, m, c, q, p, d, x, n, a, b : -e**n*Int((e*x)**(m - n)*(a + b*x**n)**(p + 1)*(c + d*x**n)**q*Simp(c*(m - n + 1) + d*x**n*(m + n*(p + q + 1) + 1), x), x)/(n*(p + 1)*(-a*d + b*c)) + e**(n - 1)*(e*x)**(m - n + 1)*(a + b*x**n)**(p + 1)*(c + d*x**n)**(q + 1)/(n*(p + 1)*(-a*d + b*c)))
    rubi.add(rule909)

    pattern910 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda m, c, q, p, d, b, x, n, a, e: IntBinomialQ(a, b, c, d, e, m, n, p, q, x)))
    rule910 = ReplacementRule(pattern910, lambda e, m, c, q, p, d, x, n, a, b : -b*(e*x)**(m + 1)*(a + b*x**n)**(p + 1)*(c + d*x**n)**(q + 1)/(a*e*n*(p + 1)*(-a*d + b*c)) + Int((e*x)**m*(a + b*x**n)**(p + 1)*(c + d*x**n)**q*Simp(b*c*(m + 1) + b*d*x**n*(m + n*(p + q + 2) + 1) + n*(p + 1)*(-a*d + b*c), x), x)/(a*n*(p + 1)*(-a*d + b*c)))
    rubi.add(rule910)

    pattern911 = Pattern(Integral((x_*WC('e', S(1)))**m_*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q, p, m: RationalQ(m, p, q)), CustomConstraint(lambda q: Greater(q, 0)), CustomConstraint(lambda m: Less(m, -1)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda m, c, q, p, d, b, x, n, a, e: IntBinomialQ(a, b, c, d, e, m, n, p, q, x)))
    rule911 = ReplacementRule(pattern911, lambda e, m, c, q, p, d, x, n, a, b : -e**(-n)*n*Int((e*x)**(m + n)*(a + b*x**n)**(p - 1)*(c + d*x**n)**(q - 1)*Simp(a*d*q + b*c*p + b*d*x**n*(p + q), x), x)/(m + 1) + (e*x)**(m + 1)*(a + b*x**n)**p*(c + d*x**n)**q/(e*(m + 1)))
    rubi.add(rule911)

    pattern912 = Pattern(Integral((x_*WC('e', S(1)))**m_*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q, m: RationalQ(m, q)), CustomConstraint(lambda q: Greater(q, 1)), CustomConstraint(lambda m: Less(m, -1)), CustomConstraint(lambda m, c, q, p, d, b, x, n, a, e: IntBinomialQ(a, b, c, d, e, m, n, p, q, x)))
    rule912 = ReplacementRule(pattern912, lambda e, m, c, q, p, d, x, n, a, b : c*(e*x)**(m + 1)*(a + b*x**n)**(p + 1)*(c + d*x**n)**(q - 1)/(a*e*(m + 1)) - e**(-n)*Int((e*x)**(m + n)*(a + b*x**n)**p*(c + d*x**n)**(q - 2)*Simp(c*n*(a*d*(q - 1) + b*c*(p + 1)) + c*(m + 1)*(-a*d + b*c) + d*x**n*(b*c*n*(p + q) + (m + 1)*(-a*d + b*c)), x), x)/(a*(m + 1)))
    rubi.add(rule912)

    pattern913 = Pattern(Integral((x_*WC('e', S(1)))**m_*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q, m: RationalQ(m, q)), CustomConstraint(lambda q: Less(0, q, 1)), CustomConstraint(lambda m: Less(m, -1)), CustomConstraint(lambda m, c, q, p, d, b, x, n, a, e: IntBinomialQ(a, b, c, d, e, m, n, p, q, x)))
    rule913 = ReplacementRule(pattern913, lambda e, m, c, q, p, d, x, n, a, b : -e**(-n)*Int((e*x)**(m + n)*(a + b*x**n)**p*(c + d*x**n)**(q - 1)*Simp(b*c*(m + 1) + d*x**n*(b*n*(p + q + 1) + b*(m + 1)) + n*(a*d*q + b*c*(p + 1)), x), x)/(a*(m + 1)) + (e*x)**(m + 1)*(a + b*x**n)**(p + 1)*(c + d*x**n)**q/(a*e*(m + 1)))
    rubi.add(rule913)

    pattern914 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q, p: RationalQ(p, q)), CustomConstraint(lambda q: Greater(q, 0)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda m, c, q, p, d, b, x, n, a, e: IntBinomialQ(a, b, c, d, e, m, n, p, q, x)))
    rule914 = ReplacementRule(pattern914, lambda e, m, c, q, p, d, x, n, a, b : n*Int((e*x)**m*(a + b*x**n)**(p - 1)*(c + d*x**n)**(q - 1)*Simp(a*c*(p + q) + x**n*(a*d*(p + q) + q*(-a*d + b*c)), x), x)/(m + n*(p + q) + 1) + (e*x)**(m + 1)*(a + b*x**n)**p*(c + d*x**n)**q/(e*(m + n*(p + q) + 1)))
    rubi.add(rule914)

    pattern915 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: RationalQ(q)), CustomConstraint(lambda q: Greater(q, 1)), CustomConstraint(lambda m, c, q, p, d, b, x, n, a, e: IntBinomialQ(a, b, c, d, e, m, n, p, q, x)))
    rule915 = ReplacementRule(pattern915, lambda e, m, c, q, p, d, x, n, a, b : d*(e*x)**(m + 1)*(a + b*x**n)**(p + 1)*(c + d*x**n)**(q - 1)/(b*e*(m + n*(p + q) + 1)) + Int((e*x)**m*(a + b*x**n)**p*(c + d*x**n)**(q - 2)*Simp(c*(b*c*n*(p + q) + (m + 1)*(-a*d + b*c)) + x**n*(b*c*d*n*(p + q) + d*n*(q - 1)*(-a*d + b*c) + d*(m + 1)*(-a*d + b*c)), x), x)/(b*(m + n*(p + q) + 1)))
    rubi.add(rule915)

    pattern916 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q, m: RationalQ(m, q)), CustomConstraint(lambda q: Greater(q, 0)), CustomConstraint(lambda n, m: Greater(m - n + 1, 0)), CustomConstraint(lambda m, c, q, p, d, b, x, n, a, e: IntBinomialQ(a, b, c, d, e, m, n, p, q, x)))
    rule916 = ReplacementRule(pattern916, lambda e, m, c, q, p, d, x, n, a, b : -e**n*Int((e*x)**(m - n)*(a + b*x**n)**p*(c + d*x**n)**(q - 1)*Simp(a*c*(m - n + 1) + x**n*(a*d*(m - n + 1) - n*q*(-a*d + b*c)), x), x)/(b*(m + n*(p + q) + 1)) + e**(n - 1)*(e*x)**(m - n + 1)*(a + b*x**n)**(p + 1)*(c + d*x**n)**q/(b*(m + n*(p + q) + 1)))
    rubi.add(rule916)

    pattern917 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda n, m: Greater(m - n + 1, n)), CustomConstraint(lambda m, c, q, p, d, b, x, n, a, e: IntBinomialQ(a, b, c, d, e, m, n, p, q, x)))
    rule917 = ReplacementRule(pattern917, lambda e, m, c, q, p, d, x, n, a, b : -e**(2*n)*Int((e*x)**(m - 2*n)*(a + b*x**n)**p*(c + d*x**n)**q*Simp(a*c*(m - 2*n + 1) + x**n*(a*d*(m + n*(q - 1) + 1) + b*c*(m + n*(p - 1) + 1)), x), x)/(b*d*(m + n*(p + q) + 1)) + e**(2*n - 1)*(e*x)**(m - 2*n + 1)*(a + b*x**n)**(p + 1)*(c + d*x**n)**(q + 1)/(b*d*(m + n*(p + q) + 1)))
    rubi.add(rule917)

    pattern918 = Pattern(Integral((x_*WC('e', S(1)))**m_*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, -1)), CustomConstraint(lambda m, c, q, p, d, b, x, n, a, e: IntBinomialQ(a, b, c, d, e, m, n, p, q, x)))
    rule918 = ReplacementRule(pattern918, lambda e, m, c, q, p, d, x, n, a, b : -e**(-n)*Int((e*x)**(m + n)*(a + b*x**n)**p*(c + d*x**n)**q*Simp(b*d*x**n*(m + n*(p + q + 2) + 1) + n*(a*d*q + b*c*p) + (a*d + b*c)*(m + n + 1), x), x)/(a*c*(m + 1)) + (e*x)**(m + 1)*(a + b*x**n)**(p + 1)*(c + d*x**n)**(q + 1)/(a*c*e*(m + 1)))
    rubi.add(rule918)

    pattern919 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))/((a_ + x_**n_*WC('b', S(1)))*(c_ + x_**n_*WC('d', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda n, m: LessEqual(n, m, 2*n - 1)))
    rule919 = ReplacementRule(pattern919, lambda e, m, c, d, x, n, a, b : -a*e**n*Int((e*x)**(m - n)/(a + b*x**n), x)/(-a*d + b*c) + c*e**n*Int((e*x)**(m - n)/(c + d*x**n), x)/(-a*d + b*c))
    rubi.add(rule919)

    pattern920 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))/((a_ + x_**n_*WC('b', S(1)))*(c_ + x_**n_*WC('d', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n: PositiveIntegerQ(n)))
    rule920 = ReplacementRule(pattern920, lambda e, m, c, d, x, n, a, b : b*Int((e*x)**m/(a + b*x**n), x)/(-a*d + b*c) - d*Int((e*x)**m/(c + d*x**n), x)/(-a*d + b*c))
    rubi.add(rule920)

    pattern921 = Pattern(Integral(x_**m_/((a_ + x_**n_*WC('b', S(1)))*sqrt(c_ + x_**n_*WC('d', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n, m: IntegersQ(m/2, n/2)), CustomConstraint(lambda n, m: Less(0, m - n + 1, n)), CustomConstraint(lambda n: LessEqual(n, 4)))
    rule921 = ReplacementRule(pattern921, lambda m, c, d, x, n, a, b : -a*Int(x**(m - n)/((a + b*x**n)*Sqrt(c + d*x**n)), x)/b + Int(x**(m - n)/Sqrt(c + d*x**n), x)/b)
    rubi.add(rule921)

    pattern922 = Pattern(Integral(x_**2/((a_ + x_**4*WC('b', S(1)))*sqrt(c_ + x_**4*WC('d', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)))
    rule922 = ReplacementRule(pattern922, lambda c, d, x, a, b : With(List(Set(r, Numerator(Rt(-a/b, 2))), Set(s, Denominator(Rt(-a/b, 2)))), -s*Int(1/((r - s*x**2)*Sqrt(c + d*x**4)), x)/(2*b) + s*Int(1/((r + s*x**2)*Sqrt(c + d*x**4)), x)/(2*b)))
    rubi.add(rule922)

    pattern923 = Pattern(Integral(x_/((a_ + x_**3*WC('b', S(1)))*sqrt(c_ + x_**3*WC('d', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda d, a, b, c: ZeroQ(-a*d + 4*b*c)))
    rule923 = ReplacementRule(pattern923, lambda c, d, x, a, b : With(List(Set(q, Rt(d/c, 3))), -2**(1/3)*q*ArcTan(1/Sqrt(3) + 2**(2/3)*(Sqrt(c) - Sqrt(c + d*x**3))/(q*x*Sqrt(3)*Sqrt(c)))/(6*b*Sqrt(3)*Sqrt(c)) + 2**(1/3)*q*ArcTan(1/Sqrt(3) + 2**(2/3)*(Sqrt(c) + Sqrt(c + d*x**3))/(q*x*Sqrt(3)*Sqrt(c)))/(6*b*Sqrt(3)*Sqrt(c)) + 2**(1/3)*q*ArcTanh(Sqrt(c + d*x**3)/Sqrt(c))/(18*b*Sqrt(c)) + 2**(1/3)*q*Log(-2**(1/3)*q*x + 1 - Sqrt(c + d*x**3)/Sqrt(c))/(12*b*Sqrt(c)) - 2**(1/3)*q*Log(-2**(1/3)*q*x + 1 + Sqrt(c + d*x**3)/Sqrt(c))/(12*b*Sqrt(c))))
    rubi.add(rule923)

    pattern924 = Pattern(Integral(x_**m_/((a_ + x_**3*WC('b', S(1)))*sqrt(c_ + x_**3*WC('d', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda d, a, b, c: ZeroQ(-a*d + 4*b*c)), CustomConstraint(lambda m: PositiveIntegerQ(m/3 + S(-1)/3)))
    rule924 = ReplacementRule(pattern924, lambda m, c, d, x, a, b : -a*Int(x**(m - 3)/((a + b*x**3)*Sqrt(c + d*x**3)), x)/b + Int(x**(m - 3)/Sqrt(c + d*x**3), x)/b)
    rubi.add(rule924)

    pattern925 = Pattern(Integral(x_**m_/((a_ + x_**3*WC('b', S(1)))*sqrt(c_ + x_**3*WC('d', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda d, a, b, c: ZeroQ(-a*d + 4*b*c)), CustomConstraint(lambda m: NegativeIntegerQ(m/3 + S(-1)/3)))
    rule925 = ReplacementRule(pattern925, lambda m, c, d, x, a, b : -b*Int(x**(m + 3)/((a + b*x**3)*Sqrt(c + d*x**3)), x)/a + Int(x**m/Sqrt(c + d*x**3), x)/a)
    rubi.add(rule925)

    pattern926 = Pattern(Integral(x_**2*sqrt(c_ + x_**4*WC('d', S(1)))/(a_ + x_**4*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)))
    rule926 = ReplacementRule(pattern926, lambda c, d, x, a, b : d*Int(x**2/Sqrt(c + d*x**4), x)/b + (-a*d + b*c)*Int(x**2/((a + b*x**4)*Sqrt(c + d*x**4)), x)/b)
    rubi.add(rule926)

    pattern927 = Pattern(Integral(x_**WC('m', S(1))*sqrt(c_ + x_**3*WC('d', S(1)))/(a_ + x_**3*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda d, a, b, c: ZeroQ(-a*d + 4*b*c)), CustomConstraint(lambda m: IntegerQ(m/3 + S(-1)/3)))
    rule927 = ReplacementRule(pattern927, lambda m, c, d, x, a, b : d*Int(x**m/Sqrt(c + d*x**3), x)/b + (-a*d + b*c)*Int(x**m/((a + b*x**3)*Sqrt(c + d*x**3)), x)/b)
    rubi.add(rule927)

    pattern928 = Pattern(Integral(x_**2/(sqrt(a_ + x_**2*WC('b', S(1)))*sqrt(c_ + x_**2*WC('d', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda a, b: PosQ(b/a)), CustomConstraint(lambda d, c: PosQ(d/c)), CustomConstraint(lambda c, a, b, d: ~(SimplerSqrtQ(b/a, d/c))))
    rule928 = ReplacementRule(pattern928, lambda c, d, x, a, b : -c*Int(Sqrt(a + b*x**2)/(c + d*x**2)**(3/2), x)/b + x*Sqrt(a + b*x**2)/(b*Sqrt(c + d*x**2)))
    rubi.add(rule928)

    pattern929 = Pattern(Integral(x_**n_/(sqrt(a_ + x_**n_*WC('b', S(1)))*sqrt(c_ + x_**n_*WC('d', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n: EqQ(n, 2) | EqQ(n, 4)), CustomConstraint(lambda c, d, n, a, b: ~(EqQ(n, 2) & SimplerSqrtQ(-b/a, -d/c))))
    rule929 = ReplacementRule(pattern929, lambda c, d, x, n, a, b : -a*Int(1/(Sqrt(a + b*x**n)*Sqrt(c + d*x**n)), x)/b + Int(Sqrt(a + b*x**n)/Sqrt(c + d*x**n), x)/b)
    rubi.add(rule929)

    pattern930 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda q, p, m, n: IntegersQ(p + (m + 1)/n, q)), CustomConstraint(lambda p: Less(-1, p, 0)))
    rule930 = ReplacementRule(pattern930, lambda m, c, q, p, d, x, n, a, b : With(List(Set(k, Denominator(p))), a**(p + (m + 1)/n)*k*Subst(Int(x**(k*(m + 1)/n - 1)*(c - x**k*(-a*d + b*c))**q*(-b*x**k + 1)**(-p - q - 1 - (m + 1)/n), x), x, x**(n/k)*(a + b*x**n)**(-1/k))/n))
    rubi.add(rule930)

    pattern931 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda m: IntegerQ(m)))
    rule931 = ReplacementRule(pattern931, lambda m, c, q, p, d, x, n, a, b : -Subst(Int(x**(-m - 2)*(a + b*x**(-n))**p*(c + d*x**(-n))**q, x), x, 1/x))
    rubi.add(rule931)

    pattern932 = Pattern(Integral((x_*WC('e', S(1)))**m_*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda m: FractionQ(m)))
    rule932 = ReplacementRule(pattern932, lambda e, m, c, q, p, d, x, n, a, b : With(List(Set(g, Denominator(m))), -g*Subst(Int(x**(-g*(m + 1) - 1)*(a + b*e**(-n)*x**(-g*n))**p*(c + d*e**(-n)*x**(-g*n))**q, x), x, (e*x)**(-1/g))/e))
    rubi.add(rule932)

    pattern933 = Pattern(Integral((x_*WC('e', S(1)))**m_*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda m: ~(RationalQ(m))))
    rule933 = ReplacementRule(pattern933, lambda e, m, c, q, p, d, x, n, a, b : -(e*x)**m*(1/x)**m*Subst(Int(x**(-m - 2)*(a + b*x**(-n))**p*(c + d*x**(-n))**q, x), x, 1/x))
    rubi.add(rule933)

    pattern934 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n: FractionQ(n)))
    rule934 = ReplacementRule(pattern934, lambda m, c, q, p, d, x, n, a, b : With(List(Set(g, Denominator(n))), g*Subst(Int(x**(g*(m + 1) - 1)*(a + b*x**(g*n))**p*(c + d*x**(g*n))**q, x), x, x**(1/g))))
    rubi.add(rule934)

    pattern935 = Pattern(Integral((e_*x_)**m_*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n: FractionQ(n)))
    rule935 = ReplacementRule(pattern935, lambda m, c, q, p, d, b, x, n, a, e : e**IntPart(m)*x**(-FracPart(m))*(e*x)**FracPart(m)*Int(x**m*(a + b*x**n)**p*(c + d*x**n)**q, x))
    rubi.add(rule935)

    pattern936 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n, m: IntegerQ(Simplify(n/(m + 1)))), CustomConstraint(lambda n: ~(IntegerQ(n))))
    rule936 = ReplacementRule(pattern936, lambda m, c, q, p, d, x, n, a, b : Subst(Int((a + b*x**Simplify(n/(m + 1)))**p*(c + d*x**Simplify(n/(m + 1)))**q, x), x, x**(m + 1))/(m + 1))
    rubi.add(rule936)

    pattern937 = Pattern(Integral((e_*x_)**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n, m: IntegerQ(Simplify(n/(m + 1)))), CustomConstraint(lambda n: ~(IntegerQ(n))))
    rule937 = ReplacementRule(pattern937, lambda m, c, q, p, d, b, x, n, a, e : e**IntPart(m)*x**(-FracPart(m))*(e*x)**FracPart(m)*Int(x**m*(a + b*x**n)**p*(c + d*x**n)**q, x))
    rubi.add(rule937)

    pattern938 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda q, p: RationalQ(p, q)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda q: Greater(q, 1)), CustomConstraint(lambda m, c, q, p, d, b, x, n, a, e: IntBinomialQ(a, b, c, d, e, m, n, p, q, x)))
    rule938 = ReplacementRule(pattern938, lambda e, m, c, q, p, d, x, n, a, b : Int((e*x)**m*(a + b*x**n)**(p + 1)*(c + d*x**n)**(q - 2)*Simp(c*(b*c*n*(p + 1) + (m + 1)*(-a*d + b*c)) + d*x**n*(b*c*n*(p + 1) + (-a*d + b*c)*(m + n*(q - 1) + 1)), x), x)/(a*b*n*(p + 1)) + (e*x)**(m + 1)*(a + b*x**n)**(p + 1)*(c + d*x**n)**(q - 1)*(a*d - b*c)/(a*b*e*n*(p + 1)))
    rubi.add(rule938)

    pattern939 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda q, p: RationalQ(p, q)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda q: Less(0, q, 1)), CustomConstraint(lambda m, c, q, p, d, b, x, n, a, e: IntBinomialQ(a, b, c, d, e, m, n, p, q, x)))
    rule939 = ReplacementRule(pattern939, lambda e, m, c, q, p, d, x, n, a, b : Int((e*x)**m*(a + b*x**n)**(p + 1)*(c + d*x**n)**(q - 1)*Simp(c*(m + n*(p + 1) + 1) + d*x**n*(m + n*(p + q + 1) + 1), x), x)/(a*n*(p + 1)) - (e*x)**(m + 1)*(a + b*x**n)**(p + 1)*(c + d*x**n)**q/(a*e*n*(p + 1)))
    rubi.add(rule939)

    pattern940 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda m, c, q, p, d, b, x, n, a, e: IntBinomialQ(a, b, c, d, e, m, n, p, q, x)))
    rule940 = ReplacementRule(pattern940, lambda e, m, c, q, p, d, x, n, a, b : -b*(e*x)**(m + 1)*(a + b*x**n)**(p + 1)*(c + d*x**n)**(q + 1)/(a*e*n*(p + 1)*(-a*d + b*c)) + Int((e*x)**m*(a + b*x**n)**(p + 1)*(c + d*x**n)**q*Simp(b*c*(m + 1) + b*d*x**n*(m + n*(p + q + 2) + 1) + n*(p + 1)*(-a*d + b*c), x), x)/(a*n*(p + 1)*(-a*d + b*c)))
    rubi.add(rule940)

    pattern941 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda q, p: RationalQ(p, q)), CustomConstraint(lambda q: Greater(q, 0)), CustomConstraint(lambda p: Greater(p, 0)), CustomConstraint(lambda m, c, q, p, d, b, x, n, a, e: IntBinomialQ(a, b, c, d, e, m, n, p, q, x)))
    rule941 = ReplacementRule(pattern941, lambda e, m, c, q, p, d, x, n, a, b : n*Int((e*x)**m*(a + b*x**n)**(p - 1)*(c + d*x**n)**(q - 1)*Simp(a*c*(p + q) + x**n*(a*d*(p + q) + q*(-a*d + b*c)), x), x)/(m + n*(p + q) + 1) + (e*x)**(m + 1)*(a + b*x**n)**p*(c + d*x**n)**q/(e*(m + n*(p + q) + 1)))
    rubi.add(rule941)

    pattern942 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda q: RationalQ(q)), CustomConstraint(lambda q: Greater(q, 1)), CustomConstraint(lambda m, c, q, p, d, b, x, n, a, e: IntBinomialQ(a, b, c, d, e, m, n, p, q, x)))
    rule942 = ReplacementRule(pattern942, lambda e, m, c, q, p, d, x, n, a, b : d*(e*x)**(m + 1)*(a + b*x**n)**(p + 1)*(c + d*x**n)**(q - 1)/(b*e*(m + n*(p + q) + 1)) + Int((e*x)**m*(a + b*x**n)**p*(c + d*x**n)**(q - 2)*Simp(c*(b*c*n*(p + q) + (m + 1)*(-a*d + b*c)) + x**n*(b*c*d*n*(p + q) + d*n*(q - 1)*(-a*d + b*c) + d*(m + 1)*(-a*d + b*c)), x), x)/(b*(m + n*(p + q) + 1)))
    rubi.add(rule942)

    pattern943 = Pattern(Integral(x_**m_/((a_ + x_**n_*WC('b', S(1)))*(c_ + x_**n_*WC('d', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda n, m: ZeroQ(m - n) | ZeroQ(m - 2*n + 1)))
    rule943 = ReplacementRule(pattern943, lambda m, c, d, x, n, a, b : -a*Int(x**(m - n)/(a + b*x**n), x)/(-a*d + b*c) + c*Int(x**(m - n)/(c + d*x**n), x)/(-a*d + b*c))
    rubi.add(rule943)

    pattern944 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))/((a_ + x_**n_*WC('b', S(1)))*(c_ + x_**n_*WC('d', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)))
    rule944 = ReplacementRule(pattern944, lambda e, m, c, d, x, n, a, b : b*Int((e*x)**m/(a + b*x**n), x)/(-a*d + b*c) - d*Int((e*x)**m/(c + d*x**n), x)/(-a*d + b*c))
    rubi.add(rule944)

    pattern945 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda q, p, m: IntegersQ(m, p, q)), CustomConstraint(lambda p: GreaterEqual(p, -2)), CustomConstraint(lambda q, m: GreaterEqual(q, -2) | (Equal(q, -3) & IntegerQ(m/2 + S(-1)/2))))
    rule945 = ReplacementRule(pattern945, lambda e, m, c, q, p, d, x, n, a, b : Int(ExpandIntegrand((e*x)**m*(a + b*x**n)**p*(c + d*x**n)**q, x), x))
    rubi.add(rule945)

    pattern946 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**WC('n', S(1))*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**WC('mn', S(1))*WC('d', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda mn, n: EqQ(mn, -n)), CustomConstraint(lambda q: IntegerQ(q)), CustomConstraint(lambda n, p: PosQ(n) | ~(IntegerQ(p))))
    rule946 = ReplacementRule(pattern946, lambda mn, m, c, q, p, d, x, n, a, b : Int(x**(m - n*q)*(a + b*x**n)**p*(c*x**n + d)**q, x))
    rubi.add(rule946)

    pattern947 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**WC('n', S(1))*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**WC('mn', S(1))*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda mn, n: EqQ(mn, -n)), CustomConstraint(lambda q: ~(IntegerQ(q))), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule947 = ReplacementRule(pattern947, lambda mn, m, c, q, p, d, x, n, a, b : x**(n*FracPart(q))*(c + d*x**(-n))**FracPart(q)*(c*x**n + d)**(-FracPart(q))*Int(x**(m - n*q)*(a + b*x**n)**p*(c*x**n + d)**q, x))
    rubi.add(rule947)

    pattern948 = Pattern(Integral((e_*x_)**m_*(c_ + x_**WC('mn', S(1))*WC('d', S(1)))**WC('q', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda mn, n: EqQ(mn, -n)))
    rule948 = ReplacementRule(pattern948, lambda mn, e, m, c, q, p, d, x, n, a, b : e**IntPart(m)*x**(-FracPart(m))*(e*x)**FracPart(m)*Int(x**m*(a + b*x**n)**p*(c + d*x**(-n))**q, x))
    rubi.add(rule948)

    pattern949 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda m: NonzeroQ(m + 1)), CustomConstraint(lambda n, m: NonzeroQ(m - n + 1)), CustomConstraint(lambda a: PositiveQ(a)), CustomConstraint(lambda c: PositiveQ(c)))
    rule949 = ReplacementRule(pattern949, lambda e, m, c, q, p, d, x, n, a, b : a**p*c**q*(e*x)**(m + 1)*AppellF1((m + 1)/n, -p, -q, 1 + (m + 1)/n, -b*x**n/a, -d*x**n/c)/(e*(m + 1)))
    rubi.add(rule949)

    pattern950 = Pattern(Integral((x_*WC('e', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, a, b, c: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda m: NonzeroQ(m + 1)), CustomConstraint(lambda n, m: NonzeroQ(m - n + 1)), CustomConstraint(lambda a: ~(PositiveQ(a))))
    rule950 = ReplacementRule(pattern950, lambda e, m, c, q, p, d, x, n, a, b : a**IntPart(p)*(1 + b*x**n/a)**(-FracPart(p))*(a + b*x**n)**FracPart(p)*Int((e*x)**m*(1 + b*x**n/a)**p*(c + d*x**n)**q, x))
    rubi.add(rule950)

    pattern951 = Pattern(Integral(x_**WC('m', S(1))*(v_**n_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1))*(v_**n_*WC('d', S(1)) + WC('c', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda x, v: LinearQ(v, x)), CustomConstraint(lambda m: IntegerQ(m)), CustomConstraint(lambda x, v: NonzeroQ(v - x)))
    rule951 = ReplacementRule(pattern951, lambda v, m, c, q, p, d, x, n, a, b : Coefficient(v, x, 1)**(-m - 1)*Subst(Int(SimplifyIntegrand((a + b*x**n)**p*(c + d*x**n)**q*(x - Coefficient(v, x, 0))**m, x), x), x, v))
    rubi.add(rule951)

    pattern952 = Pattern(Integral(u_**WC('m', S(1))*(v_**n_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1))*(v_**n_*WC('d', S(1)) + WC('c', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda x, u, v: LinearPairQ(u, v, x)))
    rule952 = ReplacementRule(pattern952, lambda u, v, m, c, q, p, d, x, n, a, b : u**m*v**(-m)*Subst(Int(x**m*(a + b*x**n)**p*(c + d*x**n)**q, x), x, v)/Coefficient(v, x, 1))
    rubi.add(rule952)

    pattern953 = Pattern(Integral((a1_ + x_**WC('non2', S(1))*WC('b1', S(1)))**WC('p', S(1))*(a2_ + x_**WC('non2', S(1))*WC('b2', S(1)))**WC('p', S(1))*(c_ + x_**WC('n', S(1))*WC('d', S(1)))**WC('q', S(1))*WC('u', S(1)), x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda non2, n: ZeroQ(-n/2 + non2)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda p, a2, a1: IntegerQ(p) | (PositiveQ(a1) & PositiveQ(a2))))
    rule953 = ReplacementRule(pattern953, lambda b1, u, a1, b2, c, non2, q, p, d, a2, x, n : Int(u*(c + d*x**n)**q*(a1*a2 + b1*b2*x**n)**p, x))
    rubi.add(rule953)

    pattern954 = Pattern(Integral((a1_ + x_**WC('non2', S(1))*WC('b1', S(1)))**WC('p', S(1))*(a2_ + x_**WC('non2', S(1))*WC('b2', S(1)))**WC('p', S(1))*(c_ + x_**WC('n', S(1))*WC('d', S(1)) + x_**WC('n2', S(1))*WC('e', S(1)))**WC('q', S(1))*WC('u', S(1)), x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda non2, n: ZeroQ(-n/2 + non2)), CustomConstraint(lambda n, n2: ZeroQ(-2*n + n2)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)), CustomConstraint(lambda p, a2, a1: IntegerQ(p) | (PositiveQ(a1) & PositiveQ(a2))))
    rule954 = ReplacementRule(pattern954, lambda b1, u, a1, b2, e, c, non2, q, p, d, a2, x, n, n2 : Int(u*(a1*a2 + b1*b2*x**n)**p*(c + d*x**n + e*x**(2*n))**q, x))
    rubi.add(rule954)

    pattern955 = Pattern(Integral((a1_ + x_**WC('non2', S(1))*WC('b1', S(1)))**p_*(a2_ + x_**WC('non2', S(1))*WC('b2', S(1)))**p_*(c_ + x_**WC('n', S(1))*WC('d', S(1)))**WC('q', S(1))*WC('u', S(1)), x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda non2, n: ZeroQ(-n/2 + non2)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)))
    rule955 = ReplacementRule(pattern955, lambda b1, u, a1, b2, c, non2, q, p, d, a2, x, n : (a1 + b1*x**(n/2))**FracPart(p)*(a2 + b2*x**(n/2))**FracPart(p)*(a1*a2 + b1*b2*x**n)**(-FracPart(p))*Int(u*(c + d*x**n)**q*(a1*a2 + b1*b2*x**n)**p, x))
    rubi.add(rule955)

    pattern956 = Pattern(Integral((a1_ + x_**WC('non2', S(1))*WC('b1', S(1)))**WC('p', S(1))*(a2_ + x_**WC('non2', S(1))*WC('b2', S(1)))**WC('p', S(1))*(c_ + x_**WC('n', S(1))*WC('d', S(1)) + x_**WC('n2', S(1))*WC('e', S(1)))**WC('q', S(1))*WC('u', S(1)), x_), CustomConstraint(lambda a1, x: FreeQ(a1, x)), CustomConstraint(lambda b1, x: FreeQ(b1, x)), CustomConstraint(lambda a2, x: FreeQ(a2, x)), CustomConstraint(lambda b2, x: FreeQ(b2, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda non2, n: ZeroQ(-n/2 + non2)), CustomConstraint(lambda n, n2: ZeroQ(-2*n + n2)), CustomConstraint(lambda b1, b2, a2, a1: ZeroQ(a1*b2 + a2*b1)))
    rule956 = ReplacementRule(pattern956, lambda b1, u, a1, b2, e, c, non2, q, p, d, a2, x, n, n2 : (a1 + b1*x**(n/2))**FracPart(p)*(a2 + b2*x**(n/2))**FracPart(p)*(a1*a2 + b1*b2*x**n)**(-FracPart(p))*Int(u*(a1*a2 + b1*b2*x**n)**p*(c + d*x**n + e*x**(2*n))**q, x))
    rubi.add(rule956)

    pattern957 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1))*(e_ + x_**n_*WC('f', S(1)))**WC('r', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, r, p: PositiveIntegerQ(p, q, r)))
    rule957 = ReplacementRule(pattern957, lambda r, e, c, q, p, d, f, x, n, a, b : Int(ExpandIntegrand((a + b*x**n)**p*(c + d*x**n)**q*(e + f*x**n)**r, x), x))
    rubi.add(rule957)

    pattern958 = Pattern(Integral((e_ + x_**n_*WC('f', S(1)))/((a_ + x_**n_*WC('b', S(1)))*(c_ + x_**n_*WC('d', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)))
    rule958 = ReplacementRule(pattern958, lambda e, c, d, f, x, n, a, b : (-a*f + b*e)*Int(1/(a + b*x**n), x)/(-a*d + b*c) - (-c*f + d*e)*Int(1/(c + d*x**n), x)/(-a*d + b*c))
    rubi.add(rule958)

    pattern959 = Pattern(Integral((e_ + x_**n_*WC('f', S(1)))/((a_ + x_**n_*WC('b', S(1)))*sqrt(c_ + x_**n_*WC('d', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)))
    rule959 = ReplacementRule(pattern959, lambda e, c, d, f, x, n, a, b : f*Int(1/Sqrt(c + d*x**n), x)/b + (-a*f + b*e)*Int(1/((a + b*x**n)*Sqrt(c + d*x**n)), x)/b)
    rubi.add(rule959)

    pattern960 = Pattern(Integral((e_ + x_**n_*WC('f', S(1)))/(sqrt(a_ + x_**n_*WC('b', S(1)))*sqrt(c_ + x_**n_*WC('d', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, d, n, a, b: ~(ZeroQ(n - 2) & ((PosQ(b/a) & PosQ(d/c)) | (NegQ(b/a) & (PosQ(d/c) | (PositiveQ(a) & (~(PositiveQ(c)) | SimplerSqrtQ(-b/a, -d/c)))))))))
    rule960 = ReplacementRule(pattern960, lambda e, c, d, f, x, n, a, b : f*Int(Sqrt(a + b*x**n)/Sqrt(c + d*x**n), x)/b + (-a*f + b*e)*Int(1/(Sqrt(a + b*x**n)*Sqrt(c + d*x**n)), x)/b)
    rubi.add(rule960)

    pattern961 = Pattern(Integral((e_ + x_**2*WC('f', S(1)))/(sqrt(a_ + x_**2*WC('b', S(1)))*(c_ + x_**2*WC('d', S(1)))**(S(3)/2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda a, b: PosQ(b/a)), CustomConstraint(lambda d, c: PosQ(d/c)))
    rule961 = ReplacementRule(pattern961, lambda e, c, d, f, x, a, b : (-a*f + b*e)*Int(1/(Sqrt(a + b*x**2)*Sqrt(c + d*x**2)), x)/(-a*d + b*c) - (-c*f + d*e)*Int(Sqrt(a + b*x**2)/(c + d*x**2)**(3/2), x)/(-a*d + b*c))
    rubi.add(rule961)

    pattern962 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1))*(e_ + x_**n_*WC('f', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, p: RationalQ(p, q)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda q: Greater(q, 0)))
    rule962 = ReplacementRule(pattern962, lambda e, c, q, p, d, f, x, n, a, b : x*(a + b*x**n)**(p + 1)*(c + d*x**n)**q*(a*f - b*e)/(a*b*n*(p + 1)) + Int((a + b*x**n)**(p + 1)*(c + d*x**n)**(q - 1)*Simp(c*(-a*f + b*e*n*(p + 1) + b*e) + d*x**n*(b*e*n*(p + 1) + (-a*f + b*e)*(n*q + 1)), x), x)/(a*b*n*(p + 1)))
    rubi.add(rule962)

    pattern963 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1))*(e_ + x_**n_*WC('f', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)))
    rule963 = ReplacementRule(pattern963, lambda e, c, q, p, d, f, x, n, a, b : x*(a + b*x**n)**(p + 1)*(c + d*x**n)**(q + 1)*(a*f - b*e)/(a*n*(p + 1)*(-a*d + b*c)) + Int((a + b*x**n)**(p + 1)*(c + d*x**n)**q*Simp(c*(-a*f + b*e) + d*x**n*(-a*f + b*e)*(n*(p + q + 2) + 1) + e*n*(p + 1)*(-a*d + b*c), x), x)/(a*n*(p + 1)*(-a*d + b*c)))
    rubi.add(rule963)

    pattern964 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1))*(e_ + x_**n_*WC('f', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q: RationalQ(q)), CustomConstraint(lambda q: Greater(q, 0)), CustomConstraint(lambda q, n, p: NonzeroQ(n*(p + q + 1) + 1)))
    rule964 = ReplacementRule(pattern964, lambda e, c, q, p, d, f, x, n, a, b : f*x*(a + b*x**n)**(p + 1)*(c + d*x**n)**q/(b*(n*(p + q + 1) + 1)) + Int((a + b*x**n)**p*(c + d*x**n)**(q - 1)*Simp(c*(-a*f + b*e*n*(p + q + 1) + b*e) + x**n*(b*d*e*n*(p + q + 1) + d*(-a*f + b*e) + f*n*q*(-a*d + b*c)), x), x)/(b*(n*(p + q + 1) + 1)))
    rubi.add(rule964)

    pattern965 = Pattern(Integral((e_ + x_**4*WC('f', S(1)))/((a_ + x_**4*WC('b', S(1)))**(S(3)/4)*(c_ + x_**4*WC('d', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)))
    rule965 = ReplacementRule(pattern965, lambda e, c, d, f, x, a, b : (-a*f + b*e)*Int((a + b*x**4)**(-3/4), x)/(-a*d + b*c) - (-c*f + d*e)*Int((a + b*x**4)**(1/4)/(c + d*x**4), x)/(-a*d + b*c))
    rubi.add(rule965)

    pattern966 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_*(e_ + x_**n_*WC('f', S(1)))/(c_ + x_**n_*WC('d', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, x: FreeQ(n, x)))
    rule966 = ReplacementRule(pattern966, lambda e, c, p, d, f, x, n, a, b : f*Int((a + b*x**n)**p, x)/d + (-c*f + d*e)*Int((a + b*x**n)**p/(c + d*x**n), x)/d)
    rubi.add(rule966)

    pattern967 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1))*(e_ + x_**n_*WC('f', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)))
    rule967 = ReplacementRule(pattern967, lambda e, c, q, p, d, f, x, n, a, b : e*Int((a + b*x**n)**p*(c + d*x**n)**q, x) + f*Int(x**n*(a + b*x**n)**p*(c + d*x**n)**q, x))
    rubi.add(rule967)

    pattern968 = Pattern(Integral(1/((a_ + x_**2*WC('b', S(1)))*(c_ + x_**2*WC('d', S(1)))*sqrt(e_ + x_**2*WC('f', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)))
    rule968 = ReplacementRule(pattern968, lambda e, c, d, f, x, a, b : b*Int(1/((a + b*x**2)*Sqrt(e + f*x**2)), x)/(-a*d + b*c) - d*Int(1/((c + d*x**2)*Sqrt(e + f*x**2)), x)/(-a*d + b*c))
    rubi.add(rule968)

    pattern969 = Pattern(Integral(1/(x_**2*(c_ + x_**2*WC('d', S(1)))*sqrt(e_ + x_**2*WC('f', S(1)))), x_), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda f, d, e, c: NonzeroQ(-c*f + d*e)))
    rule969 = ReplacementRule(pattern969, lambda c, d, f, x, e : -d*Int(1/((c + d*x**2)*Sqrt(e + f*x**2)), x)/c + Int(1/(x**2*Sqrt(e + f*x**2)), x)/c)
    rubi.add(rule969)

    pattern970 = Pattern(Integral(sqrt(c_ + x_**2*WC('d', S(1)))*sqrt(e_ + x_**2*WC('f', S(1)))/(a_ + x_**2*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda d, c: PositiveQ(d/c)), CustomConstraint(lambda e, f: PositiveQ(f/e)), CustomConstraint(lambda f, d, e, c: ~(SimplerSqrtQ(d/c, f/e))))
    rule970 = ReplacementRule(pattern970, lambda e, c, d, f, x, a, b : d*Int(Sqrt(e + f*x**2)/Sqrt(c + d*x**2), x)/b + (-a*d + b*c)*Int(Sqrt(e + f*x**2)/((a + b*x**2)*Sqrt(c + d*x**2)), x)/b)
    rubi.add(rule970)

    pattern971 = Pattern(Integral(sqrt(c_ + x_**2*WC('d', S(1)))*sqrt(e_ + x_**2*WC('f', S(1)))/(a_ + x_**2*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, d, e, f: ~(SimplerSqrtQ(-f/e, -d/c))))
    rule971 = ReplacementRule(pattern971, lambda e, c, d, f, x, a, b : d*Int(Sqrt(e + f*x**2)/Sqrt(c + d*x**2), x)/b + (-a*d + b*c)*Int(Sqrt(e + f*x**2)/((a + b*x**2)*Sqrt(c + d*x**2)), x)/b)
    rubi.add(rule971)

    pattern972 = Pattern(Integral(1/((a_ + x_**2*WC('b', S(1)))*sqrt(c_ + x_**2*WC('d', S(1)))*sqrt(e_ + x_**2*WC('f', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda d, c: PosQ(d/c)), CustomConstraint(lambda e, f: PosQ(f/e)), CustomConstraint(lambda f, d, e, c: ~(SimplerSqrtQ(d/c, f/e))))
    rule972 = ReplacementRule(pattern972, lambda e, c, d, f, x, a, b : b*Int(Sqrt(e + f*x**2)/((a + b*x**2)*Sqrt(c + d*x**2)), x)/(-a*f + b*e) - f*Int(1/(Sqrt(c + d*x**2)*Sqrt(e + f*x**2)), x)/(-a*f + b*e))
    rubi.add(rule972)

    pattern973 = Pattern(Integral(1/((a_ + x_**2*WC('b', S(1)))*sqrt(c_ + x_**2*WC('d', S(1)))*sqrt(e_ + x_**2*WC('f', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda d, c: NegQ(d/c)), CustomConstraint(lambda c: PositiveQ(c)), CustomConstraint(lambda e: PositiveQ(e)), CustomConstraint(lambda c, d, e, f: ~(NegQ(f/e) & SimplerSqrtQ(-f/e, -d/c))))
    rule973 = ReplacementRule(pattern973, lambda e, c, d, f, x, a, b : EllipticPi(b*c/(a*d), ArcSin(x*Rt(-d/c, 2)), c*f/(d*e))/(a*Rt(-d/c, 2)*Sqrt(c)*Sqrt(e)))
    rubi.add(rule973)

    pattern974 = Pattern(Integral(1/((a_ + x_**2*WC('b', S(1)))*sqrt(c_ + x_**2*WC('d', S(1)))*sqrt(e_ + x_**2*WC('f', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c: ~(PositiveQ(c))))
    rule974 = ReplacementRule(pattern974, lambda e, c, d, f, x, a, b : Int(1/((a + b*x**2)*Sqrt(1 + d*x**2/c)*Sqrt(e + f*x**2)), x)*Sqrt(1 + d*x**2/c)/Sqrt(c + d*x**2))
    rubi.add(rule974)

    pattern975 = Pattern(Integral(sqrt(c_ + x_**2*WC('d', S(1)))/((a_ + x_**2*WC('b', S(1)))*sqrt(e_ + x_**2*WC('f', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda d, c: PosQ(d/c)))
    rule975 = ReplacementRule(pattern975, lambda e, c, d, f, x, a, b : c*EllipticPi(1 - b*c/(a*d), ArcTan(x*Rt(d/c, 2)), -c*f/(d*e) + 1)*Sqrt(e + f*x**2)/(a*e*Rt(d/c, 2)*Sqrt(c*(e + f*x**2)/(e*(c + d*x**2)))*Sqrt(c + d*x**2)))
    rubi.add(rule975)

    pattern976 = Pattern(Integral(sqrt(c_ + x_**2*WC('d', S(1)))/((a_ + x_**2*WC('b', S(1)))*sqrt(e_ + x_**2*WC('f', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda d, c: NegQ(d/c)))
    rule976 = ReplacementRule(pattern976, lambda e, c, d, f, x, a, b : d*Int(1/(Sqrt(c + d*x**2)*Sqrt(e + f*x**2)), x)/b + (-a*d + b*c)*Int(1/((a + b*x**2)*Sqrt(c + d*x**2)*Sqrt(e + f*x**2)), x)/b)
    rubi.add(rule976)

    pattern977 = Pattern(Integral(sqrt(e_ + x_**2*WC('f', S(1)))/((a_ + x_**2*WC('b', S(1)))*(c_ + x_**2*WC('d', S(1)))**(S(3)/2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda d, c: PosQ(d/c)), CustomConstraint(lambda e, f: PosQ(f/e)))
    rule977 = ReplacementRule(pattern977, lambda e, c, d, f, x, a, b : b*Int(Sqrt(e + f*x**2)/((a + b*x**2)*Sqrt(c + d*x**2)), x)/(-a*d + b*c) - d*Int(Sqrt(e + f*x**2)/(c + d*x**2)**(3/2), x)/(-a*d + b*c))
    rubi.add(rule977)

    pattern978 = Pattern(Integral((e_ + x_**2*WC('f', S(1)))**(S(3)/2)/((a_ + x_**2*WC('b', S(1)))*(c_ + x_**2*WC('d', S(1)))**(S(3)/2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda d, c: PosQ(d/c)), CustomConstraint(lambda e, f: PosQ(f/e)))
    rule978 = ReplacementRule(pattern978, lambda e, c, d, f, x, a, b : (-a*f + b*e)*Int(Sqrt(e + f*x**2)/((a + b*x**2)*Sqrt(c + d*x**2)), x)/(-a*d + b*c) - (-c*f + d*e)*Int(Sqrt(e + f*x**2)/(c + d*x**2)**(3/2), x)/(-a*d + b*c))
    rubi.add(rule978)

    pattern979 = Pattern(Integral((c_ + x_**2*WC('d', S(1)))**(S(3)/2)*sqrt(e_ + x_**2*WC('f', S(1)))/(a_ + x_**2*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda d, c: PosQ(d/c)), CustomConstraint(lambda e, f: PosQ(f/e)))
    rule979 = ReplacementRule(pattern979, lambda e, c, d, f, x, a, b : d*Int((-a*d + 2*b*c + b*d*x**2)*Sqrt(e + f*x**2)/Sqrt(c + d*x**2), x)/b**2 + (-a*d + b*c)**2*Int(Sqrt(e + f*x**2)/((a + b*x**2)*Sqrt(c + d*x**2)), x)/b**2)
    rubi.add(rule979)

    pattern980 = Pattern(Integral((c_ + x_**2*WC('d', S(1)))**q_*(e_ + x_**2*WC('f', S(1)))**r_/(a_ + x_**2*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda q, r: RationalQ(q, r)), CustomConstraint(lambda q: Less(q, -1)), CustomConstraint(lambda r: Greater(r, 1)))
    rule980 = ReplacementRule(pattern980, lambda r, e, c, q, d, f, x, a, b : b*(-a*f + b*e)*Int((c + d*x**2)**(q + 2)*(e + f*x**2)**(r - 1)/(a + b*x**2), x)/(-a*d + b*c)**2 - Int((c + d*x**2)**q*(e + f*x**2)**(r - 1)*(-a*d**2*e - b*c**2*f + 2*b*c*d*e + d**2*x**2*(-a*f + b*e)), x)/(-a*d + b*c)**2)
    rubi.add(rule980)

    pattern981 = Pattern(Integral((c_ + x_**2*WC('d', S(1)))**q_*(e_ + x_**2*WC('f', S(1)))**r_/(a_ + x_**2*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda q: RationalQ(q)), CustomConstraint(lambda q: Greater(q, 1)))
    rule981 = ReplacementRule(pattern981, lambda r, e, c, q, d, f, x, a, b : d*Int((c + d*x**2)**(q - 1)*(e + f*x**2)**r, x)/b + (-a*d + b*c)*Int((c + d*x**2)**(q - 1)*(e + f*x**2)**r/(a + b*x**2), x)/b)
    rubi.add(rule981)

    pattern982 = Pattern(Integral((c_ + x_**2*WC('d', S(1)))**q_*(e_ + x_**2*WC('f', S(1)))**r_/(a_ + x_**2*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda q: RationalQ(q)), CustomConstraint(lambda q: Less(q, -1)))
    rule982 = ReplacementRule(pattern982, lambda r, e, c, q, d, f, x, a, b : b**2*Int((c + d*x**2)**(q + 2)*(e + f*x**2)**r/(a + b*x**2), x)/(-a*d + b*c)**2 - d*Int((c + d*x**2)**q*(e + f*x**2)**r*(-a*d + 2*b*c + b*d*x**2), x)/(-a*d + b*c)**2)
    rubi.add(rule982)

    pattern983 = Pattern(Integral((c_ + x_**2*WC('d', S(1)))**q_*(e_ + x_**2*WC('f', S(1)))**r_/(a_ + x_**2*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda q: RationalQ(q)), CustomConstraint(lambda q: LessEqual(q, -1)))
    rule983 = ReplacementRule(pattern983, lambda r, e, c, q, d, f, x, a, b : b*Int((c + d*x**2)**(q + 1)*(e + f*x**2)**r/(a + b*x**2), x)/(-a*d + b*c) - d*Int((c + d*x**2)**q*(e + f*x**2)**r, x)/(-a*d + b*c))
    rubi.add(rule983)

    pattern984 = Pattern(Integral(sqrt(c_ + x_**2*WC('d', S(1)))*sqrt(e_ + x_**2*WC('f', S(1)))/(a_ + x_**2*WC('b', S(1)))**2, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)))
    rule984 = ReplacementRule(pattern984, lambda e, c, d, f, x, a, b : x*Sqrt(c + d*x**2)*Sqrt(e + f*x**2)/(2*a*(a + b*x**2)) + d*f*Int((a - b*x**2)/(Sqrt(c + d*x**2)*Sqrt(e + f*x**2)), x)/(2*a*b**2) + (-a**2*d*f + b**2*c*e)*Int(1/((a + b*x**2)*Sqrt(c + d*x**2)*Sqrt(e + f*x**2)), x)/(2*a*b**2))
    rubi.add(rule984)

    pattern985 = Pattern(Integral(1/((a_ + x_**2*WC('b', S(1)))**2*sqrt(c_ + x_**2*WC('d', S(1)))*sqrt(e_ + x_**2*WC('f', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)))
    rule985 = ReplacementRule(pattern985, lambda e, c, d, f, x, a, b : b**2*x*Sqrt(c + d*x**2)*Sqrt(e + f*x**2)/(2*a*(a + b*x**2)*(-a*d + b*c)*(-a*f + b*e)) - d*f*Int((a + b*x**2)/(Sqrt(c + d*x**2)*Sqrt(e + f*x**2)), x)/(2*a*(-a*d + b*c)*(-a*f + b*e)) + (3*a**2*d*f - 2*a*b*(c*f + d*e) + b**2*c*e)*Int(1/((a + b*x**2)*Sqrt(c + d*x**2)*Sqrt(e + f*x**2)), x)/(2*a*(-a*d + b*c)*(-a*f + b*e)))
    rubi.add(rule985)

    pattern986 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_*(e_ + x_**n_*WC('f', S(1)))**r_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda p: NegativeIntegerQ(p)), CustomConstraint(lambda q: RationalQ(q)), CustomConstraint(lambda q: Greater(q, 0)))
    rule986 = ReplacementRule(pattern986, lambda r, e, c, q, p, d, f, x, n, a, b : d*Int((a + b*x**n)**(p + 1)*(c + d*x**n)**(q - 1)*(e + f*x**n)**r, x)/b + (-a*d + b*c)*Int((a + b*x**n)**p*(c + d*x**n)**(q - 1)*(e + f*x**n)**r, x)/b)
    rubi.add(rule986)

    pattern987 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_*(e_ + x_**n_*WC('f', S(1)))**r_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda p: NegativeIntegerQ(p)), CustomConstraint(lambda q: RationalQ(q)), CustomConstraint(lambda q: LessEqual(q, -1)))
    rule987 = ReplacementRule(pattern987, lambda r, e, c, q, p, d, f, x, n, a, b : b*Int((a + b*x**n)**p*(c + d*x**n)**(q + 1)*(e + f*x**n)**r, x)/(-a*d + b*c) - d*Int((a + b*x**n)**(p + 1)*(c + d*x**n)**q*(e + f*x**n)**r, x)/(-a*d + b*c))
    rubi.add(rule987)

    pattern988 = Pattern(Integral(1/(sqrt(a_ + x_**2*WC('b', S(1)))*sqrt(c_ + x_**2*WC('d', S(1)))*sqrt(e_ + x_**2*WC('f', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)))
    rule988 = ReplacementRule(pattern988, lambda e, c, d, f, x, a, b : Sqrt(a*(e + f*x**2)/(e*(a + b*x**2)))*Sqrt(c + d*x**2)*Subst(Int(1/(Sqrt(1 - x**2*(-a*d + b*c)/c)*Sqrt(1 - x**2*(-a*f + b*e)/e)), x), x, x/Sqrt(a + b*x**2))/(c*Sqrt(a*(c + d*x**2)/(c*(a + b*x**2)))*Sqrt(e + f*x**2)))
    rubi.add(rule988)

    pattern989 = Pattern(Integral(sqrt(a_ + x_**2*WC('b', S(1)))/(sqrt(c_ + x_**2*WC('d', S(1)))*sqrt(e_ + x_**2*WC('f', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)))
    rule989 = ReplacementRule(pattern989, lambda e, c, d, f, x, a, b : a*Sqrt(a*(e + f*x**2)/(e*(a + b*x**2)))*Sqrt(c + d*x**2)*Subst(Int(1/((-b*x**2 + 1)*Sqrt(1 - x**2*(-a*d + b*c)/c)*Sqrt(1 - x**2*(-a*f + b*e)/e)), x), x, x/Sqrt(a + b*x**2))/(c*Sqrt(a*(c + d*x**2)/(c*(a + b*x**2)))*Sqrt(e + f*x**2)))
    rubi.add(rule989)

    pattern990 = Pattern(Integral(sqrt(c_ + x_**2*WC('d', S(1)))/((a_ + x_**2*WC('b', S(1)))**(S(3)/2)*sqrt(e_ + x_**2*WC('f', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)))
    rule990 = ReplacementRule(pattern990, lambda e, c, d, f, x, a, b : Sqrt(a*(e + f*x**2)/(e*(a + b*x**2)))*Sqrt(c + d*x**2)*Subst(Int(Sqrt(1 - x**2*(-a*d + b*c)/c)/Sqrt(1 - x**2*(-a*f + b*e)/e), x), x, x/Sqrt(a + b*x**2))/(a*Sqrt(a*(c + d*x**2)/(c*(a + b*x**2)))*Sqrt(e + f*x**2)))
    rubi.add(rule990)

    pattern991 = Pattern(Integral(sqrt(a_ + x_**2*WC('b', S(1)))*sqrt(c_ + x_**2*WC('d', S(1)))/sqrt(e_ + x_**2*WC('f', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda f, d, e, c: PosQ((-c*f + d*e)/c)))
    rule991 = ReplacementRule(pattern991, lambda e, c, d, f, x, a, b : b*c*(-c*f + d*e)*Int(1/(Sqrt(a + b*x**2)*Sqrt(c + d*x**2)*Sqrt(e + f*x**2)), x)/(2*d*f) - c*(-c*f + d*e)*Int(Sqrt(a + b*x**2)/((c + d*x**2)**(3/2)*Sqrt(e + f*x**2)), x)/(2*f) + d*x*Sqrt(a + b*x**2)*Sqrt(e + f*x**2)/(2*f*Sqrt(c + d*x**2)) - (-a*d*f - b*c*f + b*d*e)*Int(Sqrt(c + d*x**2)/(Sqrt(a + b*x**2)*Sqrt(e + f*x**2)), x)/(2*d*f))
    rubi.add(rule991)

    pattern992 = Pattern(Integral(sqrt(a_ + x_**2*WC('b', S(1)))*sqrt(c_ + x_**2*WC('d', S(1)))/sqrt(e_ + x_**2*WC('f', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda f, d, e, c: NegQ((-c*f + d*e)/c)))
    rule992 = ReplacementRule(pattern992, lambda e, c, d, f, x, a, b : e*(-a*f + b*e)*Int(Sqrt(c + d*x**2)/((e + f*x**2)**(3/2)*Sqrt(a + b*x**2)), x)/(2*f) + x*Sqrt(a + b*x**2)*Sqrt(c + d*x**2)/(2*Sqrt(e + f*x**2)) + (-a*f + b*e)*(-2*c*f + d*e)*Int(1/(Sqrt(a + b*x**2)*Sqrt(c + d*x**2)*Sqrt(e + f*x**2)), x)/(2*f**2) - (-a*d*f - b*c*f + b*d*e)*Int(Sqrt(e + f*x**2)/(Sqrt(a + b*x**2)*Sqrt(c + d*x**2)), x)/(2*f**2))
    rubi.add(rule992)

    pattern993 = Pattern(Integral(sqrt(a_ + x_**2*WC('b', S(1)))*sqrt(c_ + x_**2*WC('d', S(1)))/(e_ + x_**2*WC('f', S(1)))**(S(3)/2), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)))
    rule993 = ReplacementRule(pattern993, lambda e, c, d, f, x, a, b : b*Int(Sqrt(c + d*x**2)/(Sqrt(a + b*x**2)*Sqrt(e + f*x**2)), x)/f - (-a*f + b*e)*Int(Sqrt(c + d*x**2)/((e + f*x**2)**(3/2)*Sqrt(a + b*x**2)), x)/f)
    rubi.add(rule993)

    pattern994 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_*(e_ + x_**n_*WC('f', S(1)))**r_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda n: PositiveIntegerQ(n)))
    rule994 = ReplacementRule(pattern994, lambda r, e, c, q, p, d, f, x, n, a, b : With(List(Set(u, ExpandIntegrand((a + b*x**n)**p*(c + d*x**n)**q*(e + f*x**n)**r, x))), Condition(Int(u, x), SumQ(u))))
    rubi.add(rule994)

    pattern995 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_*(e_ + x_**n_*WC('f', S(1)))**r_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda n: NegativeIntegerQ(n)))
    rule995 = ReplacementRule(pattern995, lambda r, e, c, q, p, d, f, x, n, a, b : -Subst(Int((a + b*x**(-n))**p*(c + d*x**(-n))**q*(e + f*x**(-n))**r/x**2, x), x, 1/x))
    rubi.add(rule995)

    pattern996 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1))*(e_ + x_**n_*WC('f', S(1)))**WC('r', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)))
    rule996 = ReplacementRule(pattern996, lambda r, e, c, q, p, d, f, x, n, a, b : Int((a + b*x**n)**p*(c + d*x**n)**q*(e + f*x**n)**r, x))
    rubi.add(rule996)

    pattern997 = Pattern(Integral((u_**n_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1))*(v_**n_*WC('d', S(1)) + WC('c', S(0)))**WC('q', S(1))*(w_**n_*WC('f', S(1)) + WC('e', S(0)))**WC('r', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda u, v: ZeroQ(u - v)), CustomConstraint(lambda w, u: ZeroQ(u - w)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule997 = ReplacementRule(pattern997, lambda w, u, v, r, e, c, q, p, d, f, x, n, a, b : Subst(Int((a + b*x**n)**p*(c + d*x**n)**q*(e + f*x**n)**r, x), x, u)/Coefficient(u, x, 1))
    rubi.add(rule997)

    pattern998 = Pattern(Integral((c_ + x_**WC('mn', S(1))*WC('d', S(1)))**WC('q', S(1))*(e_ + x_**WC('n', S(1))*WC('f', S(1)))**WC('r', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda mn, n: EqQ(mn, -n)), CustomConstraint(lambda q: IntegerQ(q)))
    rule998 = ReplacementRule(pattern998, lambda mn, r, e, c, q, p, d, f, x, n, a, b : Int(x**(-n*q)*(a + b*x**n)**p*(e + f*x**n)**r*(c*x**n + d)**q, x))
    rubi.add(rule998)

    pattern999 = Pattern(Integral((c_ + x_**WC('mn', S(1))*WC('d', S(1)))**WC('q', S(1))*(e_ + x_**WC('n', S(1))*WC('f', S(1)))**WC('r', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda mn, n: EqQ(mn, -n)), CustomConstraint(lambda p: IntegerQ(p)), CustomConstraint(lambda r: IntegerQ(r)))
    rule999 = ReplacementRule(pattern999, lambda mn, r, e, c, q, p, d, f, x, n, a, b : Int(x**(n*(p + r))*(c + d*x**(-n))**q*(a*x**(-n) + b)**p*(e*x**(-n) + f)**r, x))
    rubi.add(rule999)

    pattern1000 = Pattern(Integral((c_ + x_**WC('mn', S(1))*WC('d', S(1)))**q_*(e_ + x_**WC('n', S(1))*WC('f', S(1)))**WC('r', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda mn, n: EqQ(mn, -n)), CustomConstraint(lambda q: ~(IntegerQ(q))))
    rule1000 = ReplacementRule(pattern1000, lambda mn, r, e, c, q, p, d, f, x, n, a, b : x**(n*FracPart(q))*(c + d*x**(-n))**FracPart(q)*(c*x**n + d)**(-FracPart(q))*Int(x**(-n*q)*(a + b*x**n)**p*(e + f*x**n)**r*(c*x**n + d)**q, x))
    rubi.add(rule1000)

    pattern1001 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1))*(e1_ + x_**WC('n2', S(1))*WC('f1', S(1)))**WC('r', S(1))*(e2_ + x_**WC('n2', S(1))*WC('f2', S(1)))**WC('r', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e1, x: FreeQ(e1, x)), CustomConstraint(lambda f1, x: FreeQ(f1, x)), CustomConstraint(lambda e2, x: FreeQ(e2, x)), CustomConstraint(lambda f2, x: FreeQ(f2, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda n, n2: ZeroQ(-n/2 + n2)), CustomConstraint(lambda f2, e2, f1, e1: ZeroQ(e1*f2 + e2*f1)), CustomConstraint(lambda e2, r, e1: IntegerQ(r) | (PositiveQ(e1) & PositiveQ(e2))))
    rule1001 = ReplacementRule(pattern1001, lambda n2, e2, e1, f2, r, c, q, p, d, x, f1, n, a, b : Int((a + b*x**n)**p*(c + d*x**n)**q*(e1*e2 + f1*f2*x**n)**r, x))
    rubi.add(rule1001)

    pattern1002 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1))*(e1_ + x_**WC('n2', S(1))*WC('f1', S(1)))**WC('r', S(1))*(e2_ + x_**WC('n2', S(1))*WC('f2', S(1)))**WC('r', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e1, x: FreeQ(e1, x)), CustomConstraint(lambda f1, x: FreeQ(f1, x)), CustomConstraint(lambda e2, x: FreeQ(e2, x)), CustomConstraint(lambda f2, x: FreeQ(f2, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda n, n2: ZeroQ(-n/2 + n2)), CustomConstraint(lambda f2, e2, f1, e1: ZeroQ(e1*f2 + e2*f1)))
    rule1002 = ReplacementRule(pattern1002, lambda n2, e2, e1, f2, r, c, q, p, d, x, f1, n, a, b : (e1 + f1*x**(n/2))**FracPart(r)*(e2 + f2*x**(n/2))**FracPart(r)*(e1*e2 + f1*f2*x**n)**(-FracPart(r))*Int((a + b*x**n)**p*(c + d*x**n)**q*(e1*e2 + f1*f2*x**n)**r, x))
    rubi.add(rule1002)

    pattern1003 = Pattern(Integral((x_*WC('g', S(1)))**WC('m', S(1))*(x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1))*(e_ + x_**n_*WC('f', S(1)))**WC('r', S(1)), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda m, g: IntegerQ(m) | PositiveQ(g)), CustomConstraint(lambda n, m: IntegerQ(Simplify((m + 1)/n))))
    rule1003 = ReplacementRule(pattern1003, lambda r, e, m, c, q, p, d, f, x, n, g, b : b**(-Simplify((m + 1)/n) + 1)*g**m*Subst(Int((b*x)**(p + Simplify((m + 1)/n) - 1)*(c + d*x)**q*(e + f*x)**r, x), x, x**n)/n)
    rubi.add(rule1003)

    pattern1004 = Pattern(Integral((x_*WC('g', S(1)))**WC('m', S(1))*(x_**WC('n', S(1))*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1))*(e_ + x_**n_*WC('f', S(1)))**WC('r', S(1)), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda m, g: IntegerQ(m) | PositiveQ(g)), CustomConstraint(lambda n, m: ~(IntegerQ(Simplify((m + 1)/n)))))
    rule1004 = ReplacementRule(pattern1004, lambda r, e, m, c, q, p, d, f, x, n, g, b : b**IntPart(p)*g**m*x**(-n*FracPart(p))*(b*x**n)**FracPart(p)*Int(x**(m + n*p)*(c + d*x**n)**q*(e + f*x**n)**r, x))
    rubi.add(rule1004)

    pattern1005 = Pattern(Integral((g_*x_)**m_*(x_**WC('n', S(1))*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1))*(e_ + x_**n_*WC('f', S(1)))**WC('r', S(1)), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda m: ~(IntegerQ(m))))
    rule1005 = ReplacementRule(pattern1005, lambda r, e, m, c, q, p, d, f, x, n, g, b : g**IntPart(m)*x**(-FracPart(m))*(g*x)**FracPart(m)*Int(x**m*(b*x**n)**p*(c + d*x**n)**q*(e + f*x**n)**r, x))
    rubi.add(rule1005)

    pattern1006 = Pattern(Integral((x_*WC('g', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1))*(e_ + x_**n_*WC('f', S(1)))**WC('r', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, r, p: PositiveIntegerQ(p + 2, q, r)))
    rule1006 = ReplacementRule(pattern1006, lambda r, e, m, c, q, p, d, f, x, n, a, g, b : Int(ExpandIntegrand((g*x)**m*(a + b*x**n)**p*(c + d*x**n)**q*(e + f*x**n)**r, x), x))
    rubi.add(rule1006)

    pattern1007 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1))*(e_ + x_**n_*WC('f', S(1)))**WC('r', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda n, m: ZeroQ(m - n + 1)))
    rule1007 = ReplacementRule(pattern1007, lambda r, e, m, c, q, p, d, f, x, n, a, b : Subst(Int((a + b*x)**p*(c + d*x)**q*(e + f*x)**r, x), x, x**n)/n)
    rubi.add(rule1007)

    pattern1008 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1))*(e_ + x_**n_*WC('f', S(1)))**WC('r', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, r, p: IntegersQ(p, q, r)), CustomConstraint(lambda n: NegQ(n)))
    rule1008 = ReplacementRule(pattern1008, lambda r, e, m, c, q, p, d, f, x, n, a, b : Int(x**(m + n*(p + q + r))*(a*x**(-n) + b)**p*(c*x**(-n) + d)**q*(e*x**(-n) + f)**r, x))
    rubi.add(rule1008)

    pattern1009 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1))*(e_ + x_**n_*WC('f', S(1)))**WC('r', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda n, m: IntegerQ(Simplify((m + 1)/n))))
    rule1009 = ReplacementRule(pattern1009, lambda r, e, m, c, q, p, d, f, x, n, a, b : Subst(Int(x**(Simplify((m + 1)/n) - 1)*(a + b*x)**p*(c + d*x)**q*(e + f*x)**r, x), x, x**n)/n)
    rubi.add(rule1009)

    pattern1010 = Pattern(Integral((g_*x_)**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1))*(e_ + x_**n_*WC('f', S(1)))**WC('r', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda n, m: IntegerQ(Simplify((m + 1)/n))))
    rule1010 = ReplacementRule(pattern1010, lambda r, e, m, c, q, p, d, f, x, n, a, g, b : g**IntPart(m)*x**(-FracPart(m))*(g*x)**FracPart(m)*Int(x**m*(a + b*x**n)**p*(c + d*x**n)**q*(e + f*x**n)**r, x))
    rubi.add(rule1010)

    pattern1011 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1))*(e_ + x_**n_*WC('f', S(1)))**WC('r', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: IntegerQ(m)))
    rule1011 = ReplacementRule(pattern1011, lambda r, e, m, c, q, p, d, f, x, n, a, b : With(List(Set(k, GCD(m + 1, n))), Condition(Subst(Int(x**(-1 + (m + 1)/k)*(a + b*x**(n/k))**p*(c + d*x**(n/k))**q*(e + f*x**(n/k))**r, x), x, x**k)/k, Unequal(k, 1))))
    rubi.add(rule1011)

    pattern1012 = Pattern(Integral((x_*WC('g', S(1)))**m_*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_*(e_ + x_**n_*WC('f', S(1)))**r_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: FractionQ(m)))
    rule1012 = ReplacementRule(pattern1012, lambda r, e, m, c, q, p, d, f, x, n, a, g, b : With(List(Set(k, Denominator(m))), k*Subst(Int(x**(k*(m + 1) - 1)*(a + b*g**(-n)*x**(k*n))**p*(c + d*g**(-n)*x**(k*n))**q*(e + f*g**(-n)*x**(k*n))**r, x), x, (g*x)**(1/k))/g))
    rubi.add(rule1012)

    pattern1013 = Pattern(Integral((x_*WC('g', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1))*(e_ + x_**n_*WC('f', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q, p: RationalQ(p, q)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda q: Greater(q, 0)), CustomConstraint(lambda e, c, q, d, f, a, b: ~(Equal(q, 1) & SimplerQ(-a*d + b*c, -a*f + b*e))))
    rule1013 = ReplacementRule(pattern1013, lambda e, m, c, q, p, d, f, x, n, a, g, b : Int((g*x)**m*(a + b*x**n)**(p + 1)*(c + d*x**n)**(q - 1)*Simp(c*(b*e*n*(p + 1) + (m + 1)*(-a*f + b*e)) + d*x**n*(b*e*n*(p + 1) + (-a*f + b*e)*(m + n*q + 1)), x), x)/(a*b*n*(p + 1)) + (g*x)**(m + 1)*(a + b*x**n)**(p + 1)*(c + d*x**n)**q*(a*f - b*e)/(a*b*g*n*(p + 1)))
    rubi.add(rule1013)

    pattern1014 = Pattern(Integral((x_*WC('g', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_*(e_ + x_**n_*WC('f', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda n, m: Greater(m - n + 1, 0)))
    rule1014 = ReplacementRule(pattern1014, lambda e, m, c, q, p, d, f, x, n, a, g, b : -g**n*Int((g*x)**(m - n)*(a + b*x**n)**(p + 1)*(c + d*x**n)**q*Simp(c*(-a*f + b*e)*(m - n + 1) + x**n*(-b*n*(p + 1)*(c*f - d*e) + d*(-a*f + b*e)*(m + n*q + 1)), x), x)/(b*n*(p + 1)*(-a*d + b*c)) + g**(n - 1)*(g*x)**(m - n + 1)*(a + b*x**n)**(p + 1)*(c + d*x**n)**(q + 1)*(-a*f + b*e)/(b*n*(p + 1)*(-a*d + b*c)))
    rubi.add(rule1014)

    pattern1015 = Pattern(Integral((x_*WC('g', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_*(e_ + x_**n_*WC('f', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)))
    rule1015 = ReplacementRule(pattern1015, lambda e, m, c, q, p, d, f, x, n, a, g, b : Int((g*x)**m*(a + b*x**n)**(p + 1)*(c + d*x**n)**q*Simp(c*(m + 1)*(-a*f + b*e) + d*x**n*(-a*f + b*e)*(m + n*(p + q + 2) + 1) + e*n*(p + 1)*(-a*d + b*c), x), x)/(a*n*(p + 1)*(-a*d + b*c)) + (g*x)**(m + 1)*(a + b*x**n)**(p + 1)*(c + d*x**n)**(q + 1)*(a*f - b*e)/(a*g*n*(p + 1)*(-a*d + b*c)))
    rubi.add(rule1015)

    pattern1016 = Pattern(Integral((x_*WC('g', S(1)))**m_*(a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1))*(e_ + x_**n_*WC('f', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q, m: RationalQ(m, q)), CustomConstraint(lambda q: Greater(q, 0)), CustomConstraint(lambda m: Less(m, -1)), CustomConstraint(lambda c, q, d, f, x, n, e: ~(Equal(q, 1) & SimplerQ(e + f*x**n, c + d*x**n))))
    rule1016 = ReplacementRule(pattern1016, lambda e, m, c, q, p, d, f, x, n, a, g, b : e*(g*x)**(m + 1)*(a + b*x**n)**(p + 1)*(c + d*x**n)**q/(a*g*(m + 1)) - g**(-n)*Int((g*x)**(m + n)*(a + b*x**n)**p*(c + d*x**n)**(q - 1)*Simp(c*(m + 1)*(-a*f + b*e) + d*x**n*(b*e*n*(p + q + 1) + (m + 1)*(-a*f + b*e)) + e*n*(a*d*q + b*c*(p + 1)), x), x)/(a*(m + 1)))
    rubi.add(rule1016)

    pattern1017 = Pattern(Integral((x_*WC('g', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1))*(e_ + x_**n_*WC('f', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: RationalQ(q)), CustomConstraint(lambda q: Greater(q, 0)), CustomConstraint(lambda c, q, d, f, x, n, e: ~(Equal(q, 1) & SimplerQ(e + f*x**n, c + d*x**n))))
    rule1017 = ReplacementRule(pattern1017, lambda e, m, c, q, p, d, f, x, n, a, g, b : f*(g*x)**(m + 1)*(a + b*x**n)**(p + 1)*(c + d*x**n)**q/(b*g*(m + n*(p + q + 1) + 1)) + Int((g*x)**m*(a + b*x**n)**p*(c + d*x**n)**(q - 1)*Simp(c*(b*e*n*(p + q + 1) + (m + 1)*(-a*f + b*e)) + x**n*(b*d*e*n*(p + q + 1) + d*(m + 1)*(-a*f + b*e) + f*n*q*(-a*d + b*c)), x), x)/(b*(m + n*(p + q + 1) + 1)))
    rubi.add(rule1017)

    pattern1018 = Pattern(Integral((x_*WC('g', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1))*(e_ + x_**n_*WC('f', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda n, m: Greater(m, n - 1)))
    rule1018 = ReplacementRule(pattern1018, lambda e, m, c, q, p, d, f, x, n, a, g, b : f*g**(n - 1)*(g*x)**(m - n + 1)*(a + b*x**n)**(p + 1)*(c + d*x**n)**(q + 1)/(b*d*(m + n*(p + q + 1) + 1)) - g**n*Int((g*x)**(m - n)*(a + b*x**n)**p*(c + d*x**n)**q*Simp(a*c*f*(m - n + 1) + x**n*(a*d*f*(m + n*q + 1) + b*(c*f*(m + n*p + 1) - d*e*(m + n*(p + q + 1) + 1))), x), x)/(b*d*(m + n*(p + q + 1) + 1)))
    rubi.add(rule1018)

    pattern1019 = Pattern(Integral((x_*WC('g', S(1)))**m_*(a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1))*(e_ + x_**n_*WC('f', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, -1)))
    rule1019 = ReplacementRule(pattern1019, lambda e, m, c, q, p, d, f, x, n, a, g, b : e*(g*x)**(m + 1)*(a + b*x**n)**(p + 1)*(c + d*x**n)**(q + 1)/(a*c*g*(m + 1)) + g**(-n)*Int((g*x)**(m + n)*(a + b*x**n)**p*(c + d*x**n)**q*Simp(a*c*f*(m + 1) - b*d*e*x**n*(m + n*(p + q + 2) + 1) - e*n*(a*d*q + b*c*p) - e*(a*d + b*c)*(m + n + 1), x), x)/(a*c*(m + 1)))
    rubi.add(rule1019)

    pattern1020 = Pattern(Integral((x_*WC('g', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_*(e_ + x_**n_*WC('f', S(1)))/(c_ + x_**n_*WC('d', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n: PositiveIntegerQ(n)))
    rule1020 = ReplacementRule(pattern1020, lambda e, m, c, p, d, f, x, n, a, g, b : Int(ExpandIntegrand((g*x)**m*(a + b*x**n)**p*(e + f*x**n)/(c + d*x**n), x), x))
    rubi.add(rule1020)

    pattern1021 = Pattern(Integral((x_*WC('g', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1))*(e_ + x_**n_*WC('f', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n: PositiveIntegerQ(n)))
    rule1021 = ReplacementRule(pattern1021, lambda e, m, c, q, p, d, f, x, n, a, g, b : e*Int((g*x)**m*(a + b*x**n)**p*(c + d*x**n)**q, x) + e**(-n)*f*Int((g*x)**(m + n)*(a + b*x**n)**p*(c + d*x**n)**q, x))
    rubi.add(rule1021)

    pattern1022 = Pattern(Integral((x_*WC('g', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1))*(e_ + x_**n_*WC('f', S(1)))**WC('r', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda r: PositiveIntegerQ(r)))
    rule1022 = ReplacementRule(pattern1022, lambda r, e, m, c, q, p, d, f, x, n, a, g, b : e*Int((g*x)**m*(a + b*x**n)**p*(c + d*x**n)**q*(e + f*x**n)**(r - 1), x) + e**(-n)*f*Int((g*x)**(m + n)*(a + b*x**n)**p*(c + d*x**n)**q*(e + f*x**n)**(r - 1), x))
    rubi.add(rule1022)

    pattern1023 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1))*(e_ + x_**n_*WC('f', S(1)))**WC('r', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda m: IntegerQ(m)))
    rule1023 = ReplacementRule(pattern1023, lambda r, e, m, c, q, p, d, f, x, n, a, b : -Subst(Int(x**(-m - 2)*(a + b*x**(-n))**p*(c + d*x**(-n))**q*(e + f*x**(-n))**r, x), x, 1/x))
    rubi.add(rule1023)

    pattern1024 = Pattern(Integral((x_*WC('g', S(1)))**m_*(a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1))*(e_ + x_**n_*WC('f', S(1)))**WC('r', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda m: FractionQ(m)))
    rule1024 = ReplacementRule(pattern1024, lambda r, e, m, c, q, p, d, f, x, n, a, g, b : With(List(Set(k, Denominator(m))), -k*Subst(Int(x**(-k*(m + 1) - 1)*(a + b*g**(-n)*x**(-k*n))**p*(c + d*g**(-n)*x**(-k*n))**q*(e + f*g**(-n)*x**(-k*n))**r, x), x, (g*x)**(-1/k))/g))
    rubi.add(rule1024)

    pattern1025 = Pattern(Integral((x_*WC('g', S(1)))**m_*(a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1))*(e_ + x_**n_*WC('f', S(1)))**WC('r', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda m: ~(RationalQ(m))))
    rule1025 = ReplacementRule(pattern1025, lambda r, e, m, c, q, p, d, f, x, n, a, g, b : -(g*x)**m*(1/x)**m*Subst(Int(x**(-m - 2)*(a + b*x**(-n))**p*(c + d*x**(-n))**q*(e + f*x**(-n))**r, x), x, 1/x))
    rubi.add(rule1025)

    pattern1026 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1))*(e_ + x_**n_*WC('f', S(1)))**WC('r', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda n: FractionQ(n)))
    rule1026 = ReplacementRule(pattern1026, lambda r, e, m, c, q, p, d, f, x, n, a, b : With(List(Set(k, Denominator(n))), k*Subst(Int(x**(k*(m + 1) - 1)*(a + b*x**(k*n))**p*(c + d*x**(k*n))**q*(e + f*x**(k*n))**r, x), x, x**(1/k))))
    rubi.add(rule1026)

    pattern1027 = Pattern(Integral((g_*x_)**m_*(a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1))*(e_ + x_**n_*WC('f', S(1)))**WC('r', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda n: FractionQ(n)))
    rule1027 = ReplacementRule(pattern1027, lambda r, e, m, c, q, p, d, f, x, n, a, g, b : g**IntPart(m)*x**(-FracPart(m))*(g*x)**FracPart(m)*Int(x**m*(a + b*x**n)**p*(c + d*x**n)**q*(e + f*x**n)**r, x))
    rubi.add(rule1027)

    pattern1028 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1))*(e_ + x_**n_*WC('f', S(1)))**WC('r', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda n, m: IntegerQ(Simplify(n/(m + 1)))))
    rule1028 = ReplacementRule(pattern1028, lambda r, e, m, c, q, p, d, f, x, n, a, b : Subst(Int((a + b*x**Simplify(n/(m + 1)))**p*(c + d*x**Simplify(n/(m + 1)))**q*(e + f*x**Simplify(n/(m + 1)))**r, x), x, x**(m + 1))/(m + 1))
    rubi.add(rule1028)

    pattern1029 = Pattern(Integral((g_*x_)**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1))*(e_ + x_**n_*WC('f', S(1)))**WC('r', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda n, m: IntegerQ(Simplify(n/(m + 1)))))
    rule1029 = ReplacementRule(pattern1029, lambda r, e, m, c, q, p, d, f, x, n, a, g, b : g**IntPart(m)*x**(-FracPart(m))*(g*x)**FracPart(m)*Int(x**m*(a + b*x**n)**p*(c + d*x**n)**q*(e + f*x**n)**r, x))
    rubi.add(rule1029)

    pattern1030 = Pattern(Integral((x_*WC('g', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1))*(e_ + x_**n_*WC('f', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, p: RationalQ(p, q)), CustomConstraint(lambda p: Less(p, -1)), CustomConstraint(lambda q: Greater(q, 0)), CustomConstraint(lambda e, c, q, d, f, a, b: ~(Equal(q, 1) & SimplerQ(-a*d + b*c, -a*f + b*e))))
    rule1030 = ReplacementRule(pattern1030, lambda e, m, c, q, p, d, f, x, n, a, g, b : Int((g*x)**m*(a + b*x**n)**(p + 1)*(c + d*x**n)**(q - 1)*Simp(c*(b*e*n*(p + 1) + (m + 1)*(-a*f + b*e)) + d*x**n*(b*e*n*(p + 1) + (-a*f + b*e)*(m + n*q + 1)), x), x)/(a*b*n*(p + 1)) + (g*x)**(m + 1)*(a + b*x**n)**(p + 1)*(c + d*x**n)**q*(a*f - b*e)/(a*b*g*n*(p + 1)))
    rubi.add(rule1030)

    pattern1031 = Pattern(Integral((x_*WC('g', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_*(e_ + x_**n_*WC('f', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, -1)))
    rule1031 = ReplacementRule(pattern1031, lambda e, m, c, q, p, d, f, x, n, a, g, b : Int((g*x)**m*(a + b*x**n)**(p + 1)*(c + d*x**n)**q*Simp(c*(m + 1)*(-a*f + b*e) + d*x**n*(-a*f + b*e)*(m + n*(p + q + 2) + 1) + e*n*(p + 1)*(-a*d + b*c), x), x)/(a*n*(p + 1)*(-a*d + b*c)) + (g*x)**(m + 1)*(a + b*x**n)**(p + 1)*(c + d*x**n)**(q + 1)*(a*f - b*e)/(a*g*n*(p + 1)*(-a*d + b*c)))
    rubi.add(rule1031)

    pattern1032 = Pattern(Integral((x_*WC('g', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1))*(e_ + x_**n_*WC('f', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q: RationalQ(q)), CustomConstraint(lambda q: Greater(q, 0)), CustomConstraint(lambda c, q, d, f, x, n, e: ~(Equal(q, 1) & SimplerQ(e + f*x**n, c + d*x**n))))
    rule1032 = ReplacementRule(pattern1032, lambda e, m, c, q, p, d, f, x, n, a, g, b : f*(g*x)**(m + 1)*(a + b*x**n)**(p + 1)*(c + d*x**n)**q/(b*g*(m + n*(p + q + 1) + 1)) + Int((g*x)**m*(a + b*x**n)**p*(c + d*x**n)**(q - 1)*Simp(c*(b*e*n*(p + q + 1) + (m + 1)*(-a*f + b*e)) + x**n*(b*d*e*n*(p + q + 1) + d*(m + 1)*(-a*f + b*e) + f*n*q*(-a*d + b*c)), x), x)/(b*(m + n*(p + q + 1) + 1)))
    rubi.add(rule1032)

    pattern1033 = Pattern(Integral((x_*WC('g', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_*(e_ + x_**n_*WC('f', S(1)))/(c_ + x_**n_*WC('d', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)))
    rule1033 = ReplacementRule(pattern1033, lambda e, m, c, p, d, f, x, n, a, g, b : Int(ExpandIntegrand((g*x)**m*(a + b*x**n)**p*(e + f*x**n)/(c + d*x**n), x), x))
    rubi.add(rule1033)

    pattern1034 = Pattern(Integral((x_*WC('g', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**p_*(c_ + x_**n_*WC('d', S(1)))**q_*(e_ + x_**n_*WC('f', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)))
    rule1034 = ReplacementRule(pattern1034, lambda e, m, c, q, p, d, f, x, n, a, g, b : e*Int((g*x)**m*(a + b*x**n)**p*(c + d*x**n)**q, x) + f*x**(-m)*(g*x)**m*Int(x**(m + n)*(a + b*x**n)**p*(c + d*x**n)**q, x))
    rubi.add(rule1034)

    pattern1035 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**WC('n', S(1))*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**WC('mn', S(1))*WC('d', S(1)))**WC('q', S(1))*(e_ + x_**WC('n', S(1))*WC('f', S(1)))**WC('r', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda mn, n: EqQ(mn, -n)), CustomConstraint(lambda q: IntegerQ(q)))
    rule1035 = ReplacementRule(pattern1035, lambda mn, r, e, m, c, q, p, d, f, x, n, a, b : Int(x**(m - n*q)*(a + b*x**n)**p*(e + f*x**n)**r*(c*x**n + d)**q, x))
    rubi.add(rule1035)

    pattern1036 = Pattern(Integral(x_**WC('m', S(1))*(c_ + x_**WC('mn', S(1))*WC('d', S(1)))**WC('q', S(1))*(e_ + x_**WC('n', S(1))*WC('f', S(1)))**WC('r', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda mn, n: EqQ(mn, -n)), CustomConstraint(lambda p: IntegerQ(p)), CustomConstraint(lambda r: IntegerQ(r)))
    rule1036 = ReplacementRule(pattern1036, lambda mn, r, e, m, c, q, p, d, f, x, n, a, b : Int(x**(m + n*(p + r))*(c + d*x**(-n))**q*(a*x**(-n) + b)**p*(e*x**(-n) + f)**r, x))
    rubi.add(rule1036)

    pattern1037 = Pattern(Integral(x_**WC('m', S(1))*(c_ + x_**WC('mn', S(1))*WC('d', S(1)))**q_*(e_ + x_**WC('n', S(1))*WC('f', S(1)))**WC('r', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda mn, n: EqQ(mn, -n)), CustomConstraint(lambda q: ~(IntegerQ(q))))
    rule1037 = ReplacementRule(pattern1037, lambda mn, r, e, m, c, q, p, d, f, x, n, a, b : x**(n*FracPart(q))*(c + d*x**(-n))**FracPart(q)*(c*x**n + d)**(-FracPart(q))*Int(x**(m - n*q)*(a + b*x**n)**p*(e + f*x**n)**r*(c*x**n + d)**q, x))
    rubi.add(rule1037)

    pattern1038 = Pattern(Integral((g_*x_)**m_*(a_ + x_**WC('n', S(1))*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**WC('mn', S(1))*WC('d', S(1)))**WC('q', S(1))*(e_ + x_**WC('n', S(1))*WC('f', S(1)))**WC('r', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda mn, n: EqQ(mn, -n)))
    rule1038 = ReplacementRule(pattern1038, lambda mn, r, e, m, c, q, p, d, f, x, n, a, g, b : g**IntPart(m)*x**(-FracPart(m))*(g*x)**FracPart(m)*Int(x**m*(a + b*x**n)**p*(c + d*x**(-n))**q*(e + f*x**n)**r, x))
    rubi.add(rule1038)

    pattern1039 = Pattern(Integral((x_*WC('g', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1))*(e_ + x_**n_*WC('f', S(1)))**WC('r', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)))
    rule1039 = ReplacementRule(pattern1039, lambda r, e, m, c, q, p, d, f, x, n, a, g, b : Int((g*x)**m*(a + b*x**n)**p*(c + d*x**n)**q*(e + f*x**n)**r, x))
    rubi.add(rule1039)

    pattern1040 = Pattern(Integral(u_**WC('m', S(1))*(e_ + v_**n_*WC('f', S(1)))**WC('r', S(1))*(v_**n_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1))*(v_**n_*WC('d', S(1)) + WC('c', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda x, u, v: LinearPairQ(u, v, x)))
    rule1040 = ReplacementRule(pattern1040, lambda u, v, r, e, m, c, q, p, d, f, x, n, a, b : u**m*v**(-m)*Subst(Int(x**m*(a + b*x**n)**p*(c + d*x**n)**q*(e + f*x**n)**r, x), x, v)/Coefficient(v, x, 1))
    rubi.add(rule1040)

    pattern1041 = Pattern(Integral((x_*WC('g', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1))*(e1_ + x_**WC('n2', S(1))*WC('f1', S(1)))**WC('r', S(1))*(e2_ + x_**WC('n2', S(1))*WC('f2', S(1)))**WC('r', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e1, x: FreeQ(e1, x)), CustomConstraint(lambda f1, x: FreeQ(f1, x)), CustomConstraint(lambda e2, x: FreeQ(e2, x)), CustomConstraint(lambda f2, x: FreeQ(f2, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda n, n2: ZeroQ(-n/2 + n2)), CustomConstraint(lambda f2, e2, f1, e1: ZeroQ(e1*f2 + e2*f1)), CustomConstraint(lambda e2, r, e1: IntegerQ(r) | (PositiveQ(e1) & PositiveQ(e2))))
    rule1041 = ReplacementRule(pattern1041, lambda e2, e1, f2, r, m, c, q, p, d, b, x, f1, n, a, g, n2 : Int((g*x)**m*(a + b*x**n)**p*(c + d*x**n)**q*(e1*e2 + f1*f2*x**n)**r, x))
    rubi.add(rule1041)

    pattern1042 = Pattern(Integral((x_*WC('g', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)))**WC('p', S(1))*(c_ + x_**n_*WC('d', S(1)))**WC('q', S(1))*(e1_ + x_**WC('n2', S(1))*WC('f1', S(1)))**WC('r', S(1))*(e2_ + x_**WC('n2', S(1))*WC('f2', S(1)))**WC('r', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e1, x: FreeQ(e1, x)), CustomConstraint(lambda f1, x: FreeQ(f1, x)), CustomConstraint(lambda e2, x: FreeQ(e2, x)), CustomConstraint(lambda f2, x: FreeQ(f2, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda n, n2: ZeroQ(-n/2 + n2)), CustomConstraint(lambda f2, e2, f1, e1: ZeroQ(e1*f2 + e2*f1)))
    rule1042 = ReplacementRule(pattern1042, lambda e2, e1, f2, r, m, c, q, p, d, b, x, f1, n, a, g, n2 : (e1 + f1*x**(n/2))**FracPart(r)*(e2 + f2*x**(n/2))**FracPart(r)*(e1*e2 + f1*f2*x**n)**(-FracPart(r))*Int((g*x)**m*(a + b*x**n)**p*(c + d*x**n)**q*(e1*e2 + f1*f2*x**n)**r, x))
    rubi.add(rule1042)

    return rubi
