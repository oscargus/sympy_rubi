from sympy.external import import_module
matchpy = import_module("matchpy")
from sympy.utilities.decorator import doctest_depends_on

if matchpy:
    from matchpy import Pattern, ReplacementRule, CustomConstraint
    from sympy.integrals.rubi.utility_function import (Int, Set, With, Scan, MapAnd, FalseQ, ZeroQ, NegativeQ, NonzeroQ, FreeQ, List, Log, PositiveQ, PositiveIntegerQ, NegativeIntegerQ, IntegerQ, IntegersQ, ComplexNumberQ, PureComplexNumberQ, RealNumericQ, PositiveOrZeroQ, NegativeOrZeroQ, FractionOrNegativeQ, NegQ, Equal, Unequal, IntPart, FracPart, RationalQ, ProductQ, SumQ, NonsumQ, Subst, First, Rest, SqrtNumberQ, SqrtNumberSumQ, LinearQ, Sqrt, ArcCosh, Coefficient, Denominator, Hypergeometric2F1, Not, Simplify, FractionalPart, IntegerPart, AppellF1, EllipticPi, EllipticE, EllipticF, ArcTan, ArcTanh, ArcSin, ArcSinh, ArcCos, ArcCsc, ArcCsch, Sinh, Tanh, Cosh, Sech, Csch, Coth, LessEqual, Less, Greater, GreaterEqual, FractionQ, IntLinearcQ, Expand, IndependentQ, PowerQ, IntegerPowerQ, PositiveIntegerPowerQ, FractionalPowerQ, AtomQ, ExpQ, LogQ, Head, MemberQ, TrigQ, SinQ, CosQ, TanQ, CotQ, SecQ, CscQ, HyperbolicQ, SinhQ, CoshQ, TanhQ, CothQ, SechQ, CschQ, InverseTrigQ, SinCosQ, SinhCoshQ, LeafCount, Numerator, NumberQ, NumericQ, Length, ListQ, Im, Re, InverseHyperbolicQ, InverseFunctionQ, TrigHyperbolicFreeQ, InverseFunctionFreeQ, RealQ, EqQ, FractionalPowerFreeQ, ComplexFreeQ, PolynomialQ, FactorSquareFree, PowerOfLinearQ, Exponent, QuadraticQ, LinearPairQ, BinomialParts, TrinomialParts, PolyQ, EvenQ, OddQ, PerfectSquareQ, NiceSqrtAuxQ, NiceSqrtQ, Together, FixSimplify, PosAux, PosQ, CoefficientList, ReplaceAll, ExpandLinearProduct, GCD, ContentFactor, NumericFactor, NonnumericFactors, MakeAssocList, GensymSubst, KernelSubst, ExpandExpression, Apart, SmartApart, MatchQ, PolynomialQuotientRemainder, FreeFactors, NonfreeFactors, RemoveContentAux, RemoveContent, FreeTerms, NonfreeTerms, ExpandAlgebraicFunction, CollectReciprocals, ExpandCleanup, AlgebraicFunctionQ, Coeff, LeadTerm, RemainingTerms, LeadFactor, RemainingFactors, LeadBase, LeadDegree, Numer, Denom, hypergeom, Expon, MergeMonomials, PolynomialDivide, BinomialQ, TrinomialQ, GeneralizedBinomialQ, GeneralizedTrinomialQ, FactorSquareFreeList, PerfectPowerTest, SquareFreeFactorTest, RationalFunctionQ, RationalFunctionFactors, NonrationalFunctionFactors, Reverse, RationalFunctionExponents, RationalFunctionExpand, ExpandIntegrand, SimplerQ, SimplerSqrtQ, SumSimplerQ, BinomialDegree, TrinomialDegree, CancelCommonFactors, SimplerIntegrandQ, GeneralizedBinomialDegree, GeneralizedBinomialParts, GeneralizedTrinomialDegree, GeneralizedTrinomialParts, MonomialQ, MonomialSumQ, MinimumMonomialExponent, MonomialExponent, LinearMatchQ, PowerOfLinearMatchQ, QuadraticMatchQ, CubicMatchQ, BinomialMatchQ, TrinomialMatchQ, GeneralizedBinomialMatchQ, GeneralizedTrinomialMatchQ, QuotientOfLinearsMatchQ, PolynomialTermQ, PolynomialTerms, NonpolynomialTerms, PseudoBinomialParts, NormalizePseudoBinomial, PseudoBinomialPairQ, PseudoBinomialQ, PolynomialGCD, PolyGCD, AlgebraicFunctionFactors, NonalgebraicFunctionFactors, QuotientOfLinearsP, QuotientOfLinearsParts, QuotientOfLinearsQ, Flatten, Sort, AbsurdNumberQ, AbsurdNumberFactors, NonabsurdNumberFactors, SumSimplerAuxQ, Prepend, Drop, CombineExponents, FactorInteger, FactorAbsurdNumber, SubstForInverseFunction, SubstForFractionalPower, SubstForFractionalPowerOfQuotientOfLinears, FractionalPowerOfQuotientOfLinears, SubstForFractionalPowerQ, SubstForFractionalPowerAuxQ, FractionalPowerOfSquareQ, FractionalPowerSubexpressionQ, Apply, FactorNumericGcd, MergeableFactorQ, MergeFactor, MergeFactors, TrigSimplifyQ, TrigSimplify, Order, FactorOrder, Smallest, OrderedQ, MinimumDegree, PositiveFactors, Sign, NonpositiveFactors, PolynomialInAuxQ, PolynomialInQ, ExponentInAux, ExponentIn, PolynomialInSubstAux, PolynomialInSubst, Distrib, DistributeDegree, FunctionOfPower, DivideDegreesOfFactors, MonomialFactor, FullSimplify, FunctionOfLinearSubst, FunctionOfLinear, NormalizeIntegrand, NormalizeIntegrandAux, NormalizeIntegrandFactor, NormalizeIntegrandFactorBase, NormalizeTogether, NormalizeLeadTermSigns, AbsorbMinusSign, NormalizeSumFactors, SignOfFactor, NormalizePowerOfLinear, SimplifyIntegrand, SimplifyTerm, TogetherSimplify, SmartSimplify, SubstForExpn, ExpandToSum, UnifySum, UnifyTerms, UnifyTerm, CalculusQ, FunctionOfInverseLinear, PureFunctionOfSinhQ, PureFunctionOfTanhQ, PureFunctionOfCoshQ, IntegerQuotientQ, OddQuotientQ, EvenQuotientQ, FindTrigFactor, FunctionOfSinhQ, FunctionOfCoshQ, OddHyperbolicPowerQ, FunctionOfTanhQ, FunctionOfTanhWeight, FunctionOfHyperbolicQ, SmartNumerator, SmartDenominator, SubstForAux, ActivateTrig, ExpandTrig, TrigExpand, SubstForTrig, SubstForHyperbolic, InertTrigFreeQ, LCM, SubstForFractionalPowerOfLinear, FractionalPowerOfLinear, InverseFunctionOfLinear, InertTrigQ, InertReciprocalQ, DeactivateTrig, FixInertTrigFunction, DeactivateTrigAux, PowerOfInertTrigSumQ, PiecewiseLinearQ, KnownTrigIntegrandQ, KnownSineIntegrandQ, KnownTangentIntegrandQ, KnownCotangentIntegrandQ, KnownSecantIntegrandQ, TryPureTanSubst, TryTanhSubst, TryPureTanhSubst, AbsurdNumberGCD, AbsurdNumberGCDList, ExpandTrigExpand, ExpandTrigReduce, ExpandTrigReduceAux, NormalizeTrig, TrigToExp, ExpandTrigToExp, TrigReduce, FunctionOfTrig, AlgebraicTrigFunctionQ, FunctionOfHyperbolic, FunctionOfQ, FunctionOfExpnQ, PureFunctionOfSinQ, PureFunctionOfCosQ, PureFunctionOfTanQ, PureFunctionOfCotQ, FunctionOfCosQ, FunctionOfSinQ, OddTrigPowerQ, FunctionOfTanQ, FunctionOfTanWeight, FunctionOfTrigQ, FunctionOfDensePolynomialsQ, FunctionOfLog, PowerVariableExpn, PowerVariableDegree, PowerVariableSubst, EulerIntegrandQ, FunctionOfSquareRootOfQuadratic, SquareRootOfQuadraticSubst, Divides, EasyDQ, ProductOfLinearPowersQ, Rt, NthRoot, AtomBaseQ, SumBaseQ, NegSumBaseQ, AllNegTermQ, SomeNegTermQ, TrigSquareQ, RtAux, TrigSquare, IntSum, IntTerm, Map2, ConstantFactor, SameQ, ReplacePart, CommonFactors, MostMainFactorPosition, FunctionOfExponentialQ, FunctionOfExponential, FunctionOfExponentialFunction, FunctionOfExponentialFunctionAux, FunctionOfExponentialTest, FunctionOfExponentialTestAux, stdev, rubi_test, If, IntQuadraticQ, IntBinomialQ, RectifyTangent, RectifyCotangent, Inequality, Condition, SimpFixFactor, Simp, SimpHelp, SplitProduct, SplitSum, UnsameQ)
    from sympy import Integral, S, sqrt
    from sympy.integrals.rubi.symbol import WC
    from sympy.core.symbol import symbols

    A_, B_, C_, a_, b_, c_, d_, e_, f_, g_, h_, i_, j_, k_, l_, m_, n_, p_, q_, r_, t_, u_, v_, s_, w_, x_, z_ = [WC(i) for i in 'ABCabcdefghijklmnpqrtuvswxz']
    a1_, a2_, b1_, b2_, c1_, c2_, d1_, d2_, n1_, n2_, e1_, e2_, f1_, f2_, n1_, n2_, n3_, Pq_, Pm_, Px_, Qm_, Qr_, jn_, mn_, non2_ = [WC(i) for i in ['a1', 'a2', 'b1', 'b2', 'c1', 'c2', 'd1', 'd2', 'n1', 'n2', 'e1', 'e2', 'f1', 'f2', 'n1', 'n2', 'n3',' Pq', 'Pm', ' Px', 'Qm', 'Qr', 'jn', 'mn', 'non2']]
    p, q, r, s, mn, gcd, P, Q = symbols('p q r s mn gcd P Q')

    _UseGamma = False

def trinomial_products(rubi):

    pattern1 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, S(0))), CustomConstraint(lambda p: IntegerQ(p)))
    rule1 = ReplacementRule(pattern1, lambda c, n, p, b, n2, x, a : Int(x**(S(2)*n*p)*(a*x**(-S(2)*n) + b*x**(-n) + c)**p, x))
    rubi.add(rule1)

    pattern2 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: FractionQ(n)))
    rule2 = ReplacementRule(pattern2, lambda c, n, p, x, b, n2, a : With(List(Set(k, Denominator(n))), k*Subst(Int(x**(k + S(-1))*(a + b*x**(k*n) + c*x**(S(2)*k*n))**p, x), x, x**(1/k))))
    rubi.add(rule2)

    pattern3 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda n, p: ZeroQ(n*(S(2)*p + S(1)) + S(1))))
    rule3 = ReplacementRule(pattern3, lambda c, n, p, x, b, n2, a : x*(S(2)*a + b*x**n)*(a + b*x**n + c*x**(S(2)*n))**p/(S(2)*a))
    rubi.add(rule3)

    pattern4 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda n, p: ZeroQ(S(2)*n*(p + S(1)) + S(1))), CustomConstraint(lambda n: NonzeroQ(n + S(1))))
    rule4 = ReplacementRule(pattern4, lambda c, n, p, x, b, n2, a : x*(S(2)*a + b*x**n)*(a + b*x**n + c*x**(S(2)*n))**p/(S(2)*a*(n + S(1))) - x*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))/(a*(S(2)*p + S(1))))
    rubi.add(rule4)

    pattern5 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, p: ZeroQ(S(2)*n*p + S(1)) | ZeroQ(n*(S(2)*p + S(-1)) + S(1))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda p: IntegerQ(p + S(1)/2)))
    rule5 = ReplacementRule(pattern5, lambda c, n, p, x, b, n2, a : Int((b + S(2)*c*x**n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(-1)/2), x)*Sqrt(a + b*x**n + c*x**(S(2)*n))/(b + S(2)*c*x**n))
    rubi.add(rule5)

    pattern6 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, p: ZeroQ(S(2)*n*p + S(1)) | ZeroQ(n*(S(2)*p + S(-1)) + S(1))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda p: ~(IntegerQ(S(2)*p))))
    rule6 = ReplacementRule(pattern6, lambda c, n, p, x, b, n2, a : (S(4)*c)**(-IntPart(p))*(b + S(2)*c*x**n)**(-S(2)*FracPart(p))*(a + b*x**n + c*x**(S(2)*n))**FracPart(p)*Int((b + S(2)*c*x**n)**(S(2)*p), x))
    rubi.add(rule6)

    pattern7 = Pattern(Integral(sqrt(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: NonzeroQ(n + S(1))), CustomConstraint(lambda n: NonzeroQ(S(2)*n + S(1))), CustomConstraint(lambda n: NonzeroQ(S(3)*n + S(1))))
    rule7 = ReplacementRule(pattern7, lambda c, n, x, b, n2, a : b*n*x*Sqrt(a + b*x**n + c*x**(S(2)*n))/((b + S(2)*c*x**n)*(n + S(1))) + x*Sqrt(a + b*x**n + c*x**(S(2)*n))/(n + S(1)))
    rubi.add(rule7)

    pattern8 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda n: NegativeIntegerQ(n)))
    rule8 = ReplacementRule(pattern8, lambda c, n, p, x, b, n2, a : -Subst(Int((a + b*x**(-n) + c*x**(-S(2)*n))**p/x**S(2), x), x, 1/x))
    rubi.add(rule8)

    pattern9 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda n, p: NonzeroQ(S(2)*n*p + S(1))), CustomConstraint(lambda n, p: NonzeroQ(n*(S(2)*p + S(-1)) + S(1))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(1))))
    rule9 = ReplacementRule(pattern9, lambda c, n, p, x, b, n2, a : S(2)*a*n**S(2)*p*(S(2)*p + S(-1))*Int((a + b*x**n + c*x**(S(2)*n))**(p + S(-1)), x)/((S(2)*n*p + S(1))*(n*(S(2)*p + S(-1)) + S(1))) + n*p*x*(S(2)*a + b*x**n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(-1))/((S(2)*n*p + S(1))*(n*(S(2)*p + S(-1)) + S(1))) + x*(a + b*x**n + c*x**(S(2)*n))**p/(S(2)*n*p + S(1)))
    rubi.add(rule9)

    pattern10 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda n, p: NonzeroQ(n*(S(2)*p + S(1)) + S(1))), CustomConstraint(lambda n, p: NonzeroQ(S(2)*n*(p + S(1)) + S(1))), CustomConstraint(lambda n, p: RationalQ(n, p)), CustomConstraint(lambda p: Less(p, S(-1))))
    rule10 = ReplacementRule(pattern10, lambda c, n, p, x, b, n2, a : -x*(S(2)*a + b*x**n)*(a + b*x**n + c*x**(S(2)*n))**p/(S(2)*a*n*(S(2)*p + S(1))) + x*(-n*(S(2)*p + S(1)) + S(-1))*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))/(S(2)*a*n**S(2)*(p + S(1))*(S(2)*p + S(1))) + (S(2)*n*(p + S(1)) + S(1))*(n*(S(2)*p + S(1)) + S(1))*Int((a + b*x**n + c*x**(S(2)*n))**(p + S(1)), x)/(S(2)*a*n**S(2)*(p + S(1))*(S(2)*p + S(1))))
    rubi.add(rule10)

    pattern11 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule11 = ReplacementRule(pattern11, lambda c, n, p, x, b, n2, a : c**(-IntPart(p))*(b/S(2) + c*x**n)**(-S(2)*FracPart(p))*(a + b*x**n + c*x**(S(2)*n))**FracPart(p)*Int((b/S(2) + c*x**n)**(S(2)*p), x))
    rubi.add(rule11)

    pattern12 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: NegativeIntegerQ(n)))
    rule12 = ReplacementRule(pattern12, lambda c, n, p, x, b, n2, a : -Subst(Int((a + b*x**(-n) + c*x**(-S(2)*n))**p/x**S(2), x), x, 1/x))
    rubi.add(rule12)

    pattern13 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: PositiveIntegerQ(p)))
    rule13 = ReplacementRule(pattern13, lambda c, n, p, x, b, n2, a : Int(ExpandIntegrand((a + b*x**n + c*x**(S(2)*n))**p, x), x))
    rubi.add(rule13)

    pattern14 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n, p: NonzeroQ(S(2)*n*p + S(1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)), CustomConstraint(lambda n, p: IntegerQ(p) | ZeroQ(n + S(-2))))
    rule14 = ReplacementRule(pattern14, lambda c, n, p, x, b, n2, a : n*p*Int((S(2)*a + b*x**n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(-1)), x)/(S(2)*n*p + S(1)) + x*(a + b*x**n + c*x**(S(2)*n))**p/(S(2)*n*p + S(1)))
    rubi.add(rule14)

    pattern15 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)), CustomConstraint(lambda n, p: IntegerQ(p) | ZeroQ(n + S(-2))))
    rule15 = ReplacementRule(pattern15, lambda c, n, p, x, b, n2, a : -x*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))*(-S(2)*a*c + b**S(2) + b*c*x**n)/(a*n*(p + S(1))*(-S(4)*a*c + b**S(2))) + Int((a + b*x**n + c*x**(S(2)*n))**(p + S(1))*(-S(2)*a*c + b**S(2) + b*c*x**n*(n*(S(2)*p + S(3)) + S(1)) + n*(p + S(1))*(-S(4)*a*c + b**S(2))), x)/(a*n*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule15)

    pattern16 = Pattern(Integral(1/(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n/S(2))), CustomConstraint(lambda a, b, c: NegQ(-S(4)*a*c + b**S(2))))
    rule16 = ReplacementRule(pattern16, lambda c, n, x, b, n2, a : With(List(Set(q, Rt(a/c, S(2)))), With(List(Set(r, Rt(-b/c + S(2)*q, S(2)))), Int((r - x**(n/S(2)))/(q - r*x**(n/S(2)) + x**n), x)/(S(2)*c*q*r) + Int((r + x**(n/S(2)))/(q + r*x**(n/S(2)) + x**n), x)/(S(2)*c*q*r))))
    rubi.add(rule16)

    pattern17 = Pattern(Integral(1/(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))))
    rule17 = ReplacementRule(pattern17, lambda c, n, x, b, n2, a : With(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), c*Int(1/(b/S(2) + c*x**n - q/S(2)), x)/q - c*Int(1/(b/S(2) + c*x**n + q/S(2)), x)/q))
    rubi.add(rule17)

    pattern18 = Pattern(Integral(1/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda a, b, c: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c: NegativeQ(c)))
    rule18 = ReplacementRule(pattern18, lambda x, a, b, c : With(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), S(2)*Int(S(1)/(Sqrt(-b - S(2)*c*x**S(2) + q)*Sqrt(b + S(2)*c*x**S(2) + q)), x)*Sqrt(-c)))
    rubi.add(rule18)

    pattern19 = Pattern(Integral(1/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda a, b, c: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda a, c: PositiveQ(c/a)), CustomConstraint(lambda a, b: NegativeQ(b/a)))
    rule19 = ReplacementRule(pattern19, lambda x, a, b, c : With(List(Set(q, Rt(c/a, S(4)))), (q**S(2)*x**S(2) + S(1))*EllipticF(S(2)*ArcTan(q*x), -b*q**S(2)/(S(4)*c) + S(1)/2)*Sqrt((a + b*x**S(2) + c*x**S(4))/(a*(q**S(2)*x**S(2) + S(1))**S(2)))/(S(2)*q*Sqrt(a + b*x**S(2) + c*x**S(4)))))
    rubi.add(rule19)

    pattern20 = Pattern(Integral(1/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda a, b, c: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda a: NegativeQ(a)), CustomConstraint(lambda c: PositiveQ(c)))
    rule20 = ReplacementRule(pattern20, lambda x, a, b, c : With(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), Condition(EllipticF(ArcSin(x/Sqrt((S(2)*a + x**S(2)*(b + q))/(S(2)*q))), (b + q)/(S(2)*q))*Sqrt((S(2)*a + x**S(2)*(b + q))/q)*Sqrt(-S(2)*a - x**S(2)*(b - q))/(S(2)*Sqrt(-a)*Sqrt(a + b*x**S(2) + c*x**S(4))), IntegerQ(q))))
    rubi.add(rule20)

    pattern21 = Pattern(Integral(1/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda a, b, c: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda a: NegativeQ(a)), CustomConstraint(lambda c: PositiveQ(c)))
    rule21 = ReplacementRule(pattern21, lambda x, a, b, c : With(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), EllipticF(ArcSin(x/Sqrt((S(2)*a + x**S(2)*(b + q))/(S(2)*q))), (b + q)/(S(2)*q))*Sqrt((S(2)*a + x**S(2)*(b + q))/q)*Sqrt((S(2)*a + x**S(2)*(b - q))/(S(2)*a + x**S(2)*(b + q)))/(S(2)*Sqrt(a/(S(2)*a + x**S(2)*(b + q)))*Sqrt(a + b*x**S(2) + c*x**S(4)))))
    rubi.add(rule21)

    pattern22 = Pattern(Integral(1/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda a, b, c: PositiveQ(-S(4)*a*c + b**S(2))))
    rule22 = ReplacementRule(pattern22, lambda x, a, b, c : With(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), Condition((S(2)*a + x**S(2)*(b + q))*EllipticF(ArcTan(x*Rt((b + q)/(S(2)*a), S(2))), S(2)*q/(b + q))*Sqrt((S(2)*a + x**S(2)*(b - q))/(S(2)*a + x**S(2)*(b + q)))/(S(2)*a*Rt((b + q)/(S(2)*a), S(2))*Sqrt(a + b*x**S(2) + c*x**S(4))), PosQ((b + q)/a) & ~(PosQ((b - q)/a) & SimplerSqrtQ((b - q)/(S(2)*a), (b + q)/(S(2)*a))))))
    rubi.add(rule22)

    pattern23 = Pattern(Integral(1/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda a, b, c: PositiveQ(-S(4)*a*c + b**S(2))))
    rule23 = ReplacementRule(pattern23, lambda x, a, b, c : With(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), Condition((S(2)*a + x**S(2)*(b - q))*EllipticF(ArcTan(x*Rt((b - q)/(S(2)*a), S(2))), -S(2)*q/(b - q))*Sqrt((S(2)*a + x**S(2)*(b + q))/(S(2)*a + x**S(2)*(b - q)))/(S(2)*a*Rt((b - q)/(S(2)*a), S(2))*Sqrt(a + b*x**S(2) + c*x**S(4))), PosQ((b - q)/a))))
    rubi.add(rule23)

    pattern24 = Pattern(Integral(1/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda a, b, c: PositiveQ(-S(4)*a*c + b**S(2))))
    rule24 = ReplacementRule(pattern24, lambda x, a, b, c : With(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), Condition(EllipticF(ArcSin(x*Rt((-b - q)/(S(2)*a), S(2))), (b - q)/(b + q))*Sqrt(S(1) + x**S(2)*(b - q)/(S(2)*a))*Sqrt(S(1) + x**S(2)*(b + q)/(S(2)*a))/(Rt((-b - q)/(S(2)*a), S(2))*Sqrt(a + b*x**S(2) + c*x**S(4))), NegQ((b + q)/a) & ~(NegQ((b - q)/a) & SimplerSqrtQ((-b + q)/(S(2)*a), (-b - q)/(S(2)*a))))))
    rubi.add(rule24)

    pattern25 = Pattern(Integral(1/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda a, b, c: PositiveQ(-S(4)*a*c + b**S(2))))
    rule25 = ReplacementRule(pattern25, lambda x, a, b, c : With(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), Condition(EllipticF(ArcSin(x*Rt((-b + q)/(S(2)*a), S(2))), (b + q)/(b - q))*Sqrt(S(1) + x**S(2)*(b - q)/(S(2)*a))*Sqrt(S(1) + x**S(2)*(b + q)/(S(2)*a))/(Rt((-b + q)/(S(2)*a), S(2))*Sqrt(a + b*x**S(2) + c*x**S(4))), NegQ((b - q)/a))))
    rubi.add(rule25)

    pattern26 = Pattern(Integral(1/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda a, c: PosQ(c/a)))
    rule26 = ReplacementRule(pattern26, lambda x, a, b, c : With(List(Set(q, Rt(c/a, S(4)))), (q**S(2)*x**S(2) + S(1))*EllipticF(S(2)*ArcTan(q*x), -b*q**S(2)/(S(4)*c) + S(1)/2)*Sqrt((a + b*x**S(2) + c*x**S(4))/(a*(q**S(2)*x**S(2) + S(1))**S(2)))/(S(2)*q*Sqrt(a + b*x**S(2) + c*x**S(4)))))
    rubi.add(rule26)

    pattern27 = Pattern(Integral(1/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda a, c: NegQ(c/a)))
    rule27 = ReplacementRule(pattern27, lambda x, a, b, c : With(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), Int(S(1)/(Sqrt(S(2)*c*x**S(2)/(b - q) + S(1))*Sqrt(S(2)*c*x**S(2)/(b + q) + S(1))), x)*Sqrt(S(2)*c*x**S(2)/(b - q) + S(1))*Sqrt(S(2)*c*x**S(2)/(b + q) + S(1))/Sqrt(a + b*x**S(2) + c*x**S(4))))
    rubi.add(rule27)

    pattern28 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)))
    rule28 = ReplacementRule(pattern28, lambda c, n, p, x, b, n2, a : a**IntPart(p)*(S(2)*c*x**n/(b - Rt(-S(4)*a*c + b**S(2), S(2))) + S(1))**(-FracPart(p))*(S(2)*c*x**n/(b + Rt(-S(4)*a*c + b**S(2), S(2))) + S(1))**(-FracPart(p))*(a + b*x**n + c*x**(S(2)*n))**FracPart(p)*Int((S(2)*c*x**n/(b - Sqrt(-S(4)*a*c + b**S(2))) + S(1))**p*(S(2)*c*x**n/(b + Sqrt(-S(4)*a*c + b**S(2))) + S(1))**p, x))
    rubi.add(rule28)

    pattern29 = Pattern(Integral((a_ + x_**mn_*WC('b', S(1)) + x_**WC('n', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, mn: EqQ(mn, -n)), CustomConstraint(lambda p: IntegerQ(p)), CustomConstraint(lambda n: PosQ(n)))
    rule29 = ReplacementRule(pattern29, lambda c, n, p, mn, b, x, a : Int(x**(-n*p)*(a*x**n + b + c*x**(S(2)*n))**p, x))
    rubi.add(rule29)

    pattern30 = Pattern(Integral((a_ + x_**mn_*WC('b', S(1)) + x_**WC('n', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, mn: EqQ(mn, -n)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda n: PosQ(n)))
    rule30 = ReplacementRule(pattern30, lambda c, n, p, mn, b, x, a : x**(n*FracPart(p))*(a + b*x**(-n) + c*x**n)**FracPart(p)*(a*x**n + b + c*x**(S(2)*n))**(-FracPart(p))*Int(x**(-n*p)*(a*x**n + b + c*x**(S(2)*n))**p, x))
    rubi.add(rule30)

    pattern31 = Pattern(Integral((a_ + u_**n_*WC('b', S(1)) + u_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule31 = ReplacementRule(pattern31, lambda c, n, u, p, b, n2, x, a : Subst(Int((a + b*x**n + c*x**(S(2)*n))**p, x), x, u)/Coefficient(u, x, S(1)))
    rubi.add(rule31)

    pattern32 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda n, m: ZeroQ(Simplify(m - n + S(1)))))
    rule32 = ReplacementRule(pattern32, lambda c, n, p, b, n2, m, x, a : Subst(Int((a + b*x + c*x**S(2))**p, x), x, x**n)/n)
    rubi.add(rule32)

    pattern33 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda p: PositiveIntegerQ(p)), CustomConstraint(lambda n, m: ~(IntegerQ(Simplify((m + S(1))/n)))))
    rule33 = ReplacementRule(pattern33, lambda c, n, d, p, b, n2, m, x, a : Int(ExpandIntegrand((d*x)**m*(a + b*x**n + c*x**(S(2)*n))**p, x), x))
    rubi.add(rule33)

    pattern34 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda p: NegativeIntegerQ(p)), CustomConstraint(lambda n: NegQ(n)))
    rule34 = ReplacementRule(pattern34, lambda c, n, p, x, b, n2, m, a : Int(x**(m + S(2)*n*p)*(a*x**(-S(2)*n) + b*x**(-n) + c)**p, x))
    rubi.add(rule34)

    pattern35 = Pattern(Integral(sqrt(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))/x_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: ZeroQ(-S(4)*a*c + b**S(2))))
    rule35 = ReplacementRule(pattern35, lambda c, n, x, b, n2, a : b*Log(x)*Sqrt(a + b*x**n + c*x**(S(2)*n))/(b + S(2)*c*x**n) + Sqrt(a + b*x**n + c*x**(S(2)*n))/n)
    rubi.add(rule35)

    pattern36 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_/x_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(1))))
    rule36 = ReplacementRule(pattern36, lambda c, n, p, x, b, n2, a : a*Int((a + b*x**n + c*x**(S(2)*n))**(p + S(-1))/x, x) + (S(2)*a + b*x**n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(-1))/(S(2)*n*(S(2)*p + S(-1))) + (a + b*x**n + c*x**(S(2)*n))**p/(S(2)*n*p))
    rubi.add(rule36)

    pattern37 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_/x_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))))
    rule37 = ReplacementRule(pattern37, lambda c, n, p, x, b, n2, a : Int((a + b*x**n + c*x**(S(2)*n))**(p + S(1))/x, x)/a - (S(2)*a + b*x**n)*(a + b*x**n + c*x**(S(2)*n))**p/(S(2)*a*n*(S(2)*p + S(1))) - (a + b*x**n + c*x**(S(2)*n))**(p + S(1))/(S(2)*a*n*(p + S(1))))
    rubi.add(rule37)

    pattern38 = Pattern(Integral((a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_/x_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule38 = ReplacementRule(pattern38, lambda c, n, p, x, b, n2, a : c**(-IntPart(p))*(b/S(2) + c*x**n)**(-S(2)*FracPart(p))*(a + b*x**n + c*x**(S(2)*n))**FracPart(p)*Int((b/S(2) + c*x**n)**(S(2)*p)/x, x))
    rubi.add(rule38)

    pattern39 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, p, m: ZeroQ(m + n*(S(2)*p + S(1)) + S(1))))
    rule39 = ReplacementRule(pattern39, lambda c, n, d, p, b, n2, m, x, a : (d*x)**(m + S(1))*(b + S(2)*c*x**n)*(a + b*x**n + c*x**(S(2)*n))**p/(b*d*(m + S(1))))
    rubi.add(rule39)

    pattern40 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*sqrt(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, m: ZeroQ(m + n + S(1))))
    rule40 = ReplacementRule(pattern40, lambda c, n, d, b, n2, m, x, a : Int((d*x)**m*(b + S(2)*c*x**n), x)*Sqrt(a + b*x**n + c*x**(S(2)*n))/(b + S(2)*c*x**n))
    rubi.add(rule40)

    pattern41 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*sqrt(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, m: NonzeroQ(m + n + S(1))))
    rule41 = ReplacementRule(pattern41, lambda c, n, d, b, n2, m, x, a : b*n*(d*x)**(m + S(1))*Sqrt(a + b*x**n + c*x**(S(2)*n))/(d*(b + S(2)*c*x**n)*(m + S(1))*(m + n + S(1))) + (d*x)**(m + S(1))*Sqrt(a + b*x**n + c*x**(S(2)*n))/(d*(m + n + S(1))))
    rubi.add(rule41)

    pattern42 = Pattern(Integral(x_**WC('m', S(1))/sqrt(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, m: ZeroQ(m + n + S(1))))
    rule42 = ReplacementRule(pattern42, lambda c, n, x, b, n2, m, a : -b*Int(S(1)/(x*Sqrt(a + b*x**n + c*x**(S(2)*n))), x)/(S(2)*a) - x**(m + S(1))*Sqrt(a + b*x**n + c*x**(S(2)*n))/(a*n))
    rubi.add(rule42)

    pattern43 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, p, m: ZeroQ(m + S(2)*n*(p + S(1)) + S(1))), CustomConstraint(lambda p: NonzeroQ(S(2)*p + S(1))))
    rule43 = ReplacementRule(pattern43, lambda c, n, d, p, b, n2, m, x, a : -(d*x)**(m + S(1))*(S(2)*a + b*x**n)*(a + b*x**n + c*x**(S(2)*n))**p/(S(2)*a*d*n*(S(2)*p + S(1))) + (d*x)**(m + S(1))*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))/(S(2)*a*d*n*(p + S(1))*(S(2)*p + S(1))))
    rubi.add(rule43)

    pattern44 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, m: ZeroQ(m - S(2)*n + S(1))), CustomConstraint(lambda p: NonzeroQ(p + S(3)/2)))
    rule44 = ReplacementRule(pattern44, lambda c, n, p, x, b, n2, m, a : -b*Int(x**(n + S(-1))*(a + b*x**n + c*x**(S(2)*n))**p, x)/(S(2)*c) + (a + b*x**n + c*x**(S(2)*n))**(p + S(1))/(S(2)*c*n*(p + S(1))))
    rubi.add(rule44)

    pattern45 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, S(1))), CustomConstraint(lambda n, m: Inequality(S(-1), LessEqual, m + n, Less, S(0))), CustomConstraint(lambda p: IntegerQ(S(2)*p)), CustomConstraint(lambda m: IntegerQ(m)))
    rule45 = ReplacementRule(pattern45, lambda c, n, d, p, b, n2, m, x, a : -b*d**(-n)*n**S(2)*p*(S(2)*p + S(-1))*Int((d*x)**(m + n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(-1)), x)/((m + S(1))*(m + S(2)*n*p + S(1))) + n*p*(d*x)**(m + S(1))*(S(2)*a + b*x**n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(-1))/(d*(m + S(1))*(m + S(2)*n*p + S(1))) + (d*x)**(m + S(1))*(a + b*x**n + c*x**(S(2)*n))**p/(d*(m + S(2)*n*p + S(1))))
    rubi.add(rule45)

    pattern46 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, S(1))), CustomConstraint(lambda n, m: Less(m + n, S(-1))), CustomConstraint(lambda n, p, m: ~(NegativeIntegerQ((m + S(2)*n*(p + S(1)) + S(1))/n) & Greater(p + (m + S(2)*n*(p + S(1)) + S(1))/n, S(0)))), CustomConstraint(lambda p: IntegerQ(S(2)*p)), CustomConstraint(lambda m: IntegerQ(m)))
    rule46 = ReplacementRule(pattern46, lambda c, n, d, p, b, n2, m, x, a : S(2)*c*d**(-S(2)*n)*n**S(2)*p*(S(2)*p + S(-1))*Int((d*x)**(m + S(2)*n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(-1)), x)/((m + S(1))*(m + n + S(1))) + n*p*(d*x)**(m + S(1))*(S(2)*a + b*x**n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(-1))/(d*(m + S(1))*(m + n + S(1))) + (d*x)**(m + S(1))*(a + b*x**n + c*x**(S(2)*n))**p*(m - n*(S(2)*p + S(-1)) + S(1))/(d*(m + S(1))*(m + n + S(1))))
    rubi.add(rule46)

    pattern47 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(1))), CustomConstraint(lambda n, p, m: NonzeroQ(m + S(2)*n*p + S(1))), CustomConstraint(lambda n, p, m: NonzeroQ(m + n*(S(2)*p + S(-1)) + S(1))), CustomConstraint(lambda n, p, m: ~(NegativeIntegerQ((m + S(2)*n*(p + S(1)) + S(1))/n) & Greater(p + (m + S(2)*n*(p + S(1)) + S(1))/n, S(0)))), CustomConstraint(lambda n, p, m: ~(PositiveIntegerQ(m) & IntegerQ((m + S(1))/n) & Less(S(-1) + (m + S(1))/n, S(2)*p))), CustomConstraint(lambda p: IntegerQ(S(2)*p)))
    rule47 = ReplacementRule(pattern47, lambda c, n, d, p, b, n2, m, x, a : S(2)*a*n**S(2)*p*(S(2)*p + S(-1))*Int((d*x)**m*(a + b*x**n + c*x**(S(2)*n))**(p + S(-1)), x)/((m + S(2)*n*p + S(1))*(m + n*(S(2)*p + S(-1)) + S(1))) + n*p*(d*x)**(m + S(1))*(S(2)*a + b*x**n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(-1))/(d*(m + S(2)*n*p + S(1))*(m + n*(S(2)*p + S(-1)) + S(1))) + (d*x)**(m + S(1))*(a + b*x**n + c*x**(S(2)*n))**p/(d*(m + S(2)*n*p + S(1))))
    rubi.add(rule47)

    pattern48 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda n, m: Inequality(n + S(-1), Less, m, LessEqual, S(2)*n + S(-1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)))
    rule48 = ReplacementRule(pattern48, lambda c, n, d, p, b, n2, m, x, a : -d**n*(m - n + S(1))*(m + n*(S(2)*p + S(1)) + S(1))*Int((d*x)**(m - n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(1)), x)/(b*n**S(2)*(p + S(1))*(S(2)*p + S(1))) + d**(n + S(-1))*(d*x)**(m - n + S(1))*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))*(m + n*(S(2)*p + S(1)) + S(1))/(b*n**S(2)*(p + S(1))*(S(2)*p + S(1))) - (d*x)**(m + S(1))*(b + S(2)*c*x**n)*(a + b*x**n + c*x**(S(2)*n))**p/(b*d*n*(S(2)*p + S(1))))
    rubi.add(rule48)

    pattern49 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda n, m: Greater(m, S(2)*n + S(-1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)))
    rule49 = ReplacementRule(pattern49, lambda c, n, d, p, b, n2, m, x, a : d**(S(2)*n)*(m - S(2)*n + S(1))*(m - n + S(1))*Int((d*x)**(m - S(2)*n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(1)), x)/(S(2)*c*n**S(2)*(p + S(1))*(S(2)*p + S(1))) - d**(S(2)*n + S(-1))*(d*x)**(m - S(2)*n + S(1))*(S(2)*a + b*x**n)*(a + b*x**n + c*x**(S(2)*n))**p/(S(2)*c*n*(S(2)*p + S(1))) - d**(S(2)*n + S(-1))*(d*x)**(m - S(2)*n + S(1))*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))*(m - S(2)*n*p - S(3)*n + S(1))/(S(2)*c*n**S(2)*(p + S(1))*(S(2)*p + S(1))))
    rubi.add(rule49)

    pattern50 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)))
    rule50 = ReplacementRule(pattern50, lambda c, n, d, p, b, n2, m, x, a : (m + S(2)*n*(p + S(1)) + S(1))*(m + n*(S(2)*p + S(1)) + S(1))*Int((d*x)**m*(a + b*x**n + c*x**(S(2)*n))**(p + S(1)), x)/(S(2)*a*n**S(2)*(p + S(1))*(S(2)*p + S(1))) - (d*x)**(m + S(1))*(S(2)*a + b*x**n)*(a + b*x**n + c*x**(S(2)*n))**p/(S(2)*a*d*n*(S(2)*p + S(1))) + (d*x)**(m + S(1))*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))*(-m - n*(S(2)*p + S(1)) + S(-1))/(S(2)*a*d*n**S(2)*(p + S(1))*(S(2)*p + S(1))))
    rubi.add(rule50)

    pattern51 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda n, m: Greater(m, n + S(-1))), CustomConstraint(lambda n, p, m: NonzeroQ(m + S(2)*n*p + S(1))), CustomConstraint(lambda n, m, p: IntegerQ(S(2)*p) | PositiveIntegerQ((m + S(1))/n)))
    rule51 = ReplacementRule(pattern51, lambda c, n, d, p, b, n2, m, x, a : -b*d**n*(m - n + S(1))*Int((d*x)**(m - n)*(a + b*x**n + c*x**(S(2)*n))**p, x)/(S(2)*c*(m + S(2)*n*p + S(1))) + d**(n + S(-1))*(d*x)**(m - n + S(1))*(b + S(2)*c*x**n)*(a + b*x**n + c*x**(S(2)*n))**p/(S(2)*c*(m + S(2)*n*p + S(1))))
    rubi.add(rule51)

    pattern52 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda n, m, p: IntegerQ(S(2)*p) | PositiveIntegerQ((m + S(1))/n)))
    rule52 = ReplacementRule(pattern52, lambda c, n, d, p, b, n2, m, x, a : -S(2)*c*d**(-n)*(m + n*(S(2)*p + S(1)) + S(1))*Int((d*x)**(m + n)*(a + b*x**n + c*x**(S(2)*n))**p, x)/(b*(m + S(1))) + (d*x)**(m + S(1))*(b + S(2)*c*x**n)*(a + b*x**n + c*x**(S(2)*n))**p/(b*d*(m + S(1))))
    rubi.add(rule52)

    pattern53 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda m: IntegerQ(m)))
    rule53 = ReplacementRule(pattern53, lambda c, n, p, x, b, n2, m, a : -Subst(Int(x**(-m + S(-2))*(a + b*x**(-n) + c*x**(-S(2)*n))**p, x), x, 1/x))
    rubi.add(rule53)

    pattern54 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda m: FractionQ(m)))
    rule54 = ReplacementRule(pattern54, lambda c, n, d, p, b, n2, m, x, a : With(List(Set(k, Denominator(m))), -k*Subst(Int(x**(-k*(m + S(1)) + S(-1))*(a + b*d**(-n)*x**(-k*n) + c*d**(-S(2)*n)*x**(-S(2)*k*n))**p, x), x, (d*x)**(-S(1)/k))/d))
    rubi.add(rule54)

    pattern55 = Pattern(Integral((x_*WC('d', S(1)))**m_*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda m: ~(RationalQ(m))))
    rule55 = ReplacementRule(pattern55, lambda c, n, d, p, x, b, n2, m, a : -d**IntPart(m)*(d*x)**FracPart(m)*(1/x)**FracPart(m)*Subst(Int(x**(-m + S(-2))*(a + b*x**(-n) + c*x**(-S(2)*n))**p, x), x, 1/x))
    rubi.add(rule55)

    pattern56 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule56 = ReplacementRule(pattern56, lambda c, n, d, p, b, n2, m, x, a : c**(-IntPart(p))*(b/S(2) + c*x**n)**(-S(2)*FracPart(p))*(a + b*x**n + c*x**(S(2)*n))**FracPart(p)*Int((d*x)**m*(b/S(2) + c*x**n)**(S(2)*p), x))
    rubi.add(rule56)

    pattern57 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, m: IntegerQ(Simplify((m + S(1))/n))))
    rule57 = ReplacementRule(pattern57, lambda c, n, p, b, n2, m, x, a : Subst(Int(x**(Simplify((m + S(1))/n) + S(-1))*(a + b*x + c*x**S(2))**p, x), x, x**n)/n)
    rubi.add(rule57)

    pattern58 = Pattern(Integral((d_*x_)**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, m: IntegerQ(Simplify((m + S(1))/n))))
    rule58 = ReplacementRule(pattern58, lambda c, n, d, p, b, n2, m, x, a : d**IntPart(m)*x**(-FracPart(m))*(d*x)**FracPart(m)*Int(x**m*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule58)

    pattern59 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: IntegerQ(m)))
    rule59 = ReplacementRule(pattern59, lambda c, n, p, x, b, n2, m, a : With(List(Set(k, GCD(m + S(1), n))), Condition(Subst(Int(x**(S(-1) + (m + S(1))/k)*(a + b*x**(n/k) + c*x**(S(2)*n/k))**p, x), x, x**k)/k, Unequal(k, S(1)))))
    rubi.add(rule59)

    pattern60 = Pattern(Integral((x_*WC('d', S(1)))**m_*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: FractionQ(m)), CustomConstraint(lambda p: IntegerQ(p)))
    rule60 = ReplacementRule(pattern60, lambda c, n, d, p, x, b, n2, m, a : With(List(Set(k, Denominator(m))), k*Subst(Int(x**(k*(m + S(1)) + S(-1))*(a + b*d**(-n)*x**(k*n) + c*d**(-S(2)*n)*x**(S(2)*k*n))**p, x), x, (d*x)**(1/k))/d))
    rubi.add(rule60)

    pattern61 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n, m: Greater(m, n + S(-1))), CustomConstraint(lambda n, p, m: Unequal(m + S(2)*n*p + S(1), S(0))), CustomConstraint(lambda n, p, m: Unequal(m + n*(S(2)*p + S(-1)) + S(1), S(0))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule61 = ReplacementRule(pattern61, lambda c, n, d, p, b, n2, m, x, a : -d**n*n*p*Int((d*x)**(m - n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(-1))*Simp(a*b*(m - n + S(1)) - x**n*(S(2)*a*c*(m + n*(S(2)*p + S(-1)) + S(1)) - b**S(2)*(m + n*(p + S(-1)) + S(1))), x), x)/(c*(m + S(2)*n*p + S(1))*(m + n*(S(2)*p + S(-1)) + S(1))) + d**(n + S(-1))*(d*x)**(m - n + S(1))*(b*n*p + c*x**n*(m + n*(S(2)*p + S(-1)) + S(1)))*(a + b*x**n + c*x**(S(2)*n))**p/(c*(m + S(2)*n*p + S(1))*(m + n*(S(2)*p + S(-1)) + S(1))))
    rubi.add(rule61)

    pattern62 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule62 = ReplacementRule(pattern62, lambda c, n, d, p, b, n2, m, x, a : -d**(-n)*n*p*Int((d*x)**(m + n)*(b + S(2)*c*x**n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(-1)), x)/(m + S(1)) + (d*x)**(m + S(1))*(a + b*x**n + c*x**(S(2)*n))**p/(d*(m + S(1))))
    rubi.add(rule62)

    pattern63 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n, p, m: NonzeroQ(m + S(2)*n*p + S(1))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule63 = ReplacementRule(pattern63, lambda c, n, d, p, b, n2, m, x, a : n*p*Int((d*x)**m*(S(2)*a + b*x**n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(-1)), x)/(m + S(2)*n*p + S(1)) + (d*x)**(m + S(1))*(a + b*x**n + c*x**(S(2)*n))**p/(d*(m + S(2)*n*p + S(1))))
    rubi.add(rule63)

    pattern64 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda n, m: Inequality(n + S(-1), Less, m, LessEqual, S(2)*n + S(-1))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule64 = ReplacementRule(pattern64, lambda c, n, d, p, b, n2, m, x, a : -d**n*Int((d*x)**(m - n)*(b*(m - n + S(1)) + S(2)*c*x**n*(m + S(2)*n*(p + S(1)) + S(1)))*(a + b*x**n + c*x**(S(2)*n))**(p + S(1)), x)/(n*(p + S(1))*(-S(4)*a*c + b**S(2))) + d**(n + S(-1))*(d*x)**(m - n + S(1))*(b + S(2)*c*x**n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))/(n*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule64)

    pattern65 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda n, m: Greater(m, S(2)*n + S(-1))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule65 = ReplacementRule(pattern65, lambda c, n, d, p, b, n2, m, x, a : d**(S(2)*n)*Int((d*x)**(m - S(2)*n)*(S(2)*a*(m - S(2)*n + S(1)) + b*x**n*(m + n*(S(2)*p + S(1)) + S(1)))*(a + b*x**n + c*x**(S(2)*n))**(p + S(1)), x)/(n*(p + S(1))*(-S(4)*a*c + b**S(2))) - d**(S(2)*n + S(-1))*(d*x)**(m - S(2)*n + S(1))*(S(2)*a + b*x**n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))/(n*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule65)

    pattern66 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule66 = ReplacementRule(pattern66, lambda c, n, d, p, b, n2, m, x, a : Int((d*x)**m*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))*Simp(-S(2)*a*c*(m + S(2)*n*(p + S(1)) + S(1)) + b**S(2)*(m + n*(p + S(1)) + S(1)) + b*c*x**n*(m + S(2)*n*p + S(3)*n + S(1)), x), x)/(a*n*(p + S(1))*(-S(4)*a*c + b**S(2))) - (d*x)**(m + S(1))*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))*(-S(2)*a*c + b**S(2) + b*c*x**n)/(a*d*n*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule66)

    pattern67 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda n, m: Greater(m, S(2)*n + S(-1))), CustomConstraint(lambda n, p, m: NonzeroQ(m + S(2)*n*p + S(1))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule67 = ReplacementRule(pattern67, lambda c, n, d, p, b, n2, m, x, a : -d**(S(2)*n)*Int((d*x)**(m - S(2)*n)*(a + b*x**n + c*x**(S(2)*n))**p*Simp(a*(m - S(2)*n + S(1)) + b*x**n*(m + n*(p + S(-1)) + S(1)), x), x)/(c*(m + S(2)*n*p + S(1))) + d**(S(2)*n + S(-1))*(d*x)**(m - S(2)*n + S(1))*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))/(c*(m + S(2)*n*p + S(1))))
    rubi.add(rule67)

    pattern68 = Pattern(Integral((x_*WC('d', S(1)))**m_*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule68 = ReplacementRule(pattern68, lambda c, n, d, p, x, b, n2, m, a : -d**(-n)*Int((d*x)**(m + n)*(b*(m + n*(p + S(1)) + S(1)) + c*x**n*(m + S(2)*n*(p + S(1)) + S(1)))*(a + b*x**n + c*x**(S(2)*n))**p, x)/(a*(m + S(1))) + (d*x)**(m + S(1))*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))/(a*d*(m + S(1))))
    rubi.add(rule68)

    pattern69 = Pattern(Integral((x_*WC('d', S(1)))**m_/(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))))
    rule69 = ReplacementRule(pattern69, lambda c, n, d, x, b, n2, m, a : -d**(-n)*Int((d*x)**(m + n)*(b + c*x**n)/(a + b*x**n + c*x**(S(2)*n)), x)/a + (d*x)**(m + S(1))/(a*d*(m + S(1))))
    rubi.add(rule69)

    pattern70 = Pattern(Integral(x_**m_/(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: IntegerQ(m)), CustomConstraint(lambda n, m: Greater(m, S(3)*n + S(-1))))
    rule70 = ReplacementRule(pattern70, lambda c, n, x, b, n2, m, a : Int(PolynomialDivide(x**m, a + b*x**n + c*x**(S(2)*n), x), x))
    rubi.add(rule70)

    pattern71 = Pattern(Integral((x_*WC('d', S(1)))**m_/(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda n, m: Greater(m, S(2)*n + S(-1))))
    rule71 = ReplacementRule(pattern71, lambda c, n, d, x, b, n2, m, a : -d**(S(2)*n)*Int((d*x)**(m - S(2)*n)*(a + b*x**n)/(a + b*x**n + c*x**(S(2)*n)), x)/c + d**(S(2)*n + S(-1))*(d*x)**(m - S(2)*n + S(1))/(c*(m - S(2)*n + S(1))))
    rubi.add(rule71)

    pattern72 = Pattern(Integral(x_**S(2)/(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda a, b, c: NegativeQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda a, c: PosQ(a*c)))
    rule72 = ReplacementRule(pattern72, lambda x, a, b, c : With(List(Set(q, Rt(a/c, S(2)))), -Int((q - x**S(2))/(a + b*x**S(2) + c*x**S(4)), x)/S(2) + Int((q + x**S(2))/(a + b*x**S(2) + c*x**S(4)), x)/S(2)))
    rubi.add(rule72)

    pattern73 = Pattern(Integral(x_**WC('m', S(1))/(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, m: PositiveIntegerQ(n/S(2), m)), CustomConstraint(lambda n, m: Inequality(S(3)*n/S(2), LessEqual, m, Less, S(2)*n)), CustomConstraint(lambda a, b, c: NegQ(-S(4)*a*c + b**S(2))))
    rule73 = ReplacementRule(pattern73, lambda c, n, x, b, n2, m, a : With(List(Set(q, Rt(a/c, S(2)))), With(List(Set(r, Rt(-b/c + S(2)*q, S(2)))), -Int(x**(m - S(3)*n/S(2))*(q - r*x**(n/S(2)))/(q - r*x**(n/S(2)) + x**n), x)/(S(2)*c*r) + Int(x**(m - S(3)*n/S(2))*(q + r*x**(n/S(2)))/(q + r*x**(n/S(2)) + x**n), x)/(S(2)*c*r))))
    rubi.add(rule73)

    pattern74 = Pattern(Integral(x_**WC('m', S(1))/(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, m: PositiveIntegerQ(n/S(2), m)), CustomConstraint(lambda n, m: Inequality(n/S(2), LessEqual, m, Less, S(3)*n/S(2))), CustomConstraint(lambda a, b, c: NegQ(-S(4)*a*c + b**S(2))))
    rule74 = ReplacementRule(pattern74, lambda c, n, x, b, n2, m, a : With(List(Set(q, Rt(a/c, S(2)))), With(List(Set(r, Rt(-b/c + S(2)*q, S(2)))), Int(x**(m - n/S(2))/(q - r*x**(n/S(2)) + x**n), x)/(S(2)*c*r) - Int(x**(m - n/S(2))/(q + r*x**(n/S(2)) + x**n), x)/(S(2)*c*r))))
    rubi.add(rule74)

    pattern75 = Pattern(Integral((x_*WC('d', S(1)))**m_/(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda n, m: GreaterEqual(m, n)))
    rule75 = ReplacementRule(pattern75, lambda c, n, d, x, b, n2, m, a : With(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), -d**n*(b/q + S(-1))*Int((d*x)**(m - n)/(b/S(2) + c*x**n - q/S(2)), x)/S(2) + d**n*(b/q + S(1))*Int((d*x)**(m - n)/(b/S(2) + c*x**n + q/S(2)), x)/S(2)))
    rubi.add(rule75)

    pattern76 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))/(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)))
    rule76 = ReplacementRule(pattern76, lambda c, n, d, b, n2, m, x, a : With(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), c*Int((d*x)**m/(b/S(2) + c*x**n - q/S(2)), x)/q - c*Int((d*x)**m/(b/S(2) + c*x**n + q/S(2)), x)/q))
    rubi.add(rule76)

    pattern77 = Pattern(Integral(x_**S(2)/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda a, b, c: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c: NegativeQ(c)))
    rule77 = ReplacementRule(pattern77, lambda x, a, b, c : With(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), S(2)*Int(x**S(2)/(Sqrt(-b - S(2)*c*x**S(2) + q)*Sqrt(b + S(2)*c*x**S(2) + q)), x)*Sqrt(-c)))
    rubi.add(rule77)

    pattern78 = Pattern(Integral(x_**S(2)/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda a, b, c: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda a, c: PositiveQ(c/a)), CustomConstraint(lambda a, b: NegativeQ(b/a)))
    rule78 = ReplacementRule(pattern78, lambda x, a, b, c : With(List(Set(q, Rt(c/a, S(2)))), -Int((-q*x**S(2) + S(1))/Sqrt(a + b*x**S(2) + c*x**S(4)), x)/q + Int(1/Sqrt(a + b*x**S(2) + c*x**S(4)), x)/q))
    rubi.add(rule78)

    pattern79 = Pattern(Integral(x_**S(2)/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda a, b, c: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda a: NegativeQ(a)), CustomConstraint(lambda c: PositiveQ(c)))
    rule79 = ReplacementRule(pattern79, lambda x, a, b, c : With(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), (-b + q)*Int(1/Sqrt(a + b*x**S(2) + c*x**S(4)), x)/(S(2)*c) + Int((b + S(2)*c*x**S(2) - q)/Sqrt(a + b*x**S(2) + c*x**S(4)), x)/(S(2)*c)))
    rubi.add(rule79)

    pattern80 = Pattern(Integral(x_**S(2)/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda a, b, c: PositiveQ(-S(4)*a*c + b**S(2))))
    rule80 = ReplacementRule(pattern80, lambda x, a, b, c : With(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), Condition(x*(b + S(2)*c*x**S(2) + q)/(S(2)*c*Sqrt(a + b*x**S(2) + c*x**S(4))) - (S(2)*a + x**S(2)*(b + q))*EllipticE(ArcTan(x*Rt((b + q)/(S(2)*a), S(2))), S(2)*q/(b + q))*Rt((b + q)/(S(2)*a), S(2))*Sqrt((S(2)*a + x**S(2)*(b - q))/(S(2)*a + x**S(2)*(b + q)))/(S(2)*c*Sqrt(a + b*x**S(2) + c*x**S(4))), PosQ((b + q)/a) & ~(PosQ((b - q)/a) & SimplerSqrtQ((b - q)/(S(2)*a), (b + q)/(S(2)*a))))))
    rubi.add(rule80)

    pattern81 = Pattern(Integral(x_**S(2)/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda a, b, c: PositiveQ(-S(4)*a*c + b**S(2))))
    rule81 = ReplacementRule(pattern81, lambda x, a, b, c : With(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), Condition(x*(b + S(2)*c*x**S(2) - q)/(S(2)*c*Sqrt(a + b*x**S(2) + c*x**S(4))) - (S(2)*a + x**S(2)*(b - q))*EllipticE(ArcTan(x*Rt((b - q)/(S(2)*a), S(2))), -S(2)*q/(b - q))*Rt((b - q)/(S(2)*a), S(2))*Sqrt((S(2)*a + x**S(2)*(b + q))/(S(2)*a + x**S(2)*(b - q)))/(S(2)*c*Sqrt(a + b*x**S(2) + c*x**S(4))), PosQ((b - q)/a))))
    rubi.add(rule81)

    pattern82 = Pattern(Integral(x_**S(2)/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda a, b, c: PositiveQ(-S(4)*a*c + b**S(2))))
    rule82 = ReplacementRule(pattern82, lambda x, a, b, c : With(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), Condition((-b - q)*Int(1/Sqrt(a + b*x**S(2) + c*x**S(4)), x)/(S(2)*c) + Int((b + S(2)*c*x**S(2) + q)/Sqrt(a + b*x**S(2) + c*x**S(4)), x)/(S(2)*c), NegQ((b + q)/a) & ~(NegQ((b - q)/a) & SimplerSqrtQ((-b + q)/(S(2)*a), (-b - q)/(S(2)*a))))))
    rubi.add(rule82)

    pattern83 = Pattern(Integral(x_**S(2)/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda a, b, c: PositiveQ(-S(4)*a*c + b**S(2))))
    rule83 = ReplacementRule(pattern83, lambda x, a, b, c : With(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), Condition((-b + q)*Int(1/Sqrt(a + b*x**S(2) + c*x**S(4)), x)/(S(2)*c) + Int((b + S(2)*c*x**S(2) - q)/Sqrt(a + b*x**S(2) + c*x**S(4)), x)/(S(2)*c), NegQ((b - q)/a))))
    rubi.add(rule83)

    pattern84 = Pattern(Integral(x_**S(2)/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda a, c: PosQ(c/a)))
    rule84 = ReplacementRule(pattern84, lambda x, a, b, c : With(List(Set(q, Rt(c/a, S(2)))), -Int((-q*x**S(2) + S(1))/Sqrt(a + b*x**S(2) + c*x**S(4)), x)/q + Int(1/Sqrt(a + b*x**S(2) + c*x**S(4)), x)/q))
    rubi.add(rule84)

    pattern85 = Pattern(Integral(x_**S(2)/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda a, c: NegQ(c/a)))
    rule85 = ReplacementRule(pattern85, lambda x, a, b, c : With(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), Int(x**S(2)/(Sqrt(S(2)*c*x**S(2)/(b - q) + S(1))*Sqrt(S(2)*c*x**S(2)/(b + q) + S(1))), x)*Sqrt(S(2)*c*x**S(2)/(b - q) + S(1))*Sqrt(S(2)*c*x**S(2)/(b + q) + S(1))/Sqrt(a + b*x**S(2) + c*x**S(4))))
    rubi.add(rule85)

    pattern86 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda m: IntegerQ(m)))
    rule86 = ReplacementRule(pattern86, lambda c, n, p, x, b, n2, m, a : -Subst(Int(x**(-m + S(-2))*(a + b*x**(-n) + c*x**(-S(2)*n))**p, x), x, 1/x))
    rubi.add(rule86)

    pattern87 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda m: FractionQ(m)))
    rule87 = ReplacementRule(pattern87, lambda c, n, d, p, b, n2, m, x, a : With(List(Set(k, Denominator(m))), -k*Subst(Int(x**(-k*(m + S(1)) + S(-1))*(a + b*d**(-n)*x**(-k*n) + c*d**(-S(2)*n)*x**(-S(2)*k*n))**p, x), x, (d*x)**(-S(1)/k))/d))
    rubi.add(rule87)

    pattern88 = Pattern(Integral((x_*WC('d', S(1)))**m_*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda m: ~(RationalQ(m))))
    rule88 = ReplacementRule(pattern88, lambda c, n, d, p, x, b, n2, m, a : -d**IntPart(m)*(d*x)**FracPart(m)*(1/x)**FracPart(m)*Subst(Int(x**(-m + S(-2))*(a + b*x**(-n) + c*x**(-S(2)*n))**p, x), x, 1/x))
    rubi.add(rule88)

    pattern89 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: FractionQ(n)))
    rule89 = ReplacementRule(pattern89, lambda c, n, p, x, b, n2, m, a : With(List(Set(k, Denominator(n))), k*Subst(Int(x**(k*(m + S(1)) + S(-1))*(a + b*x**(k*n) + c*x**(S(2)*k*n))**p, x), x, x**(1/k))))
    rubi.add(rule89)

    pattern90 = Pattern(Integral((d_*x_)**m_*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: FractionQ(n)))
    rule90 = ReplacementRule(pattern90, lambda c, n, d, p, x, b, n2, m, a : d**IntPart(m)*x**(-FracPart(m))*(d*x)**FracPart(m)*Int(x**m*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule90)

    pattern91 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, m: IntegerQ(Simplify(n/(m + S(1))))), CustomConstraint(lambda n: ~(IntegerQ(n))))
    rule91 = ReplacementRule(pattern91, lambda c, n, p, x, b, n2, m, a : Subst(Int((a + b*x**Simplify(n/(m + S(1))) + c*x**Simplify(S(2)*n/(m + S(1))))**p, x), x, x**(m + S(1)))/(m + S(1)))
    rubi.add(rule91)

    pattern92 = Pattern(Integral((d_*x_)**m_*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, m: IntegerQ(Simplify(n/(m + S(1))))), CustomConstraint(lambda n: ~(IntegerQ(n))))
    rule92 = ReplacementRule(pattern92, lambda c, n, d, p, x, b, n2, m, a : d**IntPart(m)*x**(-FracPart(m))*(d*x)**FracPart(m)*Int(x**m*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule92)

    pattern93 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))/(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))))
    rule93 = ReplacementRule(pattern93, lambda c, n, d, b, n2, m, x, a : With(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), S(2)*c*Int((d*x)**m/(b + S(2)*c*x**n - q), x)/q - S(2)*c*Int((d*x)**m/(b + S(2)*c*x**n + q), x)/q))
    rubi.add(rule93)

    pattern94 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: NegativeIntegerQ(p + S(1))))
    rule94 = ReplacementRule(pattern94, lambda c, n, d, p, b, n2, m, x, a : Int((d*x)**m*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))*Simp(-S(2)*a*c*(m + S(2)*n*(p + S(1)) + S(1)) + b**S(2)*(m + n*(p + S(1)) + S(1)) + b*c*x**n*(m + S(2)*n*p + S(3)*n + S(1)), x), x)/(a*n*(p + S(1))*(-S(4)*a*c + b**S(2))) - (d*x)**(m + S(1))*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))*(-S(2)*a*c + b**S(2) + b*c*x**n)/(a*d*n*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule94)

    pattern95 = Pattern(Integral((x_*WC('d', S(1)))**WC('m', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)))
    rule95 = ReplacementRule(pattern95, lambda c, n, d, p, b, n2, m, x, a : a**IntPart(p)*(S(2)*c*x**n/(b - Rt(-S(4)*a*c + b**S(2), S(2))) + S(1))**(-FracPart(p))*(S(2)*c*x**n/(b + Rt(-S(4)*a*c + b**S(2), S(2))) + S(1))**(-FracPart(p))*(a + b*x**n + c*x**(S(2)*n))**FracPart(p)*Int((d*x)**m*(S(2)*c*x**n/(b - Sqrt(-S(4)*a*c + b**S(2))) + S(1))**p*(S(2)*c*x**n/(b + Sqrt(-S(4)*a*c + b**S(2))) + S(1))**p, x))
    rubi.add(rule95)

    pattern96 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**mn_*WC('b', S(1)) + x_**WC('n', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, mn: EqQ(mn, -n)), CustomConstraint(lambda p: IntegerQ(p)), CustomConstraint(lambda n: PosQ(n)))
    rule96 = ReplacementRule(pattern96, lambda c, n, p, mn, b, x, m, a : Int(x**(m - n*p)*(a*x**n + b + c*x**(S(2)*n))**p, x))
    rubi.add(rule96)

    pattern97 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**mn_*WC('b', S(1)) + x_**WC('n', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, mn: EqQ(mn, -n)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda n: PosQ(n)))
    rule97 = ReplacementRule(pattern97, lambda c, n, p, mn, b, x, m, a : x**(n*FracPart(p))*(a + b*x**(-n) + c*x**n)**FracPart(p)*(a*x**n + b + c*x**(S(2)*n))**(-FracPart(p))*Int(x**(m - n*p)*(a*x**n + b + c*x**(S(2)*n))**p, x))
    rubi.add(rule97)

    pattern98 = Pattern(Integral((d_*x_)**WC('m', S(1))*(a_ + x_**mn_*WC('b', S(1)) + x_**WC('n', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, mn: EqQ(mn, -n)))
    rule98 = ReplacementRule(pattern98, lambda c, n, d, p, mn, b, x, m, a : d**IntPart(m)*x**(-FracPart(m))*(d*x)**FracPart(m)*Int(x**m*(a + b*x**(-n) + c*x**n)**p, x))
    rubi.add(rule98)

    pattern99 = Pattern(Integral(x_**WC('m', S(1))*(v_**n_*WC('b', S(1)) + v_**WC('n2', S(1))*WC('c', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda v, x: LinearQ(v, x)), CustomConstraint(lambda m: IntegerQ(m)), CustomConstraint(lambda v, x: NonzeroQ(v - x)))
    rule99 = ReplacementRule(pattern99, lambda c, v, n, p, b, n2, m, x, a : Coefficient(v, x, S(1))**(-m + S(-1))*Subst(Int(SimplifyIntegrand((x - Coefficient(v, x, S(0)))**m*(a + b*x**n + c*x**(S(2)*n))**p, x), x), x, v))
    rubi.add(rule99)

    pattern100 = Pattern(Integral(u_**WC('m', S(1))*(v_**n_*WC('b', S(1)) + v_**WC('n2', S(1))*WC('c', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda v, x, u: LinearPairQ(u, v, x)))
    rule100 = ReplacementRule(pattern100, lambda c, v, n, u, p, b, n2, m, x, a : u**m*v**(-m)*Subst(Int(x**m*(a + b*x**n + c*x**(S(2)*n))**p, x), x, v)/Coefficient(v, x, S(1)))
    rubi.add(rule100)

    pattern101 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda p, q: IntegersQ(p, q)), CustomConstraint(lambda n: NegQ(n)))
    rule101 = ReplacementRule(pattern101, lambda c, e, q, n, d, p, b, n2, x, a : Int(x**(n*(S(2)*p + q))*(d*x**(-n) + e)**q*(a*x**(-S(2)*n) + b*x**(-n) + c)**p, x))
    rubi.add(rule101)

    pattern102 = Pattern(Integral((a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda p, q: IntegersQ(p, q)), CustomConstraint(lambda n: NegQ(n)))
    rule102 = ReplacementRule(pattern102, lambda c, q, e, n, d, p, x, n2, a : Int(x**(n*(S(2)*p + q))*(a*x**(-S(2)*n) + c)**p*(d*x**(-n) + e)**q, x))
    rubi.add(rule102)

    pattern103 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: NegativeIntegerQ(n)))
    rule103 = ReplacementRule(pattern103, lambda c, e, q, n, d, p, b, x, n2, a : -Subst(Int((d + e*x**(-n))**q*(a + b*x**(-n) + c*x**(-S(2)*n))**p/x**S(2), x), x, 1/x))
    rubi.add(rule103)

    pattern104 = Pattern(Integral((a_ + x_**n2_*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: NegativeIntegerQ(n)))
    rule104 = ReplacementRule(pattern104, lambda c, e, q, n, d, p, x, n2, a : -Subst(Int((a + c*x**(-S(2)*n))**p*(d + e*x**(-n))**q/x**S(2), x), x, 1/x))
    rubi.add(rule104)

    pattern105 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: FractionQ(n)))
    rule105 = ReplacementRule(pattern105, lambda c, e, q, n, d, p, b, n2, x, a : With(List(Set(g, Denominator(n))), g*Subst(Int(x**(g + S(-1))*(d + e*x**(g*n))**q*(a + b*x**(g*n) + c*x**(S(2)*g*n))**p, x), x, x**(1/g))))
    rubi.add(rule105)

    pattern106 = Pattern(Integral((a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: FractionQ(n)))
    rule106 = ReplacementRule(pattern106, lambda c, q, e, n, d, p, x, n2, a : With(List(Set(g, Denominator(n))), g*Subst(Int(x**(g + S(-1))*(a + c*x**(S(2)*g*n))**p*(d + e*x**(g*n))**q, x), x, x**(1/g))))
    rubi.add(rule106)

    pattern107 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))*(x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda n, p: ZeroQ(n*(S(2)*p + S(1)) + S(1))))
    rule107 = ReplacementRule(pattern107, lambda e, c, n, d, p, x, b, n2 : e*Int(x**(-n)*(b*x**n + c*x**(S(2)*n))**(p + S(1)), x)/c + x**(-S(2)*n*(p + S(1)))*(b*e - c*d)*(b*x**n + c*x**(S(2)*n))**(p + S(1))/(b*c*n*(p + S(1))))
    rubi.add(rule107)

    pattern108 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))*(x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda n, p: NonzeroQ(n*(S(2)*p + S(1)) + S(1))), CustomConstraint(lambda e, c, n, d, p, b: ZeroQ(b*e*(n*p + S(1)) - c*d*(n*(S(2)*p + S(1)) + S(1)))))
    rule108 = ReplacementRule(pattern108, lambda e, c, n, d, p, x, b, n2 : e*x**(-n + S(1))*(b*x**n + c*x**(S(2)*n))**(p + S(1))/(c*(n*(S(2)*p + S(1)) + S(1))))
    rubi.add(rule108)

    pattern109 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))*(x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda n, p: NonzeroQ(n*(S(2)*p + S(1)) + S(1))), CustomConstraint(lambda e, c, n, d, p, b: NonzeroQ(b*e*(n*p + S(1)) - c*d*(n*(S(2)*p + S(1)) + S(1)))))
    rule109 = ReplacementRule(pattern109, lambda e, c, n, d, p, x, b, n2 : e*x**(-n + S(1))*(b*x**n + c*x**(S(2)*n))**(p + S(1))/(c*(n*(S(2)*p + S(1)) + S(1))) - (b*e*(n*p + S(1)) - c*d*(n*(S(2)*p + S(1)) + S(1)))*Int((b*x**n + c*x**(S(2)*n))**p, x)/(c*(n*(S(2)*p + S(1)) + S(1))))
    rubi.add(rule109)

    pattern110 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule110 = ReplacementRule(pattern110, lambda c, e, q, n, d, p, b, x, n2 : x**(-n*FracPart(p))*(b + c*x**n)**(-FracPart(p))*(b*x**n + c*x**(S(2)*n))**FracPart(p)*Int(x**(n*p)*(b + c*x**n)**p*(d + e*x**n)**q, x))
    rubi.add(rule110)

    pattern111 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule111 = ReplacementRule(pattern111, lambda c, e, q, n, d, p, b, x, n2, a : (S(4)*c)**(-IntPart(p))*(b + S(2)*c*x**n)**(-S(2)*FracPart(p))*(a + b*x**n + c*x**(S(2)*n))**FracPart(p)*Int((b + S(2)*c*x**n)**(S(2)*p)*(d + e*x**n)**q, x))
    rubi.add(rule111)

    pattern112 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, e, d, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: IntegerQ(p)))
    rule112 = ReplacementRule(pattern112, lambda c, e, q, n, d, p, b, x, n2, a : Int((d + e*x**n)**(p + q)*(a/d + c*x**n/e)**p, x))
    rubi.add(rule112)

    pattern113 = Pattern(Integral((a_ + x_**n2_*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda d, a, c, e: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: IntegerQ(p)))
    rule113 = ReplacementRule(pattern113, lambda c, e, q, n, d, p, x, n2, a : Int((d + e*x**n)**(p + q)*(a/d + c*x**n/e)**p, x))
    rubi.add(rule113)

    pattern114 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**q_*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, e, d, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule114 = ReplacementRule(pattern114, lambda e, c, q, n, d, p, x, b, n2, a : (d + e*x**n)**(-FracPart(p))*(a/d + c*x**n/e)**(-FracPart(p))*(a + b*x**n + c*x**(S(2)*n))**FracPart(p)*Int((d + e*x**n)**(p + q)*(a/d + c*x**n/e)**p, x))
    rubi.add(rule114)

    pattern115 = Pattern(Integral((a_ + x_**n2_*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda d, a, c, e: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule115 = ReplacementRule(pattern115, lambda e, c, q, n, d, p, x, n2, a : (a + c*x**(S(2)*n))**FracPart(p)*(d + e*x**n)**(-FracPart(p))*(a/d + c*x**n/e)**(-FracPart(p))*Int((d + e*x**n)**(p + q)*(a/d + c*x**n/e)**p, x))
    rubi.add(rule115)

    pattern116 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, e, d, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda q: PositiveIntegerQ(q)))
    rule116 = ReplacementRule(pattern116, lambda c, e, q, n, d, b, x, n2, a : Int(ExpandIntegrand((d + e*x**n)**q*(a + b*x**n + c*x**(S(2)*n)), x), x))
    rubi.add(rule116)

    pattern117 = Pattern(Integral((a_ + x_**n2_*WC('c', S(1)))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda d, a, c, e: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda q: PositiveIntegerQ(q)))
    rule117 = ReplacementRule(pattern117, lambda c, e, q, n, d, x, n2, a : Int(ExpandIntegrand((a + c*x**(S(2)*n))*(d + e*x**n)**q, x), x))
    rubi.add(rule117)

    pattern118 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**q_*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, e, d, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda q: RationalQ(q)), CustomConstraint(lambda q: Less(q, S(-1))))
    rule118 = ReplacementRule(pattern118, lambda e, c, q, n, d, x, b, n2, a : x*(d + e*x**n)**(q + S(1))*(-a*e**S(2) + b*d*e - c*d**S(2))/(d*e**S(2)*n*(q + S(1))) + Int((d + e*x**n)**(q + S(1))*Simp(a*e**S(2)*(n*(q + S(1)) + S(1)) - b*d*e + c*d**S(2) + c*d*e*n*x**n*(q + S(1)), x), x)/(d*e**S(2)*n*(q + S(1))))
    rubi.add(rule118)

    pattern119 = Pattern(Integral((a_ + x_**n2_*WC('c', S(1)))*(d_ + x_**n_*WC('e', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda d, a, c, e: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda q: RationalQ(q)), CustomConstraint(lambda q: Less(q, S(-1))))
    rule119 = ReplacementRule(pattern119, lambda e, c, q, n, d, x, n2, a : x*(d + e*x**n)**(q + S(1))*(-a*e**S(2) - c*d**S(2))/(d*e**S(2)*n*(q + S(1))) + Int((d + e*x**n)**(q + S(1))*Simp(a*e**S(2)*(n*(q + S(1)) + S(1)) + c*d**S(2) + c*d*e*n*x**n*(q + S(1)), x), x)/(d*e**S(2)*n*(q + S(1))))
    rubi.add(rule119)

    pattern120 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**q_*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, e, d, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))))
    rule120 = ReplacementRule(pattern120, lambda e, c, q, n, d, x, b, n2, a : c*x**(n + S(1))*(d + e*x**n)**(q + S(1))/(e*(n*(q + S(2)) + S(1))) + Int((d + e*x**n)**q*(a*e*(n*(q + S(2)) + S(1)) - x**n*(-b*e*(n*(q + S(2)) + S(1)) + c*d*(n + S(1)))), x)/(e*(n*(q + S(2)) + S(1))))
    rubi.add(rule120)

    pattern121 = Pattern(Integral((a_ + x_**n2_*WC('c', S(1)))*(d_ + x_**n_*WC('e', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda d, a, c, e: NonzeroQ(a*e**S(2) + c*d**S(2))))
    rule121 = ReplacementRule(pattern121, lambda e, c, q, n, d, x, n2, a : c*x**(n + S(1))*(d + e*x**n)**(q + S(1))/(e*(n*(q + S(2)) + S(1))) + Int((d + e*x**n)**q*(a*e*(n*(q + S(2)) + S(1)) - c*d*x**n*(n + S(1))), x)/(e*(n*(q + S(2)) + S(1))))
    rubi.add(rule121)

    pattern122 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))/(a_ + x_**n2_*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda d, a, c, e: ZeroQ(-a*e**S(2) + c*d**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n/S(2))), CustomConstraint(lambda d, e: PosQ(d*e)))
    rule122 = ReplacementRule(pattern122, lambda e, c, n, d, x, n2, a : With(List(Set(q, Rt(S(2)*d*e, S(2)))), e**S(2)*Int(1/(d + e*x**n - q*x**(n/S(2))), x)/(S(2)*c) + e**S(2)*Int(1/(d + e*x**n + q*x**(n/S(2))), x)/(S(2)*c)))
    rubi.add(rule122)

    pattern123 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))/(a_ + x_**n2_*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda d, a, c, e: ZeroQ(-a*e**S(2) + c*d**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n/S(2))), CustomConstraint(lambda d, e: NegQ(d*e)))
    rule123 = ReplacementRule(pattern123, lambda e, c, n, d, x, n2, a : With(List(Set(q, Rt(-S(2)*d*e, S(2)))), d*Int((d - q*x**(n/S(2)))/(d - e*x**n - q*x**(n/S(2))), x)/(S(2)*a) + d*Int((d + q*x**(n/S(2)))/(d - e*x**n + q*x**(n/S(2))), x)/(S(2)*a)))
    rubi.add(rule123)

    pattern124 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/(a_ + x_**S(4)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, a, c, e: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda d, a, c, e: NonzeroQ(-a*e**S(2) + c*d**S(2))), CustomConstraint(lambda a, c: PosQ(a*c)))
    rule124 = ReplacementRule(pattern124, lambda e, c, d, x, a : With(List(Set(q, Rt(a*c, S(2)))), (-a*e + d*q)*Int((-c*x**S(2) + q)/(a + c*x**S(4)), x)/(S(2)*a*c) + (a*e + d*q)*Int((c*x**S(2) + q)/(a + c*x**S(4)), x)/(S(2)*a*c)))
    rubi.add(rule124)

    pattern125 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))/(a_ + x_**n2_*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda d, a, c, e: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda d, a, c, e: NonzeroQ(-a*e**S(2) + c*d**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n/S(2))), CustomConstraint(lambda a, c: PosQ(a*c)))
    rule125 = ReplacementRule(pattern125, lambda e, c, n, d, x, n2, a : With(List(Set(q, Rt(a/c, S(4)))), Int((d*q*Sqrt(S(2)) - x**(n/S(2))*(d - e*q**S(2)))/(q**S(2) - q*x**(n/S(2))*Sqrt(S(2)) + x**n), x)/(S(2)*c*q**S(3)*Sqrt(S(2))) + Int((d*q*Sqrt(S(2)) + x**(n/S(2))*(d - e*q**S(2)))/(q**S(2) + q*x**(n/S(2))*Sqrt(S(2)) + x**n), x)/(S(2)*c*q**S(3)*Sqrt(S(2)))))
    rubi.add(rule125)

    pattern126 = Pattern(Integral((d_ + x_**S(3)*WC('e', S(1)))/(a_ + x_**S(6)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, a, c, e: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda a, c: PosQ(c/a)))
    rule126 = ReplacementRule(pattern126, lambda e, c, d, x, a : With(List(Set(q, Rt(c/a, S(6)))), Int((d*q**S(2) - e*x)/(q**S(2)*x**S(2) + S(1)), x)/(S(3)*a*q**S(2)) + Int((S(2)*d*q**S(2) - x*(d*q**S(3)*Sqrt(S(3)) - e))/(q**S(2)*x**S(2) - q*x*Sqrt(S(3)) + S(1)), x)/(S(6)*a*q**S(2)) + Int((S(2)*d*q**S(2) + x*(d*q**S(3)*Sqrt(S(3)) + e))/(q**S(2)*x**S(2) + q*x*Sqrt(S(3)) + S(1)), x)/(S(6)*a*q**S(2))))
    rubi.add(rule126)

    pattern127 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))/(a_ + x_**n2_*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda d, a, c, e: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda a, c: NegQ(a*c)), CustomConstraint(lambda n: IntegerQ(n)))
    rule127 = ReplacementRule(pattern127, lambda e, c, n, d, x, n2, a : With(List(Set(q, Rt(-a/c, S(2)))), (d/S(2) - e*q/S(2))*Int(1/(a - c*q*x**n), x) + (d/S(2) + e*q/S(2))*Int(1/(a + c*q*x**n), x)))
    rubi.add(rule127)

    pattern128 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))/(a_ + x_**n2_*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda d, a, c, e: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda n, a, c: ~(IntegerQ(n)) | PosQ(a*c)))
    rule128 = ReplacementRule(pattern128, lambda e, c, n, d, x, n2, a : d*Int(1/(a + c*x**(S(2)*n)), x) + e*Int(x**n/(a + c*x**(S(2)*n)), x))
    rubi.add(rule128)

    pattern129 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))/(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, a, c, e: ZeroQ(-a*e**S(2) + c*d**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n/S(2))), CustomConstraint(lambda e, c, d, b, a: PositiveQ(-b/c + S(2)*d/e) | (ZeroQ(d - e*Rt(a/c, S(2))) & ~(NegativeQ(-b/c + S(2)*d/e)))))
    rule129 = ReplacementRule(pattern129, lambda e, c, n, d, x, b, n2, a : With(List(Set(q, Rt(-b/c + S(2)*d/e, S(2)))), e**S(2)*Int(1/(d - e*q*x**(n/S(2)) + e*x**n), x)/(S(2)*c) + e**S(2)*Int(1/(d + e*q*x**(n/S(2)) + e*x**n), x)/(S(2)*c)))
    rubi.add(rule129)

    pattern130 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))/(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, a, c, e: ZeroQ(-a*e**S(2) + c*d**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n/S(2))), CustomConstraint(lambda a, b, c: PositiveQ(-S(4)*a*c + b**S(2))))
    rule130 = ReplacementRule(pattern130, lambda e, c, n, d, x, b, n2, a : With(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), (e/S(2) - (-b*e + S(2)*c*d)/(S(2)*q))*Int(1/(b/S(2) + c*x**n + q/S(2)), x) + (e/S(2) + (-b*e + S(2)*c*d)/(S(2)*q))*Int(1/(b/S(2) + c*x**n - q/S(2)), x)))
    rubi.add(rule130)

    pattern131 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))/(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, a, c, e: ZeroQ(-a*e**S(2) + c*d**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n/S(2))), CustomConstraint(lambda a, b, c: ~(PositiveQ(-S(4)*a*c + b**S(2)))))
    rule131 = ReplacementRule(pattern131, lambda e, c, n, d, x, b, n2, a : With(List(Set(q, Rt(a/c, S(2)))), With(List(Set(r, Rt(-b/c + S(2)*q, S(2)))), Int((d*r - x**(n/S(2))*(d - e*q))/(q - r*x**(n/S(2)) + x**n), x)/(S(2)*c*q*r) + Int((d*r + x**(n/S(2))*(d - e*q))/(q + r*x**(n/S(2)) + x**n), x)/(S(2)*c*q*r))))
    rubi.add(rule131)

    pattern132 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))/(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, e, d, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda n, a, b, c: ~(PositiveIntegerQ(n/S(2))) | PosQ(-S(4)*a*c + b**S(2))))
    rule132 = ReplacementRule(pattern132, lambda e, c, n, d, x, b, n2, a : With(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), (e/S(2) - (-b*e + S(2)*c*d)/(S(2)*q))*Int(1/(b/S(2) + c*x**n + q/S(2)), x) + (e/S(2) + (-b*e + S(2)*c*d)/(S(2)*q))*Int(1/(b/S(2) + c*x**n - q/S(2)), x)))
    rubi.add(rule132)

    pattern133 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))/(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, e, d, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n/S(2))), CustomConstraint(lambda a, b, c: NegQ(-S(4)*a*c + b**S(2))))
    rule133 = ReplacementRule(pattern133, lambda e, c, n, d, x, b, n2, a : With(List(Set(q, Rt(a/c, S(2)))), With(List(Set(r, Rt(-b/c + S(2)*q, S(2)))), Int((d*r - x**(n/S(2))*(d - e*q))/(q - r*x**(n/S(2)) + x**n), x)/(S(2)*c*q*r) + Int((d*r + x**(n/S(2))*(d - e*q))/(q + r*x**(n/S(2)) + x**n), x)/(S(2)*c*q*r))))
    rubi.add(rule133)

    pattern134 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**q_/(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, e, d, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda q: IntegerQ(q)))
    rule134 = ReplacementRule(pattern134, lambda e, c, q, n, d, x, b, n2, a : Int(ExpandIntegrand((d + e*x**n)**q/(a + b*x**n + c*x**(S(2)*n)), x), x))
    rubi.add(rule134)

    pattern135 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**q_/(a_ + x_**n2_*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda d, a, c, e: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda q: IntegerQ(q)))
    rule135 = ReplacementRule(pattern135, lambda e, c, q, n, d, x, n2, a : Int(ExpandIntegrand((d + e*x**n)**q/(a + c*x**(S(2)*n)), x), x))
    rubi.add(rule135)

    pattern136 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**q_/(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, e, d, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda q: ~(IntegerQ(q))), CustomConstraint(lambda q: RationalQ(q)), CustomConstraint(lambda q: Less(q, S(-1))))
    rule136 = ReplacementRule(pattern136, lambda e, c, q, n, d, x, b, n2, a : e**S(2)*Int((d + e*x**n)**q, x)/(a*e**S(2) - b*d*e + c*d**S(2)) + Int((d + e*x**n)**(q + S(1))*(-b*e + c*d - c*e*x**n)/(a + b*x**n + c*x**(S(2)*n)), x)/(a*e**S(2) - b*d*e + c*d**S(2)))
    rubi.add(rule136)

    pattern137 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**q_/(a_ + x_**n2_*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda d, a, c, e: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda q: ~(IntegerQ(q))), CustomConstraint(lambda q: RationalQ(q)), CustomConstraint(lambda q: Less(q, S(-1))))
    rule137 = ReplacementRule(pattern137, lambda e, c, q, n, d, x, n2, a : c*Int((d - e*x**n)*(d + e*x**n)**(q + S(1))/(a + c*x**(S(2)*n)), x)/(a*e**S(2) + c*d**S(2)) + e**S(2)*Int((d + e*x**n)**q, x)/(a*e**S(2) + c*d**S(2)))
    rubi.add(rule137)

    pattern138 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**q_/(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, e, d, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda q: ~(IntegerQ(q))))
    rule138 = ReplacementRule(pattern138, lambda e, c, q, n, d, x, b, n2, a : With(List(Set(r, Rt(-S(4)*a*c + b**S(2), S(2)))), S(2)*c*Int((d + e*x**n)**q/(b + S(2)*c*x**n - r), x)/r - S(2)*c*Int((d + e*x**n)**q/(b + S(2)*c*x**n + r), x)/r))
    rubi.add(rule138)

    pattern139 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**q_/(a_ + x_**n2_*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda d, a, c, e: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda q: ~(IntegerQ(q))))
    rule139 = ReplacementRule(pattern139, lambda e, c, q, n, d, x, n2, a : With(List(Set(r, Rt(-a*c, S(2)))), -c*Int((d + e*x**n)**q/(-c*x**n + r), x)/(S(2)*r) - c*Int((d + e*x**n)**q/(c*x**n + r), x)/(S(2)*r)))
    rubi.add(rule139)

    pattern140 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: FractionQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n, p: NonzeroQ(S(2)*n*p + S(1))), CustomConstraint(lambda n, p: NonzeroQ(S(2)*n*p + n + S(1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)), CustomConstraint(lambda n, p: IntegerQ(p) | ZeroQ(n + S(-2))))
    rule140 = ReplacementRule(pattern140, lambda e, c, n, d, p, x, b, n2, a : n*p*Int((a + b*x**n + c*x**(S(2)*n))**(p + S(-1))*Simp(-a*b*e + S(2)*a*c*d*(S(2)*n*p + n + S(1)) + x**n*(S(2)*a*c*e*(S(2)*n*p + S(1)) - b**S(2)*e*(n*p + S(1)) + b*c*d*(S(2)*n*p + n + S(1))), x), x)/(c*(S(2)*n*p + S(1))*(S(2)*n*p + n + S(1))) + x*(a + b*x**n + c*x**(S(2)*n))**p*(b*e*n*p + c*d*(S(2)*n*p + n + S(1)) + c*e*x**n*(S(2)*n*p + S(1)))/(c*(S(2)*n*p + S(1))*(S(2)*n*p + n + S(1))))
    rubi.add(rule140)

    pattern141 = Pattern(Integral((a_ + x_**n2_*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda p: FractionQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n, p: NonzeroQ(S(2)*n*p + S(1))), CustomConstraint(lambda n, p: NonzeroQ(S(2)*n*p + n + S(1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)), CustomConstraint(lambda n, p: IntegerQ(p) | ZeroQ(n + S(-2))))
    rule141 = ReplacementRule(pattern141, lambda e, c, n, d, p, x, n2, a : S(2)*a*n*p*Int((a + c*x**(S(2)*n))**(p + S(-1))*(d*(S(2)*n*p + n + S(1)) + e*x**n*(S(2)*n*p + S(1))), x)/((S(2)*n*p + S(1))*(S(2)*n*p + n + S(1))) + x*(a + c*x**(S(2)*n))**p*(d*(S(2)*n*p + n + S(1)) + e*x**n*(S(2)*n*p + S(1)))/((S(2)*n*p + S(1))*(S(2)*n*p + n + S(1))))
    rubi.add(rule141)

    pattern142 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)), CustomConstraint(lambda n, p: IntegerQ(p) | ZeroQ(n + S(-2))))
    rule142 = ReplacementRule(pattern142, lambda e, c, n, d, p, x, b, n2, a : -x*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))*(-a*b*e - S(2)*a*c*d + b**S(2)*d + c*x**n*(-S(2)*a*e + b*d))/(a*n*(p + S(1))*(-S(4)*a*c + b**S(2))) + Int((a + b*x**n + c*x**(S(2)*n))**(p + S(1))*Simp(-a*b*e - S(2)*a*c*d*(S(2)*n*p + S(2)*n + S(1)) + b**S(2)*d*(n*p + n + S(1)) + c*x**n*(-S(2)*a*e + b*d)*(S(2)*n*p + S(3)*n + S(1)), x), x)/(a*n*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule142)

    pattern143 = Pattern(Integral((a_ + x_**n2_*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda p: IntegerQ(S(2)*p)), CustomConstraint(lambda n, p: IntegerQ(p) | ZeroQ(n + S(-2))))
    rule143 = ReplacementRule(pattern143, lambda e, c, n, d, p, x, n2, a : -x*(a + c*x**(S(2)*n))**(p + S(1))*(d + e*x**n)/(S(2)*a*n*(p + S(1))) + Int((a + c*x**(S(2)*n))**(p + S(1))*(d*(S(2)*n*p + S(2)*n + S(1)) + e*x**n*(S(2)*n*p + S(3)*n + S(1))), x)/(S(2)*a*n*(p + S(1))))
    rubi.add(rule143)

    pattern144 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c: NegativeQ(c)))
    rule144 = ReplacementRule(pattern144, lambda e, c, d, x, b, a : With(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), S(2)*Int((d + e*x**S(2))/(Sqrt(-b - S(2)*c*x**S(2) + q)*Sqrt(b + S(2)*c*x**S(2) + q)), x)*Sqrt(-c)))
    rubi.add(rule144)

    pattern145 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a: PositiveQ(a)), CustomConstraint(lambda c: NegativeQ(c)))
    rule145 = ReplacementRule(pattern145, lambda e, c, d, x, a : With(List(Set(q, Rt(-a*c, S(2)))), Int((d + e*x**S(2))/(Sqrt(-c*x**S(2) + q)*Sqrt(c*x**S(2) + q)), x)*Sqrt(-c)))
    rubi.add(rule145)

    pattern146 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda a, c: PositiveQ(c/a)), CustomConstraint(lambda a, b: NegativeQ(b/a)))
    rule146 = ReplacementRule(pattern146, lambda e, c, d, x, b, a : With(List(Set(q, Rt(c/a, S(4)))), Condition(d*(q**S(2)*x**S(2) + S(1))*EllipticE(S(2)*ArcTan(q*x), -b*q**S(2)/(S(4)*c) + S(1)/2)*Sqrt((a + b*x**S(2) + c*x**S(4))/(a*(q**S(2)*x**S(2) + S(1))**S(2)))/(q*Sqrt(a + b*x**S(2) + c*x**S(4))) - d*x*Sqrt(a + b*x**S(2) + c*x**S(4))/(a*(q**S(2)*x**S(2) + S(1))), ZeroQ(d*q**S(2) + e))))
    rubi.add(rule146)

    pattern147 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda a, c: PositiveQ(c/a)), CustomConstraint(lambda a, b: NegativeQ(b/a)))
    rule147 = ReplacementRule(pattern147, lambda e, c, d, x, b, a : With(List(Set(q, Rt(c/a, S(2)))), Condition(-e*Int((-q*x**S(2) + S(1))/Sqrt(a + b*x**S(2) + c*x**S(4)), x)/q + (d*q + e)*Int(1/Sqrt(a + b*x**S(2) + c*x**S(4)), x)/q, NonzeroQ(d*q + e))))
    rubi.add(rule147)

    pattern148 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda a: NegativeQ(a)), CustomConstraint(lambda c: PositiveQ(c)))
    rule148 = ReplacementRule(pattern148, lambda e, c, d, x, b, a : With(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), Condition(-e*q*EllipticE(ArcSin(x/Sqrt((S(2)*a + x**S(2)*(b + q))/(S(2)*q))), (b + q)/(S(2)*q))*Sqrt((S(2)*a + x**S(2)*(b + q))/q)*Sqrt((S(2)*a + x**S(2)*(b - q))/(S(2)*a + x**S(2)*(b + q)))/(S(2)*c*Sqrt(a/(S(2)*a + x**S(2)*(b + q)))*Sqrt(a + b*x**S(2) + c*x**S(4))) + e*x*(b + S(2)*c*x**S(2) + q)/(S(2)*c*Sqrt(a + b*x**S(2) + c*x**S(4))), ZeroQ(S(2)*c*d - e*(b - q)))))
    rubi.add(rule148)

    pattern149 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a: NegativeQ(a)), CustomConstraint(lambda c: PositiveQ(c)))
    rule149 = ReplacementRule(pattern149, lambda e, c, d, x, a : With(List(Set(q, Rt(-a*c, S(2)))), Condition(-e*q*EllipticE(ArcSin(x/Sqrt((a + q*x**S(2))/(S(2)*q))), S(1)/2)*Sqrt(S(2))*Sqrt((a + q*x**S(2))/q)*Sqrt(-a + q*x**S(2))/(c*Sqrt(-a)*Sqrt(a + c*x**S(4))) + e*x*(c*x**S(2) + q)/(c*Sqrt(a + c*x**S(4))), IntegerQ(q) & ZeroQ(c*d + e*q))))
    rubi.add(rule149)

    pattern150 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a: NegativeQ(a)), CustomConstraint(lambda c: PositiveQ(c)))
    rule150 = ReplacementRule(pattern150, lambda e, c, d, x, a : With(List(Set(q, Rt(-a*c, S(2)))), Condition(-e*q*EllipticE(ArcSin(x/Sqrt((a + q*x**S(2))/(S(2)*q))), S(1)/2)*Sqrt(S(2))*Sqrt((a + q*x**S(2))/q)*Sqrt((a - q*x**S(2))/(a + q*x**S(2)))/(c*Sqrt(a/(a + q*x**S(2)))*Sqrt(a + c*x**S(4))) + e*x*(c*x**S(2) + q)/(c*Sqrt(a + c*x**S(4))), ZeroQ(c*d + e*q))))
    rubi.add(rule150)

    pattern151 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda a: NegativeQ(a)), CustomConstraint(lambda c: PositiveQ(c)))
    rule151 = ReplacementRule(pattern151, lambda e, c, d, x, b, a : With(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), Condition(e*Int((b + S(2)*c*x**S(2) - q)/Sqrt(a + b*x**S(2) + c*x**S(4)), x)/(S(2)*c) + (S(2)*c*d - e*(b - q))*Int(1/Sqrt(a + b*x**S(2) + c*x**S(4)), x)/(S(2)*c), NonzeroQ(S(2)*c*d - e*(b - q)))))
    rubi.add(rule151)

    pattern152 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a: NegativeQ(a)), CustomConstraint(lambda c: PositiveQ(c)))
    rule152 = ReplacementRule(pattern152, lambda e, c, d, x, a : With(List(Set(q, Rt(-a*c, S(2)))), Condition(-e*Int((-c*x**S(2) + q)/Sqrt(a + c*x**S(4)), x)/c + (c*d + e*q)*Int(1/Sqrt(a + c*x**S(4)), x)/c, NonzeroQ(c*d + e*q))))
    rubi.add(rule152)

    pattern153 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: PositiveQ(-S(4)*a*c + b**S(2))))
    rule153 = ReplacementRule(pattern153, lambda e, c, d, x, b, a : With(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), Condition(d*Int(1/Sqrt(a + b*x**S(2) + c*x**S(4)), x) + e*Int(x**S(2)/Sqrt(a + b*x**S(2) + c*x**S(4)), x), PosQ((b + q)/a) | PosQ((b - q)/a))))
    rubi.add(rule153)

    pattern154 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, c: PositiveQ(-a*c)))
    rule154 = ReplacementRule(pattern154, lambda e, c, d, x, a : d*Int(1/Sqrt(a + c*x**S(4)), x) + e*Int(x**S(2)/Sqrt(a + c*x**S(4)), x))
    rubi.add(rule154)

    pattern155 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: PositiveQ(-S(4)*a*c + b**S(2))))
    rule155 = ReplacementRule(pattern155, lambda e, c, d, x, b, a : With(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), Condition(-a*e*EllipticE(ArcSin(x*Rt((-b - q)/(S(2)*a), S(2))), (b - q)/(b + q))*Rt((-b - q)/(S(2)*a), S(2))*Sqrt(S(1) + x**S(2)*(b - q)/(S(2)*a))*Sqrt(S(1) + x**S(2)*(b + q)/(S(2)*a))/(c*Sqrt(a + b*x**S(2) + c*x**S(4))), NegQ((b + q)/a) & ZeroQ(S(2)*c*d - e*(b + q)) & ~(SimplerSqrtQ((-b + q)/(S(2)*a), (-b - q)/(S(2)*a))))))
    rubi.add(rule155)

    pattern156 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: PositiveQ(-S(4)*a*c + b**S(2))))
    rule156 = ReplacementRule(pattern156, lambda e, c, d, x, b, a : With(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), Condition(e*Int((b + S(2)*c*x**S(2) + q)/Sqrt(a + b*x**S(2) + c*x**S(4)), x)/(S(2)*c) + (S(2)*c*d - e*(b + q))*Int(1/Sqrt(a + b*x**S(2) + c*x**S(4)), x)/(S(2)*c), NegQ((b + q)/a) & NonzeroQ(S(2)*c*d - e*(b + q)) & ~(SimplerSqrtQ((-b + q)/(S(2)*a), (-b - q)/(S(2)*a))))))
    rubi.add(rule156)

    pattern157 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: PositiveQ(-S(4)*a*c + b**S(2))))
    rule157 = ReplacementRule(pattern157, lambda e, c, d, x, b, a : With(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), Condition(-a*e*EllipticE(ArcSin(x*Rt((-b + q)/(S(2)*a), S(2))), (b + q)/(b - q))*Rt((-b + q)/(S(2)*a), S(2))*Sqrt(S(1) + x**S(2)*(b - q)/(S(2)*a))*Sqrt(S(1) + x**S(2)*(b + q)/(S(2)*a))/(c*Sqrt(a + b*x**S(2) + c*x**S(4))), NegQ((b - q)/a) & ZeroQ(S(2)*c*d - e*(b - q)))))
    rubi.add(rule157)

    pattern158 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: PositiveQ(-S(4)*a*c + b**S(2))))
    rule158 = ReplacementRule(pattern158, lambda e, c, d, x, b, a : With(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), Condition(e*Int((b + S(2)*c*x**S(2) - q)/Sqrt(a + b*x**S(2) + c*x**S(4)), x)/(S(2)*c) + (S(2)*c*d - e*(b - q))*Int(1/Sqrt(a + b*x**S(2) + c*x**S(4)), x)/(S(2)*c), NegQ((b - q)/a) & NonzeroQ(S(2)*c*d - e*(b - q)))))
    rubi.add(rule158)

    pattern159 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda a, c: PosQ(c/a)))
    rule159 = ReplacementRule(pattern159, lambda e, c, d, x, b, a : With(List(Set(q, Rt(c/a, S(4)))), Condition(d*(q**S(2)*x**S(2) + S(1))*EllipticE(S(2)*ArcTan(q*x), -b*q**S(2)/(S(4)*c) + S(1)/2)*Sqrt((a + b*x**S(2) + c*x**S(4))/(a*(q**S(2)*x**S(2) + S(1))**S(2)))/(q*Sqrt(a + b*x**S(2) + c*x**S(4))) - d*x*Sqrt(a + b*x**S(2) + c*x**S(4))/(a*(q**S(2)*x**S(2) + S(1))), ZeroQ(d*q**S(2) + e))))
    rubi.add(rule159)

    pattern160 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, c: PosQ(c/a)))
    rule160 = ReplacementRule(pattern160, lambda e, c, d, x, a : With(List(Set(q, Rt(c/a, S(4)))), Condition(d*(q**S(2)*x**S(2) + S(1))*EllipticE(S(2)*ArcTan(q*x), S(1)/2)*Sqrt((a + c*x**S(4))/(a*(q**S(2)*x**S(2) + S(1))**S(2)))/(q*Sqrt(a + c*x**S(4))) - d*x*Sqrt(a + c*x**S(4))/(a*(q**S(2)*x**S(2) + S(1))), ZeroQ(d*q**S(2) + e))))
    rubi.add(rule160)

    pattern161 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda a, c: PosQ(c/a)))
    rule161 = ReplacementRule(pattern161, lambda e, c, d, x, b, a : With(List(Set(q, Rt(c/a, S(2)))), Condition(-e*Int((-q*x**S(2) + S(1))/Sqrt(a + b*x**S(2) + c*x**S(4)), x)/q + (d*q + e)*Int(1/Sqrt(a + b*x**S(2) + c*x**S(4)), x)/q, NonzeroQ(d*q + e))))
    rubi.add(rule161)

    pattern162 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, c: PosQ(c/a)))
    rule162 = ReplacementRule(pattern162, lambda e, c, d, x, a : With(List(Set(q, Rt(c/a, S(2)))), Condition(-e*Int((-q*x**S(2) + S(1))/Sqrt(a + c*x**S(4)), x)/q + (d*q + e)*Int(1/Sqrt(a + c*x**S(4)), x)/q, NonzeroQ(d*q + e))))
    rubi.add(rule162)

    pattern163 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, c: NegQ(c/a)), CustomConstraint(lambda d, a, c, e: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda a: PositiveQ(a)))
    rule163 = ReplacementRule(pattern163, lambda e, c, d, x, a : d*Int(Sqrt(S(1) + e*x**S(2)/d)/Sqrt(S(1) - e*x**S(2)/d), x)/Sqrt(a))
    rubi.add(rule163)

    pattern164 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, c: NegQ(c/a)), CustomConstraint(lambda d, a, c, e: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda a: ~(PositiveQ(a))))
    rule164 = ReplacementRule(pattern164, lambda e, c, d, x, a : Int((d + e*x**S(2))/Sqrt(S(1) + c*x**S(4)/a), x)*Sqrt(S(1) + c*x**S(4)/a)/Sqrt(a + c*x**S(4)))
    rubi.add(rule164)

    pattern165 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, c: NegQ(c/a)), CustomConstraint(lambda d, a, c, e: NonzeroQ(a*e**S(2) + c*d**S(2))))
    rule165 = ReplacementRule(pattern165, lambda e, c, d, x, a : With(List(Set(q, Rt(-c/a, S(2)))), e*Int((q*x**S(2) + S(1))/Sqrt(a + c*x**S(4)), x)/q + (d*q - e)*Int(1/Sqrt(a + c*x**S(4)), x)/q))
    rubi.add(rule165)

    pattern166 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))/sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda a, c: NegQ(c/a)))
    rule166 = ReplacementRule(pattern166, lambda e, c, d, x, b, a : With(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), Int((d + e*x**S(2))/(Sqrt(S(2)*c*x**S(2)/(b - q) + S(1))*Sqrt(S(2)*c*x**S(2)/(b + q) + S(1))), x)*Sqrt(S(2)*c*x**S(2)/(b - q) + S(1))*Sqrt(S(2)*c*x**S(2)/(b + q) + S(1))/Sqrt(a + b*x**S(2) + c*x**S(4))))
    rubi.add(rule166)

    pattern167 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))))
    rule167 = ReplacementRule(pattern167, lambda e, c, n, d, p, x, b, n2, a : Int(ExpandIntegrand((d + e*x**n)*(a + b*x**n + c*x**(S(2)*n))**p, x), x))
    rubi.add(rule167)

    pattern168 = Pattern(Integral((a_ + x_**n2_*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)))
    rule168 = ReplacementRule(pattern168, lambda e, c, n, d, p, x, n2, a : Int(ExpandIntegrand((a + c*x**(S(2)*n))**p*(d + e*x**n), x), x))
    rubi.add(rule168)

    pattern169 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**q_*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: PositiveIntegerQ(p)), CustomConstraint(lambda n, p, q: NonzeroQ(S(2)*n*p + n*q + S(1))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: ~(PositiveIntegerQ(q))))
    rule169 = ReplacementRule(pattern169, lambda e, c, q, n, d, p, x, b, n2, a : c**p*x**(S(2)*n*p - n + S(1))*(d + e*x**n)**(q + S(1))/(e*(S(2)*n*p + n*q + S(1))) + Int((d + e*x**n)**q*ExpandToSum(-c**p*d*x**(S(2)*n*p - n)*(S(2)*n*p - n + S(1))/(e*(S(2)*n*p + n*q + S(1))) - c**p*x**(S(2)*n*p) + (a + b*x**n + c*x**(S(2)*n))**p, x), x))
    rubi.add(rule169)

    pattern170 = Pattern(Integral((a_ + x_**n2_*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda p: PositiveIntegerQ(p)), CustomConstraint(lambda n, p, q: NonzeroQ(S(2)*n*p + n*q + S(1))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: ~(PositiveIntegerQ(q))))
    rule170 = ReplacementRule(pattern170, lambda e, c, q, n, d, p, x, n2, a : c**p*x**(S(2)*n*p - n + S(1))*(d + e*x**n)**(q + S(1))/(e*(S(2)*n*p + n*q + S(1))) + Int((d + e*x**n)**q*ExpandToSum(-c**p*d*x**(S(2)*n*p - n)*(S(2)*n*p - n + S(1))/(e*(S(2)*n*p + n*q + S(1))) - c**p*x**(S(2)*n*p) + (a + c*x**(S(2)*n))**p, x), x))
    rubi.add(rule170)

    pattern171 = Pattern(Integral(sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1)))/(d_ + x_**S(2)*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, e, d, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))))
    rule171 = ReplacementRule(pattern171, lambda e, c, d, x, b, a : (a*e**S(2) - b*d*e + c*d**S(2))*Int(S(1)/((d + e*x**S(2))*Sqrt(a + b*x**S(2) + c*x**S(4))), x)/e**S(2) - Int((-b*e + c*d - c*e*x**S(2))/Sqrt(a + b*x**S(2) + c*x**S(4)), x)/e**S(2))
    rubi.add(rule171)

    pattern172 = Pattern(Integral(sqrt(a_ + x_**S(4)*WC('c', S(1)))/(d_ + x_**S(2)*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, a, c, e: NonzeroQ(a*e**S(2) + c*d**S(2))))
    rule172 = ReplacementRule(pattern172, lambda e, c, d, x, a : -c*Int((d - e*x**S(2))/Sqrt(a + c*x**S(4)), x)/e**S(2) + (a*e**S(2) + c*d**S(2))*Int(S(1)/((d + e*x**S(2))*Sqrt(a + c*x**S(4))), x)/e**S(2))
    rubi.add(rule172)

    pattern173 = Pattern(Integral((a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1)))**(S(3)/2)/(d_ + x_**S(2)*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, e, d, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda a, b, c: PositiveQ(-S(4)*a*c + b**S(2))))
    rule173 = ReplacementRule(pattern173, lambda e, c, d, x, b, a : With(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), -(a*e**S(2) - b*d*e + c*d**S(2))**S(2)*Int((b + S(2)*c*x**S(2) + q)/((d + e*x**S(2))*Sqrt(a + b*x**S(2) + c*x**S(4))), x)/(e**S(3)*(S(2)*c*d - e*(b + q))) - Int(Simp(-c**S(2)*e**S(3)*x**S(6) + c*e**S(2)*x**S(4)*(-S(2)*b*e + c*d) - S(2)*c*(a*e**S(2) - b*d*e + c*d**S(2))**S(2)/(S(2)*c*d - e*(b + q)) - e*x**S(2)*(b**S(2)*e**S(2) + c**S(2)*d**S(2) - S(2)*c*e*(-a*e + b*d)) + (-b*e + c*d)*(S(2)*a*e**S(2) - b*d*e + c*d**S(2)), x)/Sqrt(a + b*x**S(2) + c*x**S(4)), x)/e**S(4)))
    rubi.add(rule173)

    pattern174 = Pattern(Integral((a_ + x_**S(4)*WC('c', S(1)))**(S(3)/2)/(d_ + x_**S(2)*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, a, c, e: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda a, c: PositiveQ(-a*c)))
    rule174 = ReplacementRule(pattern174, lambda e, c, d, x, a : With(List(Set(q, Rt(-a*c, S(2)))), -c*Int(Simp(c*d*e**S(2)*x**S(4) - c*e**S(3)*x**S(6) + d*(S(2)*a*e**S(2) + c*d**S(2)) - e*x**S(2)*(S(2)*a*e**S(2) + c*d**S(2)) - (a*e**S(2) + c*d**S(2))**S(2)/(c*d - e*q), x)/Sqrt(a + c*x**S(4)), x)/e**S(4) - (a*e**S(2) + c*d**S(2))**S(2)*Int((c*x**S(2) + q)/((d + e*x**S(2))*Sqrt(a + c*x**S(4))), x)/(e**S(3)*(c*d - e*q))))
    rubi.add(rule174)

    pattern175 = Pattern(Integral((a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1)))**p_/(d_ + x_**S(2)*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, e, d, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: PositiveIntegerQ(p + S(-1)/2)))
    rule175 = ReplacementRule(pattern175, lambda e, c, d, p, x, b, a : a*Int((a + b*x**S(2) + c*x**S(4))**(p + S(-1))/(d + e*x**S(2)), x) + b*Int(x**S(2)*(a + b*x**S(2) + c*x**S(4))**(p + S(-1))/(d + e*x**S(2)), x) + c*Int(x**S(4)*(a + b*x**S(2) + c*x**S(4))**(p + S(-1))/(d + e*x**S(2)), x))
    rubi.add(rule175)

    pattern176 = Pattern(Integral((a_ + x_**S(4)*WC('c', S(1)))**p_/(d_ + x_**S(2)*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, a, c, e: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: PositiveIntegerQ(p + S(-1)/2)))
    rule176 = ReplacementRule(pattern176, lambda e, c, d, p, x, a : a*Int((a + c*x**S(4))**(p + S(-1))/(d + e*x**S(2)), x) + c*Int(x**S(4)*(a + c*x**S(4))**(p + S(-1))/(d + e*x**S(2)), x))
    rubi.add(rule176)

    pattern177 = Pattern(Integral(S(1)/((d_ + x_**S(2)*WC('e', S(1)))*sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c: NegativeQ(c)))
    rule177 = ReplacementRule(pattern177, lambda e, c, d, x, b, a : With(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), S(2)*Int(S(1)/((d + e*x**S(2))*Sqrt(-b - S(2)*c*x**S(2) + q)*Sqrt(b + S(2)*c*x**S(2) + q)), x)*Sqrt(-c)))
    rubi.add(rule177)

    pattern178 = Pattern(Integral(S(1)/(sqrt(a_ + x_**S(4)*WC('c', S(1)))*(d_ + x_**S(2)*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a: PositiveQ(a)), CustomConstraint(lambda c: NegativeQ(c)))
    rule178 = ReplacementRule(pattern178, lambda e, c, d, x, a : With(List(Set(q, Rt(-a*c, S(2)))), Int(S(1)/((d + e*x**S(2))*Sqrt(-c*x**S(2) + q)*Sqrt(c*x**S(2) + q)), x)*Sqrt(-c)))
    rubi.add(rule178)

    pattern179 = Pattern(Integral(S(1)/((d_ + x_**S(2)*WC('e', S(1)))*sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c: ~(NegativeQ(c))))
    rule179 = ReplacementRule(pattern179, lambda e, c, d, x, b, a : With(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), S(2)*c*Int(1/Sqrt(a + b*x**S(2) + c*x**S(4)), x)/(S(2)*c*d - e*(b - q)) - e*Int((b + S(2)*c*x**S(2) - q)/((d + e*x**S(2))*Sqrt(a + b*x**S(2) + c*x**S(4))), x)/(S(2)*c*d - e*(b - q))))
    rubi.add(rule179)

    pattern180 = Pattern(Integral(S(1)/(sqrt(a_ + x_**S(4)*WC('c', S(1)))*(d_ + x_**S(2)*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, c: PositiveQ(-a*c)), CustomConstraint(lambda c: ~(NegativeQ(c))))
    rule180 = ReplacementRule(pattern180, lambda e, c, d, x, a : With(List(Set(q, Rt(-a*c, S(2)))), c*Int(1/Sqrt(a + c*x**S(4)), x)/(c*d + e*q) + e*Int((-c*x**S(2) + q)/((d + e*x**S(2))*Sqrt(a + c*x**S(4))), x)/(c*d + e*q)))
    rubi.add(rule180)

    pattern181 = Pattern(Integral(S(1)/((d_ + x_**S(2)*WC('e', S(1)))*sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, e, d, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda a, c: PosQ(c/a)))
    rule181 = ReplacementRule(pattern181, lambda e, c, d, x, b, a : With(List(Set(q, Rt(c/a, S(4)))), Condition(-q**S(2)*Int(1/Sqrt(a + b*x**S(2) + c*x**S(4)), x)/(-d*q**S(2) + e) + ArcTan(x*Sqrt((a*e**S(2) - b*d*e + c*d**S(2))/(d*e))/Sqrt(a + b*x**S(2) + c*x**S(4)))/(S(2)*d*Sqrt((a*e**S(2) - b*d*e + c*d**S(2))/(d*e))) + (d*q**S(2) + e)*(q**S(2)*x**S(2) + S(1))*EllipticPi(-(-d*q**S(2) + e)**S(2)/(S(4)*d*e*q**S(2)), S(2)*ArcTan(q*x), -b*q**S(2)/(S(4)*c) + S(1)/2)*Sqrt((a + b*x**S(2) + c*x**S(4))/(a*(q**S(2)*x**S(2) + S(1))**S(2)))/(S(4)*d*q*(-d*q**S(2) + e)*Sqrt(a + b*x**S(2) + c*x**S(4))), NonzeroQ(-d*q**S(2) + e))))
    rubi.add(rule181)

    pattern182 = Pattern(Integral(S(1)/(sqrt(a_ + x_**S(4)*WC('c', S(1)))*(d_ + x_**S(2)*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, a, c, e: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda a, c: PosQ(c/a)))
    rule182 = ReplacementRule(pattern182, lambda e, c, d, x, a : With(List(Set(q, Rt(c/a, S(4)))), Condition(-q**S(2)*Int(1/Sqrt(a + c*x**S(4)), x)/(-d*q**S(2) + e) + ArcTan(x*Sqrt((a*e**S(2) + c*d**S(2))/(d*e))/Sqrt(a + c*x**S(4)))/(S(2)*d*Sqrt((a*e**S(2) + c*d**S(2))/(d*e))) + (d*q**S(2) + e)*(q**S(2)*x**S(2) + S(1))*EllipticPi(-(-d*q**S(2) + e)**S(2)/(S(4)*d*e*q**S(2)), S(2)*ArcTan(q*x), S(1)/2)*Sqrt((a + c*x**S(4))/(a*(q**S(2)*x**S(2) + S(1))**S(2)))/(S(4)*d*q*(-d*q**S(2) + e)*Sqrt(a + c*x**S(4))), NonzeroQ(-d*q**S(2) + e))))
    rubi.add(rule182)

    pattern183 = Pattern(Integral(S(1)/(sqrt(a_ + x_**S(4)*WC('c', S(1)))*(d_ + x_**S(2)*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, c: NegQ(c/a)), CustomConstraint(lambda a: PositiveQ(a)))
    rule183 = ReplacementRule(pattern183, lambda e, c, d, x, a : With(List(Set(q, Rt(-c/a, S(4)))), EllipticPi(-e/(d*q**S(2)), ArcSin(q*x), S(-1))/(d*q*Sqrt(a))))
    rubi.add(rule183)

    pattern184 = Pattern(Integral(S(1)/(sqrt(a_ + x_**S(4)*WC('c', S(1)))*(d_ + x_**S(2)*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, c: NegQ(c/a)), CustomConstraint(lambda a: ~(PositiveQ(a))))
    rule184 = ReplacementRule(pattern184, lambda e, c, d, x, a : Int(S(1)/((d + e*x**S(2))*Sqrt(S(1) + c*x**S(4)/a)), x)*Sqrt(S(1) + c*x**S(4)/a)/Sqrt(a + c*x**S(4)))
    rubi.add(rule184)

    pattern185 = Pattern(Integral(S(1)/((d_ + x_**S(2)*WC('e', S(1)))*sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda a, c: NegQ(c/a)))
    rule185 = ReplacementRule(pattern185, lambda e, c, d, x, b, a : With(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), Int(S(1)/((d + e*x**S(2))*Sqrt(S(2)*c*x**S(2)/(b - q) + S(1))*Sqrt(S(2)*c*x**S(2)/(b + q) + S(1))), x)*Sqrt(S(2)*c*x**S(2)/(b - q) + S(1))*Sqrt(S(2)*c*x**S(2)/(b + q) + S(1))/Sqrt(a + b*x**S(2) + c*x**S(4))))
    rubi.add(rule185)

    pattern186 = Pattern(Integral((a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1)))**p_/(d_ + x_**S(2)*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, e, d, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: NegativeIntegerQ(p + S(1)/2)))
    rule186 = ReplacementRule(pattern186, lambda e, c, d, p, x, b, a : -x*(a + b*x**S(2) + c*x**S(4))**(p + S(1))*(S(3)*a*b*c*e - S(2)*a*c**S(2)*d - b**S(3)*e + b**S(2)*c*d + c*x**S(2)*(S(2)*a*c*e - b**S(2)*e + b*c*d))/(S(2)*a*(p + S(1))*(-S(4)*a*c + b**S(2))*(a*e**S(2) - b*d*e + c*d**S(2))) - Int((a + b*x**S(2) + c*x**S(4))**(p + S(1))*Simp(-a*b*c*d*e*(S(8)*p + S(11)) + S(2)*a*c*(S(4)*a*e**S(2)*(p + S(1)) + c*d**S(2)*(S(4)*p + S(5))) + b**S(3)*d*e*(S(2)*p + S(3)) - b**S(2)*(S(2)*a*e**S(2)*(p + S(1)) + c*d**S(2)*(S(2)*p + S(3))) - c*e*x**S(4)*(S(4)*p + S(7))*(S(2)*a*c*e - b**S(2)*e + b*c*d) - x**S(2)*(S(4)*a*c**S(2)*d*e - b**S(3)*e**S(2)*(S(2)*p + S(3)) - S(2)*b**S(2)*c*d*e*(p + S(2)) + b*c*(a*e**S(2)*(S(8)*p + S(11)) + c*d**S(2)*(S(4)*p + S(7)))), x)/(d + e*x**S(2)), x)/(S(2)*a*(p + S(1))*(-S(4)*a*c + b**S(2))*(a*e**S(2) - b*d*e + c*d**S(2))))
    rubi.add(rule186)

    pattern187 = Pattern(Integral((a_ + x_**S(4)*WC('c', S(1)))**p_/(d_ + x_**S(2)*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, a, c, e: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: NegativeIntegerQ(p + S(1)/2)))
    rule187 = ReplacementRule(pattern187, lambda e, c, d, p, x, a : x*(a + c*x**S(4))**(p + S(1))*(-S(2)*a*c**S(2)*d + S(2)*a*c**S(2)*e*x**S(2))/(S(8)*a**S(2)*c*(p + S(1))*(a*e**S(2) + c*d**S(2))) + Int((a + c*x**S(4))**(p + S(1))*Simp(-S(4)*a*c**S(2)*d*e*x**S(2) - S(2)*a*c**S(2)*e**S(2)*x**S(4)*(S(4)*p + S(7)) + S(2)*a*c*(S(4)*a*e**S(2)*(p + S(1)) + c*d**S(2)*(S(4)*p + S(5))), x)/(d + e*x**S(2)), x)/(S(8)*a**S(2)*c*(p + S(1))*(a*e**S(2) + c*d**S(2))))
    rubi.add(rule187)

    pattern188 = Pattern(Integral(S(1)/((d_ + x_**S(2)*WC('e', S(1)))**S(2)*sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, e, d, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))))
    rule188 = ReplacementRule(pattern188, lambda e, c, d, x, b, a : -c*Int((d + e*x**S(2))/Sqrt(a + b*x**S(2) + c*x**S(4)), x)/(S(2)*d*(a*e**S(2) - b*d*e + c*d**S(2))) + e**S(2)*x*Sqrt(a + b*x**S(2) + c*x**S(4))/(S(2)*d*(d + e*x**S(2))*(a*e**S(2) - b*d*e + c*d**S(2))) + (a*e**S(2) - S(2)*b*d*e + S(3)*c*d**S(2))*Int(S(1)/((d + e*x**S(2))*Sqrt(a + b*x**S(2) + c*x**S(4))), x)/(S(2)*d*(a*e**S(2) - b*d*e + c*d**S(2))))
    rubi.add(rule188)

    pattern189 = Pattern(Integral(S(1)/(sqrt(a_ + x_**S(4)*WC('c', S(1)))*(d_ + x_**S(2)*WC('e', S(1)))**S(2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, a, c, e: NonzeroQ(a*e**S(2) + c*d**S(2))))
    rule189 = ReplacementRule(pattern189, lambda e, c, d, x, a : -c*Int((d + e*x**S(2))/Sqrt(a + c*x**S(4)), x)/(S(2)*d*(a*e**S(2) + c*d**S(2))) + e**S(2)*x*Sqrt(a + c*x**S(4))/(S(2)*d*(d + e*x**S(2))*(a*e**S(2) + c*d**S(2))) + (a*e**S(2) + S(3)*c*d**S(2))*Int(S(1)/((d + e*x**S(2))*Sqrt(a + c*x**S(4))), x)/(S(2)*d*(a*e**S(2) + c*d**S(2))))
    rubi.add(rule189)

    pattern190 = Pattern(Integral((d_ + x_**S(2)*WC('e', S(1)))**q_*(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, e, d, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: IntegerQ(p + S(-1)/2)), CustomConstraint(lambda q: NegativeIntegerQ(q)))
    rule190 = ReplacementRule(pattern190, lambda e, c, q, d, p, x, b, a : With(List(Set(r, Rt(-S(4)*a*c + b**S(2), S(2)))), a**IntPart(p)*(S(2)*c*x**S(2)/(b - r) + S(1))**(-FracPart(p))*(S(2)*c*x**S(2)/(b + r) + S(1))**(-FracPart(p))*(a + b*x**S(2) + c*x**S(4))**FracPart(p)*Int((d + e*x**S(2))**q*(S(2)*c*x**S(2)/(b - r) + S(1))**p*(S(2)*c*x**S(2)/(b + r) + S(1))**p, x)))
    rubi.add(rule190)

    pattern191 = Pattern(Integral((a_ + x_**S(4)*WC('c', S(1)))**p_*(d_ + x_**S(2)*WC('e', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda d, a, c, e: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: IntegerQ(p + S(-1)/2)), CustomConstraint(lambda q: NegativeIntegerQ(q)))
    rule191 = ReplacementRule(pattern191, lambda e, q, c, d, p, x, a : With(List(Set(r, Rt(-a*c, S(2)))), a**IntPart(p)*(a + c*x**S(4))**FracPart(p)*(-c*x**S(2)/r + S(1))**(-FracPart(p))*(c*x**S(2)/r + S(1))**(-FracPart(p))*Int((d + e*x**S(2))**q*(-c*x**S(2)/r + S(1))**p*(c*x**S(2)/r + S(1))**p, x)))
    rubi.add(rule191)

    pattern192 = Pattern(Integral(S(1)/(sqrt(d_ + x_**S(2)*WC('e', S(1)))*sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, b, c, e: ZeroQ(-b*e + c*d)), CustomConstraint(lambda a: PositiveQ(a)), CustomConstraint(lambda d: PositiveQ(d)))
    rule192 = ReplacementRule(pattern192, lambda e, c, d, x, b, a : EllipticF(S(2)*ArcSin(x*Rt(-e/d, S(2))), b*d/(S(4)*a*e))/(S(2)*Rt(-e/d, S(2))*Sqrt(a)*Sqrt(d)))
    rubi.add(rule192)

    pattern193 = Pattern(Integral(S(1)/(sqrt(d_ + x_**S(2)*WC('e', S(1)))*sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, b, c, e: ZeroQ(-b*e + c*d)), CustomConstraint(lambda d, a: ~(PositiveQ(a) & PositiveQ(d))))
    rule193 = ReplacementRule(pattern193, lambda e, c, d, x, b, a : Int(S(1)/(Sqrt(S(1) + e*x**S(2)/d)*Sqrt(S(1) + b*x**S(2)/a + c*x**S(4)/a)), x)*Sqrt((a + b*x**S(2) + c*x**S(4))/a)*Sqrt((d + e*x**S(2))/d)/(Sqrt(d + e*x**S(2))*Sqrt(a + b*x**S(2) + c*x**S(4))))
    rubi.add(rule193)

    pattern194 = Pattern(Integral(sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1)))/sqrt(d_ + x_**S(2)*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, b, c, e: ZeroQ(-b*e + c*d)), CustomConstraint(lambda a: PositiveQ(a)), CustomConstraint(lambda d: PositiveQ(d)))
    rule194 = ReplacementRule(pattern194, lambda e, c, d, x, b, a : EllipticE(S(2)*ArcSin(x*Rt(-e/d, S(2))), b*d/(S(4)*a*e))*Sqrt(a)/(S(2)*Rt(-e/d, S(2))*Sqrt(d)))
    rubi.add(rule194)

    pattern195 = Pattern(Integral(sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1)))/sqrt(d_ + x_**S(2)*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda d, b, c, e: ZeroQ(-b*e + c*d)), CustomConstraint(lambda d, a: ~(PositiveQ(a) & PositiveQ(d))))
    rule195 = ReplacementRule(pattern195, lambda e, c, d, x, b, a : Int(Sqrt(S(1) + b*x**S(2)/a + c*x**S(4)/a)/Sqrt(S(1) + e*x**S(2)/d), x)*Sqrt((d + e*x**S(2))/d)*Sqrt(a + b*x**S(2) + c*x**S(4))/(Sqrt((a + b*x**S(2) + c*x**S(4))/a)*Sqrt(d + e*x**S(2))))
    rubi.add(rule195)

    pattern196 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**q_*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, e, d, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda n, p, q: PositiveIntegerQ(p) | (PositiveIntegerQ(q) & ~(IntegerQ(n))) | (IntegersQ(p, q) & ~(IntegerQ(n)))))
    rule196 = ReplacementRule(pattern196, lambda e, c, q, n, d, p, x, b, n2, a : Int(ExpandIntegrand((d + e*x**n)**q*(a + b*x**n + c*x**(S(2)*n))**p, x), x))
    rubi.add(rule196)

    pattern197 = Pattern(Integral((a_ + x_**n2_*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda d, a, c, e: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda n, p, q: PositiveIntegerQ(p) | (PositiveIntegerQ(q) & ~(IntegerQ(n))) | (IntegersQ(p, q) & ~(IntegerQ(n)))))
    rule197 = ReplacementRule(pattern197, lambda e, c, q, n, d, p, x, n2, a : Int(ExpandIntegrand((a + c*x**(S(2)*n))**p*(d + e*x**n)**q, x), x))
    rubi.add(rule197)

    pattern198 = Pattern(Integral((a_ + x_**n2_*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda d, a, c, e: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda q: NegativeIntegerQ(q)), CustomConstraint(lambda n, p: ~(IntegersQ(n, S(2)*p))))
    rule198 = ReplacementRule(pattern198, lambda e, c, q, n, d, p, x, n2, a : Int(ExpandIntegrand((a + c*x**(S(2)*n))**p, (d/(d**S(2) - e**S(2)*x**(S(2)*n)) - e*x**n/(d**S(2) - e**S(2)*x**(S(2)*n)))**(-q), x), x))
    rubi.add(rule198)

    pattern199 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**q_*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, q: ~(IntegersQ(n, q))))
    rule199 = ReplacementRule(pattern199, lambda e, c, q, n, d, p, x, b, n2, a : Int((d + e*x**n)**q*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule199)

    pattern200 = Pattern(Integral((a_ + x_**n2_*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, q: ~(IntegersQ(n, q))))
    rule200 = ReplacementRule(pattern200, lambda e, c, q, n, d, p, x, n2, a : Int((a + c*x**(S(2)*n))**p*(d + e*x**n)**q, x))
    rubi.add(rule200)

    pattern201 = Pattern(Integral((d_ + u_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + u_**n2_*WC('c', S(1)) + u_**n_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule201 = ReplacementRule(pattern201, lambda c, e, q, n, d, u, p, b, n2, x, a : Subst(Int((d + e*x**n)**q*(a + b*x**n + c*x**(S(2)*n))**p, x), x, u)/Coefficient(u, x, S(1)))
    rubi.add(rule201)

    pattern202 = Pattern(Integral((a_ + u_**n2_*WC('c', S(1)))**WC('p', S(1))*(d_ + u_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule202 = ReplacementRule(pattern202, lambda c, e, q, n, d, u, p, x, n2, a : Subst(Int((a + c*x**(S(2)*n))**p*(d + e*x**n)**q, x), x, u)/Coefficient(u, x, S(1)))
    rubi.add(rule202)

    pattern203 = Pattern(Integral((d_ + x_**WC('mn', S(1))*WC('e', S(1)))**WC('q', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda n, mn: EqQ(mn, -n)), CustomConstraint(lambda q: IntegerQ(q)))
    rule203 = ReplacementRule(pattern203, lambda e, q, c, n, d, p, mn, b, n2, x, a : Int(x**(-n*q)*(d*x**n + e)**q*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule203)

    pattern204 = Pattern(Integral((a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**WC('mn', S(1))*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda mn, x: FreeQ(mn, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, mn: EqQ(n2, -S(2)*mn)), CustomConstraint(lambda q: IntegerQ(q)))
    rule204 = ReplacementRule(pattern204, lambda c, e, q, d, p, mn, x, n2, a : Int(x**(mn*q)*(a + c*x**n2)**p*(d*x**(-mn) + e)**q, x))
    rubi.add(rule204)

    pattern205 = Pattern(Integral((d_ + x_**WC('mn', S(1))*WC('e', S(1)))**q_*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda n, mn: EqQ(mn, -n)), CustomConstraint(lambda q: ~(IntegerQ(q))), CustomConstraint(lambda p: IntegerQ(p)))
    rule205 = ReplacementRule(pattern205, lambda e, c, q, n, d, p, mn, b, n2, x, a : Int(x**(S(2)*n*p)*(d + e*x**(-n))**q*(a*x**(-S(2)*n) + b*x**(-n) + c)**p, x))
    rubi.add(rule205)

    pattern206 = Pattern(Integral((a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**WC('mn', S(1))*WC('e', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda mn, x: FreeQ(mn, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, mn: EqQ(n2, -S(2)*mn)), CustomConstraint(lambda q: ~(IntegerQ(q))), CustomConstraint(lambda p: IntegerQ(p)))
    rule206 = ReplacementRule(pattern206, lambda e, c, q, d, p, mn, x, n2, a : Int(x**(-S(2)*mn*p)*(d + e*x**mn)**q*(a*x**(S(2)*mn) + c)**p, x))
    rubi.add(rule206)

    pattern207 = Pattern(Integral((d_ + x_**WC('mn', S(1))*WC('e', S(1)))**q_*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda n, mn: EqQ(mn, -n)), CustomConstraint(lambda q: ~(IntegerQ(q))), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda n: PosQ(n)))
    rule207 = ReplacementRule(pattern207, lambda e, c, q, n, d, p, mn, b, n2, x, a : x**(n*FracPart(q))*(d + e*x**(-n))**FracPart(q)*(d*x**n + e)**(-FracPart(q))*Int(x**(-n*q)*(d*x**n + e)**q*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule207)

    pattern208 = Pattern(Integral((a_ + x_**WC('n2', S(1))*WC('c', S(1)))**p_*(d_ + x_**WC('mn', S(1))*WC('e', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda mn, x: FreeQ(mn, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, mn: EqQ(n2, -S(2)*mn)), CustomConstraint(lambda q: ~(IntegerQ(q))), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda n2: PosQ(n2)))
    rule208 = ReplacementRule(pattern208, lambda e, c, q, d, p, mn, x, n2, a : x**(-mn*FracPart(q))*(d + e*x**mn)**FracPart(q)*(d*x**(-mn) + e)**(-FracPart(q))*Int(x**(mn*q)*(a + c*x**n2)**p*(d*x**(-mn) + e)**q, x))
    rubi.add(rule208)

    pattern209 = Pattern(Integral((d_ + x_**WC('mn', S(1))*WC('e', S(1)))**q_*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda n, mn: EqQ(mn, -n)), CustomConstraint(lambda q: ~(IntegerQ(q))), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda n: NegQ(n)))
    rule209 = ReplacementRule(pattern209, lambda e, c, q, n, d, p, mn, b, n2, x, a : x**(-S(2)*n*FracPart(p))*(a + b*x**n + c*x**(S(2)*n))**FracPart(p)*(a*x**(-S(2)*n) + b*x**(-n) + c)**(-FracPart(p))*Int(x**(S(2)*n*p)*(d + e*x**(-n))**q*(a*x**(-S(2)*n) + b*x**(-n) + c)**p, x))
    rubi.add(rule209)

    pattern210 = Pattern(Integral((a_ + x_**WC('n2', S(1))*WC('c', S(1)))**p_*(d_ + x_**WC('mn', S(1))*WC('e', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda mn, x: FreeQ(mn, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, mn: EqQ(n2, -S(2)*mn)), CustomConstraint(lambda q: ~(IntegerQ(q))), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda n2: NegQ(n2)))
    rule210 = ReplacementRule(pattern210, lambda e, c, q, d, p, mn, x, n2, a : x**(-n2*FracPart(p))*(a + c*x**n2)**FracPart(p)*(a*x**(S(2)*mn) + c)**(-FracPart(p))*Int(x**(n2*p)*(d + e*x**mn)**q*(a*x**(S(2)*mn) + c)**p, x))
    rubi.add(rule210)

    pattern211 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**mn_*WC('b', S(1)) + x_**WC('n', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, mn: EqQ(mn, -n)), CustomConstraint(lambda p: IntegerQ(p)))
    rule211 = ReplacementRule(pattern211, lambda c, e, q, n, d, p, mn, b, x, a : Int(x**(-n*p)*(d + e*x**n)**q*(a*x**n + b + c*x**(S(2)*n))**p, x))
    rubi.add(rule211)

    pattern212 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**mn_*WC('b', S(1)) + x_**WC('n', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, mn: EqQ(mn, -n)), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule212 = ReplacementRule(pattern212, lambda c, e, q, n, d, p, mn, b, x, a : x**(n*FracPart(p))*(a + b*x**(-n) + c*x**n)**FracPart(p)*(a*x**n + b + c*x**(S(2)*n))**(-FracPart(p))*Int(x**(-n*p)*(d + e*x**n)**q*(a*x**n + b + c*x**(S(2)*n))**p, x))
    rubi.add(rule212)

    pattern213 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(f_ + x_**n_*WC('g', S(1)))**WC('r', S(1))*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule213 = ReplacementRule(pattern213, lambda e, q, c, r, n, d, p, f, b, x, n2, a, g : (S(4)*c)**(-IntPart(p))*(b + S(2)*c*x**n)**(-S(2)*FracPart(p))*(a + b*x**n + c*x**(S(2)*n))**FracPart(p)*Int((b + S(2)*c*x**n)**(S(2)*p)*(d + e*x**n)**q*(f + g*x**n)**r, x))
    rubi.add(rule213)

    pattern214 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(f_ + x_**n_*WC('g', S(1)))**WC('r', S(1))*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, e, d, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: IntegerQ(p)))
    rule214 = ReplacementRule(pattern214, lambda e, q, c, r, n, d, p, f, b, x, n2, a, g : Int((d + e*x**n)**(p + q)*(f + g*x**n)**r*(a/d + c*x**n/e)**p, x))
    rubi.add(rule214)

    pattern215 = Pattern(Integral((a_ + x_**n2_*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(f_ + x_**n_*WC('g', S(1)))**WC('r', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda d, a, c, e: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: IntegerQ(p)))
    rule215 = ReplacementRule(pattern215, lambda c, e, q, r, n, d, p, f, x, n2, a, g : Int((d + e*x**n)**(p + q)*(f + g*x**n)**r*(a/d + c*x**n/e)**p, x))
    rubi.add(rule215)

    pattern216 = Pattern(Integral((d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(f_ + x_**n_*WC('g', S(1)))**WC('r', S(1))*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, e, d, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule216 = ReplacementRule(pattern216, lambda e, q, c, r, n, d, p, f, b, x, n2, a, g : (d + e*x**n)**(-FracPart(p))*(a/d + c*x**n/e)**(-FracPart(p))*(a + b*x**n + c*x**(S(2)*n))**FracPart(p)*Int((d + e*x**n)**(p + q)*(f + g*x**n)**r*(a/d + c*x**n/e)**p, x))
    rubi.add(rule216)

    pattern217 = Pattern(Integral((a_ + x_**n2_*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(f_ + x_**n_*WC('g', S(1)))**WC('r', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda r, x: FreeQ(r, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda d, a, c, e: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule217 = ReplacementRule(pattern217, lambda c, e, q, r, n, d, p, f, x, n2, a, g : (a + c*x**(S(2)*n))**FracPart(p)*(d + e*x**n)**(-FracPart(p))*(a/d + c*x**n/e)**(-FracPart(p))*Int((d + e*x**n)**(p + q)*(f + g*x**n)**r*(a/d + c*x**n/e)**p, x))
    rubi.add(rule217)

    pattern218 = Pattern(Integral((x_**S(2)*WC('g', S(1)) + WC('f', S(0)))/((d_ + x_**S(2)*WC('e', S(1)))*sqrt(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda a, b, c: PositiveQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, e, d, b, a: NonzeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda c: ~(NegativeQ(c))))
    rule218 = ReplacementRule(pattern218, lambda e, c, d, f, b, x, a, g : With(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), Condition((S(2)*c*f - g*(b - q))*Int(1/Sqrt(a + b*x**S(2) + c*x**S(4)), x)/(S(2)*c*d - e*(b - q)) - (-d*g + e*f)*Int((b + S(2)*c*x**S(2) - q)/((d + e*x**S(2))*Sqrt(a + b*x**S(2) + c*x**S(4))), x)/(S(2)*c*d - e*(b - q)), NonzeroQ(S(2)*c*f - g*(b - q)))))
    rubi.add(rule218)

    pattern219 = Pattern(Integral((f_ + x_**S(2)*WC('g', S(1)))/(sqrt(a_ + x_**S(4)*WC('c', S(1)))*(d_ + x_**S(2)*WC('e', S(1)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda a, c: PositiveQ(-a*c)), CustomConstraint(lambda d, a, c, e: NonzeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda c: ~(NegativeQ(c))))
    rule219 = ReplacementRule(pattern219, lambda e, c, d, f, x, a, g : With(List(Set(q, Rt(-a*c, S(2)))), Condition((c*f + g*q)*Int(1/Sqrt(a + c*x**S(4)), x)/(c*d + e*q) + (-d*g + e*f)*Int((-c*x**S(2) + q)/((d + e*x**S(2))*Sqrt(a + c*x**S(4))), x)/(c*d + e*q), NonzeroQ(c*f + g*q))))
    rubi.add(rule219)

    pattern220 = Pattern(Integral((d1_ + x_**WC('non2', S(1))*WC('e1', S(1)))**WC('q', S(1))*(d2_ + x_**WC('non2', S(1))*WC('e2', S(1)))**WC('q', S(1))*(x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d1, x: FreeQ(d1, x)), CustomConstraint(lambda e1, x: FreeQ(e1, x)), CustomConstraint(lambda d2, x: FreeQ(d2, x)), CustomConstraint(lambda e2, x: FreeQ(e2, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, non2: ZeroQ(-n/S(2) + non2)), CustomConstraint(lambda e1, d2, d1, e2: ZeroQ(d1*e2 + d2*e1)), CustomConstraint(lambda d2, d1, q: IntegerQ(q) | (PositiveQ(d1) & PositiveQ(d2))))
    rule220 = ReplacementRule(pattern220, lambda c, q, e2, e1, non2, n, p, b, x, d1, n2, a, d2 : Int((d1*d2 + e1*e2*x**n)**q*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule220)

    pattern221 = Pattern(Integral((d1_ + x_**WC('non2', S(1))*WC('e1', S(1)))**WC('q', S(1))*(d2_ + x_**WC('non2', S(1))*WC('e2', S(1)))**WC('q', S(1))*(x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d1, x: FreeQ(d1, x)), CustomConstraint(lambda e1, x: FreeQ(e1, x)), CustomConstraint(lambda d2, x: FreeQ(d2, x)), CustomConstraint(lambda e2, x: FreeQ(e2, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, non2: ZeroQ(-n/S(2) + non2)), CustomConstraint(lambda e1, d2, d1, e2: ZeroQ(d1*e2 + d2*e1)))
    rule221 = ReplacementRule(pattern221, lambda c, q, e2, e1, non2, n, p, b, x, d1, n2, a, d2 : (d1 + e1*x**(n/S(2)))**FracPart(q)*(d2 + e2*x**(n/S(2)))**FracPart(q)*(d1*d2 + e1*e2*x**n)**(-FracPart(q))*Int((d1*d2 + e1*e2*x**n)**q*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule221)

    pattern222 = Pattern(Integral((A_ + x_**WC('m', S(1))*WC('B', S(1)))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, m: ZeroQ(m - n + S(1))))
    rule222 = ReplacementRule(pattern222, lambda e, q, B, c, n, d, p, b, x, m, A, n2, a : A*Int((d + e*x**n)**q*(a + b*x**n + c*x**(S(2)*n))**p, x) + B*Int(x**m*(d + e*x**n)**q*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule222)

    pattern223 = Pattern(Integral((A_ + x_**WC('m', S(1))*WC('B', S(1)))*(a_ + x_**n2_*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, m: ZeroQ(m - n + S(1))))
    rule223 = ReplacementRule(pattern223, lambda e, c, q, B, n, d, p, x, n2, m, A, a : A*Int((a + c*x**(S(2)*n))**p*(d + e*x**n)**q, x) + B*Int(x**m*(a + c*x**(S(2)*n))**p*(d + e*x**n)**q, x))
    rubi.add(rule223)

    pattern224 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(x_**n_*WC('e', S(1)))**q_*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda f, m: IntegerQ(m) | PositiveQ(f)), CustomConstraint(lambda n, m: IntegerQ(Simplify((m + S(1))/n))))
    rule224 = ReplacementRule(pattern224, lambda c, e, q, n, p, f, b, n2, m, x, a : e**(S(1) - (m + S(1))/n)*f**m*Subst(Int((e*x)**(q + S(-1) + (m + S(1))/n)*(a + b*x + c*x**S(2))**p, x), x, x**n)/n)
    rubi.add(rule224)

    pattern225 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(x_**n_*WC('e', S(1)))**q_*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda f, m: IntegerQ(m) | PositiveQ(f)), CustomConstraint(lambda n, m: IntegerQ(Simplify((m + S(1))/n))))
    rule225 = ReplacementRule(pattern225, lambda c, e, q, n, p, f, x, n2, m, a : e**(S(1) - (m + S(1))/n)*f**m*Subst(Int((e*x)**(q + S(-1) + (m + S(1))/n)*(a + c*x**S(2))**p, x), x, x**n)/n)
    rubi.add(rule225)

    pattern226 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(x_**n_*WC('e', S(1)))**q_*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda f, m: IntegerQ(m) | PositiveQ(f)), CustomConstraint(lambda n, m: ~(IntegerQ(Simplify((m + S(1))/n)))))
    rule226 = ReplacementRule(pattern226, lambda c, e, q, n, p, f, b, n2, m, x, a : e**IntPart(q)*f**m*x**(-n*FracPart(q))*(e*x**n)**FracPart(q)*Int(x**(m + n*q)*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule226)

    pattern227 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(x_**n_*WC('e', S(1)))**q_*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda f, m: IntegerQ(m) | PositiveQ(f)), CustomConstraint(lambda n, m: ~(IntegerQ(Simplify((m + S(1))/n)))))
    rule227 = ReplacementRule(pattern227, lambda c, e, q, n, p, f, x, n2, m, a : e**IntPart(q)*f**m*x**(-n*FracPart(q))*(e*x**n)**FracPart(q)*Int(x**(m + n*q)*(a + c*x**(S(2)*n))**p, x))
    rubi.add(rule227)

    pattern228 = Pattern(Integral((f_*x_)**WC('m', S(1))*(x_**n_*WC('e', S(1)))**q_*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda m: ~(IntegerQ(m))))
    rule228 = ReplacementRule(pattern228, lambda c, e, q, n, p, f, b, n2, m, x, a : f**IntPart(m)*x**(-FracPart(m))*(f*x)**FracPart(m)*Int(x**m*(e*x**n)**q*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule228)

    pattern229 = Pattern(Integral((f_*x_)**WC('m', S(1))*(x_**n_*WC('e', S(1)))**q_*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda m: ~(IntegerQ(m))))
    rule229 = ReplacementRule(pattern229, lambda c, e, q, n, p, f, x, n2, m, a : f**IntPart(m)*x**(-FracPart(m))*(f*x)**FracPart(m)*Int(x**m*(e*x**n)**q*(a + c*x**(S(2)*n))**p, x))
    rubi.add(rule229)

    pattern230 = Pattern(Integral(x_**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, m: ZeroQ(Simplify(m - n + S(1)))))
    rule230 = ReplacementRule(pattern230, lambda c, e, q, n, d, p, b, n2, m, x, a : Subst(Int((d + e*x)**q*(a + b*x + c*x**S(2))**p, x), x, x**n)/n)
    rubi.add(rule230)

    pattern231 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, m: ZeroQ(Simplify(m - n + S(1)))))
    rule231 = ReplacementRule(pattern231, lambda c, e, q, n, d, p, x, n2, m, a : Subst(Int((a + c*x**S(2))**p*(d + e*x)**q, x), x, x**n)/n)
    rubi.add(rule231)

    pattern232 = Pattern(Integral(x_**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda p, q: IntegersQ(p, q)), CustomConstraint(lambda n: NegQ(n)))
    rule232 = ReplacementRule(pattern232, lambda c, e, q, n, d, p, b, n2, m, x, a : Int(x**(m + n*(S(2)*p + q))*(d*x**(-n) + e)**q*(a*x**(-S(2)*n) + b*x**(-n) + c)**p, x))
    rubi.add(rule232)

    pattern233 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda p, q: IntegersQ(p, q)), CustomConstraint(lambda n: NegQ(n)))
    rule233 = ReplacementRule(pattern233, lambda c, e, q, n, d, p, x, n2, m, a : Int(x**(m + n*(S(2)*p + q))*(a*x**(-S(2)*n) + c)**p*(d*x**(-n) + e)**q, x))
    rubi.add(rule233)

    pattern234 = Pattern(Integral(x_**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda n, m: PositiveIntegerQ(m, n, (m + S(1))/n)))
    rule234 = ReplacementRule(pattern234, lambda c, e, q, n, d, p, b, n2, m, x, a : Subst(Int(x**(S(-1) + (m + S(1))/n)*(d + e*x)**q*(a + b*x + c*x**S(2))**p, x), x, x**n)/n)
    rubi.add(rule234)

    pattern235 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule235 = ReplacementRule(pattern235, lambda c, e, q, n, d, p, f, b, n2, m, x, a : c**(-IntPart(p))*(b/S(2) + c*x**n)**(-S(2)*FracPart(p))*(a + b*x**n + c*x**(S(2)*n))**FracPart(p)*Int((f*x)**m*(b/S(2) + c*x**n)**(S(2)*p)*(d + e*x**n)**q, x))
    rubi.add(rule235)

    pattern236 = Pattern(Integral(x_**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, m: IntegerQ(Simplify((m + S(1))/n))))
    rule236 = ReplacementRule(pattern236, lambda c, e, q, n, d, p, b, n2, m, x, a : Subst(Int(x**(Simplify((m + S(1))/n) + S(-1))*(d + e*x)**q*(a + b*x + c*x**S(2))**p, x), x, x**n)/n)
    rubi.add(rule236)

    pattern237 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, m: IntegerQ(Simplify((m + S(1))/n))))
    rule237 = ReplacementRule(pattern237, lambda c, e, q, n, d, p, x, n2, m, a : Subst(Int(x**(Simplify((m + S(1))/n) + S(-1))*(a + c*x**S(2))**p*(d + e*x)**q, x), x, x**n)/n)
    rubi.add(rule237)

    pattern238 = Pattern(Integral((f_*x_)**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, m: IntegerQ(Simplify((m + S(1))/n))))
    rule238 = ReplacementRule(pattern238, lambda c, e, q, n, d, p, f, b, n2, m, x, a : f**IntPart(m)*x**(-FracPart(m))*(f*x)**FracPart(m)*Int(x**m*(d + e*x**n)**q*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule238)

    pattern239 = Pattern(Integral((f_*x_)**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, m: IntegerQ(Simplify((m + S(1))/n))))
    rule239 = ReplacementRule(pattern239, lambda c, e, q, n, d, p, f, x, n2, m, a : f**IntPart(m)*x**(-FracPart(m))*(f*x)**FracPart(m)*Int(x**m*(a + c*x**(S(2)*n))**p*(d + e*x**n)**q, x))
    rubi.add(rule239)

    pattern240 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, e, d, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: IntegerQ(p)))
    rule240 = ReplacementRule(pattern240, lambda e, q, c, n, d, p, f, b, x, m, n2, a : Int((f*x)**m*(d + e*x**n)**(p + q)*(a/d + c*x**n/e)**p, x))
    rubi.add(rule240)

    pattern241 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(a_ + x_**n2_*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda d, a, c, e: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: IntegerQ(p)))
    rule241 = ReplacementRule(pattern241, lambda c, q, e, n, d, p, f, x, n2, m, a : Int((f*x)**m*(d + e*x**n)**(p + q)*(a/d + c*x**n/e)**p, x))
    rubi.add(rule241)

    pattern242 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**q_*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda c, e, d, b, a: ZeroQ(a*e**S(2) - b*d*e + c*d**S(2))), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule242 = ReplacementRule(pattern242, lambda c, e, q, n, d, p, f, b, x, m, n2, a : (d + e*x**n)**(-FracPart(p))*(a/d + c*x**n/e)**(-FracPart(p))*(a + b*x**n + c*x**(S(2)*n))**FracPart(p)*Int((f*x)**m*(d + e*x**n)**(p + q)*(a/d + c*x**n/e)**p, x))
    rubi.add(rule242)

    pattern243 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(a_ + x_**n2_*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda d, a, c, e: ZeroQ(a*e**S(2) + c*d**S(2))), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule243 = ReplacementRule(pattern243, lambda c, e, q, n, d, p, f, x, n2, m, a : (a + c*x**(S(2)*n))**FracPart(p)*(d + e*x**n)**(-FracPart(p))*(a/d + c*x**n/e)**(-FracPart(p))*Int((f*x)**m*(d + e*x**n)**(p + q)*(a/d + c*x**n/e)**p, x))
    rubi.add(rule243)

    pattern244 = Pattern(Integral(x_**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**q_*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, p: PositiveIntegerQ(n, p)), CustomConstraint(lambda m, q: IntegersQ(m, q)), CustomConstraint(lambda q: Less(q, S(-1))), CustomConstraint(lambda m: Greater(m, S(0))))
    rule244 = ReplacementRule(pattern244, lambda c, e, q, n, d, p, b, n2, m, x, a : e**(-S(2)*p - (m - Mod(m, n))/n)*x**(Mod(m, n) + S(1))*(-d)**(S(-1) + (m - Mod(m, n))/n)*(d + e*x**n)**(q + S(1))*(a*e**S(2) - b*d*e + c*d**S(2))**p/(n*(q + S(1))) + e**(-S(2)*p - (m - Mod(m, n))/n)*Int(x**Mod(m, n)*(d + e*x**n)**(q + S(1))*ExpandToSum(Together((e**(S(2)*p + (m - Mod(m, n))/n)*n*x**(m - Mod(m, n))*(q + S(1))*(a + b*x**n + c*x**(S(2)*n))**p - (-d)**(S(-1) + (m - Mod(m, n))/n)*(d*(Mod(m, n) + S(1)) + e*x**n*(n*(q + S(1)) + Mod(m, n) + S(1)))*(a*e**S(2) - b*d*e + c*d**S(2))**p)/(d + e*x**n)), x), x)/(n*(q + S(1))))
    rubi.add(rule244)

    pattern245 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, p: PositiveIntegerQ(n, p)), CustomConstraint(lambda m, q: IntegersQ(m, q)), CustomConstraint(lambda q: Less(q, S(-1))), CustomConstraint(lambda m: Greater(m, S(0))))
    rule245 = ReplacementRule(pattern245, lambda c, e, q, n, d, p, x, n2, m, a : e**(-S(2)*p - (m - Mod(m, n))/n)*x**(Mod(m, n) + S(1))*(-d)**(S(-1) + (m - Mod(m, n))/n)*(d + e*x**n)**(q + S(1))*(a*e**S(2) + c*d**S(2))**p/(n*(q + S(1))) + e**(-S(2)*p - (m - Mod(m, n))/n)*Int(x**Mod(m, n)*(d + e*x**n)**(q + S(1))*ExpandToSum(Together((e**(S(2)*p + (m - Mod(m, n))/n)*n*x**(m - Mod(m, n))*(a + c*x**(S(2)*n))**p*(q + S(1)) - (-d)**(S(-1) + (m - Mod(m, n))/n)*(a*e**S(2) + c*d**S(2))**p*(d*(Mod(m, n) + S(1)) + e*x**n*(n*(q + S(1)) + Mod(m, n) + S(1))))/(d + e*x**n)), x), x)/(n*(q + S(1))))
    rubi.add(rule245)

    pattern246 = Pattern(Integral(x_**m_*(d_ + x_**n_*WC('e', S(1)))**q_*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, p: PositiveIntegerQ(n, p)), CustomConstraint(lambda m, q: IntegersQ(m, q)), CustomConstraint(lambda q: Less(q, S(-1))), CustomConstraint(lambda m: Less(m, S(0))))
    rule246 = ReplacementRule(pattern246, lambda c, e, q, n, d, p, b, n2, x, m, a : e**(-S(2)*p - (m - Mod(m, n))/n)*x**(Mod(m, n) + S(1))*(-d)**(S(-1) + (m - Mod(m, n))/n)*(d + e*x**n)**(q + S(1))*(a*e**S(2) - b*d*e + c*d**S(2))**p/(n*(q + S(1))) + e**(-S(2)*p)*(-d)**(S(-1) + (m - Mod(m, n))/n)*Int(x**m*(d + e*x**n)**(q + S(1))*ExpandToSum(Together((e**(S(2)*p)*n*(-d)**(S(1) + (-m + Mod(m, n))/n)*(q + S(1))*(a + b*x**n + c*x**(S(2)*n))**p - e**((-m + Mod(m, n))/n)*x**(-m + Mod(m, n))*(d*(Mod(m, n) + S(1)) + e*x**n*(n*(q + S(1)) + Mod(m, n) + S(1)))*(a*e**S(2) - b*d*e + c*d**S(2))**p)/(d + e*x**n)), x), x)/(n*(q + S(1))))
    rubi.add(rule246)

    pattern247 = Pattern(Integral(x_**m_*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, p: PositiveIntegerQ(n, p)), CustomConstraint(lambda m, q: IntegersQ(m, q)), CustomConstraint(lambda q: Less(q, S(-1))), CustomConstraint(lambda m: Less(m, S(0))))
    rule247 = ReplacementRule(pattern247, lambda c, e, q, n, d, p, x, n2, m, a : e**(-S(2)*p - (m - Mod(m, n))/n)*x**(Mod(m, n) + S(1))*(-d)**(S(-1) + (m - Mod(m, n))/n)*(d + e*x**n)**(q + S(1))*(a*e**S(2) + c*d**S(2))**p/(n*(q + S(1))) + e**(-S(2)*p)*(-d)**(S(-1) + (m - Mod(m, n))/n)*Int(x**m*(d + e*x**n)**(q + S(1))*ExpandToSum(Together((e**(S(2)*p)*n*(-d)**(S(1) + (-m + Mod(m, n))/n)*(a + c*x**(S(2)*n))**p*(q + S(1)) - e**((-m + Mod(m, n))/n)*x**(-m + Mod(m, n))*(a*e**S(2) + c*d**S(2))**p*(d*(Mod(m, n) + S(1)) + e*x**n*(n*(q + S(1)) + Mod(m, n) + S(1))))/(d + e*x**n)), x), x)/(n*(q + S(1))))
    rubi.add(rule247)

    pattern248 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, p: PositiveIntegerQ(n, p)), CustomConstraint(lambda n, p: Greater(S(2)*n*p, n + S(-1))), CustomConstraint(lambda q: ~(IntegerQ(q))), CustomConstraint(lambda n, p, m, q: NonzeroQ(m + S(2)*n*p + n*q + S(1))))
    rule248 = ReplacementRule(pattern248, lambda c, e, q, n, d, p, f, b, n2, m, x, a : c**p*f**(-S(2)*n*p + n + S(-1))*(f*x)**(m + S(2)*n*p - n + S(1))*(d + e*x**n)**(q + S(1))/(e*(m + S(2)*n*p + n*q + S(1))) + Int((f*x)**m*(d + e*x**n)**q*ExpandToSum(-c**p*d*x**(S(2)*n*p - n)*(m + S(2)*n*p - n + S(1)) + e*(-c**p*x**(S(2)*n*p) + (a + b*x**n + c*x**(S(2)*n))**p)*(m + S(2)*n*p + n*q + S(1)), x), x)/(e*(m + S(2)*n*p + n*q + S(1))))
    rubi.add(rule248)

    pattern249 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, p: PositiveIntegerQ(n, p)), CustomConstraint(lambda n, p: Greater(S(2)*n*p, n + S(-1))), CustomConstraint(lambda q: ~(IntegerQ(q))), CustomConstraint(lambda n, p, m, q: NonzeroQ(m + S(2)*n*p + n*q + S(1))))
    rule249 = ReplacementRule(pattern249, lambda c, e, q, n, d, p, f, x, n2, m, a : c**p*f**(-S(2)*n*p + n + S(-1))*(f*x)**(m + S(2)*n*p - n + S(1))*(d + e*x**n)**(q + S(1))/(e*(m + S(2)*n*p + n*q + S(1))) + Int((f*x)**m*(d + e*x**n)**q*ExpandToSum(-c**p*d*x**(S(2)*n*p - n)*(m + S(2)*n*p - n + S(1)) + e*(-c**p*x**(S(2)*n*p) + (a + c*x**(S(2)*n))**p)*(m + S(2)*n*p + n*q + S(1)), x), x)/(e*(m + S(2)*n*p + n*q + S(1))))
    rubi.add(rule249)

    pattern250 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, p: PositiveIntegerQ(n, p)))
    rule250 = ReplacementRule(pattern250, lambda c, e, q, n, d, p, f, b, n2, m, x, a : Int(ExpandIntegrand((f*x)**m*(d + e*x**n)**q*(a + b*x**n + c*x**(S(2)*n))**p, x), x))
    rubi.add(rule250)

    pattern251 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, p: PositiveIntegerQ(n, p)))
    rule251 = ReplacementRule(pattern251, lambda c, e, q, n, d, p, f, x, n2, m, a : Int(ExpandIntegrand((f*x)**m*(a + c*x**(S(2)*n))**p*(d + e*x**n)**q, x), x))
    rubi.add(rule251)

    pattern252 = Pattern(Integral(x_**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: IntegerQ(m)))
    rule252 = ReplacementRule(pattern252, lambda c, e, q, n, d, p, b, n2, m, x, a : With(List(Set(k, GCD(m + S(1), n))), Condition(Subst(Int(x**(S(-1) + (m + S(1))/k)*(d + e*x**(n/k))**q*(a + b*x**(n/k) + c*x**(S(2)*n/k))**p, x), x, x**k)/k, Unequal(k, S(1)))))
    rubi.add(rule252)

    pattern253 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: IntegerQ(m)))
    rule253 = ReplacementRule(pattern253, lambda c, e, q, n, d, p, x, n2, m, a : With(List(Set(k, GCD(m + S(1), n))), Condition(Subst(Int(x**(S(-1) + (m + S(1))/k)*(a + c*x**(S(2)*n/k))**p*(d + e*x**(n/k))**q, x), x, x**k)/k, Unequal(k, S(1)))))
    rubi.add(rule253)

    pattern254 = Pattern(Integral((x_*WC('f', S(1)))**m_*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: FractionQ(m)), CustomConstraint(lambda p: IntegerQ(p)))
    rule254 = ReplacementRule(pattern254, lambda c, e, q, n, d, p, f, b, n2, x, m, a : With(List(Set(k, Denominator(m))), k*Subst(Int(x**(k*(m + S(1)) + S(-1))*(d + e*f**(-n)*x**(k*n))**q*(a + b*f**(-n)*x**(k*n) + c*f**(-S(2)*n)*x**(S(2)*k*n))**p, x), x, (f*x)**(1/k))/f))
    rubi.add(rule254)

    pattern255 = Pattern(Integral((x_*WC('f', S(1)))**m_*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: FractionQ(m)), CustomConstraint(lambda p: IntegerQ(p)))
    rule255 = ReplacementRule(pattern255, lambda c, q, e, n, d, p, f, x, n2, m, a : With(List(Set(k, Denominator(m))), k*Subst(Int(x**(k*(m + S(1)) + S(-1))*(a + c*x**(S(2)*k*n)/f)**p*(d + e*x**(k*n)/f)**q, x), x, (f*x)**(1/k))/f))
    rubi.add(rule255)

    pattern256 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda n, p, m: Unequal(m + n*(S(2)*p + S(1)) + S(1), S(0))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule256 = ReplacementRule(pattern256, lambda c, e, n, d, p, f, b, x, m, n2, a : f**(-n)*n*p*Int((f*x)**(m + n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(-1))*Simp(S(2)*a*e*(m + S(1)) - b*d*(m + n*(S(2)*p + S(1)) + S(1)) + x**n*(b*e*(m + S(1)) - S(2)*c*d*(m + n*(S(2)*p + S(1)) + S(1))), x), x)/((m + S(1))*(m + n*(S(2)*p + S(1)) + S(1))) + (f*x)**(m + S(1))*(d*(m + n*(S(2)*p + S(1)) + S(1)) + e*x**n*(m + S(1)))*(a + b*x**n + c*x**(S(2)*n))**p/(f*(m + S(1))*(m + n*(S(2)*p + S(1)) + S(1))))
    rubi.add(rule256)

    pattern257 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(a_ + x_**n2_*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda n, p, m: Unequal(m + n*(S(2)*p + S(1)) + S(1), S(0))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule257 = ReplacementRule(pattern257, lambda c, e, n, d, p, f, x, n2, m, a : S(2)*f**(-n)*n*p*Int((f*x)**(m + n)*(a + c*x**(S(2)*n))**(p + S(-1))*(a*e*(m + S(1)) - c*d*x**n*(m + n*(S(2)*p + S(1)) + S(1))), x)/((m + S(1))*(m + n*(S(2)*p + S(1)) + S(1))) + (f*x)**(m + S(1))*(a + c*x**(S(2)*n))**p*(d*(m + n*(S(2)*p + S(1)) + S(1)) + e*x**n*(m + S(1)))/(f*(m + S(1))*(m + n*(S(2)*p + S(1)) + S(1))))
    rubi.add(rule257)

    pattern258 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n, m, p: NonzeroQ(m + S(2)*n*p + S(1))), CustomConstraint(lambda n, p, m: NonzeroQ(m + n*(S(2)*p + S(1)) + S(1))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule258 = ReplacementRule(pattern258, lambda c, e, n, d, p, f, b, x, m, n2, a : n*p*Int((f*x)**m*(a + b*x**n + c*x**(S(2)*n))**(p + S(-1))*Simp(-a*b*e*(m + S(1)) + S(2)*a*c*d*(m + n*(S(2)*p + S(1)) + S(1)) + x**n*(S(2)*a*c*e*(m + S(2)*n*p + S(1)) - b**S(2)*e*(m + n*p + S(1)) + b*c*d*(m + n*(S(2)*p + S(1)) + S(1))), x), x)/(c*(m + S(2)*n*p + S(1))*(m + n*(S(2)*p + S(1)) + S(1))) + (f*x)**(m + S(1))*(a + b*x**n + c*x**(S(2)*n))**p*(b*e*n*p + c*d*(m + n*(S(2)*p + S(1)) + S(1)) + c*e*x**n*(m + S(2)*n*p + S(1)))/(c*f*(m + S(2)*n*p + S(1))*(m + n*(S(2)*p + S(1)) + S(1))))
    rubi.add(rule258)

    pattern259 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(a_ + x_**n2_*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n, m, p: NonzeroQ(m + S(2)*n*p + S(1))), CustomConstraint(lambda n, p, m: NonzeroQ(m + n*(S(2)*p + S(1)) + S(1))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule259 = ReplacementRule(pattern259, lambda c, e, n, d, p, f, x, n2, m, a : S(2)*a*n*p*Int((f*x)**m*(a + c*x**(S(2)*n))**(p + S(-1))*Simp(d*(m + n*(S(2)*p + S(1)) + S(1)) + e*x**n*(m + S(2)*n*p + S(1)), x), x)/((m + S(2)*n*p + S(1))*(m + n*(S(2)*p + S(1)) + S(1))) + (f*x)**(m + S(1))*(a + c*x**(S(2)*n))**p*(c*d*(m + n*(S(2)*p + S(1)) + S(1)) + c*e*x**n*(m + S(2)*n*p + S(1)))/(c*f*(m + S(2)*n*p + S(1))*(m + n*(S(2)*p + S(1)) + S(1))))
    rubi.add(rule259)

    pattern260 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda n, m: Greater(m, n + S(-1))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule260 = ReplacementRule(pattern260, lambda c, e, n, d, p, f, b, x, m, n2, a : f**n*Int((f*x)**(m - n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))*Simp(x**n*(b*e - S(2)*c*d)*(m + S(2)*n*p + S(2)*n + S(1)) + (-S(2)*a*e + b*d)*(-m + n + S(-1)), x), x)/(n*(p + S(1))*(-S(4)*a*c + b**S(2))) + f**(n + S(-1))*(f*x)**(m - n + S(1))*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))*(-S(2)*a*e + b*d - x**n*(b*e - S(2)*c*d))/(n*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule260)

    pattern261 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(a_ + x_**n2_*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda n, m: Greater(m, n + S(-1))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule261 = ReplacementRule(pattern261, lambda c, e, n, d, p, f, x, n2, m, a : f**n*Int((f*x)**(m - n)*(a + c*x**(S(2)*n))**(p + S(1))*(a*e*(-m + n + S(-1)) + c*d*x**n*(m + S(2)*n*p + S(2)*n + S(1))), x)/(S(2)*a*c*n*(p + S(1))) + f**(n + S(-1))*(f*x)**(m - n + S(1))*(a + c*x**(S(2)*n))**(p + S(1))*(a*e - c*d*x**n)/(S(2)*a*c*n*(p + S(1))))
    rubi.add(rule261)

    pattern262 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule262 = ReplacementRule(pattern262, lambda c, e, n, d, p, f, b, x, m, n2, a : Int((f*x)**m*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))*Simp(-a*b*e*(m + S(1)) + c*x**n*(-S(2)*a*e + b*d)*(m + n*(S(2)*p + S(3)) + S(1)) + d*(-S(2)*a*c*(m + S(2)*n*(p + S(1)) + S(1)) + b**S(2)*(m + n*(p + S(1)) + S(1))), x), x)/(a*n*(p + S(1))*(-S(4)*a*c + b**S(2))) - (f*x)**(m + S(1))*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))*(-a*b*e + c*x**n*(-S(2)*a*e + b*d) + d*(-S(2)*a*c + b**S(2)))/(a*f*n*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule262)

    pattern263 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(a_ + x_**n2_*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule263 = ReplacementRule(pattern263, lambda c, e, n, d, p, f, x, n2, m, a : Int((f*x)**m*(a + c*x**(S(2)*n))**(p + S(1))*Simp(d*(m + S(2)*n*(p + S(1)) + S(1)) + e*x**n*(m + n*(S(2)*p + S(3)) + S(1)), x), x)/(S(2)*a*n*(p + S(1))) - (f*x)**(m + S(1))*(a + c*x**(S(2)*n))**(p + S(1))*(d + e*x**n)/(S(2)*a*f*n*(p + S(1))))
    rubi.add(rule263)

    pattern264 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda n, m: Greater(m, n + S(-1))), CustomConstraint(lambda n, p, m: NonzeroQ(m + n*(S(2)*p + S(1)) + S(1))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule264 = ReplacementRule(pattern264, lambda c, e, n, d, p, f, b, x, m, n2, a : e*f**(n + S(-1))*(f*x)**(m - n + S(1))*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))/(c*(m + n*(S(2)*p + S(1)) + S(1))) - f**n*Int((f*x)**(m - n)*(a + b*x**n + c*x**(S(2)*n))**p*Simp(a*e*(m - n + S(1)) + x**n*(b*e*(m + n*p + S(1)) - c*d*(m + n*(S(2)*p + S(1)) + S(1))), x), x)/(c*(m + n*(S(2)*p + S(1)) + S(1))))
    rubi.add(rule264)

    pattern265 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(a_ + x_**n2_*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda n, m: Greater(m, n + S(-1))), CustomConstraint(lambda n, p, m: NonzeroQ(m + n*(S(2)*p + S(1)) + S(1))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule265 = ReplacementRule(pattern265, lambda c, e, n, d, p, f, x, n2, m, a : e*f**(n + S(-1))*(f*x)**(m - n + S(1))*(a + c*x**(S(2)*n))**(p + S(1))/(c*(m + n*(S(2)*p + S(1)) + S(1))) - f**n*Int((f*x)**(m - n)*(a + c*x**(S(2)*n))**p*(a*e*(m - n + S(1)) - c*d*x**n*(m + n*(S(2)*p + S(1)) + S(1))), x)/(c*(m + n*(S(2)*p + S(1)) + S(1))))
    rubi.add(rule265)

    pattern266 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule266 = ReplacementRule(pattern266, lambda c, e, n, d, p, f, b, x, m, n2, a : d*(f*x)**(m + S(1))*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))/(a*f*(m + S(1))) + f**(-n)*Int((f*x)**(m + n)*(a + b*x**n + c*x**(S(2)*n))**p*Simp(a*e*(m + S(1)) - b*d*(m + n*(p + S(1)) + S(1)) - c*d*x**n*(m + S(2)*n*(p + S(1)) + S(1)), x), x)/(a*(m + S(1))))
    rubi.add(rule266)

    pattern267 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(a_ + x_**n2_*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda n, m, p: IntegerQ(p) | (IntegerQ(m) & Equal(n, S(2)) & IntegerQ(S(2)*p))))
    rule267 = ReplacementRule(pattern267, lambda c, e, n, d, p, f, x, n2, m, a : d*(f*x)**(m + S(1))*(a + c*x**(S(2)*n))**(p + S(1))/(a*f*(m + S(1))) + f**(-n)*Int((f*x)**(m + n)*(a + c*x**(S(2)*n))**p*(a*e*(m + S(1)) - c*d*x**n*(m + S(2)*n*(p + S(1)) + S(1))), x)/(a*(m + S(1))))
    rubi.add(rule267)

    pattern268 = Pattern(Integral((x_*WC('f', S(1)))**m_*(d_ + x_**n_*WC('e', S(1)))/(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NegativeQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, m: IntegersQ(m, n/S(2))), CustomConstraint(lambda n, m: Less(S(0), m, n)), CustomConstraint(lambda a, c: PosQ(a*c)))
    rule268 = ReplacementRule(pattern268, lambda e, c, n, d, f, x, b, m, n2, a : With(List(Set(q, Rt(a*c, S(2)))), Condition(With(List(Set(r, Rt(-b*c + S(2)*c*q, S(2)))), c*Int((f*x)**m*Simp(d*r - x**(n/S(2))*(c*d - e*q), x)/(c*x**n + q - r*x**(n/S(2))), x)/(S(2)*q*r) + c*Int((f*x)**m*Simp(d*r + x**(n/S(2))*(c*d - e*q), x)/(c*x**n + q + r*x**(n/S(2))), x)/(S(2)*q*r)), ~(NegativeQ(-b*c + S(2)*c*q)))))
    rubi.add(rule268)

    pattern269 = Pattern(Integral((x_*WC('f', S(1)))**m_*(d_ + x_**n_*WC('e', S(1)))/(a_ + x_**n2_*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, c: PositiveQ(a*c)), CustomConstraint(lambda n, m: IntegersQ(m, n/S(2))), CustomConstraint(lambda n, m: Less(S(0), m, n)))
    rule269 = ReplacementRule(pattern269, lambda e, c, n, d, f, x, n2, m, a : With(List(Set(q, Rt(a*c, S(2)))), Condition(With(List(Set(r, Rt(S(2)*c*q, S(2)))), c*Int((f*x)**m*Simp(d*r - x**(n/S(2))*(c*d - e*q), x)/(c*x**n + q - r*x**(n/S(2))), x)/(S(2)*q*r) + c*Int((f*x)**m*Simp(d*r + x**(n/S(2))*(c*d - e*q), x)/(c*x**n + q + r*x**(n/S(2))), x)/(S(2)*q*r)), ~(NegativeQ(S(2)*c*q)))))
    rubi.add(rule269)

    pattern270 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**S(2)*WC('e', S(1)))/(a_ + x_**S(4)*WC('c', S(1)) + x_**S(2)*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda d, a, c, e: ZeroQ(-a*e**S(2) + c*d**S(2))), CustomConstraint(lambda d, e: PositiveQ(d/e)), CustomConstraint(lambda d, b, c, e: PosQ(c*(-b*e + S(2)*c*d)/e)))
    rule270 = ReplacementRule(pattern270, lambda c, e, d, f, b, x, m, a : With(List(Set(r, Rt(c*(-b*e + S(2)*c*d)/e, S(2)))), e*Int((f*x)**m/(c*d/e + c*x**S(2) - r*x), x)/S(2) + e*Int((f*x)**m/(c*d/e + c*x**S(2) + r*x), x)/S(2)))
    rubi.add(rule270)

    pattern271 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**S(2)*WC('e', S(1)))/(a_ + x_**S(4)*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda d, a, c, e: ZeroQ(-a*e**S(2) + c*d**S(2))), CustomConstraint(lambda d, e: PositiveQ(d/e)))
    rule271 = ReplacementRule(pattern271, lambda c, e, d, f, x, m, a : With(List(Set(r, Rt(S(2)*c**S(2)*d/e, S(2)))), e*Int((f*x)**m/(c*d/e + c*x**S(2) - r*x), x)/S(2) + e*Int((f*x)**m/(c*d/e + c*x**S(2) + r*x), x)/S(2)))
    rubi.add(rule271)

    pattern272 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))/(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NegativeQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: IntegerQ(n/S(2))), CustomConstraint(lambda n: Greater(n, S(2))), CustomConstraint(lambda a, c: PosQ(a*c)))
    rule272 = ReplacementRule(pattern272, lambda c, e, n, d, f, b, x, m, n2, a : With(List(Set(q, Rt(a*c, S(2)))), Condition(With(List(Set(r, Rt(-b*c + S(2)*c*q, S(2)))), c*Int((f*x)**m*(d*r - x**(n/S(2))*(c*d - e*q))/(c*x**n + q - r*x**(n/S(2))), x)/(S(2)*q*r) + c*Int((f*x)**m*(d*r + x**(n/S(2))*(c*d - e*q))/(c*x**n + q + r*x**(n/S(2))), x)/(S(2)*q*r)), ~(NegativeQ(-b*c + S(2)*c*q)))))
    rubi.add(rule272)

    pattern273 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))/(a_ + x_**n2_*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: IntegerQ(n/S(2))), CustomConstraint(lambda n: Greater(n, S(2))), CustomConstraint(lambda a, c: PositiveQ(a*c)))
    rule273 = ReplacementRule(pattern273, lambda c, e, n, d, f, x, n2, m, a : With(List(Set(q, Rt(a*c, S(2)))), Condition(With(List(Set(r, Rt(S(2)*c*q, S(2)))), c*Int((f*x)**m*(d*r - x**(n/S(2))*(c*d - e*q))/(c*x**n + q - r*x**(n/S(2))), x)/(S(2)*q*r) + c*Int((f*x)**m*(d*r + x**(n/S(2))*(c*d - e*q))/(c*x**n + q + r*x**(n/S(2))), x)/(S(2)*q*r)), ~(NegativeQ(S(2)*c*q)))))
    rubi.add(rule273)

    pattern274 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))/(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)))
    rule274 = ReplacementRule(pattern274, lambda c, e, n, d, f, b, x, m, n2, a : With(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), (e/S(2) - (-b*e + S(2)*c*d)/(S(2)*q))*Int((f*x)**m/(b/S(2) + c*x**n + q/S(2)), x) + (e/S(2) + (-b*e + S(2)*c*d)/(S(2)*q))*Int((f*x)**m/(b/S(2) + c*x**n - q/S(2)), x)))
    rubi.add(rule274)

    pattern275 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))/(a_ + x_**n2_*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)))
    rule275 = ReplacementRule(pattern275, lambda c, e, n, d, f, x, n2, m, a : With(List(Set(q, Rt(-a*c, S(2)))), (-c*d/(S(2)*q) - e/S(2))*Int((f*x)**m/(-c*x**n + q), x) + (-c*d/(S(2)*q) + e/S(2))*Int((f*x)**m/(c*x**n + q), x)))
    rubi.add(rule275)

    pattern276 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))/(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: IntegerQ(q)), CustomConstraint(lambda m: IntegerQ(m)))
    rule276 = ReplacementRule(pattern276, lambda c, e, q, n, d, f, b, n2, m, x, a : Int(ExpandIntegrand((f*x)**m*(d + e*x**n)**q/(a + b*x**n + c*x**(S(2)*n)), x), x))
    rubi.add(rule276)

    pattern277 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))/(a_ + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: IntegerQ(q)), CustomConstraint(lambda m: IntegerQ(m)))
    rule277 = ReplacementRule(pattern277, lambda c, e, q, n, d, f, x, n2, m, a : Int(ExpandIntegrand((f*x)**m*(d + e*x**n)**q/(a + c*x**(S(2)*n)), x), x))
    rubi.add(rule277)

    pattern278 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))/(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: IntegerQ(q)), CustomConstraint(lambda m: ~(IntegerQ(m))))
    rule278 = ReplacementRule(pattern278, lambda c, e, q, n, d, f, b, n2, m, x, a : Int(ExpandIntegrand((f*x)**m, (d + e*x**n)**q/(a + b*x**n + c*x**(S(2)*n)), x), x))
    rubi.add(rule278)

    pattern279 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))/(a_ + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: IntegerQ(q)), CustomConstraint(lambda m: ~(IntegerQ(m))))
    rule279 = ReplacementRule(pattern279, lambda c, e, q, n, d, f, x, n2, m, a : Int(ExpandIntegrand((f*x)**m, (d + e*x**n)**q/(a + c*x**(S(2)*n)), x), x))
    rubi.add(rule279)

    pattern280 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(x_**n_*WC('e', S(1)) + WC('d', S(0)))**q_/(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: ~(IntegerQ(q))), CustomConstraint(lambda m, q: RationalQ(m, q)), CustomConstraint(lambda q: Greater(q, S(0))), CustomConstraint(lambda n, m: Greater(m, S(2)*n + S(-1))))
    rule280 = ReplacementRule(pattern280, lambda c, e, q, n, d, f, b, n2, m, x, a : f**(S(2)*n)*Int((f*x)**(m - S(2)*n)*(d + e*x**n)**(q + S(-1))*(-b*e + c*d + c*e*x**n), x)/c**S(2) - f**(S(2)*n)*Int((f*x)**(m - S(2)*n)*(d + e*x**n)**(q + S(-1))*Simp(a*(-b*e + c*d) + x**n*(a*c*e - b**S(2)*e + b*c*d), x)/(a + b*x**n + c*x**(S(2)*n)), x)/c**S(2))
    rubi.add(rule280)

    pattern281 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(x_**n_*WC('e', S(1)) + WC('d', S(0)))**q_/(a_ + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: ~(IntegerQ(q))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda n, m: Greater(m, S(2)*n + S(-1))))
    rule281 = ReplacementRule(pattern281, lambda c, e, q, n, d, f, x, n2, m, a : -a*f**(S(2)*n)*Int((f*x)**(m - S(2)*n)*(d + e*x**n)**q/(a + c*x**(S(2)*n)), x)/c + f**(S(2)*n)*Int((f*x)**(m - S(2)*n)*(d + e*x**n)**q, x)/c)
    rubi.add(rule281)

    pattern282 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(x_**n_*WC('e', S(1)) + WC('d', S(0)))**q_/(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: ~(IntegerQ(q))), CustomConstraint(lambda m, q: RationalQ(m, q)), CustomConstraint(lambda q: Greater(q, S(0))), CustomConstraint(lambda n, m: Inequality(n + S(-1), Less, m, LessEqual, S(2)*n + S(-1))))
    rule282 = ReplacementRule(pattern282, lambda c, e, q, n, d, f, b, n2, m, x, a : e*f**n*Int((f*x)**(m - n)*(d + e*x**n)**(q + S(-1)), x)/c - f**n*Int((f*x)**(m - n)*(d + e*x**n)**(q + S(-1))*Simp(a*e - x**n*(-b*e + c*d), x)/(a + b*x**n + c*x**(S(2)*n)), x)/c)
    rubi.add(rule282)

    pattern283 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(x_**n_*WC('e', S(1)) + WC('d', S(0)))**q_/(a_ + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: ~(IntegerQ(q))), CustomConstraint(lambda m, q: RationalQ(m, q)), CustomConstraint(lambda q: Greater(q, S(0))), CustomConstraint(lambda n, m: Inequality(n + S(-1), Less, m, LessEqual, S(2)*n + S(-1))))
    rule283 = ReplacementRule(pattern283, lambda c, e, q, n, d, f, x, n2, m, a : e*f**n*Int((f*x)**(m - n)*(d + e*x**n)**(q + S(-1)), x)/c - f**n*Int((f*x)**(m - n)*(d + e*x**n)**(q + S(-1))*Simp(a*e - c*d*x**n, x)/(a + c*x**(S(2)*n)), x)/c)
    rubi.add(rule283)

    pattern284 = Pattern(Integral((x_*WC('f', S(1)))**m_*(x_**n_*WC('e', S(1)) + WC('d', S(0)))**q_/(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: ~(IntegerQ(q))), CustomConstraint(lambda m, q: RationalQ(m, q)), CustomConstraint(lambda q: Greater(q, S(0))), CustomConstraint(lambda m: Less(m, S(0))))
    rule284 = ReplacementRule(pattern284, lambda c, e, q, n, d, f, b, n2, x, m, a : d*Int((f*x)**m*(d + e*x**n)**(q + S(-1)), x)/a - f**(-n)*Int((f*x)**(m + n)*(d + e*x**n)**(q + S(-1))*Simp(-a*e + b*d + c*d*x**n, x)/(a + b*x**n + c*x**(S(2)*n)), x)/a)
    rubi.add(rule284)

    pattern285 = Pattern(Integral((x_*WC('f', S(1)))**m_*(x_**n_*WC('e', S(1)) + WC('d', S(0)))**q_/(a_ + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: ~(IntegerQ(q))), CustomConstraint(lambda m, q: RationalQ(m, q)), CustomConstraint(lambda q: Greater(q, S(0))), CustomConstraint(lambda m: Less(m, S(0))))
    rule285 = ReplacementRule(pattern285, lambda c, e, q, n, d, f, x, n2, m, a : d*Int((f*x)**m*(d + e*x**n)**(q + S(-1)), x)/a + f**(-n)*Int((f*x)**(m + n)*(d + e*x**n)**(q + S(-1))*Simp(a*e - c*d*x**n, x)/(a + c*x**(S(2)*n)), x)/a)
    rubi.add(rule285)

    pattern286 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(x_**n_*WC('e', S(1)) + WC('d', S(0)))**q_/(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: ~(IntegerQ(q))), CustomConstraint(lambda m, q: RationalQ(m, q)), CustomConstraint(lambda q: Less(q, S(-1))), CustomConstraint(lambda n, m: Greater(m, S(2)*n + S(-1))))
    rule286 = ReplacementRule(pattern286, lambda c, e, q, n, d, f, b, n2, m, x, a : d**S(2)*f**(S(2)*n)*Int((f*x)**(m - S(2)*n)*(d + e*x**n)**q, x)/(a*e**S(2) - b*d*e + c*d**S(2)) - f**(S(2)*n)*Int((f*x)**(m - S(2)*n)*(d + e*x**n)**(q + S(1))*Simp(a*d + x**n*(-a*e + b*d), x)/(a + b*x**n + c*x**(S(2)*n)), x)/(a*e**S(2) - b*d*e + c*d**S(2)))
    rubi.add(rule286)

    pattern287 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(x_**n_*WC('e', S(1)) + WC('d', S(0)))**q_/(a_ + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: ~(IntegerQ(q))), CustomConstraint(lambda m, q: RationalQ(m, q)), CustomConstraint(lambda q: Less(q, S(-1))), CustomConstraint(lambda n, m: Greater(m, S(2)*n + S(-1))))
    rule287 = ReplacementRule(pattern287, lambda c, e, q, n, d, f, x, n2, m, a : -a*f**(S(2)*n)*Int((f*x)**(m - S(2)*n)*(d - e*x**n)*(d + e*x**n)**(q + S(1))/(a + c*x**(S(2)*n)), x)/(a*e**S(2) + c*d**S(2)) + d**S(2)*f**(S(2)*n)*Int((f*x)**(m - S(2)*n)*(d + e*x**n)**q, x)/(a*e**S(2) + c*d**S(2)))
    rubi.add(rule287)

    pattern288 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(x_**n_*WC('e', S(1)) + WC('d', S(0)))**q_/(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: ~(IntegerQ(q))), CustomConstraint(lambda m, q: RationalQ(m, q)), CustomConstraint(lambda q: Less(q, S(-1))), CustomConstraint(lambda n, m: Inequality(n + S(-1), Less, m, LessEqual, S(2)*n + S(-1))))
    rule288 = ReplacementRule(pattern288, lambda c, e, q, n, d, f, b, n2, m, x, a : -d*e*f**n*Int((f*x)**(m - n)*(d + e*x**n)**q, x)/(a*e**S(2) - b*d*e + c*d**S(2)) + f**n*Int((f*x)**(m - n)*(d + e*x**n)**(q + S(1))*Simp(a*e + c*d*x**n, x)/(a + b*x**n + c*x**(S(2)*n)), x)/(a*e**S(2) - b*d*e + c*d**S(2)))
    rubi.add(rule288)

    pattern289 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(x_**n_*WC('e', S(1)) + WC('d', S(0)))**q_/(a_ + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: ~(IntegerQ(q))), CustomConstraint(lambda m, q: RationalQ(m, q)), CustomConstraint(lambda q: Less(q, S(-1))), CustomConstraint(lambda n, m: Inequality(n + S(-1), Less, m, LessEqual, S(2)*n + S(-1))))
    rule289 = ReplacementRule(pattern289, lambda c, e, q, n, d, f, x, n2, m, a : -d*e*f**n*Int((f*x)**(m - n)*(d + e*x**n)**q, x)/(a*e**S(2) + c*d**S(2)) + f**n*Int((f*x)**(m - n)*(d + e*x**n)**(q + S(1))*Simp(a*e + c*d*x**n, x)/(a + c*x**(S(2)*n)), x)/(a*e**S(2) + c*d**S(2)))
    rubi.add(rule289)

    pattern290 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**q_/(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: ~(IntegerQ(q))), CustomConstraint(lambda q: RationalQ(q)), CustomConstraint(lambda q: Less(q, S(-1))))
    rule290 = ReplacementRule(pattern290, lambda c, e, q, n, d, f, b, x, m, n2, a : e**S(2)*Int((f*x)**m*(d + e*x**n)**q, x)/(a*e**S(2) - b*d*e + c*d**S(2)) + Int((f*x)**m*(d + e*x**n)**(q + S(1))*Simp(-b*e + c*d - c*e*x**n, x)/(a + b*x**n + c*x**(S(2)*n)), x)/(a*e**S(2) - b*d*e + c*d**S(2)))
    rubi.add(rule290)

    pattern291 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**q_/(a_ + x_**n2_*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: ~(IntegerQ(q))), CustomConstraint(lambda q: RationalQ(q)), CustomConstraint(lambda q: Less(q, S(-1))))
    rule291 = ReplacementRule(pattern291, lambda c, e, q, n, d, f, x, n2, m, a : c*Int((f*x)**m*(d - e*x**n)*(d + e*x**n)**(q + S(1))/(a + c*x**(S(2)*n)), x)/(a*e**S(2) + c*d**S(2)) + e**S(2)*Int((f*x)**m*(d + e*x**n)**q, x)/(a*e**S(2) + c*d**S(2)))
    rubi.add(rule291)

    pattern292 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**q_/(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: ~(IntegerQ(q))), CustomConstraint(lambda m: IntegerQ(m)))
    rule292 = ReplacementRule(pattern292, lambda c, e, q, n, d, f, b, n2, m, x, a : Int(ExpandIntegrand((d + e*x**n)**q, (f*x)**m/(a + b*x**n + c*x**(S(2)*n)), x), x))
    rubi.add(rule292)

    pattern293 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**q_/(a_ + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: ~(IntegerQ(q))), CustomConstraint(lambda m: IntegerQ(m)))
    rule293 = ReplacementRule(pattern293, lambda c, e, q, n, d, f, x, n2, m, a : Int(ExpandIntegrand((d + e*x**n)**q, (f*x)**m/(a + c*x**(S(2)*n)), x), x))
    rubi.add(rule293)

    pattern294 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**q_/(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: ~(IntegerQ(q))), CustomConstraint(lambda m: ~(IntegerQ(m))))
    rule294 = ReplacementRule(pattern294, lambda c, e, q, n, d, f, b, n2, m, x, a : Int(ExpandIntegrand((f*x)**m*(d + e*x**n)**q, 1/(a + b*x**n + c*x**(S(2)*n)), x), x))
    rubi.add(rule294)

    pattern295 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**q_/(a_ + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda q: ~(IntegerQ(q))), CustomConstraint(lambda m: ~(IntegerQ(m))))
    rule295 = ReplacementRule(pattern295, lambda c, e, q, n, d, f, x, n2, m, a : Int(ExpandIntegrand((f*x)**m*(d + e*x**n)**q, 1/(a + c*x**(S(2)*n)), x), x))
    rubi.add(rule295)

    pattern296 = Pattern(Integral((x_*WC('f', S(1)))**m_*(x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)) + WC('a', S(0)))**WC('p', S(1))/(x_**n_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n, m: Less(m, -n)))
    rule296 = ReplacementRule(pattern296, lambda c, e, n, d, p, f, b, n2, x, m, a : Int((f*x)**m*(a*d + x**n*(-a*e + b*d))*(a + b*x**n + c*x**(S(2)*n))**(p + S(-1)), x)/d**S(2) + f**(-S(2)*n)*(a*e**S(2) - b*d*e + c*d**S(2))*Int((f*x)**(m + S(2)*n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(-1))/(d + e*x**n), x)/d**S(2))
    rubi.add(rule296)

    pattern297 = Pattern(Integral((x_*WC('f', S(1)))**m_*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))/(x_**n_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n, m: Less(m, -n)))
    rule297 = ReplacementRule(pattern297, lambda c, e, n, d, p, f, x, n2, m, a : a*Int((f*x)**m*(a + c*x**(S(2)*n))**(p + S(-1))*(d - e*x**n), x)/d**S(2) + f**(-S(2)*n)*(a*e**S(2) + c*d**S(2))*Int((f*x)**(m + S(2)*n)*(a + c*x**(S(2)*n))**(p + S(-1))/(d + e*x**n), x)/d**S(2))
    rubi.add(rule297)

    pattern298 = Pattern(Integral((x_*WC('f', S(1)))**m_*(x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)) + WC('a', S(0)))**WC('p', S(1))/(x_**n_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda m: Less(m, S(0))))
    rule298 = ReplacementRule(pattern298, lambda c, e, n, d, p, f, b, n2, x, m, a : Int((f*x)**m*(a*e + c*d*x**n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(-1)), x)/(d*e) - f**(-n)*(a*e**S(2) - b*d*e + c*d**S(2))*Int((f*x)**(m + n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(-1))/(d + e*x**n), x)/(d*e))
    rubi.add(rule298)

    pattern299 = Pattern(Integral((x_*WC('f', S(1)))**m_*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))/(x_**n_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda m: Less(m, S(0))))
    rule299 = ReplacementRule(pattern299, lambda c, e, n, d, p, f, x, n2, m, a : Int((f*x)**m*(a + c*x**(S(2)*n))**(p + S(-1))*(a*e + c*d*x**n), x)/(d*e) - f**(-n)*(a*e**S(2) + c*d**S(2))*Int((f*x)**(m + n)*(a + c*x**(S(2)*n))**(p + S(-1))/(d + e*x**n), x)/(d*e))
    rubi.add(rule299)

    pattern300 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)) + WC('a', S(0)))**p_/(x_**n_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda n, m: Greater(m, n)))
    rule300 = ReplacementRule(pattern300, lambda c, e, n, d, p, f, b, n2, m, x, a : d**S(2)*f**(S(2)*n)*Int((f*x)**(m - S(2)*n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))/(d + e*x**n), x)/(a*e**S(2) - b*d*e + c*d**S(2)) - f**(S(2)*n)*Int((f*x)**(m - S(2)*n)*(a*d + x**n*(-a*e + b*d))*(a + b*x**n + c*x**(S(2)*n))**p, x)/(a*e**S(2) - b*d*e + c*d**S(2)))
    rubi.add(rule300)

    pattern301 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**p_/(x_**n_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda n, m: Greater(m, n)))
    rule301 = ReplacementRule(pattern301, lambda c, e, n, d, p, f, x, n2, m, a : -a*f**(S(2)*n)*Int((f*x)**(m - S(2)*n)*(a + c*x**(S(2)*n))**p*(d - e*x**n), x)/(a*e**S(2) + c*d**S(2)) + d**S(2)*f**(S(2)*n)*Int((f*x)**(m - S(2)*n)*(a + c*x**(S(2)*n))**(p + S(1))/(d + e*x**n), x)/(a*e**S(2) + c*d**S(2)))
    rubi.add(rule301)

    pattern302 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)) + WC('a', S(0)))**p_/(x_**n_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda m: Greater(m, S(0))))
    rule302 = ReplacementRule(pattern302, lambda c, e, n, d, p, f, b, n2, m, x, a : -d*e*f**n*Int((f*x)**(m - n)*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))/(d + e*x**n), x)/(a*e**S(2) - b*d*e + c*d**S(2)) + f**n*Int((f*x)**(m - n)*(a*e + c*d*x**n)*(a + b*x**n + c*x**(S(2)*n))**p, x)/(a*e**S(2) - b*d*e + c*d**S(2)))
    rubi.add(rule302)

    pattern303 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**p_/(x_**n_*WC('e', S(1)) + WC('d', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m: RationalQ(m, p)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda m: Greater(m, S(0))))
    rule303 = ReplacementRule(pattern303, lambda c, e, n, d, p, f, x, n2, m, a : -d*e*f**n*Int((f*x)**(m - n)*(a + c*x**(S(2)*n))**(p + S(1))/(d + e*x**n), x)/(a*e**S(2) + c*d**S(2)) + f**n*Int((f*x)**(m - n)*(a + c*x**(S(2)*n))**p*(a*e + c*d*x**n), x)/(a*e**S(2) + c*d**S(2)))
    rubi.add(rule303)

    pattern304 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, q: PositiveIntegerQ(q) | IntegersQ(m, q)))
    rule304 = ReplacementRule(pattern304, lambda c, e, q, n, d, p, f, b, n2, m, x, a : Int(ExpandIntegrand((a + b*x**n + c*x**(S(2)*n))**p, (f*x)**m*(d + e*x**n)**q, x), x))
    rubi.add(rule304)

    pattern305 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda m, q: PositiveIntegerQ(q) | IntegersQ(m, q)))
    rule305 = ReplacementRule(pattern305, lambda c, e, q, n, d, p, f, x, n2, m, a : Int(ExpandIntegrand((a + c*x**(S(2)*n))**p, (f*x)**m*(d + e*x**n)**q, x), x))
    rubi.add(rule305)

    pattern306 = Pattern(Integral(x_**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda m: IntegerQ(m)))
    rule306 = ReplacementRule(pattern306, lambda c, e, q, n, d, p, b, n2, m, x, a : -Subst(Int(x**(-m + S(-2))*(d + e*x**(-n))**q*(a + b*x**(-n) + c*x**(-S(2)*n))**p, x), x, 1/x))
    rubi.add(rule306)

    pattern307 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda m: IntegerQ(m)))
    rule307 = ReplacementRule(pattern307, lambda c, e, q, n, d, p, x, n2, m, a : -Subst(Int(x**(-m + S(-2))*(a + c*x**(-S(2)*n))**p*(d + e*x**(-n))**q, x), x, 1/x))
    rubi.add(rule307)

    pattern308 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda m: FractionQ(m)))
    rule308 = ReplacementRule(pattern308, lambda c, e, q, n, d, p, f, b, n2, m, x, a : With(List(Set(g, Denominator(m))), -g*Subst(Int(x**(-g*(m + S(1)) + S(-1))*(d + e*f**(-n)*x**(-g*n))**q*(a + b*f**(-n)*x**(-g*n) + c*f**(-S(2)*n)*x**(-S(2)*g*n))**p, x), x, (f*x)**(-S(1)/g))/f))
    rubi.add(rule308)

    pattern309 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda m: FractionQ(m)))
    rule309 = ReplacementRule(pattern309, lambda c, e, q, n, d, p, f, x, n2, m, a : With(List(Set(g, Denominator(m))), -g*Subst(Int(x**(-g*(m + S(1)) + S(-1))*(a + c*f**(-S(2)*n)*x**(-S(2)*g*n))**p*(d + e*f**(-n)*x**(-g*n))**q, x), x, (f*x)**(-S(1)/g))/f))
    rubi.add(rule309)

    pattern310 = Pattern(Integral((x_*WC('f', S(1)))**m_*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda m: ~(RationalQ(m))))
    rule310 = ReplacementRule(pattern310, lambda c, e, q, n, d, p, f, b, n2, x, m, a : -f**IntPart(m)*(f*x)**FracPart(m)*(1/x)**FracPart(m)*Subst(Int(x**(-m + S(-2))*(d + e*x**(-n))**q*(a + b*x**(-n) + c*x**(-S(2)*n))**p, x), x, 1/x))
    rubi.add(rule310)

    pattern311 = Pattern(Integral((x_*WC('f', S(1)))**m_*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda m: ~(RationalQ(m))))
    rule311 = ReplacementRule(pattern311, lambda c, q, e, n, d, p, f, x, n2, m, a : -f**IntPart(m)*(f*x)**FracPart(m)*(1/x)**FracPart(m)*Subst(Int(x**(-m + S(-2))*(a + c*x**(-S(2)*n))**p*(d + e*x**(-n))**q, x), x, 1/x))
    rubi.add(rule311)

    pattern312 = Pattern(Integral(x_**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: FractionQ(n)))
    rule312 = ReplacementRule(pattern312, lambda c, e, q, n, d, p, b, n2, m, x, a : With(List(Set(g, Denominator(n))), g*Subst(Int(x**(g*(m + S(1)) + S(-1))*(d + e*x**(g*n))**q*(a + b*x**(g*n) + c*x**(S(2)*g*n))**p, x), x, x**(1/g))))
    rubi.add(rule312)

    pattern313 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: FractionQ(n)))
    rule313 = ReplacementRule(pattern313, lambda c, e, q, n, d, p, x, n2, m, a : With(List(Set(g, Denominator(n))), g*Subst(Int(x**(g*(m + S(1)) + S(-1))*(a + c*x**(S(2)*g*n))**p*(d + e*x**(g*n))**q, x), x, x**(1/g))))
    rubi.add(rule313)

    pattern314 = Pattern(Integral((f_*x_)**m_*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: FractionQ(n)))
    rule314 = ReplacementRule(pattern314, lambda c, q, e, n, d, p, f, b, n2, x, m, a : f**IntPart(m)*x**(-FracPart(m))*(f*x)**FracPart(m)*Int(x**m*(d + e*x**n)**q*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule314)

    pattern315 = Pattern(Integral((f_*x_)**m_*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n: FractionQ(n)))
    rule315 = ReplacementRule(pattern315, lambda c, q, e, n, d, p, f, x, n2, m, a : f**IntPart(m)*x**(-FracPart(m))*(f*x)**FracPart(m)*Int(x**m*(a + c*x**(S(2)*n))**p*(d + e*x**n)**q, x))
    rubi.add(rule315)

    pattern316 = Pattern(Integral(x_**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, m: IntegerQ(Simplify(n/(m + S(1))))), CustomConstraint(lambda n: ~(IntegerQ(n))))
    rule316 = ReplacementRule(pattern316, lambda c, e, q, n, d, p, b, n2, m, x, a : Subst(Int((d + e*x**Simplify(n/(m + S(1))))**q*(a + b*x**Simplify(n/(m + S(1))) + c*x**Simplify(S(2)*n/(m + S(1))))**p, x), x, x**(m + S(1)))/(m + S(1)))
    rubi.add(rule316)

    pattern317 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, m: IntegerQ(Simplify(n/(m + S(1))))), CustomConstraint(lambda n: ~(IntegerQ(n))))
    rule317 = ReplacementRule(pattern317, lambda c, e, q, n, d, p, x, n2, m, a : Subst(Int((a + c*x**Simplify(S(2)*n/(m + S(1))))**p*(d + e*x**Simplify(n/(m + S(1))))**q, x), x, x**(m + S(1)))/(m + S(1)))
    rubi.add(rule317)

    pattern318 = Pattern(Integral((f_*x_)**m_*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n, m: IntegerQ(Simplify(n/(m + S(1))))), CustomConstraint(lambda n: ~(IntegerQ(n))))
    rule318 = ReplacementRule(pattern318, lambda c, q, e, n, d, p, f, b, n2, x, m, a : f**IntPart(m)*x**(-FracPart(m))*(f*x)**FracPart(m)*Int(x**m*(d + e*x**n)**q*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule318)

    pattern319 = Pattern(Integral((f_*x_)**m_*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, m: IntegerQ(Simplify(n/(m + S(1))))), CustomConstraint(lambda n: ~(IntegerQ(n))))
    rule319 = ReplacementRule(pattern319, lambda c, q, e, n, d, p, f, x, n2, m, a : f**IntPart(m)*x**(-FracPart(m))*(f*x)**FracPart(m)*Int(x**m*(a + c*x**(S(2)*n))**p*(d + e*x**n)**q, x))
    rubi.add(rule319)

    pattern320 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**q_/(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))))
    rule320 = ReplacementRule(pattern320, lambda c, e, q, n, d, f, b, n2, m, x, a : With(List(Set(r, Rt(-S(4)*a*c + b**S(2), S(2)))), S(2)*c*Int((f*x)**m*(d + e*x**n)**q/(b + S(2)*c*x**n - r), x)/r - S(2)*c*Int((f*x)**m*(d + e*x**n)**q/(b + S(2)*c*x**n + r), x)/r))
    rubi.add(rule320)

    pattern321 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**q_/(a_ + x_**WC('n2', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)))
    rule321 = ReplacementRule(pattern321, lambda c, e, q, n, d, f, x, n2, m, a : With(List(Set(r, Rt(-a*c, S(2)))), -c*Int((f*x)**m*(d + e*x**n)**q/(-c*x**n + r), x)/(S(2)*r) - c*Int((f*x)**m*(d + e*x**n)**q/(c*x**n + r), x)/(S(2)*r)))
    rubi.add(rule321)

    pattern322 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))*(a_ + x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: NegativeIntegerQ(p + S(1))))
    rule322 = ReplacementRule(pattern322, lambda c, e, n, d, p, f, b, x, m, n2, a : Int((f*x)**m*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))*Simp(-a*b*e*(m + S(1)) + c*x**n*(-S(2)*a*e + b*d)*(m + n*(S(2)*p + S(3)) + S(1)) + d*(-S(2)*a*c*(m + S(2)*n*(p + S(1)) + S(1)) + b**S(2)*(m + n*(p + S(1)) + S(1))), x), x)/(a*n*(p + S(1))*(-S(4)*a*c + b**S(2))) - (f*x)**(m + S(1))*(a + b*x**n + c*x**(S(2)*n))**(p + S(1))*(-a*b*e + c*x**n*(-S(2)*a*e + b*d) + d*(-S(2)*a*c + b**S(2)))/(a*f*n*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule322)

    pattern323 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(a_ + x_**n2_*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda p: NegativeIntegerQ(p + S(1))))
    rule323 = ReplacementRule(pattern323, lambda c, e, n, d, p, f, x, n2, m, a : Int((f*x)**m*(a + c*x**(S(2)*n))**(p + S(1))*Simp(d*(m + S(2)*n*(p + S(1)) + S(1)) + e*x**n*(m + n*(S(2)*p + S(3)) + S(1)), x), x)/(S(2)*a*n*(p + S(1))) - (f*x)**(m + S(1))*(a + c*x**(S(2)*n))**(p + S(1))*(d + e*x**n)/(S(2)*a*f*n*(p + S(1))))
    rubi.add(rule323)

    pattern324 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p, q: PositiveIntegerQ(p) | PositiveIntegerQ(q)))
    rule324 = ReplacementRule(pattern324, lambda c, e, q, n, d, p, f, b, n2, m, x, a : Int(ExpandIntegrand((f*x)**m*(d + e*x**n)**q*(a + b*x**n + c*x**(S(2)*n))**p, x), x))
    rubi.add(rule324)

    pattern325 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda p, q: PositiveIntegerQ(p) | PositiveIntegerQ(q)))
    rule325 = ReplacementRule(pattern325, lambda c, e, q, n, d, p, f, x, n2, m, a : Int(ExpandIntegrand((f*x)**m*(a + c*x**(S(2)*n))**p*(d + e*x**n)**q, x), x))
    rubi.add(rule325)

    pattern326 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(a_ + x_**n2_*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda q: NegativeIntegerQ(q)), CustomConstraint(lambda f, m: IntegerQ(m) | PositiveQ(f)))
    rule326 = ReplacementRule(pattern326, lambda c, e, q, n, d, p, f, x, n2, m, a : f**m*Int(ExpandIntegrand(x**m*(a + c*x**(S(2)*n))**p, (d/(d**S(2) - e**S(2)*x**(S(2)*n)) - e*x**n/(d**S(2) - e**S(2)*x**(S(2)*n)))**(-q), x), x))
    rubi.add(rule326)

    pattern327 = Pattern(Integral((x_*WC('f', S(1)))**m_*(a_ + x_**n2_*WC('c', S(1)))**p_*(d_ + x_**n_*WC('e', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda q: NegativeIntegerQ(q)), CustomConstraint(lambda f, m: ~(IntegerQ(m) | PositiveQ(f))))
    rule327 = ReplacementRule(pattern327, lambda e, c, q, n, d, p, f, x, n2, m, a : x**(-m)*(f*x)**m*Int(x**m*(a + c*x**(S(2)*n))**p*(d + e*x**n)**q, x))
    rubi.add(rule327)

    pattern328 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**n_*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)))
    rule328 = ReplacementRule(pattern328, lambda c, e, q, n, d, p, f, b, n2, m, x, a : Int((f*x)**m*(d + e*x**n)**q*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule328)

    pattern329 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)))
    rule329 = ReplacementRule(pattern329, lambda c, e, q, n, d, p, f, x, n2, m, a : Int((f*x)**m*(a + c*x**(S(2)*n))**p*(d + e*x**n)**q, x))
    rubi.add(rule329)

    pattern330 = Pattern(Integral(u_**WC('m', S(1))*(d_ + v_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + v_**n_*WC('b', S(1)) + v_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda v, x, u: LinearPairQ(u, v, x)))
    rule330 = ReplacementRule(pattern330, lambda c, e, q, v, n, d, u, p, b, n2, m, x, a : u**m*v**(-m)*Subst(Int(x**m*(d + e*x**n)**q*(a + b*x**n + c*x**(S(2)*n))**p, x), x, v)/Coefficient(v, x, S(1)))
    rubi.add(rule330)

    pattern331 = Pattern(Integral(u_**WC('m', S(1))*(a_ + v_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))*(d_ + v_**n_*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda v, x, u: LinearPairQ(u, v, x)))
    rule331 = ReplacementRule(pattern331, lambda c, e, q, v, d, n, u, p, x, n2, m, a : u**m*v**(-m)*Subst(Int(x**m*(a + c*x**(S(2)*n))**p*(d + e*x**n)**q, x), x, v)/Coefficient(v, x, S(1)))
    rubi.add(rule331)

    pattern332 = Pattern(Integral(x_**WC('m', S(1))*(d_ + x_**WC('mn', S(1))*WC('e', S(1)))**WC('q', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda n, mn: EqQ(mn, -n)), CustomConstraint(lambda q: IntegerQ(q)))
    rule332 = ReplacementRule(pattern332, lambda e, q, c, n, d, p, mn, b, n2, m, x, a : Int(x**(m - n*q)*(d*x**n + e)**q*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule332)

    pattern333 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**WC('mn', S(1))*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda mn, x: FreeQ(mn, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n2, mn: EqQ(n2, -S(2)*mn)), CustomConstraint(lambda q: IntegerQ(q)))
    rule333 = ReplacementRule(pattern333, lambda c, q, e, d, p, mn, x, n2, m, a : Int(x**(m + mn*q)*(a + c*x**n2)**p*(d*x**(-mn) + e)**q, x))
    rubi.add(rule333)

    pattern334 = Pattern(Integral(x_**WC('m', S(1))*(d_ + x_**WC('mn', S(1))*WC('e', S(1)))**q_*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda n, mn: EqQ(mn, -n)), CustomConstraint(lambda q: ~(IntegerQ(q))), CustomConstraint(lambda p: IntegerQ(p)))
    rule334 = ReplacementRule(pattern334, lambda e, c, q, n, d, p, mn, b, n2, m, x, a : Int(x**(m + S(2)*n*p)*(d + e*x**(-n))**q*(a*x**(-S(2)*n) + b*x**(-n) + c)**p, x))
    rubi.add(rule334)

    pattern335 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**WC('p', S(1))*(d_ + x_**WC('mn', S(1))*WC('e', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda mn, x: FreeQ(mn, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, mn: EqQ(n2, -S(2)*mn)), CustomConstraint(lambda q: ~(IntegerQ(q))), CustomConstraint(lambda p: IntegerQ(p)))
    rule335 = ReplacementRule(pattern335, lambda c, e, q, d, p, mn, x, n2, m, a : Int(x**(m - S(2)*mn*p)*(d + e*x**mn)**q*(a*x**(S(2)*mn) + c)**p, x))
    rubi.add(rule335)

    pattern336 = Pattern(Integral(x_**WC('m', S(1))*(d_ + x_**WC('mn', S(1))*WC('e', S(1)))**q_*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)) + WC('a', S(0)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda n, mn: EqQ(mn, -n)), CustomConstraint(lambda q: ~(IntegerQ(q))), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule336 = ReplacementRule(pattern336, lambda e, c, q, n, d, p, mn, b, n2, m, x, a : x**(n*FracPart(q))*(d + e*x**(-n))**FracPart(q)*(d*x**n + e)**(-FracPart(q))*Int(x**(m - n*q)*(d*x**n + e)**q*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule336)

    pattern337 = Pattern(Integral(x_**WC('m', S(1))*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**p_*(d_ + x_**WC('mn', S(1))*WC('e', S(1)))**q_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda mn, x: FreeQ(mn, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, mn: EqQ(n2, -S(2)*mn)), CustomConstraint(lambda q: ~(IntegerQ(q))), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule337 = ReplacementRule(pattern337, lambda c, e, q, d, p, mn, x, n2, m, a : x**(-mn*FracPart(q))*(d + e*x**mn)**FracPart(q)*(d*x**(-mn) + e)**(-FracPart(q))*Int(x**(m + mn*q)*(a + c*x**n2)**p*(d*x**(-mn) + e)**q, x))
    rubi.add(rule337)

    pattern338 = Pattern(Integral((f_*x_)**m_*(d_ + x_**WC('mn', S(1))*WC('e', S(1)))**WC('q', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('n2', S(1))*WC('c', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: EqQ(n2, S(2)*n)), CustomConstraint(lambda n, mn: EqQ(mn, -n)))
    rule338 = ReplacementRule(pattern338, lambda e, q, c, n, d, p, mn, f, b, n2, x, m, a : f**IntPart(m)*x**(-FracPart(m))*(f*x)**FracPart(m)*Int(x**m*(d + e*x**mn)**q*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule338)

    pattern339 = Pattern(Integral((f_*x_)**m_*(a_ + x_**WC('n2', S(1))*WC('c', S(1)))**p_*(d_ + x_**WC('mn', S(1))*WC('e', S(1)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda mn, x: FreeQ(mn, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n2, mn: EqQ(n2, -S(2)*mn)))
    rule339 = ReplacementRule(pattern339, lambda c, e, q, d, p, mn, f, x, n2, m, a : f**IntPart(m)*x**(-FracPart(m))*(f*x)**FracPart(m)*Int(x**m*(a + c*x**(S(2)*n))**p*(d + e*x**mn)**q, x))
    rubi.add(rule339)

    pattern340 = Pattern(Integral(x_**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**mn_*WC('b', S(1)) + x_**WC('n', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, mn: EqQ(mn, -n)), CustomConstraint(lambda p: IntegerQ(p)))
    rule340 = ReplacementRule(pattern340, lambda c, e, q, n, d, p, mn, b, x, m, a : Int(x**(m - n*p)*(d + e*x**n)**q*(a*x**n + b + c*x**(S(2)*n))**p, x))
    rubi.add(rule340)

    pattern341 = Pattern(Integral(x_**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**mn_*WC('b', S(1)) + x_**WC('n', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, mn: EqQ(mn, -n)), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule341 = ReplacementRule(pattern341, lambda c, e, q, n, d, p, mn, b, x, m, a : x**(n*FracPart(p))*(a + b*x**(-n) + c*x**n)**FracPart(p)*(a*x**n + b + c*x**(S(2)*n))**(-FracPart(p))*Int(x**(m - n*p)*(d + e*x**n)**q*(a*x**n + b + c*x**(S(2)*n))**p, x))
    rubi.add(rule341)

    pattern342 = Pattern(Integral((f_*x_)**WC('m', S(1))*(d_ + x_**n_*WC('e', S(1)))**WC('q', S(1))*(a_ + x_**mn_*WC('b', S(1)) + x_**WC('n', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, mn: EqQ(mn, -n)))
    rule342 = ReplacementRule(pattern342, lambda c, e, q, n, d, p, mn, f, b, x, m, a : f**IntPart(m)*x**(-FracPart(m))*(f*x)**FracPart(m)*Int(x**m*(d + e*x**n)**q*(a + b*x**(-n) + c*x**n)**p, x))
    rubi.add(rule342)

    pattern343 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d1_ + x_**WC('non2', S(1))*WC('e1', S(1)))**WC('q', S(1))*(d2_ + x_**WC('non2', S(1))*WC('e2', S(1)))**WC('q', S(1))*(x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d1, x: FreeQ(d1, x)), CustomConstraint(lambda e1, x: FreeQ(e1, x)), CustomConstraint(lambda d2, x: FreeQ(d2, x)), CustomConstraint(lambda e2, x: FreeQ(e2, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, non2: ZeroQ(-n/S(2) + non2)), CustomConstraint(lambda e1, d2, d1, e2: ZeroQ(d1*e2 + d2*e1)), CustomConstraint(lambda d2, d1, q: IntegerQ(q) | (PositiveQ(d1) & PositiveQ(d2))))
    rule343 = ReplacementRule(pattern343, lambda c, q, e2, e1, non2, n, p, f, b, x, m, d1, n2, a, d2 : Int((f*x)**m*(d1*d2 + e1*e2*x**n)**q*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule343)

    pattern344 = Pattern(Integral((x_*WC('f', S(1)))**WC('m', S(1))*(d1_ + x_**WC('non2', S(1))*WC('e1', S(1)))**WC('q', S(1))*(d2_ + x_**WC('non2', S(1))*WC('e2', S(1)))**WC('q', S(1))*(x_**n2_*WC('c', S(1)) + x_**n_*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d1, x: FreeQ(d1, x)), CustomConstraint(lambda e1, x: FreeQ(e1, x)), CustomConstraint(lambda d2, x: FreeQ(d2, x)), CustomConstraint(lambda e2, x: FreeQ(e2, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda n, non2: ZeroQ(-n/S(2) + non2)), CustomConstraint(lambda e1, d2, d1, e2: ZeroQ(d1*e2 + d2*e1)))
    rule344 = ReplacementRule(pattern344, lambda c, q, e2, e1, non2, n, p, f, b, x, m, d1, n2, a, d2 : (d1 + e1*x**(n/S(2)))**FracPart(q)*(d2 + e2*x**(n/S(2)))**FracPart(q)*(d1*d2 + e1*e2*x**n)**(-FracPart(q))*Int((f*x)**m*(d1*d2 + e1*e2*x**n)**q*(a + b*x**n + c*x**(S(2)*n))**p, x))
    rubi.add(rule344)

    pattern345 = Pattern(Integral((x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, q: ZeroQ(n - q)), CustomConstraint(lambda n, r: ZeroQ(-n + r)))
    rule345 = ReplacementRule(pattern345, lambda c, q, r, n, p, b, x, a : Int((x**n*(a + b + c))**p, x))
    rubi.add(rule345)

    pattern346 = Pattern(Integral((x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, q, r: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda p: IntegerQ(p)))
    rule346 = ReplacementRule(pattern346, lambda c, q, r, n, p, b, x, a : Int(x**(p*q)*(a + b*x**(n - q) + c*x**(S(2)*n - S(2)*q))**p, x))
    rubi.add(rule346)

    pattern347 = Pattern(Integral(sqrt(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, q, r: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)))
    rule347 = ReplacementRule(pattern347, lambda c, q, r, n, b, x, a : x**(-q/S(2))*Int(x**(q/S(2))*Sqrt(a + b*x**(n - q) + c*x**(S(2)*n - S(2)*q)), x)*Sqrt(a*x**q + b*x**n + c*x**(S(2)*n - q))/Sqrt(a + b*x**(n - q) + c*x**(S(2)*n - S(2)*q)))
    rubi.add(rule347)

    pattern348 = Pattern(Integral(1/sqrt(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, q, r: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)))
    rule348 = ReplacementRule(pattern348, lambda c, q, r, n, b, x, a : x**(q/S(2))*Int(x**(-q/S(2))/Sqrt(a + b*x**(n - q) + c*x**(S(2)*n - S(2)*q)), x)*Sqrt(a + b*x**(n - q) + c*x**(S(2)*n - S(2)*q))/Sqrt(a*x**q + b*x**n + c*x**(S(2)*n - q)))
    rubi.add(rule348)

    pattern349 = Pattern(Integral((x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, q, r: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n, p, q: NonzeroQ(p*(S(2)*n - q) + S(1))))
    rule349 = ReplacementRule(pattern349, lambda c, q, r, n, p, b, x, a : p*(n - q)*Int(x**q*(S(2)*a + b*x**(n - q))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(-1)), x)/(p*(S(2)*n - q) + S(1)) + x*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p/(p*(S(2)*n - q) + S(1)))
    rubi.add(rule349)

    pattern350 = Pattern(Integral((x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, q, r: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))))
    rule350 = ReplacementRule(pattern350, lambda c, q, r, n, p, b, x, a : -x**(-q + S(1))*(-S(2)*a*c + b**S(2) + b*c*x**(n - q))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1))/(a*(n - q)*(p + S(1))*(-S(4)*a*c + b**S(2))) + Int(x**(-q)*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1))*(b*c*x**(n - q)*(p*q + (n - q)*(S(2)*p + S(3)) + S(1)) + (n - q)*(p + S(1))*(-S(4)*a*c + b**S(2)) + (-S(2)*a*c + b**S(2))*(p*q + S(1))), x)/(a*(n - q)*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule350)

    pattern351 = Pattern(Integral((x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, q, r: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule351 = ReplacementRule(pattern351, lambda c, q, r, n, p, b, x, a : x**(-p*q)*(a + b*x**(n - q) + c*x**(S(2)*n - S(2)*q))**(-p)*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p*Int(x**(p*q)*(a + b*x**(n - q) + c*x**(S(2)*n - S(2)*q))**p, x))
    rubi.add(rule351)

    pattern352 = Pattern(Integral((x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, q, r: ZeroQ(-S(2)*n + q + r)))
    rule352 = ReplacementRule(pattern352, lambda c, q, r, n, p, b, x, a : Int((a*x**q + b*x**n + c*x**(S(2)*n - q))**p, x))
    rubi.add(rule352)

    pattern353 = Pattern(Integral((u_**WC('n', S(1))*WC('b', S(1)) + u_**WC('q', S(1))*WC('a', S(1)) + u_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, q, r: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule353 = ReplacementRule(pattern353, lambda c, q, r, n, u, p, b, x, a : Subst(Int((a*x**q + b*x**n + c*x**(S(2)*n - q))**p, x), x, u)/Coefficient(u, x, S(1)))
    rubi.add(rule353)

    pattern354 = Pattern(Integral(x_**WC('m', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, q: ZeroQ(-n + q)), CustomConstraint(lambda n, r: ZeroQ(-n + r)))
    rule354 = ReplacementRule(pattern354, lambda c, q, r, n, p, b, x, m, a : Int(x**m*(x**n*(a + b + c))**p, x))
    rubi.add(rule354)

    pattern355 = Pattern(Integral(x_**WC('m', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, q, r: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda p: IntegerQ(p)), CustomConstraint(lambda n, q: PosQ(n - q)))
    rule355 = ReplacementRule(pattern355, lambda c, q, r, n, p, b, x, m, a : Int(x**(m + p*q)*(a + b*x**(n - q) + c*x**(S(2)*n - S(2)*q))**p, x))
    rubi.add(rule355)

    pattern356 = Pattern(Integral(x_**WC('m', S(1))/sqrt(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, q, r: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda n, m, q: (ZeroQ(m + S(-1)) & ZeroQ(n + S(-3)) & ZeroQ(q + S(-2))) | (ZeroQ(n + S(-3)) & ZeroQ(q + S(-1)) & (ZeroQ(m + S(-5)/2) | ZeroQ(m + S(-3)/2) | ZeroQ(m + S(-1)/2) | ZeroQ(m + S(1)/2)))))
    rule356 = ReplacementRule(pattern356, lambda c, q, r, n, b, x, m, a : x**(q/S(2))*Int(x**(m - q/S(2))/Sqrt(a + b*x**(n - q) + c*x**(S(2)*n - S(2)*q)), x)*Sqrt(a + b*x**(n - q) + c*x**(S(2)*n - S(2)*q))/Sqrt(a*x**q + b*x**n + c*x**(S(2)*n - q)))
    rubi.add(rule356)

    pattern357 = Pattern(Integral(x_**WC('m', S(1))/(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**(S(3)/2), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, m: ZeroQ(m - S(3)*n/S(2) + S(3)/2)), CustomConstraint(lambda n, q: ZeroQ(-n + q + S(1))), CustomConstraint(lambda n, r: ZeroQ(-n + r + S(-1))), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))))
    rule357 = ReplacementRule(pattern357, lambda c, q, r, n, b, x, m, a : -S(2)*x**(n/S(2) + S(-1)/2)*(b + S(2)*c*x)/((-S(4)*a*c + b**S(2))*Sqrt(a*x**(n + S(-1)) + b*x**n + c*x**(n + S(1)))))
    rubi.add(rule357)

    pattern358 = Pattern(Integral(x_**WC('m', S(1))/(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**(S(3)/2), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, m: ZeroQ(m - S(3)*n/S(2) + S(1)/2)), CustomConstraint(lambda n, q: ZeroQ(-n + q + S(1))), CustomConstraint(lambda n, r: ZeroQ(-n + r + S(-1))), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))))
    rule358 = ReplacementRule(pattern358, lambda c, q, r, n, b, x, m, a : x**(n/S(2) + S(-1)/2)*(S(4)*a + S(2)*b*x)/((-S(4)*a*c + b**S(2))*Sqrt(a*x**(n + S(-1)) + b*x**n + c*x**(n + S(1)))))
    rubi.add(rule358)

    pattern359 = Pattern(Integral(x_**WC('m', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, q, r: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m, q: RationalQ(m, p, q)), CustomConstraint(lambda n, p, m: Equal(m + p*(n + S(-1)) + S(-1), S(0))))
    rule359 = ReplacementRule(pattern359, lambda c, q, r, n, p, b, x, m, a : -b*Int(x**(m + S(-1))*(a*x**(n + S(-1)) + b*x**n + c*x**(n + S(1)))**p, x)/(S(2)*c) + x**(m - n)*(a*x**(n + S(-1)) + b*x**n + c*x**(n + S(1)))**(p + S(1))/(S(2)*c*(p + S(1))))
    rubi.add(rule359)

    pattern360 = Pattern(Integral(x_**WC('m', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, q, r: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m, q: RationalQ(m, p, q)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n, p, m, q: Equal(m + p*q + S(1), n - q)))
    rule360 = ReplacementRule(pattern360, lambda c, q, r, n, p, b, x, m, a : -p*(-S(4)*a*c + b**S(2))*Int(x**(m + q)*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(-1)), x)/(S(2)*c*(S(2)*p + S(1))) + x**(m - n + q + S(1))*(b + S(2)*c*x**(n - q))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p/(S(2)*c*(n - q)*(S(2)*p + S(1))))
    rubi.add(rule360)

    pattern361 = Pattern(Integral(x_**WC('m', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, q, r: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m, q: RationalQ(m, p, q)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n, p, m, q: Greater(m + p*q + S(1), n - q)), CustomConstraint(lambda n, p, m, q: Unequal(m + p*(S(2)*n - q) + S(1), S(0))), CustomConstraint(lambda n, p, m, q: Unequal(m + p*q + (n - q)*(S(2)*p + S(-1)) + S(1), S(0))))
    rule361 = ReplacementRule(pattern361, lambda c, q, r, n, p, b, x, m, a : p*(n - q)*Int(x**(m - n + S(2)*q)*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(-1))*Simp(-a*b*(m - n + p*q + q + S(1)) + x**(n - q)*(S(2)*a*c*(m + p*q + (n - q)*(S(2)*p + S(-1)) + S(1)) - b**S(2)*(m + p*q + (n - q)*(p + S(-1)) + S(1))), x), x)/(c*(m + p*(S(2)*n - q) + S(1))*(m + p*q + (n - q)*(S(2)*p + S(-1)) + S(1))) + x**(m - n + q + S(1))*(b*p*(n - q) + c*x**(n - q)*(m + p*q + (n - q)*(S(2)*p + S(-1)) + S(1)))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p/(c*(m + p*(S(2)*n - q) + S(1))*(m + p*q + (n - q)*(S(2)*p + S(-1)) + S(1))))
    rubi.add(rule361)

    pattern362 = Pattern(Integral(x_**WC('m', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, q, r: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m, q: RationalQ(m, p, q)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n, p, m, q: LessEqual(m + p*q + S(1), -n + q + S(1))), CustomConstraint(lambda p, m, q: NonzeroQ(m + p*q + S(1))))
    rule362 = ReplacementRule(pattern362, lambda c, q, r, n, p, b, x, m, a : -p*(n - q)*Int(x**(m + n)*(b + S(2)*c*x**(n - q))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(-1)), x)/(m + p*q + S(1)) + x**(m + S(1))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p/(m + p*q + S(1)))
    rubi.add(rule362)

    pattern363 = Pattern(Integral(x_**WC('m', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, q, r: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m, q: RationalQ(m, p, q)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n, p, m, q: Greater(m + p*q + S(1), -n + q)), CustomConstraint(lambda n, p, m, q: Unequal(m + p*(S(2)*n - q) + S(1), S(0))))
    rule363 = ReplacementRule(pattern363, lambda c, q, r, n, p, b, x, m, a : p*(n - q)*Int(x**(m + q)*(S(2)*a + b*x**(n - q))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(-1)), x)/(m + p*(S(2)*n - q) + S(1)) + x**(m + S(1))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p/(m + p*(S(2)*n - q) + S(1)))
    rubi.add(rule363)

    pattern364 = Pattern(Integral(x_**WC('m', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, q, r: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m, q: RationalQ(m, p, q)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda n, p, m, q: Equal(m + p*q + S(1), (-n + q)*(S(2)*p + S(3)))))
    rule364 = ReplacementRule(pattern364, lambda c, q, r, n, p, b, x, m, a : -x**(m - q + S(1))*(-S(2)*a*c + b**S(2) + b*c*x**(n - q))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1))/(a*(n - q)*(p + S(1))*(-S(4)*a*c + b**S(2))) + (S(2)*a*c - b**S(2)*(p + S(2)))*Int(x**(m - q)*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1)), x)/(a*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule364)

    pattern365 = Pattern(Integral(x_**WC('m', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, q, r: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m, q: RationalQ(m, p, q)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda n, p, m, q: Greater(m + p*q + S(1), S(2)*n - S(2)*q)))
    rule365 = ReplacementRule(pattern365, lambda c, q, r, n, p, b, x, m, a : -x**(m - S(2)*n + q + S(1))*(S(2)*a + b*x**(n - q))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1))/((n - q)*(p + S(1))*(-S(4)*a*c + b**S(2))) + Int(x**(m - S(2)*n + q)*(S(2)*a*(m - S(2)*n + p*q + S(2)*q + S(1)) + b*x**(n - q)*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1)))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1)), x)/((n - q)*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule365)

    pattern366 = Pattern(Integral(x_**WC('m', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, q, r: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m, q: RationalQ(m, p, q)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda n, p, m, q: Less(m + p*q + S(1), n - q)))
    rule366 = ReplacementRule(pattern366, lambda c, q, r, n, p, b, x, m, a : -x**(m - q + S(1))*(-S(2)*a*c + b**S(2) + b*c*x**(n - q))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1))/(a*(n - q)*(p + S(1))*(-S(4)*a*c + b**S(2))) + Int(x**(m - q)*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1))*(-S(2)*a*c*(m + p*q + S(2)*(n - q)*(p + S(1)) + S(1)) + b**S(2)*(m + p*q + (n - q)*(p + S(1)) + S(1)) + b*c*x**(n - q)*(m + p*q + (n - q)*(S(2)*p + S(3)) + S(1))), x)/(a*(n - q)*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule366)

    pattern367 = Pattern(Integral(x_**WC('m', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, q, r: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m, q: RationalQ(m, p, q)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda n, p, m, q: Less(n - q, m + p*q + S(1), S(2)*n - S(2)*q)))
    rule367 = ReplacementRule(pattern367, lambda c, q, r, n, p, b, x, m, a : x**(m - n + S(1))*(b + S(2)*c*x**(n - q))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1))/((n - q)*(p + S(1))*(-S(4)*a*c + b**S(2))) - Int(x**(m - n)*(b*(m - n + p*q + q + S(1)) + S(2)*c*x**(n - q)*(m + p*q + S(2)*(n - q)*(p + S(1)) + S(1)))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1)), x)/((n - q)*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule367)

    pattern368 = Pattern(Integral(x_**WC('m', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, q, r: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m, q: RationalQ(m, p, q)), CustomConstraint(lambda p: Inequality(S(-1), LessEqual, p, Less, S(0))), CustomConstraint(lambda n, p, m, q: Equal(m + p*q + S(1), S(2)*n - S(2)*q)))
    rule368 = ReplacementRule(pattern368, lambda c, q, r, n, p, b, x, m, a : -b*Int(x**(m - n + q)*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p, x)/(S(2)*c) + x**(m - S(2)*n + q + S(1))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1))/(S(2)*c*(n - q)*(p + S(1))))
    rubi.add(rule368)

    pattern369 = Pattern(Integral(x_**WC('m', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, q, r: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m, q: RationalQ(m, p, q)), CustomConstraint(lambda p: Inequality(S(-1), LessEqual, p, Less, S(0))), CustomConstraint(lambda n, p, m, q: Equal(m + p*q + S(1), -S(2)*(n - q)*(p + S(1)))))
    rule369 = ReplacementRule(pattern369, lambda c, q, r, n, p, b, x, m, a : -b*Int(x**(m + n - q)*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p, x)/(S(2)*a) - x**(m - q + S(1))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1))/(S(2)*a*(n - q)*(p + S(1))))
    rubi.add(rule369)

    pattern370 = Pattern(Integral(x_**WC('m', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, q, r: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m, q: RationalQ(m, p, q)), CustomConstraint(lambda p: Inequality(S(-1), LessEqual, p, Less, S(0))), CustomConstraint(lambda n, p, m, q: Greater(m + p*q + S(1), S(2)*n - S(2)*q)))
    rule370 = ReplacementRule(pattern370, lambda c, q, r, n, p, b, x, m, a : x**(m - S(2)*n + q + S(1))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1))/(c*(m + p*q + S(2)*p*(n - q) + S(1))) - Int(x**(m - S(2)*n + S(2)*q)*(a*(m - S(2)*n + p*q + S(2)*q + S(1)) + b*x**(n - q)*(m + p*q + (n - q)*(p + S(-1)) + S(1)))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p, x)/(c*(m + p*q + S(2)*p*(n - q) + S(1))))
    rubi.add(rule370)

    pattern371 = Pattern(Integral(x_**WC('m', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, q, r: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m, q: RationalQ(m, p, q)), CustomConstraint(lambda p: Inequality(S(-1), LessEqual, p, Less, S(0))), CustomConstraint(lambda p, m, q: Less(m + p*q + S(1), S(0))))
    rule371 = ReplacementRule(pattern371, lambda c, q, r, n, p, b, x, m, a : x**(m - q + S(1))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1))/(a*(m + p*q + S(1))) - Int(x**(m + n - q)*(b*(m + p*q + (n - q)*(p + S(1)) + S(1)) + c*x**(n - q)*(m + p*q + S(2)*(n - q)*(p + S(1)) + S(1)))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p, x)/(a*(m + p*q + S(1))))
    rubi.add(rule371)

    pattern372 = Pattern(Integral(x_**WC('m', S(1))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, q, r: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda n, q: PosQ(n - q)))
    rule372 = ReplacementRule(pattern372, lambda c, q, r, n, p, b, x, m, a : x**(-p*q)*(a + b*x**(n - q) + c*x**(S(2)*n - S(2)*q))**(-p)*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p*Int(x**(m + p*q)*(a + b*x**(n - q) + c*x**(S(2)*n - S(2)*q))**p, x))
    rubi.add(rule372)

    pattern373 = Pattern(Integral(u_**WC('m', S(1))*(u_**WC('n', S(1))*WC('b', S(1)) + u_**WC('q', S(1))*WC('a', S(1)) + u_**WC('r', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, q, r: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule373 = ReplacementRule(pattern373, lambda c, q, r, n, u, p, b, x, m, a : Subst(Int(x**m*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p, x), x, u)/Coefficient(u, x, S(1)))
    rubi.add(rule373)

    pattern374 = Pattern(Integral((A_ + x_**WC('r', S(1))*WC('B', S(1)))*(x_**WC('j', S(1))*WC('c', S(1)) + x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, q, r: ZeroQ(-n + q + r)), CustomConstraint(lambda n, j, q: ZeroQ(j - S(2)*n + q)), CustomConstraint(lambda p: IntegerQ(p)), CustomConstraint(lambda n, q: PosQ(n - q)))
    rule374 = ReplacementRule(pattern374, lambda c, q, B, r, n, p, b, x, j, A, a : Int(x**(p*q)*(A + B*x**(n - q))*(a + b*x**(n - q) + c*x**(S(2)*n - S(2)*q))**p, x))
    rubi.add(rule374)

    pattern375 = Pattern(Integral((A_ + x_**WC('j', S(1))*WC('B', S(1)))/sqrt(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, j, q: ZeroQ(j - n + q)), CustomConstraint(lambda n, q, r: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda n: ZeroQ(n + S(-3))), CustomConstraint(lambda q: ZeroQ(q + S(-2))))
    rule375 = ReplacementRule(pattern375, lambda c, q, B, r, n, b, x, j, A, a : x**(q/S(2))*Int(x**(-q/S(2))*(A + B*x**(n - q))/Sqrt(a + b*x**(n - q) + c*x**(S(2)*n - S(2)*q)), x)*Sqrt(a + b*x**(n - q) + c*x**(S(2)*n - S(2)*q))/Sqrt(a*x**q + b*x**n + c*x**(S(2)*n - q)))
    rubi.add(rule375)

    pattern376 = Pattern(Integral((A_ + x_**WC('r', S(1))*WC('B', S(1)))*(x_**WC('j', S(1))*WC('c', S(1)) + x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, q, r: ZeroQ(-n + q + r)), CustomConstraint(lambda n, j, q: ZeroQ(j - S(2)*n + q)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n, p, q: NonzeroQ(p*(S(2)*n - q) + S(1))), CustomConstraint(lambda n, p, q: NonzeroQ(p*q + (n - q)*(S(2)*p + S(1)) + S(1))))
    rule376 = ReplacementRule(pattern376, lambda c, q, B, r, n, p, b, x, j, A, a : p*(n - q)*Int(x**q*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(-1))*(S(2)*A*a*c*(p*q + (n - q)*(S(2)*p + S(1)) + S(1)) - B*a*b*(p*q + S(1)) + x**(n - q)*(A*b*c*(p*q + (n - q)*(S(2)*p + S(1)) + S(1)) + S(2)*B*a*c*(p*(S(2)*n - q) + S(1)) - B*b**S(2)*(p*q + p*(n - q) + S(1)))), x)/(c*(p*(S(2)*n - q) + S(1))*(p*q + (n - q)*(S(2)*p + S(1)) + S(1))) + x*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p*(A*c*(p*q + (n - q)*(S(2)*p + S(1)) + S(1)) + B*b*p*(n - q) + B*c*x**(n - q)*(p*(S(2)*n - q) + S(1)))/(c*(p*(S(2)*n - q) + S(1))*(p*q + (n - q)*(S(2)*p + S(1)) + S(1))))
    rubi.add(rule376)

    pattern377 = Pattern(Integral((A_ + x_**WC('r', S(1))*WC('B', S(1)))*(x_**WC('j', S(1))*WC('c', S(1)) + x_**WC('q', S(1))*WC('a', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Greater(p, S(0))))
    rule377 = ReplacementRule(pattern377, lambda c, q, B, r, p, x, j, A, a : With(List(Set(n, q + r)), Condition(p*(n - q)*Int(x**q*(a*x**q + c*x**(S(2)*n - q))**(p + S(-1))*(S(2)*A*a*(p*q + (n - q)*(S(2)*p + S(1)) + S(1)) + S(2)*B*a*x**(n - q)*(p*(S(2)*n - q) + S(1))), x)/((p*(S(2)*n - q) + S(1))*(p*q + (n - q)*(S(2)*p + S(1)) + S(1))) + x*(A*(p*q + (n - q)*(S(2)*p + S(1)) + S(1)) + B*x**(n - q)*(p*(S(2)*n - q) + S(1)))*(a*x**q + c*x**(S(2)*n - q))**p/((p*(S(2)*n - q) + S(1))*(p*q + (n - q)*(S(2)*p + S(1)) + S(1))), ZeroQ(j - S(2)*n + q) & NonzeroQ(p*(S(2)*n - q) + S(1)) & NonzeroQ(p*q + (n - q)*(S(2)*p + S(1)) + S(1)))))
    rubi.add(rule377)

    pattern378 = Pattern(Integral((A_ + x_**WC('r', S(1))*WC('B', S(1)))*(x_**WC('j', S(1))*WC('c', S(1)) + x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, q, r: ZeroQ(-n + q + r)), CustomConstraint(lambda n, j, q: ZeroQ(j - S(2)*n + q)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))))
    rule378 = ReplacementRule(pattern378, lambda c, q, B, r, n, p, b, x, j, A, a : -x**(-q + S(1))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1))*(-S(2)*A*a*c + A*b**S(2) - B*a*b + c*x**(n - q)*(A*b - S(2)*B*a))/(a*(n - q)*(p + S(1))*(-S(4)*a*c + b**S(2))) + Int(x**(-q)*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1))*(-S(2)*A*a*c*(p*q + S(2)*(n - q)*(p + S(1)) + S(1)) + A*b**S(2)*(p*q + (n - q)*(p + S(1)) + S(1)) - B*a*b*(p*q + S(1)) + c*x**(n - q)*(A*b - S(2)*B*a)*(p*q + (n - q)*(S(2)*p + S(3)) + S(1))), x)/(a*(n - q)*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule378)

    pattern379 = Pattern(Integral((A_ + x_**WC('r', S(1))*WC('B', S(1)))*(x_**WC('j', S(1))*WC('c', S(1)) + x_**WC('q', S(1))*WC('a', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p: RationalQ(p)), CustomConstraint(lambda p: Less(p, S(-1))))
    rule379 = ReplacementRule(pattern379, lambda c, q, B, r, p, x, j, A, a : With(List(Set(n, q + r)), Condition(-x**(-q + S(1))*(a*x**q + c*x**(S(2)*n - q))**(p + S(1))*(A*a*c + B*a*c*x**(n - q))/(S(2)*a**S(2)*c*(n - q)*(p + S(1))) + Int(x**(-q)*(a*x**q + c*x**(S(2)*n - q))**(p + S(1))*(A*a*c*(p*q + S(2)*(n - q)*(p + S(1)) + S(1)) + B*a*c*x**(n - q)*(p*q + (n - q)*(S(2)*p + S(3)) + S(1))), x)/(S(2)*a**S(2)*c*(n - q)*(p + S(1))), ZeroQ(j - S(2)*n + q))))
    rubi.add(rule379)

    pattern380 = Pattern(Integral((A_ + x_**WC('j', S(1))*WC('B', S(1)))*(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, j, q: ZeroQ(j - n + q)), CustomConstraint(lambda n, q, r: ZeroQ(-S(2)*n + q + r)))
    rule380 = ReplacementRule(pattern380, lambda c, q, B, r, n, p, b, x, j, A, a : Int((A + B*x**(n - q))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p, x))
    rubi.add(rule380)

    pattern381 = Pattern(Integral((A_ + u_**WC('j', S(1))*WC('B', S(1)))*(u_**WC('n', S(1))*WC('b', S(1)) + u_**WC('q', S(1))*WC('a', S(1)) + u_**WC('r', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, j, q: ZeroQ(j - n + q)), CustomConstraint(lambda n, q, r: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule381 = ReplacementRule(pattern381, lambda c, q, B, r, n, u, p, b, x, j, A, a : Subst(Int((A + B*x**(n - q))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p, x), x, u)/Coefficient(u, x, S(1)))
    rubi.add(rule381)

    pattern382 = Pattern(Integral(x_**WC('m', S(1))*(A_ + x_**WC('r', S(1))*WC('B', S(1)))*(x_**WC('j', S(1))*WC('c', S(1)) + x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, q, r: ZeroQ(-n + q + r)), CustomConstraint(lambda n, j, q: ZeroQ(j - S(2)*n + q)), CustomConstraint(lambda p: IntegerQ(p)), CustomConstraint(lambda n, q: PosQ(n - q)))
    rule382 = ReplacementRule(pattern382, lambda c, q, B, r, n, a, p, b, x, m, A, j : Int(x**(m + p*q)*(A + B*x**(n - q))*(a + b*x**(n - q) + c*x**(S(2)*n - S(2)*q))**p, x))
    rubi.add(rule382)

    pattern383 = Pattern(Integral(x_**WC('m', S(1))*(A_ + x_**WC('r', S(1))*WC('B', S(1)))*(x_**WC('j', S(1))*WC('c', S(1)) + x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda n, q, r: ZeroQ(-n + q + r)), CustomConstraint(lambda n, j, q: ZeroQ(j - S(2)*n + q)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m, q: RationalQ(m, p, q)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n, p, m, q: LessEqual(m + p*q, -n + q)), CustomConstraint(lambda p, m, q: Unequal(m + p*q + S(1), S(0))), CustomConstraint(lambda n, p, m, q: Unequal(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1), S(0))))
    rule383 = ReplacementRule(pattern383, lambda c, q, B, r, n, a, p, b, x, m, A, j : p*(n - q)*Int(x**(m + n)*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(-1))*Simp(-A*b*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1)) + S(2)*B*a*(m + p*q + S(1)) + x**(n - q)*(-S(2)*A*c*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1)) + B*b*(m + p*q + S(1))), x), x)/((m + p*q + S(1))*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1))) + x**(m + S(1))*(A*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1)) + B*x**(n - q)*(m + p*q + S(1)))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p/((m + p*q + S(1))*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1))))
    rubi.add(rule383)

    pattern384 = Pattern(Integral(x_**WC('m', S(1))*(A_ + x_**WC('r', S(1))*WC('B', S(1)))*(x_**WC('j', S(1))*WC('c', S(1)) + x_**WC('q', S(1))*WC('a', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m, q: RationalQ(m, p, q)), CustomConstraint(lambda p: Greater(p, S(0))))
    rule384 = ReplacementRule(pattern384, lambda c, q, B, r, p, x, m, j, A, a : With(List(Set(n, q + r)), Condition(S(2)*p*(n - q)*Int(x**(m + n)*(a*x**q + c*x**(S(2)*n - q))**(p + S(-1))*Simp(-A*c*x**(n - q)*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1)) + B*a*(m + p*q + S(1)), x), x)/((m + p*q + S(1))*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1))) + x**(m + S(1))*(A*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1)) + B*x**(n - q)*(m + p*q + S(1)))*(a*x**q + c*x**(S(2)*n - q))**p/((m + p*q + S(1))*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1))), PositiveIntegerQ(n) & ZeroQ(j - S(2)*n + q) & Unequal(m + p*q + S(1), S(0)) & LessEqual(m + p*q, -n + q) & Unequal(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1), S(0)))))
    rubi.add(rule384)

    pattern385 = Pattern(Integral(x_**WC('m', S(1))*(A_ + x_**WC('r', S(1))*WC('B', S(1)))*(x_**WC('j', S(1))*WC('c', S(1)) + x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda n, q, r: ZeroQ(-n + q + r)), CustomConstraint(lambda n, j, q: ZeroQ(j - S(2)*n + q)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m, q: RationalQ(m, p, q)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda n, p, m, q: Greater(m + p*q, n - q + S(-1))))
    rule385 = ReplacementRule(pattern385, lambda c, q, B, r, n, a, p, b, x, m, A, j : x**(m - n + S(1))*(A*b - S(2)*B*a - x**(n - q)*(-S(2)*A*c + B*b))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1))/((n - q)*(p + S(1))*(-S(4)*a*c + b**S(2))) + Int(x**(m - n)*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1))*Simp(x**(n - q)*(-S(2)*A*c + B*b)*(m + p*q + S(2)*(n - q)*(p + S(1)) + S(1)) + (-A*b + S(2)*B*a)*(m - n + p*q + q + S(1)), x), x)/((n - q)*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule385)

    pattern386 = Pattern(Integral(x_**WC('m', S(1))*(A_ + x_**WC('r', S(1))*WC('B', S(1)))*(x_**WC('j', S(1))*WC('c', S(1)) + x_**WC('q', S(1))*WC('a', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m, q: RationalQ(m, p, q)), CustomConstraint(lambda p: Less(p, S(-1))))
    rule386 = ReplacementRule(pattern386, lambda c, q, B, r, p, x, m, j, A, a : With(List(Set(n, q + r)), Condition(x**(m - n + S(1))*(a*x**q + c*x**(S(2)*n - q))**(p + S(1))*(-A*c*x**(n - q) + B*a)/(S(2)*a*c*(n - q)*(p + S(1))) - Int(x**(m - n)*(a*x**q + c*x**(S(2)*n - q))**(p + S(1))*Simp(-A*c*x**(n - q)*(m + p*q + S(2)*(n - q)*(p + S(1)) + S(1)) + B*a*(m - n + p*q + q + S(1)), x), x)/(S(2)*a*c*(n - q)*(p + S(1))), PositiveIntegerQ(n) & ZeroQ(j - S(2)*n + q) & Greater(m + p*q, n - q + S(-1)))))
    rubi.add(rule386)

    pattern387 = Pattern(Integral(x_**WC('m', S(1))*(A_ + x_**WC('r', S(1))*WC('B', S(1)))*(x_**WC('j', S(1))*WC('c', S(1)) + x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda n, q, r: ZeroQ(-n + q + r)), CustomConstraint(lambda n, j, q: ZeroQ(j - S(2)*n + q)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m, q: RationalQ(m, p, q)), CustomConstraint(lambda p: Greater(p, S(0))), CustomConstraint(lambda n, p, m, q: Greater(m + p*q, -n + q + S(-1))), CustomConstraint(lambda n, p, m, q: Unequal(m + p*(S(2)*n - q) + S(1), S(0))), CustomConstraint(lambda n, p, m, q: Unequal(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1), S(0))))
    rule387 = ReplacementRule(pattern387, lambda c, q, B, r, n, a, p, b, x, m, A, j : p*(n - q)*Int(x**(m + q)*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(-1))*Simp(S(2)*A*a*c*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1)) - B*a*b*(m + p*q + S(1)) + x**(n - q)*(A*b*c*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1)) + S(2)*B*a*c*(m + p*q + S(2)*p*(n - q) + S(1)) - B*b**S(2)*(m + p*q + p*(n - q) + S(1))), x), x)/(c*(m + p*(S(2)*n - q) + S(1))*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1))) + x**(m + S(1))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p*(A*c*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1)) + B*b*p*(n - q) + B*c*x**(n - q)*(m + p*q + S(2)*p*(n - q) + S(1)))/(c*(m + p*(S(2)*n - q) + S(1))*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1))))
    rubi.add(rule387)

    pattern388 = Pattern(Integral(x_**WC('m', S(1))*(A_ + x_**WC('r', S(1))*WC('B', S(1)))*(x_**WC('j', S(1))*WC('c', S(1)) + x_**WC('q', S(1))*WC('a', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m, q: RationalQ(m, p, q)), CustomConstraint(lambda p: Greater(p, S(0))))
    rule388 = ReplacementRule(pattern388, lambda c, q, B, r, p, x, m, j, A, a : With(List(Set(n, q + r)), Condition(p*(n - q)*Int(x**(m + q)*(a*x**q + c*x**(S(2)*n - q))**(p + S(-1))*Simp(S(2)*A*a*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1)) + S(2)*B*a*x**(n - q)*(m + p*q + S(2)*p*(n - q) + S(1)), x), x)/((m + p*(S(2)*n - q) + S(1))*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1))) + x**(m + S(1))*(A*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1)) + B*x**(n - q)*(m + p*q + S(2)*p*(n - q) + S(1)))*(a*x**q + c*x**(S(2)*n - q))**p/((m + p*(S(2)*n - q) + S(1))*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1))), PositiveIntegerQ(n) & Unequal(m + S(1), n) & ZeroQ(j - S(2)*n + q) & Greater(m + p*q, -n + q) & Unequal(m + p*q + S(2)*p*(n - q) + S(1), S(0)) & Unequal(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1), S(0)))))
    rubi.add(rule388)

    pattern389 = Pattern(Integral(x_**WC('m', S(1))*(A_ + x_**WC('r', S(1))*WC('B', S(1)))*(x_**WC('j', S(1))*WC('c', S(1)) + x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda n, q, r: ZeroQ(-n + q + r)), CustomConstraint(lambda n, j, q: ZeroQ(j - S(2)*n + q)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m, q: RationalQ(m, p, q)), CustomConstraint(lambda p: Less(p, S(-1))), CustomConstraint(lambda n, p, m, q: Less(m + p*q, n - q + S(-1))))
    rule389 = ReplacementRule(pattern389, lambda c, q, B, r, n, a, p, b, x, m, A, j : -x**(m - q + S(1))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1))*(-S(2)*A*a*c + A*b**S(2) - B*a*b + c*x**(n - q)*(A*b - S(2)*B*a))/(a*(n - q)*(p + S(1))*(-S(4)*a*c + b**S(2))) + Int(x**(m - q)*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1))*Simp(-S(2)*A*a*c*(m + p*q + S(2)*(n - q)*(p + S(1)) + S(1)) + A*b**S(2)*(m + p*q + (n - q)*(p + S(1)) + S(1)) - B*a*b*(m + p*q + S(1)) + c*x**(n - q)*(A*b - S(2)*B*a)*(m + p*q + (n - q)*(S(2)*p + S(3)) + S(1)), x), x)/(a*(n - q)*(p + S(1))*(-S(4)*a*c + b**S(2))))
    rubi.add(rule389)

    pattern390 = Pattern(Integral(x_**WC('m', S(1))*(A_ + x_**WC('r', S(1))*WC('B', S(1)))*(x_**WC('j', S(1))*WC('c', S(1)) + x_**WC('q', S(1))*WC('a', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m, q: RationalQ(m, p, q)), CustomConstraint(lambda p: Less(p, S(-1))))
    rule390 = ReplacementRule(pattern390, lambda c, q, B, r, p, x, m, j, A, a : With(List(Set(n, q + r)), Condition(-x**(m - q + S(1))*(A*c + B*c*x**(n - q))*(a*x**q + c*x**(S(2)*n - q))**(p + S(1))/(S(2)*a*c*(n - q)*(p + S(1))) + Int(x**(m - q)*(a*x**q + c*x**(S(2)*n - q))**(p + S(1))*Simp(A*c*(m + p*q + S(2)*(n - q)*(p + S(1)) + S(1)) + B*c*x**(n - q)*(m + p*q + (n - q)*(S(2)*p + S(3)) + S(1)), x), x)/(S(2)*a*c*(n - q)*(p + S(1))), PositiveIntegerQ(n) & ZeroQ(j - S(2)*n + q) & Less(m + p*q, n - q + S(-1)))))
    rubi.add(rule390)

    pattern391 = Pattern(Integral(x_**WC('m', S(1))*(A_ + x_**WC('r', S(1))*WC('B', S(1)))*(x_**WC('j', S(1))*WC('c', S(1)) + x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda n, q, r: ZeroQ(-n + q + r)), CustomConstraint(lambda n, j, q: ZeroQ(j - S(2)*n + q)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m, q: RationalQ(m, p, q)), CustomConstraint(lambda p: Inequality(S(-1), LessEqual, p, Less, S(0))), CustomConstraint(lambda n, p, m, q: GreaterEqual(m + p*q, n - q + S(-1))), CustomConstraint(lambda n, p, m, q: Unequal(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1), S(0))))
    rule391 = ReplacementRule(pattern391, lambda c, q, B, r, n, a, p, b, x, m, A, j : B*x**(m - n + S(1))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1))/(c*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1))) - Int(x**(m - n + q)*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p*Simp(B*a*(m - n + p*q + q + S(1)) + x**(n - q)*(-A*c*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1)) + B*b*(m + p*q + p*(n - q) + S(1))), x), x)/(c*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1))))
    rubi.add(rule391)

    pattern392 = Pattern(Integral(x_**WC('m', S(1))*(A_ + x_**WC('r', S(1))*WC('B', S(1)))*(x_**WC('j', S(1))*WC('c', S(1)) + x_**WC('q', S(1))*WC('a', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m, q: RationalQ(m, p, q)), CustomConstraint(lambda p: Inequality(S(-1), LessEqual, p, Less, S(0))))
    rule392 = ReplacementRule(pattern392, lambda c, q, B, r, p, x, m, j, A, a : With(List(Set(n, q + r)), Condition(B*x**(m - n + S(1))*(a*x**q + c*x**(S(2)*n - q))**(p + S(1))/(c*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1))) - Int(x**(m - n + q)*(a*x**q + c*x**(S(2)*n - q))**p*Simp(-A*c*x**(n - q)*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1)) + B*a*(m - n + p*q + q + S(1)), x), x)/(c*(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1))), PositiveIntegerQ(n) & ZeroQ(j - S(2)*n + q) & GreaterEqual(m + p*q, n - q + S(-1)) & Unequal(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1), S(0)))))
    rubi.add(rule392)

    pattern393 = Pattern(Integral(x_**WC('m', S(1))*(A_ + x_**WC('r', S(1))*WC('B', S(1)))*(x_**WC('j', S(1))*WC('c', S(1)) + x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda n, q, r: ZeroQ(-n + q + r)), CustomConstraint(lambda n, j, q: ZeroQ(j - S(2)*n + q)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda a, b, c: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: PositiveIntegerQ(n)), CustomConstraint(lambda p, m, q: RationalQ(m, p, q)), CustomConstraint(lambda n, m, p, q: Inequality(S(-1), LessEqual, p, Less, S(0)) | Equal(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1), S(0))), CustomConstraint(lambda n, p, m, q: LessEqual(m + p*q, -n + q)), CustomConstraint(lambda p, m, q: Unequal(m + p*q + S(1), S(0))))
    rule393 = ReplacementRule(pattern393, lambda c, q, B, r, n, a, p, b, x, m, A, j : A*x**(m - q + S(1))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**(p + S(1))/(a*(m + p*q + S(1))) + Int(x**(m + n - q)*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p*Simp(-A*b*(m + p*q + (n - q)*(p + S(1)) + S(1)) - A*c*x**(n - q)*(m + p*q + S(2)*(n - q)*(p + S(1)) + S(1)) + B*a*(m + p*q + S(1)), x), x)/(a*(m + p*q + S(1))))
    rubi.add(rule393)

    pattern394 = Pattern(Integral(x_**WC('m', S(1))*(A_ + x_**WC('r', S(1))*WC('B', S(1)))*(x_**WC('j', S(1))*WC('c', S(1)) + x_**WC('q', S(1))*WC('a', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda p, m, q: RationalQ(m, p, q)))
    rule394 = ReplacementRule(pattern394, lambda c, q, B, r, p, x, m, j, A, a : With(List(Set(n, q + r)), Condition(A*x**(m - q + S(1))*(a*x**q + c*x**(S(2)*n - q))**(p + S(1))/(a*(m + p*q + S(1))) + Int(x**(m + n - q)*(a*x**q + c*x**(S(2)*n - q))**p*Simp(-A*c*x**(n - q)*(m + p*q + S(2)*(n - q)*(p + S(1)) + S(1)) + B*a*(m + p*q + S(1)), x), x)/(a*(m + p*q + S(1))), PositiveIntegerQ(n) & ZeroQ(j - S(2)*n + q) & Unequal(m + p*q + S(1), S(0)) & LessEqual(m + p*q, -n + q) & (Inequality(S(-1), LessEqual, p, Less, S(0)) | Equal(m + p*q + (n - q)*(S(2)*p + S(1)) + S(1), S(0))))))
    rubi.add(rule394)

    pattern395 = Pattern(Integral(x_**WC('m', S(1))*(A_ + x_**WC('j', S(1))*WC('B', S(1)))/sqrt(x_**WC('n', S(1))*WC('b', S(1)) + x_**WC('q', S(1))*WC('a', S(1)) + x_**WC('r', S(1))*WC('c', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, j, q: ZeroQ(j - n + q)), CustomConstraint(lambda n, q, r: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda n, q: PosQ(n - q)), CustomConstraint(lambda m: ZeroQ(m + S(-1)/2) | ZeroQ(m + S(1)/2)), CustomConstraint(lambda n: ZeroQ(n + S(-3))), CustomConstraint(lambda q: ZeroQ(q + S(-1))))
    rule395 = ReplacementRule(pattern395, lambda c, q, B, r, n, a, b, x, m, A, j : x**(q/S(2))*Int(x**(m - q/S(2))*(A + B*x**(n - q))/Sqrt(a + b*x**(n - q) + c*x**(S(2)*n - S(2)*q)), x)*Sqrt(a + b*x**(n - q) + c*x**(S(2)*n - S(2)*q))/Sqrt(a*x**q + b*x**n + c*x**(S(2)*n - q)))
    rubi.add(rule395)

    pattern396 = Pattern(Integral(x_**WC('m', S(1))*(A_ + x_**q_*WC('B', S(1)))*(x_**WC('j', S(1))*WC('a', S(1)) + x_**WC('k', S(1))*WC('b', S(1)) + x_**WC('n', S(1))*WC('c', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda j, x: FreeQ(j, x)), CustomConstraint(lambda k, x: FreeQ(k, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda j, q, k: ZeroQ(j - k + q)), CustomConstraint(lambda n, j, k: ZeroQ(j - S(2)*k + n)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda j, k: PosQ(-j + k)))
    rule396 = ReplacementRule(pattern396, lambda c, q, B, k, n, p, b, x, m, j, A, a : x**(-j*p)*(a + b*x**(-j + k) + c*x**(-S(2)*j + S(2)*k))**(-p)*(a*x**j + b*x**k + c*x**n)**p*Int(x**(j*p + m)*(A + B*x**(-j + k))*(a + b*x**(-j + k) + c*x**(-S(2)*j + S(2)*k))**p, x))
    rubi.add(rule396)

    pattern397 = Pattern(Integral(u_**WC('m', S(1))*(A_ + u_**WC('j', S(1))*WC('B', S(1)))*(u_**WC('n', S(1))*WC('b', S(1)) + u_**WC('q', S(1))*WC('a', S(1)) + u_**WC('r', S(1))*WC('c', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda n, j, q: ZeroQ(j - n + q)), CustomConstraint(lambda n, q, r: ZeroQ(-S(2)*n + q + r)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule397 = ReplacementRule(pattern397, lambda c, q, B, r, n, a, u, p, b, x, m, A, j : Subst(Int(x**m*(A + B*x**(n - q))*(a*x**q + b*x**n + c*x**(S(2)*n - q))**p, x), x, u)/Coefficient(u, x, S(1)))
    rubi.add(rule397)

    return rubi
