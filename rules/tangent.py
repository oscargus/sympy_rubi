
from sympy.external import import_module
matchpy = import_module("matchpy")
from sympy.utilities.decorator import doctest_depends_on

if matchpy:
    from matchpy import Pattern, ReplacementRule, CustomConstraint
    from sympy.integrals.rubi.utility_function import (Int, Set, With, Scan, MapAnd, FalseQ, ZeroQ, NegativeQ, NonzeroQ, FreeQ, NFreeQ, List, Log, PositiveQ, PositiveIntegerQ, NegativeIntegerQ, IntegerQ, IntegersQ, ComplexNumberQ, PureComplexNumberQ, RealNumericQ, PositiveOrZeroQ, NegativeOrZeroQ, FractionOrNegativeQ, NegQ, Equal, Unequal, IntPart, FracPart, RationalQ, ProductQ, SumQ, NonsumQ, Subst, First, Rest, SqrtNumberQ, SqrtNumberSumQ, LinearQ, Sqrt, ArcCosh, Coefficient, Denominator, Hypergeometric2F1, Not, Simplify, FractionalPart, IntegerPart, AppellF1, EllipticPi, EllipticE, EllipticF, ArcTan, ArcCot, ArcCoth, ArcTanh, ArcSin, ArcSinh, ArcCos, ArcCsc, ArcCsch, Sinh, Tanh, Cosh, Sech, Csch, Coth, LessEqual, Less, Greater, GreaterEqual, FractionQ, IntLinearcQ, Expand, IndependentQ, PowerQ, IntegerPowerQ, PositiveIntegerPowerQ, FractionalPowerQ, AtomQ, ExpQ, LogQ, Head, MemberQ, TrigQ, SinQ, CosQ, TanQ, CotQ, SecQ, CscQ, Sin, Cos, Tan, Cot, Sec, Csc, HyperbolicQ, SinhQ, CoshQ, TanhQ, CothQ, SechQ, CschQ, InverseTrigQ, SinCosQ, SinhCoshQ, LeafCount, Numerator, NumberQ, NumericQ, Length, ListQ, Im, Re, InverseHyperbolicQ, InverseFunctionQ, TrigHyperbolicFreeQ, InverseFunctionFreeQ, RealQ, EqQ, FractionalPowerFreeQ, ComplexFreeQ, PolynomialQ, FactorSquareFree, PowerOfLinearQ, Exponent, QuadraticQ, LinearPairQ, BinomialParts, TrinomialParts, PolyQ, EvenQ, OddQ, PerfectSquareQ, NiceSqrtAuxQ, NiceSqrtQ, Together, PosAux, PosQ, CoefficientList, ReplaceAll, ExpandLinearProduct, GCD, ContentFactor, NumericFactor, NonnumericFactors, MakeAssocList, GensymSubst, KernelSubst, ExpandExpression, Apart, SmartApart, MatchQ, PolynomialQuotientRemainder, FreeFactors, NonfreeFactors, RemoveContentAux, RemoveContent, FreeTerms, NonfreeTerms, ExpandAlgebraicFunction, CollectReciprocals, ExpandCleanup, AlgebraicFunctionQ, Coeff, LeadTerm, RemainingTerms, LeadFactor, RemainingFactors, LeadBase, LeadDegree, Numer, Denom, hypergeom, Expon, MergeMonomials, PolynomialDivide, BinomialQ, TrinomialQ, GeneralizedBinomialQ, GeneralizedTrinomialQ, FactorSquareFreeList, PerfectPowerTest, SquareFreeFactorTest, RationalFunctionQ, RationalFunctionFactors, NonrationalFunctionFactors, Reverse, RationalFunctionExponents, RationalFunctionExpand, ExpandIntegrand, SimplerQ, SimplerSqrtQ, SumSimplerQ, BinomialDegree, TrinomialDegree, CancelCommonFactors, SimplerIntegrandQ, GeneralizedBinomialDegree, GeneralizedBinomialParts, GeneralizedTrinomialDegree, GeneralizedTrinomialParts, MonomialQ, MonomialSumQ, MinimumMonomialExponent, MonomialExponent, LinearMatchQ, PowerOfLinearMatchQ, QuadraticMatchQ, CubicMatchQ, BinomialMatchQ, TrinomialMatchQ, GeneralizedBinomialMatchQ, GeneralizedTrinomialMatchQ, QuotientOfLinearsMatchQ, PolynomialTermQ, PolynomialTerms, NonpolynomialTerms, PseudoBinomialParts, NormalizePseudoBinomial, PseudoBinomialPairQ, PseudoBinomialQ, PolynomialGCD, PolyGCD, AlgebraicFunctionFactors, NonalgebraicFunctionFactors, QuotientOfLinearsP, QuotientOfLinearsParts, QuotientOfLinearsQ, Flatten, Sort, AbsurdNumberQ, AbsurdNumberFactors, NonabsurdNumberFactors, SumSimplerAuxQ, Prepend, Drop, CombineExponents, FactorInteger, FactorAbsurdNumber, SubstForInverseFunction, SubstForFractionalPower, SubstForFractionalPowerOfQuotientOfLinears, FractionalPowerOfQuotientOfLinears, SubstForFractionalPowerQ, SubstForFractionalPowerAuxQ, FractionalPowerOfSquareQ, FractionalPowerSubexpressionQ, Apply, FactorNumericGcd, MergeableFactorQ, MergeFactor, MergeFactors, TrigSimplifyQ, TrigSimplify, TrigSimplifyRecur, Order, FactorOrder, Smallest, OrderedQ, MinimumDegree, PositiveFactors, Sign, NonpositiveFactors, PolynomialInAuxQ, PolynomialInQ, ExponentInAux, ExponentIn, PolynomialInSubstAux, PolynomialInSubst, Distrib, DistributeDegree, FunctionOfPower, DivideDegreesOfFactors, MonomialFactor, FullSimplify, FunctionOfLinearSubst, FunctionOfLinear, NormalizeIntegrand, NormalizeIntegrandAux, NormalizeIntegrandFactor, NormalizeIntegrandFactorBase, NormalizeTogether, NormalizeLeadTermSigns, AbsorbMinusSign, NormalizeSumFactors, SignOfFactor, NormalizePowerOfLinear, SimplifyIntegrand, SimplifyTerm, TogetherSimplify, SmartSimplify, SubstForExpn, ExpandToSum, UnifySum, UnifyTerms, UnifyTerm, CalculusQ, FunctionOfInverseLinear, PureFunctionOfSinhQ, PureFunctionOfTanhQ, PureFunctionOfCoshQ, IntegerQuotientQ, OddQuotientQ, EvenQuotientQ, FindTrigFactor, FunctionOfSinhQ, FunctionOfCoshQ, OddHyperbolicPowerQ, FunctionOfTanhQ, FunctionOfTanhWeight, FunctionOfHyperbolicQ, SmartNumerator, SmartDenominator, SubstForAux, ActivateTrig, ExpandTrig, TrigExpand, SubstForTrig, SubstForHyperbolic, InertTrigFreeQ, LCM, SubstForFractionalPowerOfLinear, FractionalPowerOfLinear, InverseFunctionOfLinear, InertTrigQ, InertReciprocalQ, DeactivateTrig, FixInertTrigFunction, DeactivateTrigAux, PowerOfInertTrigSumQ, PiecewiseLinearQ, KnownTrigIntegrandQ, KnownSineIntegrandQ, KnownTangentIntegrandQ, KnownCotangentIntegrandQ, KnownSecantIntegrandQ, TryPureTanSubst, TryTanhSubst, TryPureTanhSubst, AbsurdNumberGCD, AbsurdNumberGCDList, ExpandTrigExpand, ExpandTrigReduce, ExpandTrigReduceAux, NormalizeTrig, TrigToExp, ExpandTrigToExp, TrigReduce, FunctionOfTrig, AlgebraicTrigFunctionQ, FunctionOfHyperbolic, FunctionOfQ, FunctionOfExpnQ, PureFunctionOfSinQ, PureFunctionOfCosQ, PureFunctionOfTanQ, PureFunctionOfCotQ, FunctionOfCosQ, FunctionOfSinQ, OddTrigPowerQ, FunctionOfTanQ, FunctionOfTanWeight, FunctionOfTrigQ, FunctionOfDensePolynomialsQ, FunctionOfLog, PowerVariableExpn, PowerVariableDegree, PowerVariableSubst, EulerIntegrandQ, FunctionOfSquareRootOfQuadratic, SquareRootOfQuadraticSubst, Divides, EasyDQ, ProductOfLinearPowersQ, Rt, NthRoot, AtomBaseQ, SumBaseQ, NegSumBaseQ, AllNegTermQ, SomeNegTermQ, TrigSquareQ, RtAux, TrigSquare, IntSum, IntTerm, Map2, ConstantFactor, SameQ, ReplacePart, CommonFactors, MostMainFactorPosition, FunctionOfExponentialQ, FunctionOfExponential, FunctionOfExponentialFunction, FunctionOfExponentialFunctionAux, FunctionOfExponentialTest, FunctionOfExponentialTestAux, stdev, rubi_test, If, IntQuadraticQ, IntBinomialQ, RectifyTangent, RectifyCotangent, Inequality, Condition, Simp, SimpHelp, SplitProduct, SplitSum, Complex, UnsameQ, _SimpFixFactor, SimpFixFactor, _FixSimplify, FixSimplify, _SimplifyAntiderivativeSum, SimplifyAntiderivativeSum, _SimplifyAntiderivative, SimplifyAntiderivative, _TrigSimplifyAux, TrigSimplifyAux)
    from sympy import Integral, S, sqrt
    from sympy.integrals.rubi.symbol import WC
    from sympy.core.symbol import symbols
    from sympy.functions import (log, sin, cos, tan, cot, csc, sec, sqrt, erf, exp, log)
    from sympy.functions.elementary.hyperbolic import (acosh, asinh, atanh, acoth, acsch, asech, cosh, sinh, tanh, coth, sech, csch)
    from sympy.functions.elementary.trigonometric import (atan, acsc, asin, acot, acos, asec)


    A_, B_, C_, a_, b_, c_, d_, e_, f_, g_, h_, i_, j_, k_, l_, m_, n_, p_, q_, r_, t_, u_, v_, s_, w_, x_, z_ = [WC(i) for i in 'ABCabcdefghijklmnpqrtuvswxz']
    a1_, a2_, b1_, b2_, c1_, c2_, d1_, d2_, n1_, n2_, e1_, e2_, f1_, f2_, n1_, n2_, n3_, Pq_, Pm_, Px_, Qm_, Qr_, jn_, mn_, non2_ = [WC(i) for i in ['a1', 'a2', 'b1', 'b2', 'c1', 'c2', 'd1', 'd2', 'n1', 'n2', 'e1', 'e2', 'f1', 'f2', 'n1', 'n2', 'n3',' Pq', 'Pm', ' Px', 'Qm', 'Qr', 'jn', 'mn', 'non2']]
    p, q, r, s, mn, gcd, P, Q = symbols('p q r s mn gcd P Q')

    _UseGamma = False

def tangent(rubi):

    pattern1 = Pattern(Integral((WC('a', S(1))*sin(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, m: ZeroQ(m + n + S(-1))))
    rule1 = ReplacementRule(pattern1, lambda x, f, e, m, b, n, a : -b*(a*Sin(e + f*x))**m*(b*Tan(e + f*x))**(n + S(-1))/(f*m))
    rubi.add(rule1)

    pattern2 = Pattern(Integral((WC('a', S(1))*cos(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, m: ZeroQ(m + n + S(-1))))
    rule2 = ReplacementRule(pattern2, lambda x, f, e, m, b, n, a : b*(a*Cos(e + f*x))**m*(b*Cot(e + f*x))**(n + S(-1))/(f*m))
    rubi.add(rule2)

    pattern3 = Pattern(Integral(sin(x_*WC('f', S(1)) + WC('e', S(0)))**WC('m', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, m: IntegersQ(m, n, m/S(2) + n/S(2) + S(-1)/2)))
    rule3 = ReplacementRule(pattern3, lambda x, f, e, m, n : -Subst(Int(x**(-n)*(-x**S(2) + S(1))**(m/S(2) + n/S(2) + S(-1)/2), x), x, Cos(e + f*x))/f)
    rubi.add(rule3)

    pattern4 = Pattern(Integral(cos(x_*WC('f', S(1)) + WC('e', S(0)))**WC('m', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, m: IntegersQ(m, n, m/S(2) + n/S(2) + S(-1)/2)))
    rule4 = ReplacementRule(pattern4, lambda x, f, e, m, n : Subst(Int(x**(-n)*(-x**S(2) + S(1))**(m/S(2) + n/S(2) + S(-1)/2), x), x, Sin(e + f*x))/f)
    rubi.add(rule4)

    pattern5 = Pattern(Integral((WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_*sin(x_*WC('f', S(1)) + WC('e', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m: IntegerQ(m)), CustomConstraint(lambda n: ~(IntegerQ(n))))
    rule5 = ReplacementRule(pattern5, lambda x, f, e, m, b, n : b**(-m)*Int((b*Tan(e + f*x))**(m + n)*Sec(e + f*x)**(-m), x))
    rubi.add(rule5)

    pattern6 = Pattern(Integral((WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_*cos(x_*WC('f', S(1)) + WC('e', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m: IntegerQ(m)), CustomConstraint(lambda n: ~(IntegerQ(n))))
    rule6 = ReplacementRule(pattern6, lambda x, f, e, m, b, n : b**(-m)*Int((b*Cot(e + f*x))**(m + n)*Csc(e + f*x)**(-m), x))
    rubi.add(rule6)

    pattern7 = Pattern(Integral((WC('a', S(1))*sin(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda n: Greater(n, S(1))), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda m: Unequal(m, S(-2))), CustomConstraint(lambda n, m: IntegersQ(S(2)*m, S(2)*n)))
    rule7 = ReplacementRule(pattern7, lambda x, f, e, m, b, n, a : -b**S(2)*(m + S(2))*Int((a*Sin(e + f*x))**(m + S(2))*(b*Tan(e + f*x))**(n + S(-2)), x)/(a**S(2)*(n + S(-1))) + b*(a*Sin(e + f*x))**(m + S(2))*(b*Tan(e + f*x))**(n + S(-1))/(a**S(2)*f*(n + S(-1))))
    rubi.add(rule7)

    pattern8 = Pattern(Integral((WC('a', S(1))*cos(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda n: Greater(n, S(1))), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda m: Unequal(m, S(-2))), CustomConstraint(lambda n, m: IntegersQ(S(2)*m, S(2)*n)))
    rule8 = ReplacementRule(pattern8, lambda x, f, e, m, b, n, a : -b**S(2)*(m + S(2))*Int((a*Cos(e + f*x))**(m + S(2))*(b*Cot(e + f*x))**(n + S(-2)), x)/(a**S(2)*(n + S(-1))) - b*(a*Cos(e + f*x))**(m + S(2))*(b*Cot(e + f*x))**(n + S(-1))/(a**S(2)*f*(n + S(-1))))
    rubi.add(rule8)

    pattern9 = Pattern(Integral((WC('a', S(1))*sin(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Greater(n, S(1))), CustomConstraint(lambda n, m: IntegersQ(S(2)*m, S(2)*n)), CustomConstraint(lambda m: ~(RationalQ(m) & Greater(m, S(1)) & ~(IntegerQ(m/S(2) + S(-1)/2)))))
    rule9 = ReplacementRule(pattern9, lambda x, f, e, m, b, n, a : -b**S(2)*(m + n + S(-1))*Int((a*Sin(e + f*x))**m*(b*Tan(e + f*x))**(n + S(-2)), x)/(n + S(-1)) + b*(a*Sin(e + f*x))**m*(b*Tan(e + f*x))**(n + S(-1))/(f*(n + S(-1))))
    rubi.add(rule9)

    pattern10 = Pattern(Integral((WC('a', S(1))*cos(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Greater(n, S(1))), CustomConstraint(lambda n, m: IntegersQ(S(2)*m, S(2)*n)), CustomConstraint(lambda m: ~(RationalQ(m) & Greater(m, S(1)) & ~(IntegerQ(m/S(2) + S(-1)/2)))))
    rule10 = ReplacementRule(pattern10, lambda x, f, e, m, b, n, a : -b**S(2)*(m + n + S(-1))*Int((a*Cos(e + f*x))**m*(b*Cot(e + f*x))**(n + S(-2)), x)/(n + S(-1)) - b*(a*Cos(e + f*x))**m*(b*Cot(e + f*x))**(n + S(-1))/(f*(n + S(-1))))
    rubi.add(rule10)

    pattern11 = Pattern(Integral((WC('a', S(1))*sin(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda n: Less(n, S(-1))), CustomConstraint(lambda m: Greater(m, S(1))), CustomConstraint(lambda n, m: IntegersQ(S(2)*m, S(2)*n)))
    rule11 = ReplacementRule(pattern11, lambda x, f, e, m, b, n, a : -a**S(2)*(n + S(1))*Int((a*Sin(e + f*x))**(m + S(-2))*(b*Tan(e + f*x))**(n + S(2)), x)/(b**S(2)*m) + (a*Sin(e + f*x))**m*(b*Tan(e + f*x))**(n + S(1))/(b*f*m))
    rubi.add(rule11)

    pattern12 = Pattern(Integral((WC('a', S(1))*cos(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda n: Less(n, S(-1))), CustomConstraint(lambda m: Greater(m, S(1))), CustomConstraint(lambda n, m: IntegersQ(S(2)*m, S(2)*n)))
    rule12 = ReplacementRule(pattern12, lambda x, f, e, m, b, n, a : -a**S(2)*(n + S(1))*Int((a*Cos(e + f*x))**(m + S(-2))*(b*Cot(e + f*x))**(n + S(2)), x)/(b**S(2)*m) - (a*Cos(e + f*x))**m*(b*Cot(e + f*x))**(n + S(1))/(b*f*m))
    rubi.add(rule12)

    pattern13 = Pattern(Integral((WC('a', S(1))*sin(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, S(-1))), CustomConstraint(lambda n, m: NonzeroQ(m + n + S(1))), CustomConstraint(lambda n, m: IntegersQ(S(2)*m, S(2)*n)))
    rule13 = ReplacementRule(pattern13, lambda x, f, e, m, b, n, a : (a*Sin(e + f*x))**m*(b*Tan(e + f*x))**(n + S(1))/(b*f*(m + n + S(1))) - (n + S(1))*Int((a*Sin(e + f*x))**m*(b*Tan(e + f*x))**(n + S(2)), x)/(b**S(2)*(m + n + S(1))))
    rubi.add(rule13)

    pattern14 = Pattern(Integral((WC('a', S(1))*cos(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, S(-1))), CustomConstraint(lambda n, m: NonzeroQ(m + n + S(1))), CustomConstraint(lambda n, m: IntegersQ(S(2)*m, S(2)*n)))
    rule14 = ReplacementRule(pattern14, lambda x, f, e, m, b, n, a : -(a*Cos(e + f*x))**m*(b*Cot(e + f*x))**(n + S(1))/(b*f*(m + n + S(1))) - (n + S(1))*Int((a*Cos(e + f*x))**m*(b*Cot(e + f*x))**(n + S(2)), x)/(b**S(2)*(m + n + S(1))))
    rubi.add(rule14)

    pattern15 = Pattern(Integral((WC('a', S(1))*sin(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: GreaterEqual(m, S(1))), CustomConstraint(lambda n, m: IntegersQ(S(2)*m, S(2)*n)))
    rule15 = ReplacementRule(pattern15, lambda x, f, e, m, b, n, a : a**S(2)*(m + n + S(-1))*Int((a*Sin(e + f*x))**(m + S(-2))*(b*Tan(e + f*x))**n, x)/m - b*(a*Sin(e + f*x))**m*(b*Tan(e + f*x))**(n + S(-1))/(f*m))
    rubi.add(rule15)

    pattern16 = Pattern(Integral((WC('a', S(1))*cos(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: GreaterEqual(m, S(1))), CustomConstraint(lambda n, m: IntegersQ(S(2)*m, S(2)*n)))
    rule16 = ReplacementRule(pattern16, lambda x, f, e, m, b, n, a : a**S(2)*(m + n + S(-1))*Int((a*Cos(e + f*x))**(m + S(-2))*(b*Cot(e + f*x))**n, x)/m + b*(a*Cos(e + f*x))**m*(b*Cot(e + f*x))**(n + S(-1))/(f*m))
    rubi.add(rule16)

    pattern17 = Pattern(Integral((WC('a', S(1))*sin(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: LessEqual(m, S(-1))), CustomConstraint(lambda n, m: NonzeroQ(m + n + S(1))), CustomConstraint(lambda n, m: IntegersQ(S(2)*m, S(2)*n)))
    rule17 = ReplacementRule(pattern17, lambda x, f, e, m, b, n, a : b*(a*Sin(e + f*x))**(m + S(2))*(b*Tan(e + f*x))**(n + S(-1))/(a**S(2)*f*(m + n + S(1))) + (m + S(2))*Int((a*Sin(e + f*x))**(m + S(2))*(b*Tan(e + f*x))**n, x)/(a**S(2)*(m + n + S(1))))
    rubi.add(rule17)

    pattern18 = Pattern(Integral((WC('a', S(1))*cos(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: LessEqual(m, S(-1))), CustomConstraint(lambda n, m: NonzeroQ(m + n + S(1))), CustomConstraint(lambda n, m: IntegersQ(S(2)*m, S(2)*n)))
    rule18 = ReplacementRule(pattern18, lambda x, f, e, m, b, n, a : -b*(a*Cos(e + f*x))**(m + S(2))*(b*Cot(e + f*x))**(n + S(-1))/(a**S(2)*f*(m + n + S(1))) + (m + S(2))*Int((a*Cos(e + f*x))**(m + S(2))*(b*Cot(e + f*x))**n, x)/(a**S(2)*(m + n + S(1))))
    rubi.add(rule18)

    pattern19 = Pattern(Integral((WC('a', S(1))*sin(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n: IntegerQ(n/S(2) + S(1)/2)))
    rule19 = ReplacementRule(pattern19, lambda x, f, e, m, n, a : Subst(Int(x**(m + n)*(a**S(2) - x**S(2))**(-n/S(2) + S(-1)/2), x), x, a*Sin(e + f*x))/f)
    rubi.add(rule19)

    pattern20 = Pattern(Integral((WC('a', S(1))*cos(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n: IntegerQ(n/S(2) + S(1)/2)))
    rule20 = ReplacementRule(pattern20, lambda x, f, e, m, n, a : -Subst(Int(x**(m + n)*(a**S(2) - x**S(2))**(-n/S(2) + S(-1)/2), x), x, a*Cos(e + f*x))/f)
    rubi.add(rule20)

    pattern21 = Pattern(Integral((WC('a', S(1))*sin(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, m: ~(IntegersQ(S(2)*m, S(2)*n))))
    rule21 = ReplacementRule(pattern21, lambda x, f, e, m, b, n, a : a**(-S(2)*IntPart(n/S(2) + S(1)/2) + S(1))*b**(S(2)*IntPart(n/S(2) + S(1)/2) + S(-1))*(a*Sin(e + f*x))**(-S(2)*FracPart(n/S(2) + S(1)/2))*(b*Tan(e + f*x))**(S(2)*FracPart(n/S(2) + S(1)/2))*(Cos(e + f*x)**S(2))**FracPart(n/S(2) + S(1)/2)*Subst(Int((a*x)**(m + n)*(-x**S(2) + S(1))**(-n/S(2) + S(-1)/2), x), x, Sin(e + f*x))/f)
    rubi.add(rule21)

    pattern22 = Pattern(Integral((WC('a', S(1))*cos(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, m: ~(IntegersQ(S(2)*m, S(2)*n))))
    rule22 = ReplacementRule(pattern22, lambda x, f, e, m, b, n, a : -a**(-S(2)*IntPart(n/S(2) + S(1)/2) + S(1))*b**(S(2)*IntPart(n/S(2) + S(1)/2) + S(-1))*(a*Cos(e + f*x))**(-S(2)*FracPart(n/S(2) + S(1)/2))*(b*Cot(e + f*x))**(S(2)*FracPart(n/S(2) + S(1)/2))*(Sin(e + f*x)**S(2))**FracPart(n/S(2) + S(1)/2)*Subst(Int((a*x)**(m + n)*(-x**S(2) + S(1))**(-n/S(2) + S(-1)/2), x), x, Cos(e + f*x))/f)
    rubi.add(rule22)

    pattern23 = Pattern(Integral((WC('a', S(1))*cos(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m: ~(IntegerQ(m))), CustomConstraint(lambda n: ~(IntegerQ(n))))
    rule23 = ReplacementRule(pattern23, lambda x, f, e, m, b, n, a : (Sec(e + f*x)/a)**FracPart(m)*(a*Cos(e + f*x))**FracPart(m)*Int((Sec(e + f*x)/a)**(-m)*(b*Tan(e + f*x))**n, x))
    rubi.add(rule23)

    pattern24 = Pattern(Integral((WC('a', S(1))*sin(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m: ~(IntegerQ(m))), CustomConstraint(lambda n: ~(IntegerQ(n))))
    rule24 = ReplacementRule(pattern24, lambda x, f, e, b, m, a, n : (Csc(e + f*x)/a)**FracPart(m)*(a*Sin(e + f*x))**FracPart(m)*Int((Csc(e + f*x)/a)**(-m)*(b*Cot(e + f*x))**n, x))
    rubi.add(rule24)

    pattern25 = Pattern(Integral((WC('a', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m: ~(IntegerQ(m))), CustomConstraint(lambda n: ~(IntegerQ(n))))
    rule25 = ReplacementRule(pattern25, lambda x, f, e, m, b, n, a : (a*Cot(e + f*x))**m*(b*Tan(e + f*x))**m*Int((b*Tan(e + f*x))**(-m + n), x))
    rubi.add(rule25)

    pattern26 = Pattern(Integral((WC('a', S(1))*sec(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, m: ZeroQ(m + n + S(1))))
    rule26 = ReplacementRule(pattern26, lambda x, f, e, m, b, n, a : -(a*Sec(e + f*x))**m*(b*Tan(e + f*x))**(n + S(1))/(b*f*m))
    rubi.add(rule26)

    pattern27 = Pattern(Integral((WC('a', S(1))*csc(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, m: ZeroQ(m + n + S(1))))
    rule27 = ReplacementRule(pattern27, lambda x, f, e, m, b, n, a : (a*Csc(e + f*x))**m*(b*Cot(e + f*x))**(n + S(1))/(b*f*m))
    rubi.add(rule27)

    pattern28 = Pattern(Integral((WC('a', S(1))*sec(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n: IntegerQ(n/S(2) + S(-1)/2)), CustomConstraint(lambda n, m: ~(IntegerQ(m/S(2)) & Less(S(0), m, n + S(1)))))
    rule28 = ReplacementRule(pattern28, lambda x, f, e, m, b, n, a : a*Subst(Int((a*x)**(m + S(-1))*(x**S(2) + S(-1))**(n/S(2) + S(-1)/2), x), x, Sec(e + f*x))/f)
    rubi.add(rule28)

    pattern29 = Pattern(Integral((WC('a', S(1))*csc(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n: IntegerQ(n/S(2) + S(-1)/2)), CustomConstraint(lambda n, m: ~(IntegerQ(m/S(2)) & Less(S(0), m, n + S(1)))))
    rule29 = ReplacementRule(pattern29, lambda x, f, e, m, b, n, a : -a*Subst(Int((a*x)**(m + S(-1))*(x**S(2) + S(-1))**(n/S(2) + S(-1)/2), x), x, Csc(e + f*x))/f)
    rubi.add(rule29)

    pattern30 = Pattern(Integral((WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1))*sec(x_*WC('f', S(1)) + WC('e', S(0)))**m_, x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m: IntegerQ(m/S(2))), CustomConstraint(lambda n, m: ~(IntegerQ(n/S(2) + S(-1)/2) & Less(S(0), n, m + S(-1)))))
    rule30 = ReplacementRule(pattern30, lambda x, f, e, m, b, n : Subst(Int((b*x)**n*(x**S(2) + S(1))**(m/S(2) + S(-1)), x), x, Tan(e + f*x))/f)
    rubi.add(rule30)

    pattern31 = Pattern(Integral((WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1))*csc(x_*WC('f', S(1)) + WC('e', S(0)))**m_, x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m: IntegerQ(m/S(2))), CustomConstraint(lambda n, m: ~(IntegerQ(n/S(2) + S(-1)/2) & Less(S(0), n, m + S(-1)))))
    rule31 = ReplacementRule(pattern31, lambda x, f, e, m, b, n : -Subst(Int((b*x)**n*(x**S(2) + S(1))**(m/S(2) + S(-1)), x), x, Cot(e + f*x))/f)
    rubi.add(rule31)

    pattern32 = Pattern(Integral((WC('a', S(1))*sec(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda n: Less(n, S(-1))), CustomConstraint(lambda n, m: Greater(m, S(1)) | (Equal(m, S(1)) & Equal(n, S(-3)/2))), CustomConstraint(lambda n, m: IntegersQ(S(2)*m, S(2)*n)))
    rule32 = ReplacementRule(pattern32, lambda x, f, e, m, b, n, a : a**S(2)*(a*Sec(e + f*x))**(m + S(-2))*(b*Tan(e + f*x))**(n + S(1))/(b*f*(n + S(1))) - a**S(2)*(m + S(-2))*Int((a*Sec(e + f*x))**(m + S(-2))*(b*Tan(e + f*x))**(n + S(2)), x)/(b**S(2)*(n + S(1))))
    rubi.add(rule32)

    pattern33 = Pattern(Integral((WC('a', S(1))*csc(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda n: Less(n, S(-1))), CustomConstraint(lambda n, m: Greater(m, S(1)) | (Equal(m, S(1)) & Equal(n, S(-3)/2))), CustomConstraint(lambda n, m: IntegersQ(S(2)*m, S(2)*n)))
    rule33 = ReplacementRule(pattern33, lambda x, f, e, m, b, n, a : -a**S(2)*(a*Csc(e + f*x))**(m + S(-2))*(b*Cot(e + f*x))**(n + S(1))/(b*f*(n + S(1))) - a**S(2)*(m + S(-2))*Int((a*Csc(e + f*x))**(m + S(-2))*(b*Cot(e + f*x))**(n + S(2)), x)/(b**S(2)*(n + S(1))))
    rubi.add(rule33)

    pattern34 = Pattern(Integral((WC('a', S(1))*sec(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, S(-1))), CustomConstraint(lambda n, m: IntegersQ(S(2)*m, S(2)*n)))
    rule34 = ReplacementRule(pattern34, lambda x, f, e, m, b, n, a : (a*Sec(e + f*x))**m*(b*Tan(e + f*x))**(n + S(1))/(b*f*(n + S(1))) - (m + n + S(1))*Int((a*Sec(e + f*x))**m*(b*Tan(e + f*x))**(n + S(2)), x)/(b**S(2)*(n + S(1))))
    rubi.add(rule34)

    pattern35 = Pattern(Integral((WC('a', S(1))*csc(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, S(-1))), CustomConstraint(lambda n, m: IntegersQ(S(2)*m, S(2)*n)))
    rule35 = ReplacementRule(pattern35, lambda x, f, e, m, b, n, a : -(a*Csc(e + f*x))**m*(b*Cot(e + f*x))**(n + S(1))/(b*f*(n + S(1))) - (m + n + S(1))*Int((a*Csc(e + f*x))**m*(b*Cot(e + f*x))**(n + S(2)), x)/(b**S(2)*(n + S(1))))
    rubi.add(rule35)

    pattern36 = Pattern(Integral((WC('a', S(1))*sec(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda n: Greater(n, S(1))), CustomConstraint(lambda n, m: Less(m, S(-1)) | (Equal(m, S(-1)) & Equal(n, S(3)/2))), CustomConstraint(lambda n, m: IntegersQ(S(2)*m, S(2)*n)))
    rule36 = ReplacementRule(pattern36, lambda x, f, e, m, b, n, a : b*(a*Sec(e + f*x))**m*(b*Tan(e + f*x))**(n + S(-1))/(f*m) - b**S(2)*(n + S(-1))*Int((a*Sec(e + f*x))**(m + S(2))*(b*Tan(e + f*x))**(n + S(-2)), x)/(a**S(2)*m))
    rubi.add(rule36)

    pattern37 = Pattern(Integral((WC('a', S(1))*csc(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda n: Greater(n, S(1))), CustomConstraint(lambda n, m: Less(m, S(-1)) | (Equal(m, S(-1)) & Equal(n, S(3)/2))), CustomConstraint(lambda n, m: IntegersQ(S(2)*m, S(2)*n)))
    rule37 = ReplacementRule(pattern37, lambda x, f, e, m, b, n, a : -b*(a*Csc(e + f*x))**m*(b*Cot(e + f*x))**(n + S(-1))/(f*m) - b**S(2)*(n + S(-1))*Int((a*Csc(e + f*x))**(m + S(2))*(b*Cot(e + f*x))**(n + S(-2)), x)/(a**S(2)*m))
    rubi.add(rule37)

    pattern38 = Pattern(Integral((WC('a', S(1))*sec(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Greater(n, S(1))), CustomConstraint(lambda n, m: NonzeroQ(m + n + S(-1))), CustomConstraint(lambda n, m: IntegersQ(S(2)*m, S(2)*n)))
    rule38 = ReplacementRule(pattern38, lambda x, f, e, m, b, n, a : -b**S(2)*(n + S(-1))*Int((a*Sec(e + f*x))**m*(b*Tan(e + f*x))**(n + S(-2)), x)/(m + n + S(-1)) + b*(a*Sec(e + f*x))**m*(b*Tan(e + f*x))**(n + S(-1))/(f*(m + n + S(-1))))
    rubi.add(rule38)

    pattern39 = Pattern(Integral((WC('a', S(1))*csc(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Greater(n, S(1))), CustomConstraint(lambda n, m: NonzeroQ(m + n + S(-1))), CustomConstraint(lambda n, m: IntegersQ(S(2)*m, S(2)*n)))
    rule39 = ReplacementRule(pattern39, lambda x, f, e, m, b, n, a : -b**S(2)*(n + S(-1))*Int((a*Csc(e + f*x))**m*(b*Cot(e + f*x))**(n + S(-2)), x)/(m + n + S(-1)) - b*(a*Csc(e + f*x))**m*(b*Cot(e + f*x))**(n + S(-1))/(f*(m + n + S(-1))))
    rubi.add(rule39)

    pattern40 = Pattern(Integral((WC('a', S(1))*sec(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda n, m: Less(m, S(-1)) | (RationalQ(n) & Equal(m, S(-1)) & Equal(n, S(-1)/2))), CustomConstraint(lambda n, m: IntegersQ(S(2)*m, S(2)*n)))
    rule40 = ReplacementRule(pattern40, lambda x, f, e, m, b, n, a : -(a*Sec(e + f*x))**m*(b*Tan(e + f*x))**(n + S(1))/(b*f*m) + (m + n + S(1))*Int((a*Sec(e + f*x))**(m + S(2))*(b*Tan(e + f*x))**n, x)/(a**S(2)*m))
    rubi.add(rule40)

    pattern41 = Pattern(Integral((WC('a', S(1))*csc(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda n, m: Less(m, S(-1)) | (RationalQ(n) & Equal(m, S(-1)) & Equal(n, S(-1)/2))), CustomConstraint(lambda n, m: IntegersQ(S(2)*m, S(2)*n)))
    rule41 = ReplacementRule(pattern41, lambda x, f, e, m, b, n, a : (a*Csc(e + f*x))**m*(b*Cot(e + f*x))**(n + S(1))/(b*f*m) + (m + n + S(1))*Int((a*Csc(e + f*x))**(m + S(2))*(b*Cot(e + f*x))**n, x)/(a**S(2)*m))
    rubi.add(rule41)

    pattern42 = Pattern(Integral((WC('a', S(1))*sec(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda n, m: Greater(m, S(1)) | (RationalQ(n) & Equal(m, S(1)) & Equal(n, S(1)/2))), CustomConstraint(lambda n, m: NonzeroQ(m + n + S(-1))), CustomConstraint(lambda n, m: IntegersQ(S(2)*m, S(2)*n)))
    rule42 = ReplacementRule(pattern42, lambda x, f, e, m, b, n, a : a**S(2)*(m + S(-2))*Int((a*Sec(e + f*x))**(m + S(-2))*(b*Tan(e + f*x))**n, x)/(m + n + S(-1)) + a**S(2)*(a*Sec(e + f*x))**(m + S(-2))*(b*Tan(e + f*x))**(n + S(1))/(b*f*(m + n + S(-1))))
    rubi.add(rule42)

    pattern43 = Pattern(Integral((WC('a', S(1))*csc(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda n, m: Greater(m, S(1)) | (RationalQ(n) & Equal(m, S(1)) & Equal(n, S(1)/2))), CustomConstraint(lambda n, m: NonzeroQ(m + n + S(-1))), CustomConstraint(lambda n, m: IntegersQ(S(2)*m, S(2)*n)))
    rule43 = ReplacementRule(pattern43, lambda x, f, e, m, b, n, a : a**S(2)*(m + S(-2))*Int((a*Csc(e + f*x))**(m + S(-2))*(b*Cot(e + f*x))**n, x)/(m + n + S(-1)) - a**S(2)*(a*Csc(e + f*x))**(m + S(-2))*(b*Cot(e + f*x))**(n + S(1))/(b*f*(m + n + S(-1))))
    rubi.add(rule43)

    pattern44 = Pattern(Integral(sec(x_*WC('f', S(1)) + WC('e', S(0)))/sqrt(WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)))
    rule44 = ReplacementRule(pattern44, lambda x, f, e, b : Int(S(1)/(Sqrt(Cos(e + f*x))*Sqrt(Sin(e + f*x))), x)*Sqrt(Sin(e + f*x))/(Sqrt(b*Tan(e + f*x))*Sqrt(Cos(e + f*x))))
    rubi.add(rule44)

    pattern45 = Pattern(Integral(csc(x_*WC('f', S(1)) + WC('e', S(0)))/sqrt(WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)))
    rule45 = ReplacementRule(pattern45, lambda x, f, e, b : Int(S(1)/(Sqrt(Cos(e + f*x))*Sqrt(Sin(e + f*x))), x)*Sqrt(Cos(e + f*x))/(Sqrt(b*Cot(e + f*x))*Sqrt(Sin(e + f*x))))
    rubi.add(rule45)

    pattern46 = Pattern(Integral(sqrt(WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))/sec(x_*WC('f', S(1)) + WC('e', S(0))), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)))
    rule46 = ReplacementRule(pattern46, lambda x, f, e, b : Int(Sqrt(Cos(e + f*x))*Sqrt(Sin(e + f*x)), x)*Sqrt(b*Tan(e + f*x))*Sqrt(Cos(e + f*x))/Sqrt(Sin(e + f*x)))
    rubi.add(rule46)

    pattern47 = Pattern(Integral(sqrt(WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))/csc(x_*WC('f', S(1)) + WC('e', S(0))), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)))
    rule47 = ReplacementRule(pattern47, lambda x, f, e, b : Int(Sqrt(Cos(e + f*x))*Sqrt(Sin(e + f*x)), x)*Sqrt(b*Cot(e + f*x))*Sqrt(Sin(e + f*x))/Sqrt(Cos(e + f*x)))
    rubi.add(rule47)

    pattern48 = Pattern(Integral((WC('a', S(1))*sec(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n: IntegerQ(n + S(1)/2)), CustomConstraint(lambda m: IntegerQ(m + S(1)/2)))
    rule48 = ReplacementRule(pattern48, lambda x, f, e, m, b, n, a : a**(m + n)*(a*Sec(e + f*x))**(-n)*(b*Sin(e + f*x))**(-n)*(b*Tan(e + f*x))**n*Int((b*Sin(e + f*x))**n*Cos(e + f*x)**(-m - n), x))
    rubi.add(rule48)

    pattern49 = Pattern(Integral((WC('a', S(1))*csc(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n: IntegerQ(n + S(1)/2)), CustomConstraint(lambda m: IntegerQ(m + S(1)/2)))
    rule49 = ReplacementRule(pattern49, lambda x, f, e, m, b, n, a : a**(m + n)*(a*Csc(e + f*x))**(-n)*(b*Cos(e + f*x))**(-n)*(b*Cot(e + f*x))**n*Int((b*Cos(e + f*x))**n*Sin(e + f*x)**(-m - n), x))
    rubi.add(rule49)

    pattern50 = Pattern(Integral((WC('a', S(1))*sec(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n: ~(IntegerQ(n/S(2) + S(-1)/2))), CustomConstraint(lambda m: ~(IntegerQ(m/S(2)))))
    rule50 = ReplacementRule(pattern50, lambda x, f, e, m, b, n, a : (a*Sec(e + f*x))**m*(b*Tan(e + f*x))**(n + S(1))*(Cos(e + f*x)**S(2))**(m/S(2) + n/S(2) + S(1)/2)*Hypergeometric2F1(n/S(2) + S(1)/2, m/S(2) + n/S(2) + S(1)/2, n/S(2) + S(3)/2, Sin(e + f*x)**S(2))/(b*f*(n + S(1))))
    rubi.add(rule50)

    pattern51 = Pattern(Integral((WC('a', S(1))*csc(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n: ~(IntegerQ(n/S(2) + S(-1)/2))), CustomConstraint(lambda m: ~(IntegerQ(m/S(2)))))
    rule51 = ReplacementRule(pattern51, lambda x, f, e, m, b, n, a : -(a*Csc(e + f*x))**m*(b*Cot(e + f*x))**(n + S(1))*(Sin(e + f*x)**S(2))**(m/S(2) + n/S(2) + S(1)/2)*Hypergeometric2F1(n/S(2) + S(1)/2, m/S(2) + n/S(2) + S(1)/2, n/S(2) + S(3)/2, Cos(e + f*x)**S(2))/(b*f*(n + S(1))))
    rubi.add(rule51)

    pattern52 = Pattern(Integral((WC('a', S(1))*csc(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m: ~(IntegerQ(m))), CustomConstraint(lambda n: ~(IntegerQ(n))))
    rule52 = ReplacementRule(pattern52, lambda x, f, e, m, b, n, a : (Sin(e + f*x)/a)**FracPart(m)*(a*Csc(e + f*x))**FracPart(m)*Int((Sin(e + f*x)/a)**(-m)*(b*Tan(e + f*x))**n, x))
    rubi.add(rule52)

    pattern53 = Pattern(Integral((WC('a', S(1))*sec(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m: ~(IntegerQ(m))), CustomConstraint(lambda n: ~(IntegerQ(n))))
    rule53 = ReplacementRule(pattern53, lambda x, f, e, b, m, a, n : (Cos(e + f*x)/a)**FracPart(m)*(a*Sec(e + f*x))**FracPart(m)*Int((Cos(e + f*x)/a)**(-m)*(b*Cot(e + f*x))**n, x))
    rubi.add(rule53)

    pattern54 = Pattern(Integral(((WC('d', S(1))*sec(x_*WC('f', S(1)) + WC('e', S(0))))**p_*WC('a', S(1)))**WC('m', S(1))*(WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Greater(n, S(1))), CustomConstraint(lambda n, p, m: NonzeroQ(m*p + n + S(-1))), CustomConstraint(lambda n, p, m: IntegersQ(S(2)*m*p, S(2)*n)))
    rule54 = ReplacementRule(pattern54, lambda d, x, f, e, b, m, n, p, a : -b**S(2)*(n + S(-1))*Int((a*(d*Sec(e + f*x))**p)**m*(b*Tan(e + f*x))**(n + S(-2)), x)/(m*p + n + S(-1)) + b*(a*(d*Sec(e + f*x))**p)**m*(b*Tan(e + f*x))**(n + S(-1))/(f*(m*p + n + S(-1))))
    rubi.add(rule54)

    pattern55 = Pattern(Integral(((WC('d', S(1))*csc(x_*WC('f', S(1)) + WC('e', S(0))))**p_*WC('a', S(1)))**WC('m', S(1))*(WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Greater(n, S(1))), CustomConstraint(lambda n, p, m: NonzeroQ(m*p + n + S(-1))), CustomConstraint(lambda n, p, m: IntegersQ(S(2)*m*p, S(2)*n)))
    rule55 = ReplacementRule(pattern55, lambda d, x, f, e, b, m, a, n, p : -b**S(2)*(n + S(-1))*Int((a*(d*Csc(e + f*x))**p)**m*(b*Cot(e + f*x))**(n + S(-2)), x)/(m*p + n + S(-1)) - b*(a*(d*Csc(e + f*x))**p)**m*(b*Cot(e + f*x))**(n + S(-1))/(f*(m*p + n + S(-1))))
    rubi.add(rule55)

    pattern56 = Pattern(Integral(((WC('d', S(1))*sec(x_*WC('f', S(1)) + WC('e', S(0))))**p_*WC('a', S(1)))**WC('m', S(1))*(WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, S(-1))), CustomConstraint(lambda n, p, m: NonzeroQ(m*p + n + S(1))), CustomConstraint(lambda n, p, m: IntegersQ(S(2)*m*p, S(2)*n)))
    rule56 = ReplacementRule(pattern56, lambda d, x, f, e, b, m, n, p, a : (a*(d*Sec(e + f*x))**p)**m*(b*Tan(e + f*x))**(n + S(1))/(b*f*(n + S(1))) - (m*p + n + S(1))*Int((a*(d*Sec(e + f*x))**p)**m*(b*Tan(e + f*x))**(n + S(2)), x)/(b**S(2)*(n + S(1))))
    rubi.add(rule56)

    pattern57 = Pattern(Integral(((WC('d', S(1))*csc(x_*WC('f', S(1)) + WC('e', S(0))))**p_*WC('a', S(1)))**WC('m', S(1))*(WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, S(-1))), CustomConstraint(lambda n, p, m: NonzeroQ(m*p + n + S(1))), CustomConstraint(lambda n, p, m: IntegersQ(S(2)*m*p, S(2)*n)))
    rule57 = ReplacementRule(pattern57, lambda d, x, f, e, b, m, a, n, p : (a*(d*Csc(e + f*x))**p)**m*(b*Cot(e + f*x))**(n + S(1))/(b*f*(n + S(1))) - (m*p + n + S(1))*Int((a*(d*Csc(e + f*x))**p)**m*(b*Cot(e + f*x))**(n + S(2)), x)/(b**S(2)*(n + S(1))))
    rubi.add(rule57)

    pattern58 = Pattern(Integral((WC('b', S(1))*tan(x_*WC('d', S(1)) + WC('c', S(0))))**n_, x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Greater(n, S(1))))
    rule58 = ReplacementRule(pattern58, lambda c, d, x, b, n : -b**S(2)*Int((b*Tan(c + d*x))**(n + S(-2)), x) + b*(b*Tan(c + d*x))**(n + S(-1))/(d*(n + S(-1))))
    rubi.add(rule58)

    pattern59 = Pattern(Integral((WC('b', S(1))*cot(x_*WC('d', S(1)) + WC('c', S(0))))**n_, x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Greater(n, S(1))))
    rule59 = ReplacementRule(pattern59, lambda c, d, x, b, n : -b**S(2)*Int((b*Cot(c + d*x))**(n + S(-2)), x) - b*(b*Cot(c + d*x))**(n + S(-1))/(d*(n + S(-1))))
    rubi.add(rule59)

    pattern60 = Pattern(Integral((WC('b', S(1))*tan(x_*WC('d', S(1)) + WC('c', S(0))))**n_, x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, S(-1))))
    rule60 = ReplacementRule(pattern60, lambda c, d, x, b, n : (b*Tan(c + d*x))**(n + S(1))/(b*d*(n + S(1))) - Int((b*Tan(c + d*x))**(n + S(2)), x)/b**S(2))
    rubi.add(rule60)

    pattern61 = Pattern(Integral((WC('b', S(1))*cot(x_*WC('d', S(1)) + WC('c', S(0))))**n_, x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, S(-1))))
    rule61 = ReplacementRule(pattern61, lambda c, d, x, b, n : -(b*Cot(c + d*x))**(n + S(1))/(b*d*(n + S(1))) - Int((b*Cot(c + d*x))**(n + S(2)), x)/b**S(2))
    rubi.add(rule61)

    pattern62 = Pattern(Integral(tan(x_*WC('d', S(1)) + WC('c', S(0))), x_), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)))
    rule62 = ReplacementRule(pattern62, lambda x, c, d : -Log(RemoveContent(Cos(c + d*x), x))/d)
    rubi.add(rule62)

    pattern63 = Pattern(Integral(cot(x_*WC('d', S(1)) + WC('c', S(0))), x_), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)))
    rule63 = ReplacementRule(pattern63, lambda x, c, d : Log(RemoveContent(Sin(c + d*x), x))/d)
    rubi.add(rule63)

    pattern64 = Pattern(Integral((WC('b', S(1))*tan(x_*WC('d', S(1)) + WC('c', S(0))))**n_, x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n: ~(IntegerQ(n))))
    rule64 = ReplacementRule(pattern64, lambda c, d, x, b, n : b*Subst(Int(x**n/(b**S(2) + x**S(2)), x), x, b*Tan(c + d*x))/d)
    rubi.add(rule64)

    pattern65 = Pattern(Integral((WC('b', S(1))*cot(x_*WC('d', S(1)) + WC('c', S(0))))**n_, x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n: ~(IntegerQ(n))))
    rule65 = ReplacementRule(pattern65, lambda c, d, x, b, n : -b*Subst(Int(x**n/(b**S(2) + x**S(2)), x), x, b*Cot(c + d*x))/d)
    rubi.add(rule65)

    pattern66 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('d', S(1)) + WC('c', S(0))))**S(2), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)))
    rule66 = ReplacementRule(pattern66, lambda c, d, x, b, a : S(2)*a*b*Int(Tan(c + d*x), x) + b**S(2)*Tan(c + d*x)/d + x*(a**S(2) - b**S(2)))
    rubi.add(rule66)

    pattern67 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('d', S(1)) + WC('c', S(0))))**S(2), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)))
    rule67 = ReplacementRule(pattern67, lambda c, d, x, b, a : S(2)*a*b*Int(Cot(c + d*x), x) - b**S(2)*Cot(c + d*x)/d + x*(a**S(2) - b**S(2)))
    rubi.add(rule67)

    pattern68 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('d', S(1)) + WC('c', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Greater(n, S(1))))
    rule68 = ReplacementRule(pattern68, lambda c, d, x, b, a, n : S(2)*a*Int((a + b*Tan(c + d*x))**(n + S(-1)), x) + b*(a + b*Tan(c + d*x))**(n + S(-1))/(d*(n + S(-1))))
    rubi.add(rule68)

    pattern69 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('d', S(1)) + WC('c', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Greater(n, S(1))))
    rule69 = ReplacementRule(pattern69, lambda c, d, x, b, a, n : S(2)*a*Int((a + b*Cot(c + d*x))**(n + S(-1)), x) - b*(a + b*Cot(c + d*x))**(n + S(-1))/(d*(n + S(-1))))
    rubi.add(rule69)

    pattern70 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('d', S(1)) + WC('c', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, S(0))))
    rule70 = ReplacementRule(pattern70, lambda c, d, x, b, a, n : a*(a + b*Tan(c + d*x))**n/(S(2)*b*d*n) + Int((a + b*Tan(c + d*x))**(n + S(1)), x)/(S(2)*a))
    rubi.add(rule70)

    pattern71 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('d', S(1)) + WC('c', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, S(0))))
    rule71 = ReplacementRule(pattern71, lambda c, d, x, b, a, n : -a*(a + b*Cot(c + d*x))**n/(S(2)*b*d*n) + Int((a + b*Cot(c + d*x))**(n + S(1)), x)/(S(2)*a))
    rubi.add(rule71)

    pattern72 = Pattern(Integral(sqrt(a_ + WC('b', S(1))*tan(x_*WC('d', S(1)) + WC('c', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))))
    rule72 = ReplacementRule(pattern72, lambda c, d, x, b, a : -S(2)*b*Subst(Int(1/(S(2)*a - x**S(2)), x), x, Sqrt(a + b*Tan(c + d*x)))/d)
    rubi.add(rule72)

    pattern73 = Pattern(Integral(sqrt(a_ + WC('b', S(1))*cot(x_*WC('d', S(1)) + WC('c', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))))
    rule73 = ReplacementRule(pattern73, lambda c, d, x, b, a : S(2)*b*Subst(Int(1/(S(2)*a - x**S(2)), x), x, Sqrt(a + b*Cot(c + d*x)))/d)
    rubi.add(rule73)

    pattern74 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('d', S(1)) + WC('c', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))))
    rule74 = ReplacementRule(pattern74, lambda c, d, x, b, a, n : -b*Subst(Int((a + x)**(n + S(-1))/(a - x), x), x, b*Tan(c + d*x))/d)
    rubi.add(rule74)

    pattern75 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('d', S(1)) + WC('c', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))))
    rule75 = ReplacementRule(pattern75, lambda c, d, x, b, a, n : b*Subst(Int((a + x)**(n + S(-1))/(a - x), x), x, b*Cot(c + d*x))/d)
    rubi.add(rule75)

    pattern76 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('d', S(1)) + WC('c', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Greater(n, S(1))))
    rule76 = ReplacementRule(pattern76, lambda c, d, x, b, a, n : b*(a + b*Tan(c + d*x))**(n + S(-1))/(d*(n + S(-1))) + Int((a + b*Tan(c + d*x))**(n + S(-2))*(a**S(2) + S(2)*a*b*Tan(c + d*x) - b**S(2)), x))
    rubi.add(rule76)

    pattern77 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('d', S(1)) + WC('c', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Greater(n, S(1))))
    rule77 = ReplacementRule(pattern77, lambda c, d, x, b, a, n : -b*(a + b*Cot(c + d*x))**(n + S(-1))/(d*(n + S(-1))) + Int((a + b*Cot(c + d*x))**(n + S(-2))*(a**S(2) + S(2)*a*b*Cot(c + d*x) - b**S(2)), x))
    rubi.add(rule77)

    pattern78 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('d', S(1)) + WC('c', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, S(-1))))
    rule78 = ReplacementRule(pattern78, lambda c, d, x, b, a, n : b*(a + b*Tan(c + d*x))**(n + S(1))/(d*(a**S(2) + b**S(2))*(n + S(1))) + Int((a - b*Tan(c + d*x))*(a + b*Tan(c + d*x))**(n + S(1)), x)/(a**S(2) + b**S(2)))
    rubi.add(rule78)

    pattern79 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('d', S(1)) + WC('c', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, S(-1))))
    rule79 = ReplacementRule(pattern79, lambda c, d, x, b, a, n : -b*(a + b*Cot(c + d*x))**(n + S(1))/(d*(a**S(2) + b**S(2))*(n + S(1))) + Int((a - b*Cot(c + d*x))*(a + b*Cot(c + d*x))**(n + S(1)), x)/(a**S(2) + b**S(2)))
    rubi.add(rule79)

    pattern80 = Pattern(Integral(1/(a_ + WC('b', S(1))*tan(x_*WC('d', S(1)) + WC('c', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))))
    rule80 = ReplacementRule(pattern80, lambda c, d, x, b, a : a*x/(a**S(2) + b**S(2)) + b*Int((-a*Tan(c + d*x) + b)/(a + b*Tan(c + d*x)), x)/(a**S(2) + b**S(2)))
    rubi.add(rule80)

    pattern81 = Pattern(Integral(1/(a_ + WC('b', S(1))*cot(x_*WC('d', S(1)) + WC('c', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))))
    rule81 = ReplacementRule(pattern81, lambda c, d, x, b, a : a*x/(a**S(2) + b**S(2)) + b*Int((-a*Cot(c + d*x) + b)/(a + b*Cot(c + d*x)), x)/(a**S(2) + b**S(2)))
    rubi.add(rule81)

    pattern82 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('d', S(1)) + WC('c', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))))
    rule82 = ReplacementRule(pattern82, lambda c, d, x, b, a, n : b*Subst(Int((a + x)**n/(b**S(2) + x**S(2)), x), x, b*Tan(c + d*x))/d)
    rubi.add(rule82)

    pattern83 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('d', S(1)) + WC('c', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))))
    rule83 = ReplacementRule(pattern83, lambda c, d, x, b, a, n : -b*Subst(Int((a + x)**n/(b**S(2) + x**S(2)), x), x, b*Cot(c + d*x))/d)
    rubi.add(rule83)

    pattern84 = Pattern(Integral((WC('d', S(1))*sec(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda b, a, m: IntegerQ(S(2)*m) | NonzeroQ(a**S(2) + b**S(2))))
    rule84 = ReplacementRule(pattern84, lambda d, x, f, e, m, b, a : a*Int((d*Sec(e + f*x))**m, x) + b*(d*Sec(e + f*x))**m/(f*m))
    rubi.add(rule84)

    pattern85 = Pattern(Integral((WC('d', S(1))*csc(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda b, a, m: IntegerQ(S(2)*m) | NonzeroQ(a**S(2) + b**S(2))))
    rule85 = ReplacementRule(pattern85, lambda d, x, f, e, m, b, a : a*Int((d*Csc(e + f*x))**m, x) - b*(d*Csc(e + f*x))**m/(f*m))
    rubi.add(rule85)

    pattern86 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_*sec(x_*WC('f', S(1)) + WC('e', S(0)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: IntegerQ(m/S(2))))
    rule86 = ReplacementRule(pattern86, lambda x, f, e, b, m, n, a : a**(-m + S(2))*Subst(Int((a - x)**(m/S(2) + S(-1))*(a + x)**(m/S(2) + n + S(-1)), x), x, b*Tan(e + f*x))/(b*f))
    rubi.add(rule86)

    pattern87 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_*csc(x_*WC('f', S(1)) + WC('e', S(0)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: IntegerQ(m/S(2))))
    rule87 = ReplacementRule(pattern87, lambda x, f, e, b, m, n, a : -a**(-m + S(2))*Subst(Int((a - x)**(m/S(2) + S(-1))*(a + x)**(m/S(2) + n + S(-1)), x), x, b*Cot(e + f*x))/(b*f))
    rubi.add(rule87)

    pattern88 = Pattern(Integral((WC('d', S(1))*sec(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n, m: ZeroQ(Simplify(m + n))))
    rule88 = ReplacementRule(pattern88, lambda d, x, f, e, m, b, n, a : b*(d*Sec(e + f*x))**m*(a + b*Tan(e + f*x))**n/(a*f*m))
    rubi.add(rule88)

    pattern89 = Pattern(Integral((WC('d', S(1))*csc(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n, m: ZeroQ(Simplify(m + n))))
    rule89 = ReplacementRule(pattern89, lambda d, x, f, e, m, b, n, a : -b*(d*Csc(e + f*x))**m*(a + b*Cot(e + f*x))**n/(a*f*m))
    rubi.add(rule89)

    pattern90 = Pattern(Integral(sec(x_*WC('f', S(1)) + WC('e', S(0)))/sqrt(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))))
    rule90 = ReplacementRule(pattern90, lambda x, f, e, b, a : -S(2)*a*Subst(Int(1/(-a*x**S(2) + S(2)), x), x, Sec(e + f*x)/Sqrt(a + b*Tan(e + f*x)))/(b*f))
    rubi.add(rule90)

    pattern91 = Pattern(Integral(csc(x_*WC('f', S(1)) + WC('e', S(0)))/sqrt(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))))
    rule91 = ReplacementRule(pattern91, lambda x, f, e, b, a : S(2)*a*Subst(Int(1/(-a*x**S(2) + S(2)), x), x, Csc(e + f*x)/Sqrt(a + b*Cot(e + f*x)))/(b*f))
    rubi.add(rule91)

    pattern92 = Pattern(Integral((WC('d', S(1))*sec(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n, m: ZeroQ(m/S(2) + n)), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda n: Greater(n, S(0))))
    rule92 = ReplacementRule(pattern92, lambda d, x, f, e, m, b, n, a : a*Int((d*Sec(e + f*x))**(m + S(2))*(a + b*Tan(e + f*x))**(n + S(-1)), x)/(S(2)*d**S(2)) + b*(d*Sec(e + f*x))**m*(a + b*Tan(e + f*x))**n/(a*f*m))
    rubi.add(rule92)

    pattern93 = Pattern(Integral((WC('d', S(1))*csc(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n, m: ZeroQ(m/S(2) + n)), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda n: Greater(n, S(0))))
    rule93 = ReplacementRule(pattern93, lambda d, x, f, e, m, b, n, a : a*Int((d*Csc(e + f*x))**(m + S(2))*(a + b*Cot(e + f*x))**(n + S(-1)), x)/(S(2)*d**S(2)) - b*(d*Csc(e + f*x))**m*(a + b*Cot(e + f*x))**n/(a*f*m))
    rubi.add(rule93)

    pattern94 = Pattern(Integral((WC('d', S(1))*sec(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n, m: ZeroQ(m/S(2) + n)), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda n: Less(n, S(-1))))
    rule94 = ReplacementRule(pattern94, lambda d, x, f, e, m, b, n, a : S(2)*d**S(2)*(d*Sec(e + f*x))**(m + S(-2))*(a + b*Tan(e + f*x))**(n + S(1))/(b*f*(m + S(-2))) + S(2)*d**S(2)*Int((d*Sec(e + f*x))**(m + S(-2))*(a + b*Tan(e + f*x))**(n + S(1)), x)/a)
    rubi.add(rule94)

    pattern95 = Pattern(Integral((WC('d', S(1))*csc(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n, m: ZeroQ(m/S(2) + n)), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda n: Less(n, S(-1))))
    rule95 = ReplacementRule(pattern95, lambda d, x, f, e, m, b, n, a : -S(2)*d**S(2)*(d*Csc(e + f*x))**(m + S(-2))*(a + b*Cot(e + f*x))**(n + S(1))/(b*f*(m + S(-2))) + S(2)*d**S(2)*Int((d*Csc(e + f*x))**(m + S(-2))*(a + b*Cot(e + f*x))**(n + S(1)), x)/a)
    rubi.add(rule95)

    pattern96 = Pattern(Integral((WC('d', S(1))*sec(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n, m: ZeroQ(Simplify(m/S(2) + n))))
    rule96 = ReplacementRule(pattern96, lambda d, x, f, e, m, b, n, a : (a/d)**(S(2)*IntPart(n))*(d*Sec(e + f*x))**(-S(2)*FracPart(n))*(a - b*Tan(e + f*x))**FracPart(n)*(a + b*Tan(e + f*x))**FracPart(n)*Int((a - b*Tan(e + f*x))**(-n), x))
    rubi.add(rule96)

    pattern97 = Pattern(Integral((WC('d', S(1))*csc(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n, m: ZeroQ(Simplify(m/S(2) + n))))
    rule97 = ReplacementRule(pattern97, lambda d, x, f, e, m, b, n, a : (a/d)**(S(2)*IntPart(n))*(d*Csc(e + f*x))**(-S(2)*FracPart(n))*(a - b*Cot(e + f*x))**FracPart(n)*(a + b*Cot(e + f*x))**FracPart(n)*Int((a - b*Cot(e + f*x))**(-n), x))
    rubi.add(rule97)

    pattern98 = Pattern(Integral((WC('d', S(1))*sec(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n, m: ZeroQ(Simplify(m/S(2) + n + S(-1)))))
    rule98 = ReplacementRule(pattern98, lambda d, x, f, e, m, b, n, a : S(2)*b*(d*Sec(e + f*x))**m*(a + b*Tan(e + f*x))**(n + S(-1))/(f*m))
    rubi.add(rule98)

    pattern99 = Pattern(Integral((WC('d', S(1))*csc(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n, m: ZeroQ(Simplify(m/S(2) + n + S(-1)))))
    rule99 = ReplacementRule(pattern99, lambda d, x, f, e, m, b, n, a : -S(2)*b*(d*Csc(e + f*x))**m*(a + b*Cot(e + f*x))**(n + S(-1))/(f*m))
    rubi.add(rule99)

    pattern100 = Pattern(Integral((WC('d', S(1))*sec(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n, m: PositiveIntegerQ(Simplify(m/S(2) + n + S(-1)))), CustomConstraint(lambda n: ~(IntegerQ(n))))
    rule100 = ReplacementRule(pattern100, lambda d, x, f, e, m, b, n, a : a*(m + S(2)*n + S(-2))*Int((d*Sec(e + f*x))**m*(a + b*Tan(e + f*x))**(n + S(-1)), x)/(m + n + S(-1)) + b*(d*Sec(e + f*x))**m*(a + b*Tan(e + f*x))**(n + S(-1))/(f*(m + n + S(-1))))
    rubi.add(rule100)

    pattern101 = Pattern(Integral((WC('d', S(1))*csc(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n, m: PositiveIntegerQ(Simplify(m/S(2) + n + S(-1)))), CustomConstraint(lambda n: ~(IntegerQ(n))))
    rule101 = ReplacementRule(pattern101, lambda d, x, f, e, m, b, n, a : a*(m + S(2)*n + S(-2))*Int((d*Csc(e + f*x))**m*(a + b*Cot(e + f*x))**(n + S(-1)), x)/(m + n + S(-1)) - b*(d*Csc(e + f*x))**m*(a + b*Cot(e + f*x))**(n + S(-1))/(f*(m + n + S(-1))))
    rubi.add(rule101)

    pattern102 = Pattern(Integral(sqrt(WC('d', S(1))*sec(x_*WC('f', S(1)) + WC('e', S(0))))*sqrt(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))))
    rule102 = ReplacementRule(pattern102, lambda d, x, f, e, b, a : -S(4)*b*d**S(2)*Subst(Int(x**S(2)/(a**S(2) + d**S(2)*x**S(4)), x), x, Sqrt(a + b*Tan(e + f*x))/Sqrt(d*Sec(e + f*x)))/f)
    rubi.add(rule102)

    pattern103 = Pattern(Integral(sqrt(WC('d', S(1))*csc(x_*WC('f', S(1)) + WC('e', S(0))))*sqrt(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))))
    rule103 = ReplacementRule(pattern103, lambda d, x, f, e, b, a : S(4)*b*d**S(2)*Subst(Int(x**S(2)/(a**S(2) + d**S(2)*x**S(4)), x), x, Sqrt(a + b*Cot(e + f*x))/Sqrt(d*Csc(e + f*x)))/f)
    rubi.add(rule103)

    pattern104 = Pattern(Integral((WC('d', S(1))*sec(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda n: Greater(n, S(1))), CustomConstraint(lambda n, m: (Equal(m, S(-1)/2) & Equal(n, S(3)/2)) | (Equal(n, S(2)) & Less(m, S(0))) | (LessEqual(m, S(-1)) & Greater(m + n, S(0))) | (NegativeIntegerQ(m + S(-1)/2) & PositiveIntegerQ(n/S(2))) | (IntegerQ(n) & NegativeIntegerQ(m) & Less(m/S(2) + n + S(-1), S(0)))), CustomConstraint(lambda m: IntegerQ(S(2)*m)))
    rule104 = ReplacementRule(pattern104, lambda d, x, f, e, m, b, n, a : -b**S(2)*(m + S(2)*n + S(-2))*Int((d*Sec(e + f*x))**(m + S(2))*(a + b*Tan(e + f*x))**(n + S(-2)), x)/(d**S(2)*m) + S(2)*b*(d*Sec(e + f*x))**m*(a + b*Tan(e + f*x))**(n + S(-1))/(f*m))
    rubi.add(rule104)

    pattern105 = Pattern(Integral((WC('d', S(1))*csc(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda n: Greater(n, S(1))), CustomConstraint(lambda n, m: (Equal(m, S(-1)/2) & Equal(n, S(3)/2)) | (Equal(n, S(2)) & Less(m, S(0))) | (LessEqual(m, S(-1)) & Greater(m + n, S(0))) | (NegativeIntegerQ(m + S(-1)/2) & PositiveIntegerQ(n/S(2))) | (NegativeIntegerQ(m) & Less(m/S(2) + n + S(-1), S(0)))), CustomConstraint(lambda m: IntegerQ(S(2)*m)))
    rule105 = ReplacementRule(pattern105, lambda d, x, f, e, m, b, n, a : -b**S(2)*(m + S(2)*n + S(-2))*Int((d*Csc(e + f*x))**(m + S(2))*(a + b*Cot(e + f*x))**(n + S(-2)), x)/(d**S(2)*m) - S(2)*b*(d*Csc(e + f*x))**m*(a + b*Cot(e + f*x))**(n + S(-1))/(f*m))
    rubi.add(rule105)

    pattern106 = Pattern(Integral((WC('d', S(1))*sec(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda n: Greater(n, S(0))), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda n, m: IntegersQ(S(2)*m, S(2)*n)))
    rule106 = ReplacementRule(pattern106, lambda d, x, f, e, m, b, n, a : a*(m + n)*Int((d*Sec(e + f*x))**(m + S(2))*(a + b*Tan(e + f*x))**(n + S(-1)), x)/(d**S(2)*m) + b*(d*Sec(e + f*x))**m*(a + b*Tan(e + f*x))**n/(a*f*m))
    rubi.add(rule106)

    pattern107 = Pattern(Integral((WC('d', S(1))*csc(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda n: Greater(n, S(0))), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda n, m: IntegersQ(S(2)*m, S(2)*n)))
    rule107 = ReplacementRule(pattern107, lambda d, x, f, e, m, b, n, a : a*(m + n)*Int((d*Csc(e + f*x))**(m + S(2))*(a + b*Cot(e + f*x))**(n + S(-1)), x)/(d**S(2)*m) - b*(d*Csc(e + f*x))**m*(a + b*Cot(e + f*x))**n/(a*f*m))
    rubi.add(rule107)

    pattern108 = Pattern(Integral((WC('d', S(1))*sec(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Greater(n, S(0))), CustomConstraint(lambda n, m: NonzeroQ(m + n + S(-1))), CustomConstraint(lambda n, m: IntegersQ(S(2)*m, S(2)*n)))
    rule108 = ReplacementRule(pattern108, lambda d, x, f, e, m, b, n, a : a*(m + S(2)*n + S(-2))*Int((d*Sec(e + f*x))**m*(a + b*Tan(e + f*x))**(n + S(-1)), x)/(m + n + S(-1)) + b*(d*Sec(e + f*x))**m*(a + b*Tan(e + f*x))**(n + S(-1))/(f*(m + n + S(-1))))
    rubi.add(rule108)

    pattern109 = Pattern(Integral((WC('d', S(1))*csc(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Greater(n, S(0))), CustomConstraint(lambda n, m: NonzeroQ(m + n + S(-1))), CustomConstraint(lambda n, m: IntegersQ(S(2)*m, S(2)*n)))
    rule109 = ReplacementRule(pattern109, lambda d, x, f, e, m, b, n, a : a*(m + S(2)*n + S(-2))*Int((d*Csc(e + f*x))**m*(a + b*Cot(e + f*x))**(n + S(-1)), x)/(m + n + S(-1)) - b*(d*Csc(e + f*x))**m*(a + b*Cot(e + f*x))**(n + S(-1))/(f*(m + n + S(-1))))
    rubi.add(rule109)

    pattern110 = Pattern(Integral((WC('d', S(1))*sec(x_*WC('f', S(1)) + WC('e', S(0))))**(S(3)/2)/sqrt(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))))
    rule110 = ReplacementRule(pattern110, lambda d, x, f, e, b, a : d*Int(Sqrt(d*Sec(e + f*x))*Sqrt(a - b*Tan(e + f*x)), x)*Sec(e + f*x)/(Sqrt(a - b*Tan(e + f*x))*Sqrt(a + b*Tan(e + f*x))))
    rubi.add(rule110)

    pattern111 = Pattern(Integral((WC('d', S(1))*csc(x_*WC('f', S(1)) + WC('e', S(0))))**(S(3)/2)/sqrt(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))))
    rule111 = ReplacementRule(pattern111, lambda d, x, f, e, b, a : d*Csc(e + f*x)*Int(Sqrt(d*Csc(e + f*x))*Sqrt(a - b*Cot(e + f*x)), x)/(Sqrt(a - b*Cot(e + f*x))*Sqrt(a + b*Cot(e + f*x))))
    rubi.add(rule111)

    pattern112 = Pattern(Integral((WC('d', S(1))*sec(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, S(-1))), CustomConstraint(lambda n, m: Equal(n, S(-2)) | PositiveIntegerQ(m + n) | (NegativeIntegerQ(n/S(2)) & PositiveIntegerQ(m + S(-1)/2)) | (IntegersQ(n, m + S(1)/2) & Greater(S(2)*m + n + S(1), S(0)))), CustomConstraint(lambda m: IntegerQ(S(2)*m)))
    rule112 = ReplacementRule(pattern112, lambda d, x, f, e, m, b, n, a : S(2)*d**S(2)*(d*Sec(e + f*x))**(m + S(-2))*(a + b*Tan(e + f*x))**(n + S(1))/(b*f*(m + S(2)*n)) - d**S(2)*(m + S(-2))*Int((d*Sec(e + f*x))**(m + S(-2))*(a + b*Tan(e + f*x))**(n + S(2)), x)/(b**S(2)*(m + S(2)*n)))
    rubi.add(rule112)

    pattern113 = Pattern(Integral((WC('d', S(1))*csc(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, S(-1))), CustomConstraint(lambda n, m: Equal(n, S(-2)) | PositiveIntegerQ(m + n) | (NegativeIntegerQ(n/S(2)) & PositiveIntegerQ(m + S(-1)/2)) | (IntegersQ(n, m + S(1)/2) & Greater(S(2)*m + n + S(1), S(0)))), CustomConstraint(lambda m: IntegerQ(S(2)*m)))
    rule113 = ReplacementRule(pattern113, lambda d, x, f, e, m, b, n, a : -S(2)*d**S(2)*(d*Csc(e + f*x))**(m + S(-2))*(a + b*Cot(e + f*x))**(n + S(1))/(b*f*(m + S(2)*n)) - d**S(2)*(m + S(-2))*Int((d*Csc(e + f*x))**(m + S(-2))*(a + b*Cot(e + f*x))**(n + S(2)), x)/(b**S(2)*(m + S(2)*n)))
    rubi.add(rule113)

    pattern114 = Pattern(Integral((WC('d', S(1))*sec(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda n: Less(n, S(0))), CustomConstraint(lambda m: Greater(m, S(1))), CustomConstraint(lambda n, m: ~(NegativeIntegerQ(m + n))), CustomConstraint(lambda n, m: NonzeroQ(m + n + S(-1))), CustomConstraint(lambda n, m: IntegersQ(S(2)*m, S(2)*n)))
    rule114 = ReplacementRule(pattern114, lambda d, x, f, e, m, b, n, a : d**S(2)*(d*Sec(e + f*x))**(m + S(-2))*(a + b*Tan(e + f*x))**(n + S(1))/(b*f*(m + n + S(-1))) + d**S(2)*(m + S(-2))*Int((d*Sec(e + f*x))**(m + S(-2))*(a + b*Tan(e + f*x))**(n + S(1)), x)/(a*(m + n + S(-1))))
    rubi.add(rule114)

    pattern115 = Pattern(Integral((WC('d', S(1))*csc(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda n: Less(n, S(0))), CustomConstraint(lambda m: Greater(m, S(1))), CustomConstraint(lambda n, m: ~(NegativeIntegerQ(m + n))), CustomConstraint(lambda n, m: NonzeroQ(m + n + S(-1))), CustomConstraint(lambda n, m: IntegersQ(S(2)*m, S(2)*n)))
    rule115 = ReplacementRule(pattern115, lambda d, x, f, e, m, b, n, a : -d**S(2)*(d*Csc(e + f*x))**(m + S(-2))*(a + b*Cot(e + f*x))**(n + S(1))/(b*f*(m + n + S(-1))) + d**S(2)*(m + S(-2))*Int((d*Csc(e + f*x))**(m + S(-2))*(a + b*Cot(e + f*x))**(n + S(1)), x)/(a*(m + n + S(-1))))
    rubi.add(rule115)

    pattern116 = Pattern(Integral((WC('d', S(1))*sec(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, S(0))), CustomConstraint(lambda n, m: NonzeroQ(m + S(2)*n)), CustomConstraint(lambda n, m: IntegersQ(S(2)*m, S(2)*n)))
    rule116 = ReplacementRule(pattern116, lambda d, x, f, e, m, b, n, a : a*(d*Sec(e + f*x))**m*(a + b*Tan(e + f*x))**n/(b*f*(m + S(2)*n)) + Int((d*Sec(e + f*x))**m*(a + b*Tan(e + f*x))**(n + S(1)), x)*Simplify(m + n)/(a*(m + S(2)*n)))
    rubi.add(rule116)

    pattern117 = Pattern(Integral((WC('d', S(1))*csc(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, S(0))), CustomConstraint(lambda n, m: NonzeroQ(m + S(2)*n)), CustomConstraint(lambda n, m: IntegersQ(S(2)*m, S(2)*n)))
    rule117 = ReplacementRule(pattern117, lambda d, x, f, e, m, b, n, a : -a*(d*Csc(e + f*x))**m*(a + b*Cot(e + f*x))**n/(b*f*(m + S(2)*n)) + Int((d*Csc(e + f*x))**m*(a + b*Cot(e + f*x))**(n + S(1)), x)*Simplify(m + n)/(a*(m + S(2)*n)))
    rubi.add(rule117)

    pattern118 = Pattern(Integral((WC('d', S(1))*sec(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n, m: PositiveIntegerQ(Simplify(m + n + S(-1)))), CustomConstraint(lambda n: RationalQ(n)))
    rule118 = ReplacementRule(pattern118, lambda d, x, f, e, m, b, n, a : a*(m + S(2)*n + S(-2))*Int((d*Sec(e + f*x))**m*(a + b*Tan(e + f*x))**(n + S(-1)), x)/Simplify(m + n + S(-1)) + b*(d*Sec(e + f*x))**m*(a + b*Tan(e + f*x))**(n + S(-1))/(f*Simplify(m + n + S(-1))))
    rubi.add(rule118)

    pattern119 = Pattern(Integral((WC('d', S(1))*csc(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n, m: PositiveIntegerQ(Simplify(m + n + S(-1)))), CustomConstraint(lambda n: RationalQ(n)))
    rule119 = ReplacementRule(pattern119, lambda d, x, f, e, m, b, n, a : a*(m + S(2)*n + S(-2))*Int((d*Csc(e + f*x))**m*(a + b*Cot(e + f*x))**(n + S(-1)), x)/Simplify(m + n + S(-1)) - b*(d*Csc(e + f*x))**m*(a + b*Cot(e + f*x))**(n + S(-1))/(f*Simplify(m + n + S(-1))))
    rubi.add(rule119)

    pattern120 = Pattern(Integral((WC('d', S(1))*sec(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n, m: NegativeIntegerQ(Simplify(m + n))), CustomConstraint(lambda n, m: NonzeroQ(m + S(2)*n)))
    rule120 = ReplacementRule(pattern120, lambda d, x, f, e, m, b, n, a : a*(d*Sec(e + f*x))**m*(a + b*Tan(e + f*x))**n/(b*f*(m + S(2)*n)) + Int((d*Sec(e + f*x))**m*(a + b*Tan(e + f*x))**(n + S(1)), x)*Simplify(m + n)/(a*(m + S(2)*n)))
    rubi.add(rule120)

    pattern121 = Pattern(Integral((WC('d', S(1))*csc(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n, m: NegativeIntegerQ(Simplify(m + n))), CustomConstraint(lambda n, m: NonzeroQ(m + S(2)*n)))
    rule121 = ReplacementRule(pattern121, lambda d, x, f, e, m, b, n, a : -a*(d*Csc(e + f*x))**m*(a + b*Cot(e + f*x))**n/(b*f*(m + S(2)*n)) + Int((d*Csc(e + f*x))**m*(a + b*Cot(e + f*x))**(n + S(1)), x)*Simplify(m + n)/(a*(m + S(2)*n)))
    rubi.add(rule121)

    pattern122 = Pattern(Integral((WC('d', S(1))*sec(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))))
    rule122 = ReplacementRule(pattern122, lambda d, x, f, e, m, b, n, a : (d*Sec(e + f*x))**m*(a - b*Tan(e + f*x))**(-m/S(2))*(a + b*Tan(e + f*x))**(-m/S(2))*Int((a - b*Tan(e + f*x))**(m/S(2))*(a + b*Tan(e + f*x))**(m/S(2) + n), x))
    rubi.add(rule122)

    pattern123 = Pattern(Integral((WC('d', S(1))*csc(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))))
    rule123 = ReplacementRule(pattern123, lambda d, x, f, e, m, b, n, a : (d*Csc(e + f*x))**m*(a - b*Cot(e + f*x))**(-m/S(2))*(a + b*Cot(e + f*x))**(-m/S(2))*Int((a - b*Cot(e + f*x))**(m/S(2))*(a + b*Cot(e + f*x))**(m/S(2) + n), x))
    rubi.add(rule123)

    pattern124 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_*sec(x_*WC('f', S(1)) + WC('e', S(0)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: IntegerQ(m/S(2))))
    rule124 = ReplacementRule(pattern124, lambda x, f, e, b, m, n, a : Subst(Int((S(1) + x**S(2)/b**S(2))**(m/S(2) + S(-1))*(a + x)**n, x), x, b*Tan(e + f*x))/(b*f))
    rubi.add(rule124)

    pattern125 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_*csc(x_*WC('f', S(1)) + WC('e', S(0)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: IntegerQ(m/S(2))))
    rule125 = ReplacementRule(pattern125, lambda x, f, e, b, m, n, a : -Subst(Int((S(1) + x**S(2)/b**S(2))**(m/S(2) + S(-1))*(a + x)**n, x), x, b*Cot(e + f*x))/(b*f))
    rubi.add(rule125)

    pattern126 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**S(2)/sec(x_*WC('f', S(1)) + WC('e', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))))
    rule126 = ReplacementRule(pattern126, lambda x, f, e, b, a : -S(2)*a*b*Cos(e + f*x)/f + b**S(2)*ArcTanh(Sin(e + f*x))/f + (a**S(2) - b**S(2))*Sin(e + f*x)/f)
    rubi.add(rule126)

    pattern127 = Pattern(Integral((a_ + WC('b', S(1))*csc(x_*WC('f', S(1)) + WC('e', S(0))))**S(2)/cot(x_*WC('f', S(1)) + WC('e', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))))
    rule127 = ReplacementRule(pattern127, lambda x, f, e, b, a : S(2)*a*b*Sin(e + f*x)/f - b**S(2)*ArcTanh(Cos(e + f*x))/f - (a**S(2) - b**S(2))*Cos(e + f*x)/f)
    rubi.add(rule127)

    pattern128 = Pattern(Integral((WC('d', S(1))*sec(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**S(2), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: NonzeroQ(m + S(1))))
    rule128 = ReplacementRule(pattern128, lambda d, x, f, e, m, b, a : b*(d*Sec(e + f*x))**m*(a + b*Tan(e + f*x))/(f*(m + S(1))) + Int((d*Sec(e + f*x))**m*(a**S(2)*(m + S(1)) + a*b*(m + S(2))*Tan(e + f*x) - b**S(2)), x)/(m + S(1)))
    rubi.add(rule128)

    pattern129 = Pattern(Integral((WC('d', S(1))*csc(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**S(2), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: NonzeroQ(m + S(1))))
    rule129 = ReplacementRule(pattern129, lambda d, x, f, e, m, b, a : -b*(d*Csc(e + f*x))**m*(a + b*Cot(e + f*x))/(f*(m + S(1))) + Int((d*Csc(e + f*x))**m*(a**S(2)*(m + S(1)) + a*b*(m + S(2))*Cot(e + f*x) - b**S(2)), x)/(m + S(1)))
    rubi.add(rule129)

    pattern130 = Pattern(Integral(sec(x_*WC('f', S(1)) + WC('e', S(0)))/(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))))
    rule130 = ReplacementRule(pattern130, lambda x, f, e, b, a : -Subst(Int(1/(a**S(2) + b**S(2) - x**S(2)), x), x, (-a*Tan(e + f*x) + b)/Sec(e + f*x))/f)
    rubi.add(rule130)

    pattern131 = Pattern(Integral(csc(x_*WC('f', S(1)) + WC('e', S(0)))/(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))))
    rule131 = ReplacementRule(pattern131, lambda x, f, e, b, a : Subst(Int(1/(a**S(2) + b**S(2) - x**S(2)), x), x, (-a*Cot(e + f*x) + b)/Csc(e + f*x))/f)
    rubi.add(rule131)

    pattern132 = Pattern(Integral((WC('d', S(1))*sec(x_*WC('f', S(1)) + WC('e', S(0))))**m_/(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: PositiveIntegerQ(m + S(-1))))
    rule132 = ReplacementRule(pattern132, lambda d, x, f, e, m, b, a : d**S(2)*(a**S(2) + b**S(2))*Int((d*Sec(e + f*x))**(m + S(-2))/(a + b*Tan(e + f*x)), x)/b**S(2) - d**S(2)*Int((d*Sec(e + f*x))**(m + S(-2))*(a - b*Tan(e + f*x)), x)/b**S(2))
    rubi.add(rule132)

    pattern133 = Pattern(Integral((WC('d', S(1))*csc(x_*WC('f', S(1)) + WC('e', S(0))))**m_/(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: PositiveIntegerQ(m + S(-1))))
    rule133 = ReplacementRule(pattern133, lambda d, x, f, e, m, b, a : d**S(2)*(a**S(2) + b**S(2))*Int((d*Csc(e + f*x))**(m + S(-2))/(a + b*Cot(e + f*x)), x)/b**S(2) - d**S(2)*Int((d*Csc(e + f*x))**(m + S(-2))*(a - b*Cot(e + f*x)), x)/b**S(2))
    rubi.add(rule133)

    pattern134 = Pattern(Integral((WC('d', S(1))*sec(x_*WC('f', S(1)) + WC('e', S(0))))**m_/(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: NegativeIntegerQ(m)))
    rule134 = ReplacementRule(pattern134, lambda d, x, f, e, m, b, a : b**S(2)*Int((d*Sec(e + f*x))**(m + S(2))/(a + b*Tan(e + f*x)), x)/(d**S(2)*(a**S(2) + b**S(2))) + Int((d*Sec(e + f*x))**m*(a - b*Tan(e + f*x)), x)/(a**S(2) + b**S(2)))
    rubi.add(rule134)

    pattern135 = Pattern(Integral((WC('d', S(1))*csc(x_*WC('f', S(1)) + WC('e', S(0))))**m_/(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: NegativeIntegerQ(m)))
    rule135 = ReplacementRule(pattern135, lambda d, x, f, e, m, b, a : b**S(2)*Int((d*Csc(e + f*x))**(m + S(2))/(a + b*Cot(e + f*x)), x)/(d**S(2)*(a**S(2) + b**S(2))) + Int((d*Csc(e + f*x))**m*(a - b*Cot(e + f*x)), x)/(a**S(2) + b**S(2)))
    rubi.add(rule135)

    pattern136 = Pattern(Integral((WC('d', S(1))*sec(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: ~(IntegerQ(m/S(2)))))
    rule136 = ReplacementRule(pattern136, lambda d, x, f, e, m, b, n, a : d**(S(2)*IntPart(m/S(2)))*(d*Sec(e + f*x))**(S(2)*FracPart(m/S(2)))*(Sec(e + f*x)**S(2))**(-FracPart(m/S(2)))*Subst(Int((S(1) + x**S(2)/b**S(2))**(m/S(2) + S(-1))*(a + x)**n, x), x, b*Tan(e + f*x))/(b*f))
    rubi.add(rule136)

    pattern137 = Pattern(Integral((WC('d', S(1))*csc(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: ~(IntegerQ(m/S(2)))))
    rule137 = ReplacementRule(pattern137, lambda d, x, f, e, m, b, n, a : -d**(S(2)*IntPart(m/S(2)))*(d*Csc(e + f*x))**(S(2)*FracPart(m/S(2)))*(Csc(e + f*x)**S(2))**(-FracPart(m/S(2)))*Subst(Int((S(1) + x**S(2)/b**S(2))**(m/S(2) + S(-1))*(a + x)**n, x), x, b*Cot(e + f*x))/(b*f))
    rubi.add(rule137)

    pattern138 = Pattern(Integral(sqrt(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))/sqrt(WC('d', S(1))*cos(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))))
    rule138 = ReplacementRule(pattern138, lambda d, x, f, e, b, a : -S(4)*b*Subst(Int(x**S(2)/(a**S(2)*d**S(2) + x**S(4)), x), x, Sqrt(d*Cos(e + f*x))*Sqrt(a + b*Tan(e + f*x)))/f)
    rubi.add(rule138)

    pattern139 = Pattern(Integral(sqrt(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))/sqrt(WC('d', S(1))*sin(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))))
    rule139 = ReplacementRule(pattern139, lambda d, x, f, e, b, a : S(4)*b*Subst(Int(x**S(2)/(a**S(2)*d**S(2) + x**S(4)), x), x, Sqrt(d*Sin(e + f*x))*Sqrt(a + b*Cot(e + f*x)))/f)
    rubi.add(rule139)

    pattern140 = Pattern(Integral(S(1)/((WC('d', S(1))*cos(x_*WC('f', S(1)) + WC('e', S(0))))**(S(3)/2)*sqrt(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))))
    rule140 = ReplacementRule(pattern140, lambda d, x, f, e, b, a : Int(Sqrt(a - b*Tan(e + f*x))/Sqrt(d*Cos(e + f*x)), x)/(d*Cos(e + f*x)*Sqrt(a - b*Tan(e + f*x))*Sqrt(a + b*Tan(e + f*x))))
    rubi.add(rule140)

    pattern141 = Pattern(Integral(S(1)/((WC('d', S(1))*sec(x_*WC('f', S(1)) + WC('e', S(0))))**(S(3)/2)*sqrt(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))))
    rule141 = ReplacementRule(pattern141, lambda d, x, f, e, b, a : Int(Sqrt(a - b*Cot(e + f*x))/Sqrt(d*Sin(e + f*x)), x)/(d*Sin(e + f*x)*Sqrt(a - b*Cot(e + f*x))*Sqrt(a + b*Cot(e + f*x))))
    rubi.add(rule141)

    pattern142 = Pattern(Integral((WC('d', S(1))*cos(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m: ~(IntegerQ(m))))
    rule142 = ReplacementRule(pattern142, lambda d, x, f, e, m, b, n, a : (d*Cos(e + f*x))**m*(d*Sec(e + f*x))**m*Int((d*Sec(e + f*x))**(-m)*(a + b*Tan(e + f*x))**n, x))
    rubi.add(rule142)

    pattern143 = Pattern(Integral((WC('d', S(1))*sin(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m: ~(IntegerQ(m))))
    rule143 = ReplacementRule(pattern143, lambda d, x, f, e, m, b, n, a : (d*Csc(e + f*x))**m*(d*Sin(e + f*x))**m*Int((d*Csc(e + f*x))**(-m)*(a + b*Cot(e + f*x))**n, x))
    rubi.add(rule143)

    pattern144 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_*sin(x_*WC('f', S(1)) + WC('e', S(0)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m: IntegerQ(m/S(2))))
    rule144 = ReplacementRule(pattern144, lambda x, f, e, b, m, n, a : b*Subst(Int(x**m*(a + x)**n*(b**S(2) + x**S(2))**(-m/S(2) + S(-1)), x), x, b*Tan(e + f*x))/f)
    rubi.add(rule144)

    pattern145 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_*cos(x_*WC('f', S(1)) + WC('e', S(0)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m: IntegerQ(m/S(2))))
    rule145 = ReplacementRule(pattern145, lambda x, f, e, b, m, n, a : -b*Subst(Int(x**m*(a + x)**n*(b**S(2) + x**S(2))**(-m/S(2) + S(-1)), x), x, b*Cot(e + f*x))/f)
    rubi.add(rule145)

    pattern146 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1))*sin(x_*WC('f', S(1)) + WC('e', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m: IntegerQ(m/S(2) + S(-1)/2)), CustomConstraint(lambda n: PositiveIntegerQ(n)))
    rule146 = ReplacementRule(pattern146, lambda x, f, e, m, b, n, a : Int(Expand((a + b*Tan(e + f*x))**n*Sin(e + f*x)**m, x), x))
    rubi.add(rule146)

    pattern147 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1))*cos(x_*WC('f', S(1)) + WC('e', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m: IntegerQ(m/S(2) + S(-1)/2)), CustomConstraint(lambda n: PositiveIntegerQ(n)))
    rule147 = ReplacementRule(pattern147, lambda x, f, e, m, b, n, a : Int(Expand((a + b*Cot(e + f*x))**n*Cos(e + f*x)**m, x), x))
    rubi.add(rule147)

    pattern148 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1))*sin(x_*WC('f', S(1)) + WC('e', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m: IntegerQ(m/S(2) + S(-1)/2)), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda n, m: (Equal(m, S(5)) & Equal(n, S(-1))) | (Greater(n, S(-4)) & Less(m, S(5)))))
    rule148 = ReplacementRule(pattern148, lambda x, f, e, m, b, n, a : Int((a*Cos(e + f*x) + b*Sin(e + f*x))**n*Cos(e + f*x)**(-n)*Sin(e + f*x)**m, x))
    rubi.add(rule148)

    pattern149 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1))*cos(x_*WC('f', S(1)) + WC('e', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m: IntegerQ(m/S(2) + S(-1)/2)), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda n, m: (Equal(m, S(5)) & Equal(n, S(-1))) | (Greater(n, S(-4)) & Less(m, S(5)))))
    rule149 = ReplacementRule(pattern149, lambda x, f, e, m, b, n, a : Int((a*Sin(e + f*x) + b*Cos(e + f*x))**n*Cos(e + f*x)**m*Sin(e + f*x)**(-n), x))
    rubi.add(rule149)

    pattern150 = Pattern(Integral((WC('d', S(1))*csc(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m: ~(IntegerQ(m))))
    rule150 = ReplacementRule(pattern150, lambda d, x, f, e, m, b, n, a : (Sin(e + f*x)/d)**FracPart(m)*(d*Csc(e + f*x))**FracPart(m)*Int((Sin(e + f*x)/d)**(-m)*(a + b*Tan(e + f*x))**n, x))
    rubi.add(rule150)

    pattern151 = Pattern(Integral((WC('d', S(1))*sec(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda m: ~(IntegerQ(m))))
    rule151 = ReplacementRule(pattern151, lambda d, x, f, e, m, b, n, a : (Cos(e + f*x)/d)**FracPart(m)*(d*Sec(e + f*x))**FracPart(m)*Int((Cos(e + f*x)/d)**(-m)*(a + b*Cot(e + f*x))**n, x))
    rubi.add(rule151)

    pattern152 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1))*sin(x_*WC('f', S(1)) + WC('e', S(0)))**WC('p', S(1))*cos(x_*WC('f', S(1)) + WC('e', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n: IntegerQ(n)))
    rule152 = ReplacementRule(pattern152, lambda x, f, e, m, b, n, p, a : Int((a*Cos(e + f*x) + b*Sin(e + f*x))**n*Cos(e + f*x)**(m - n)*Sin(e + f*x)**p, x))
    rubi.add(rule152)

    pattern153 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1))*sin(x_*WC('f', S(1)) + WC('e', S(0)))**WC('m', S(1))*cos(x_*WC('f', S(1)) + WC('e', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n: IntegerQ(n)))
    rule153 = ReplacementRule(pattern153, lambda x, f, e, m, b, n, p, a : Int((a*Sin(e + f*x) + b*Cos(e + f*x))**n*Cos(e + f*x)**p*Sin(e + f*x)**(m - n), x))
    rubi.add(rule153)

    pattern154 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(c_ + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: ZeroQ(a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: IntegerQ(m)), CustomConstraint(lambda n, m: ~(IntegerQ(n) & Greater(n, S(0)) & (Less(m, S(0)) | Less(n, m)))))
    rule154 = ReplacementRule(pattern154, lambda c, d, x, f, e, b, m, n, a : a**m*c**m*Int((c + d*Tan(e + f*x))**(-m + n)*Sec(e + f*x)**(S(2)*m), x))
    rubi.add(rule154)

    pattern155 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(c_ + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: ZeroQ(a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: IntegerQ(m)), CustomConstraint(lambda n, m: ~(IntegerQ(n) & Greater(n, S(0)) & (Less(m, S(0)) | Less(n, m)))))
    rule155 = ReplacementRule(pattern155, lambda c, d, x, f, e, b, m, n, a : a**m*c**m*Int((c + d*Cot(e + f*x))**(-m + n)*Csc(e + f*x)**(S(2)*m), x))
    rubi.add(rule155)

    pattern156 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(c_ + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: ZeroQ(a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))))
    rule156 = ReplacementRule(pattern156, lambda c, d, x, f, e, b, m, a, n : a*c*Subst(Int((a + b*x)**(m + S(-1))*(c + d*x)**(n + S(-1)), x), x, Tan(e + f*x))/f)
    rubi.add(rule156)

    pattern157 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(c_ + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: ZeroQ(a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))))
    rule157 = ReplacementRule(pattern157, lambda c, d, x, f, e, m, b, n, a : -a*c*Subst(Int((a + b*x)**(m + S(-1))*(c + d*x)**(n + S(-1)), x), x, Cot(e + f*x))/f)
    rubi.add(rule157)

    pattern158 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))*(c_ + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda c, a, d, b: ZeroQ(a*d + b*c)))
    rule158 = ReplacementRule(pattern158, lambda c, d, x, f, e, b, a : b*d*Tan(e + f*x)/f + x*(a*c - b*d))
    rubi.add(rule158)

    pattern159 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))*(c_ + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda c, a, d, b: ZeroQ(a*d + b*c)))
    rule159 = ReplacementRule(pattern159, lambda c, d, x, f, e, b, a : -b*d*Cot(e + f*x)/f + x*(a*c - b*d))
    rubi.add(rule159)

    pattern160 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda c, a, d, b: NonzeroQ(a*d + b*c)))
    rule160 = ReplacementRule(pattern160, lambda c, d, x, f, e, b, a : b*d*Tan(e + f*x)/f + x*(a*c - b*d) + (a*d + b*c)*Int(Tan(e + f*x), x))
    rubi.add(rule160)

    pattern161 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda c, a, d, b: NonzeroQ(a*d + b*c)))
    rule161 = ReplacementRule(pattern161, lambda c, d, x, f, e, b, a : -b*d*Cot(e + f*x)/f + x*(a*c - b*d) + (a*d + b*c)*Int(Cot(e + f*x), x))
    rubi.add(rule161)

    pattern162 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(0))))
    rule162 = ReplacementRule(pattern162, lambda c, d, x, f, e, m, b, a : (a + b*Tan(e + f*x))**m*(a*d - b*c)/(S(2)*a*f*m) + (a*d + b*c)*Int((a + b*Tan(e + f*x))**(m + S(1)), x)/(S(2)*a*b))
    rubi.add(rule162)

    pattern163 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(0))))
    rule163 = ReplacementRule(pattern163, lambda c, d, x, f, e, m, b, a : (a + b*Cot(e + f*x))**m*(-a*d + b*c)/(S(2)*a*f*m) + (a*d + b*c)*Int((a + b*Cot(e + f*x))**(m + S(1)), x)/(S(2)*a*b))
    rubi.add(rule163)

    pattern164 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: ~(RationalQ(m) & Less(m, S(0)))))
    rule164 = ReplacementRule(pattern164, lambda c, d, x, f, e, m, b, a : d*(a + b*Tan(e + f*x))**m/(f*m) + (a*d + b*c)*Int((a + b*Tan(e + f*x))**m, x)/b)
    rubi.add(rule164)

    pattern165 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: ~(RationalQ(m) & Less(m, S(0)))))
    rule165 = ReplacementRule(pattern165, lambda c, d, x, f, e, m, b, a : -d*(a + b*Cot(e + f*x))**m/(f*m) + (a*d + b*c)*Int((a + b*Cot(e + f*x))**m, x)/b)
    rubi.add(rule165)

    pattern166 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Greater(m, S(0))))
    rule166 = ReplacementRule(pattern166, lambda c, d, x, f, e, m, b, a : d*(a + b*Tan(e + f*x))**m/(f*m) + Int((a + b*Tan(e + f*x))**(m + S(-1))*Simp(a*c - b*d + (a*d + b*c)*Tan(e + f*x), x), x))
    rubi.add(rule166)

    pattern167 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Greater(m, S(0))))
    rule167 = ReplacementRule(pattern167, lambda c, d, x, f, e, m, b, a : -d*(a + b*Cot(e + f*x))**m/(f*m) + Int((a + b*Cot(e + f*x))**(m + S(-1))*Simp(a*c - b*d + (a*d + b*c)*Cot(e + f*x), x), x))
    rubi.add(rule167)

    pattern168 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))))
    rule168 = ReplacementRule(pattern168, lambda c, d, x, f, e, m, b, a : Int((a + b*Tan(e + f*x))**(m + S(1))*Simp(a*c + b*d - (-a*d + b*c)*Tan(e + f*x), x), x)/(a**S(2) + b**S(2)) + (a + b*Tan(e + f*x))**(m + S(1))*(-a*d + b*c)/(f*(a**S(2) + b**S(2))*(m + S(1))))
    rubi.add(rule168)

    pattern169 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))))
    rule169 = ReplacementRule(pattern169, lambda c, d, x, f, e, m, b, a : Int((a + b*Cot(e + f*x))**(m + S(1))*Simp(a*c + b*d - (-a*d + b*c)*Cot(e + f*x), x), x)/(a**S(2) + b**S(2)) + (a + b*Cot(e + f*x))**(m + S(1))*(a*d - b*c)/(f*(a**S(2) + b**S(2))*(m + S(1))))
    rubi.add(rule169)

    pattern170 = Pattern(Integral((c_ + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))/(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, b, d, a: ZeroQ(a*c + b*d)))
    rule170 = ReplacementRule(pattern170, lambda c, d, x, f, e, b, a : c*Log(RemoveContent(a*Cos(e + f*x) + b*Sin(e + f*x), x))/(b*f))
    rubi.add(rule170)

    pattern171 = Pattern(Integral((c_ + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))/(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, b, d, a: ZeroQ(a*c + b*d)))
    rule171 = ReplacementRule(pattern171, lambda c, d, x, f, e, b, a : -c*Log(RemoveContent(a*Sin(e + f*x) + b*Cos(e + f*x), x))/(b*f))
    rubi.add(rule171)

    pattern172 = Pattern(Integral((WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))/(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, b, d, a: NonzeroQ(a*c + b*d)))
    rule172 = ReplacementRule(pattern172, lambda c, d, x, f, e, b, a : x*(a*c + b*d)/(a**S(2) + b**S(2)) + (-a*d + b*c)*Int((-a*Tan(e + f*x) + b)/(a + b*Tan(e + f*x)), x)/(a**S(2) + b**S(2)))
    rubi.add(rule172)

    pattern173 = Pattern(Integral((WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))/(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, b, d, a: NonzeroQ(a*c + b*d)))
    rule173 = ReplacementRule(pattern173, lambda c, d, x, f, e, b, a : x*(a*c + b*d)/(a**S(2) + b**S(2)) + (-a*d + b*c)*Int((-a*Cot(e + f*x) + b)/(a + b*Cot(e + f*x)), x)/(a**S(2) + b**S(2)))
    rubi.add(rule173)

    pattern174 = Pattern(Integral((c_ + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))/sqrt(WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, d: ZeroQ(c**S(2) - d**S(2))))
    rule174 = ReplacementRule(pattern174, lambda c, d, x, f, e, b : -S(2)*d**S(2)*Subst(Int(1/(b*x**S(2) + S(2)*c*d), x), x, (c - d*Tan(e + f*x))/Sqrt(b*Tan(e + f*x)))/f)
    rubi.add(rule174)

    pattern175 = Pattern(Integral((c_ + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))/sqrt(WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, d: ZeroQ(c**S(2) - d**S(2))))
    rule175 = ReplacementRule(pattern175, lambda c, d, x, f, e, b : S(2)*d**S(2)*Subst(Int(1/(b*x**S(2) + S(2)*c*d), x), x, (c - d*Cot(e + f*x))/Sqrt(b*Cot(e + f*x)))/f)
    rubi.add(rule175)

    pattern176 = Pattern(Integral((c_ + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))/sqrt(WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, d: ZeroQ(c**S(2) + d**S(2))))
    rule176 = ReplacementRule(pattern176, lambda c, d, x, f, e, b : S(2)*c**S(2)*Subst(Int(1/(b*c - d*x**S(2)), x), x, Sqrt(b*Tan(e + f*x)))/f)
    rubi.add(rule176)

    pattern177 = Pattern(Integral((c_ + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))/sqrt(WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, d: ZeroQ(c**S(2) + d**S(2))))
    rule177 = ReplacementRule(pattern177, lambda c, d, x, f, e, b : -S(2)*c**S(2)*Subst(Int(1/(b*c - d*x**S(2)), x), x, Sqrt(b*Cot(e + f*x)))/f)
    rubi.add(rule177)

    pattern178 = Pattern(Integral((c_ + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))/sqrt(WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) - d**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule178 = ReplacementRule(pattern178, lambda c, d, x, f, e, b : S(2)*Subst(Int((b*c + d*x**S(2))/(b**S(2) + x**S(4)), x), x, Sqrt(b*Tan(e + f*x)))/f)
    rubi.add(rule178)

    pattern179 = Pattern(Integral((c_ + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))/sqrt(WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) - d**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule179 = ReplacementRule(pattern179, lambda c, d, x, f, e, b : -S(2)*Subst(Int((b*c + d*x**S(2))/(b**S(2) + x**S(4)), x), x, Sqrt(b*Cot(e + f*x)))/f)
    rubi.add(rule179)

    pattern180 = Pattern(Integral((WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))/sqrt(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda c, b, d, a: ZeroQ(S(2)*a*c*d - b*(c**S(2) - d**S(2)))))
    rule180 = ReplacementRule(pattern180, lambda c, d, x, f, e, b, a : -S(2)*d**S(2)*Subst(Int(1/(-S(4)*a*d**S(2) + S(2)*b*c*d + x**S(2)), x), x, (-S(2)*a*d + b*c - b*d*Tan(e + f*x))/Sqrt(a + b*Tan(e + f*x)))/f)
    rubi.add(rule180)

    pattern181 = Pattern(Integral((WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))/sqrt(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda c, b, d, a: ZeroQ(S(2)*a*c*d - b*(c**S(2) - d**S(2)))))
    rule181 = ReplacementRule(pattern181, lambda c, d, x, f, e, b, a : S(2)*d**S(2)*Subst(Int(1/(-S(4)*a*d**S(2) + S(2)*b*c*d + x**S(2)), x), x, (-S(2)*a*d + b*c - b*d*Cot(e + f*x))/Sqrt(a + b*Cot(e + f*x)))/f)
    rubi.add(rule181)

    pattern182 = Pattern(Integral((WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))/sqrt(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda c, b, d, a: NonzeroQ(S(2)*a*c*d - b*(c**S(2) - d**S(2)))), CustomConstraint(lambda c, b, d, a: RationalQ(a, b, c, d) | PerfectSquareQ(a**S(2) + b**S(2))))
    rule182 = ReplacementRule(pattern182, lambda c, d, x, f, e, b, a : With(List(Set(q, Rt(a**S(2) + b**S(2), S(2)))), -Int((a*c + b*d - c*q + (-a*d + b*c - d*q)*Tan(e + f*x))/Sqrt(a + b*Tan(e + f*x)), x)/(S(2)*q) + Int((a*c + b*d + c*q + (-a*d + b*c + d*q)*Tan(e + f*x))/Sqrt(a + b*Tan(e + f*x)), x)/(S(2)*q)))
    rubi.add(rule182)

    pattern183 = Pattern(Integral((WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))/sqrt(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda c, b, d, a: NonzeroQ(S(2)*a*c*d - b*(c**S(2) - d**S(2)))), CustomConstraint(lambda c, b, d, a: RationalQ(a, b, c, d) | PerfectSquareQ(a**S(2) + b**S(2))))
    rule183 = ReplacementRule(pattern183, lambda c, d, x, f, e, b, a : With(List(Set(q, Rt(a**S(2) + b**S(2), S(2)))), -Int((a*c + b*d - c*q + (-a*d + b*c - d*q)*Cot(e + f*x))/Sqrt(a + b*Cot(e + f*x)), x)/(S(2)*q) + Int((a*c + b*d + c*q + (-a*d + b*c + d*q)*Cot(e + f*x))/Sqrt(a + b*Cot(e + f*x)), x)/(S(2)*q)))
    rubi.add(rule183)

    pattern184 = Pattern(Integral((c_ + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: ZeroQ(c**S(2) + d**S(2))))
    rule184 = ReplacementRule(pattern184, lambda c, d, x, f, e, m, b, a : c*d*Subst(Int((a + b*x/d)**m/(c*x + d**S(2)), x), x, d*Tan(e + f*x))/f)
    rubi.add(rule184)

    pattern185 = Pattern(Integral((c_ + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: ZeroQ(c**S(2) + d**S(2))))
    rule185 = ReplacementRule(pattern185, lambda c, d, x, f, e, m, b, a : -c*d*Subst(Int((a + b*x/d)**m/(c*x + d**S(2)), x), x, d*Cot(e + f*x))/f)
    rubi.add(rule185)

    pattern186 = Pattern(Integral((WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(c_ + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda m: ~(IntegerQ(S(2)*m))))
    rule186 = ReplacementRule(pattern186, lambda c, d, x, f, e, m, b : c*Int((b*Tan(e + f*x))**m, x) + d*Int((b*Tan(e + f*x))**(m + S(1)), x)/b)
    rubi.add(rule186)

    pattern187 = Pattern(Integral((WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(c_ + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda m: ~(IntegerQ(S(2)*m))))
    rule187 = ReplacementRule(pattern187, lambda c, d, x, f, e, m, b : c*Int((b*Cot(e + f*x))**m, x) + d*Int((b*Cot(e + f*x))**(m + S(1)), x)/b)
    rubi.add(rule187)

    pattern188 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda m: ~(IntegerQ(m))))
    rule188 = ReplacementRule(pattern188, lambda c, d, x, f, e, m, b, a : (-ImaginaryI*d/S(2) + c/S(2))*Int((a + b*Tan(e + f*x))**m*(ImaginaryI*Tan(e + f*x) + S(1)), x) + (ImaginaryI*d/S(2) + c/S(2))*Int((a + b*Tan(e + f*x))**m*(-ImaginaryI*Tan(e + f*x) + S(1)), x))
    rubi.add(rule188)

    pattern189 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda m: ~(IntegerQ(m))))
    rule189 = ReplacementRule(pattern189, lambda c, d, x, f, e, m, b, a : (-ImaginaryI*d/S(2) + c/S(2))*Int((a + b*Cot(e + f*x))**m*(ImaginaryI*Cot(e + f*x) + S(1)), x) + (ImaginaryI*d/S(2) + c/S(2))*Int((a + b*Cot(e + f*x))**m*(-ImaginaryI*Cot(e + f*x) + S(1)), x))
    rubi.add(rule189)

    pattern190 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**S(2), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: LessEqual(m, S(-1))), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))))
    rule190 = ReplacementRule(pattern190, lambda c, d, x, f, e, m, b, a : Int((a + b*Tan(e + f*x))**(m + S(1))*Simp(a*c**S(2) + a*d**S(2) - S(2)*b*c*d - S(2)*b*d**S(2)*Tan(e + f*x), x), x)/(S(2)*a**S(2)) - b*(a + b*Tan(e + f*x))**m*(a*c + b*d)**S(2)/(S(2)*a**S(3)*f*m))
    rubi.add(rule190)

    pattern191 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**S(2), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: LessEqual(m, S(-1))), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))))
    rule191 = ReplacementRule(pattern191, lambda c, d, x, f, e, m, b, a : Int((a + b*Cot(e + f*x))**(m + S(1))*Simp(a*c**S(2) + a*d**S(2) - S(2)*b*c*d - S(2)*b*d**S(2)*Cot(e + f*x), x), x)/(S(2)*a**S(2)) + b*(a + b*Cot(e + f*x))**m*(a*c + b*d)**S(2)/(S(2)*a**S(3)*f*m))
    rubi.add(rule191)

    pattern192 = Pattern(Integral((WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**S(2)/(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))))
    rule192 = ReplacementRule(pattern192, lambda c, d, x, f, e, b, a : d**S(2)*Int(Tan(e + f*x), x)/b + d*x*(-a*d + S(2)*b*c)/b**S(2) + (-a*d + b*c)**S(2)*Int(1/(a + b*Tan(e + f*x)), x)/b**S(2))
    rubi.add(rule192)

    pattern193 = Pattern(Integral((WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**S(2)/(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))))
    rule193 = ReplacementRule(pattern193, lambda c, d, x, f, e, b, a : d**S(2)*Int(Cot(e + f*x), x)/b + d*x*(-a*d + S(2)*b*c)/b**S(2) + (-a*d + b*c)**S(2)*Int(1/(a + b*Cot(e + f*x)), x)/b**S(2))
    rubi.add(rule193)

    pattern194 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**S(2), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))))
    rule194 = ReplacementRule(pattern194, lambda c, d, x, f, e, m, b, a : Int((a + b*Tan(e + f*x))**(m + S(1))*Simp(a*c**S(2) - a*d**S(2) + S(2)*b*c*d - (-S(2)*a*c*d + b*c**S(2) - b*d**S(2))*Tan(e + f*x), x), x)/(a**S(2) + b**S(2)) + (a + b*Tan(e + f*x))**(m + S(1))*(-a*d + b*c)**S(2)/(b*f*(a**S(2) + b**S(2))*(m + S(1))))
    rubi.add(rule194)

    pattern195 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**S(2), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))))
    rule195 = ReplacementRule(pattern195, lambda c, d, x, f, e, m, b, a : Int((a + b*Cot(e + f*x))**(m + S(1))*Simp(a*c**S(2) - a*d**S(2) + S(2)*b*c*d - (-S(2)*a*c*d + b*c**S(2) - b*d**S(2))*Cot(e + f*x), x), x)/(a**S(2) + b**S(2)) - (a + b*Cot(e + f*x))**(m + S(1))*(-a*d + b*c)**S(2)/(b*f*(a**S(2) + b**S(2))*(m + S(1))))
    rubi.add(rule195)

    pattern196 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**S(2), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda m: ~(RationalQ(m) & LessEqual(m, S(-1)))), CustomConstraint(lambda a, m: ~(ZeroQ(a) & ZeroQ(m + S(-2)))))
    rule196 = ReplacementRule(pattern196, lambda c, d, x, f, e, m, b, a : Int((a + b*Tan(e + f*x))**m*Simp(c**S(2) + S(2)*c*d*Tan(e + f*x) - d**S(2), x), x) + d**S(2)*(a + b*Tan(e + f*x))**(m + S(1))/(b*f*(m + S(1))))
    rubi.add(rule196)

    pattern197 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**S(2), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda m: ~(RationalQ(m) & LessEqual(m, S(-1)))), CustomConstraint(lambda a, m: ~(ZeroQ(a) & ZeroQ(m + S(-2)))))
    rule197 = ReplacementRule(pattern197, lambda c, d, x, f, e, m, b, a : Int((a + b*Cot(e + f*x))**m*Simp(c**S(2) + S(2)*c*d*Cot(e + f*x) - d**S(2), x), x) - d**S(2)*(a + b*Cot(e + f*x))**(m + S(1))/(b*f*(m + S(1))))
    rubi.add(rule197)

    pattern198 = Pattern(Integral(sqrt(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))/sqrt(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule198 = ReplacementRule(pattern198, lambda c, d, x, f, e, b, a : -S(2)*a*b*Subst(Int(1/(-S(2)*a**S(2)*x**S(2) + a*c - b*d), x), x, Sqrt(c + d*Tan(e + f*x))/Sqrt(a + b*Tan(e + f*x)))/f)
    rubi.add(rule198)

    pattern199 = Pattern(Integral(sqrt(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))/sqrt(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule199 = ReplacementRule(pattern199, lambda c, d, x, f, e, b, a : S(2)*a*b*Subst(Int(1/(-S(2)*a**S(2)*x**S(2) + a*c - b*d), x), x, Sqrt(c + d*Cot(e + f*x))/Sqrt(a + b*Cot(e + f*x)))/f)
    rubi.add(rule199)

    pattern200 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda n, m: Equal(m + n, S(0))), CustomConstraint(lambda m: Greater(m, S(1)/2)))
    rule200 = ReplacementRule(pattern200, lambda c, d, x, f, e, m, b, n, a : S(2)*a**S(2)*Int((a + b*Tan(e + f*x))**(m + S(-1))*(c + d*Tan(e + f*x))**(n + S(1)), x)/(a*c - b*d) + a*b*(a + b*Tan(e + f*x))**(m + S(-1))*(c + d*Tan(e + f*x))**(n + S(1))/(f*(m + S(-1))*(a*c - b*d)))
    rubi.add(rule200)

    pattern201 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda n, m: Equal(m + n, S(0))), CustomConstraint(lambda m: Greater(m, S(1)/2)))
    rule201 = ReplacementRule(pattern201, lambda c, d, x, f, e, m, b, n, a : S(2)*a**S(2)*Int((a + b*Cot(e + f*x))**(m + S(-1))*(c + d*Cot(e + f*x))**(n + S(1)), x)/(a*c - b*d) - a*b*(a + b*Cot(e + f*x))**(m + S(-1))*(c + d*Cot(e + f*x))**(n + S(1))/(f*(m + S(-1))*(a*c - b*d)))
    rubi.add(rule201)

    pattern202 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda n, m: Equal(m + n, S(0))), CustomConstraint(lambda m: LessEqual(m, S(-1)/2)))
    rule202 = ReplacementRule(pattern202, lambda c, d, x, f, e, m, b, n, a : a*(a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**n/(S(2)*b*f*m) - (a*c - b*d)*Int((a + b*Tan(e + f*x))**(m + S(1))*(c + d*Tan(e + f*x))**(n + S(-1)), x)/(S(2)*b**S(2)))
    rubi.add(rule202)

    pattern203 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda n, m: Equal(m + n, S(0))), CustomConstraint(lambda m: LessEqual(m, S(-1)/2)))
    rule203 = ReplacementRule(pattern203, lambda c, d, x, f, e, m, b, n, a : -a*(a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**n/(S(2)*b*f*m) - (a*c - b*d)*Int((a + b*Cot(e + f*x))**(m + S(1))*(c + d*Cot(e + f*x))**(n + S(-1)), x)/(S(2)*b**S(2)))
    rubi.add(rule203)

    pattern204 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda n, m: Equal(m + n + S(1), S(0))), CustomConstraint(lambda m: Less(m, S(-1))))
    rule204 = ReplacementRule(pattern204, lambda c, d, x, f, e, m, b, n, a : a*(a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**(n + S(1))/(S(2)*f*m*(-a*d + b*c)) + Int((a + b*Tan(e + f*x))**(m + S(1))*(c + d*Tan(e + f*x))**n, x)/(S(2)*a))
    rubi.add(rule204)

    pattern205 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda n, m: Equal(m + n + S(1), S(0))), CustomConstraint(lambda m: Less(m, S(-1))))
    rule205 = ReplacementRule(pattern205, lambda c, d, x, f, e, m, b, n, a : -a*(a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**(n + S(1))/(S(2)*f*m*(-a*d + b*c)) + Int((a + b*Cot(e + f*x))**(m + S(1))*(c + d*Cot(e + f*x))**n, x)/(S(2)*a))
    rubi.add(rule205)

    pattern206 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n, m: ZeroQ(m + n + S(1))), CustomConstraint(lambda m: ~(RationalQ(m) & Less(m, S(-1)))))
    rule206 = ReplacementRule(pattern206, lambda c, d, x, f, e, m, b, n, a : a*Int((a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**(n + S(1)), x)/(a*c - b*d) - d*(a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**(n + S(1))/(f*m*(c**S(2) + d**S(2))))
    rubi.add(rule206)

    pattern207 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n, m: ZeroQ(m + n + S(1))), CustomConstraint(lambda m: ~(RationalQ(m) & Less(m, S(-1)))))
    rule207 = ReplacementRule(pattern207, lambda c, d, x, f, e, m, b, n, a : a*Int((a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**(n + S(1)), x)/(a*c - b*d) + d*(a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**(n + S(1))/(f*m*(c**S(2) + d**S(2))))
    rubi.add(rule207)

    pattern208 = Pattern(Integral((WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_/(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(S(0), n, S(1))))
    rule208 = ReplacementRule(pattern208, lambda c, d, x, f, e, b, n, a : (c + d*Tan(e + f*x))**n*(-a*c - b*d)/(S(2)*f*(a + b*Tan(e + f*x))*(-a*d + b*c)) + Int((c + d*Tan(e + f*x))**(n + S(-1))*Simp(a*c*d*(n + S(-1)) + b*c**S(2) + b*d**S(2)*n - d*(n + S(-1))*(-a*d + b*c)*Tan(e + f*x), x), x)/(S(2)*a*(-a*d + b*c)))
    rubi.add(rule208)

    pattern209 = Pattern(Integral((WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_/(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(S(0), n, S(1))))
    rule209 = ReplacementRule(pattern209, lambda c, d, x, f, e, b, n, a : (c + d*Cot(e + f*x))**n*(a*c + b*d)/(S(2)*f*(a + b*Cot(e + f*x))*(-a*d + b*c)) + Int((c + d*Cot(e + f*x))**(n + S(-1))*Simp(a*c*d*(n + S(-1)) + b*c**S(2) + b*d**S(2)*n - d*(n + S(-1))*(-a*d + b*c)*Cot(e + f*x), x), x)/(S(2)*a*(-a*d + b*c)))
    rubi.add(rule209)

    pattern210 = Pattern(Integral((WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_/(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Greater(n, S(1))))
    rule210 = ReplacementRule(pattern210, lambda c, d, x, f, e, b, n, a : (c + d*Tan(e + f*x))**(n + S(-1))*(-a*d + b*c)/(S(2)*a*f*(a + b*Tan(e + f*x))) + Int((c + d*Tan(e + f*x))**(n + S(-2))*Simp(a*c**S(2) + a*d**S(2)*(n + S(-1)) - b*c*d*n - d*(a*c*(n + S(-2)) + b*d*n)*Tan(e + f*x), x), x)/(S(2)*a**S(2)))
    rubi.add(rule210)

    pattern211 = Pattern(Integral((WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_/(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Greater(n, S(1))))
    rule211 = ReplacementRule(pattern211, lambda c, d, x, f, e, b, n, a : (c + d*Cot(e + f*x))**(n + S(-1))*(a*d - b*c)/(S(2)*a*f*(a + b*Cot(e + f*x))) + Int((c + d*Cot(e + f*x))**(n + S(-2))*Simp(a*c**S(2) + a*d**S(2)*(n + S(-1)) - b*c*d*n - d*(a*c*(n + S(-2)) + b*d*n)*Cot(e + f*x), x), x)/(S(2)*a**S(2)))
    rubi.add(rule211)

    pattern212 = Pattern(Integral(S(1)/((WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule212 = ReplacementRule(pattern212, lambda c, d, x, f, e, b, a : b*Int(1/(a + b*Tan(e + f*x)), x)/(-a*d + b*c) - d*Int(1/(c + d*Tan(e + f*x)), x)/(-a*d + b*c))
    rubi.add(rule212)

    pattern213 = Pattern(Integral(S(1)/((WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule213 = ReplacementRule(pattern213, lambda c, d, x, f, e, b, a : b*Int(1/(a + b*Cot(e + f*x)), x)/(-a*d + b*c) - d*Int(1/(c + d*Cot(e + f*x)), x)/(-a*d + b*c))
    rubi.add(rule213)

    pattern214 = Pattern(Integral((WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_/(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n: ~(RationalQ(n) & Greater(n, S(0)))))
    rule214 = ReplacementRule(pattern214, lambda c, d, x, f, e, b, n, a : -a*(c + d*Tan(e + f*x))**(n + S(1))/(S(2)*f*(a + b*Tan(e + f*x))*(-a*d + b*c)) + Int((c + d*Tan(e + f*x))**n*Simp(a*d*(n + S(-1)) + b*c - b*d*n*Tan(e + f*x), x), x)/(S(2)*a*(-a*d + b*c)))
    rubi.add(rule214)

    pattern215 = Pattern(Integral((WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_/(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n: ~(RationalQ(n) & Greater(n, S(0)))))
    rule215 = ReplacementRule(pattern215, lambda c, d, x, f, e, b, n, a : a*(c + d*Cot(e + f*x))**(n + S(1))/(S(2)*f*(a + b*Cot(e + f*x))*(-a*d + b*c)) + Int((c + d*Cot(e + f*x))**n*Simp(a*d*(n + S(-1)) + b*c - b*d*n*Cot(e + f*x), x), x)/(S(2)*a*(-a*d + b*c)))
    rubi.add(rule215)

    pattern216 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Greater(m, S(1))), CustomConstraint(lambda n: Less(n, S(-1))), CustomConstraint(lambda n, m: IntegerQ(m) | IntegersQ(S(2)*m, S(2)*n)))
    rule216 = ReplacementRule(pattern216, lambda c, d, x, f, e, m, b, n, a : -a**S(2)*(a + b*Tan(e + f*x))**(m + S(-2))*(c + d*Tan(e + f*x))**(n + S(1))*(-a*d + b*c)/(d*f*(n + S(1))*(a*d + b*c)) + a*Int((a + b*Tan(e + f*x))**(m + S(-2))*(c + d*Tan(e + f*x))**(n + S(1))*Simp(b*(-a*d*(m - S(2)*n + S(-4)) + b*c*(m + S(-2))) + (-a**S(2)*d*(m + n + S(-1)) + a*b*c*(m + S(-2)) + b**S(2)*d*(n + S(1)))*Tan(e + f*x), x), x)/(d*(n + S(1))*(a*d + b*c)))
    rubi.add(rule216)

    pattern217 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Greater(m, S(1))), CustomConstraint(lambda n: Less(n, S(-1))), CustomConstraint(lambda n, m: IntegerQ(m) | IntegersQ(S(2)*m, S(2)*n)))
    rule217 = ReplacementRule(pattern217, lambda c, d, x, f, e, m, b, n, a : a**S(2)*(a + b*Cot(e + f*x))**(m + S(-2))*(c + d*Cot(e + f*x))**(n + S(1))*(-a*d + b*c)/(d*f*(n + S(1))*(a*d + b*c)) + a*Int((a + b*Cot(e + f*x))**(m + S(-2))*(c + d*Cot(e + f*x))**(n + S(1))*Simp(b*(-a*d*(m - S(2)*n + S(-4)) + b*c*(m + S(-2))) + (-a**S(2)*d*(m + n + S(-1)) + a*b*c*(m + S(-2)) + b**S(2)*d*(n + S(1)))*Cot(e + f*x), x), x)/(d*(n + S(1))*(a*d + b*c)))
    rubi.add(rule217)

    pattern218 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**(S(3)/2)/(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule218 = ReplacementRule(pattern218, lambda c, d, x, f, e, b, a : S(2)*a**S(2)*Int(Sqrt(a + b*Tan(e + f*x)), x)/(a*c - b*d) - (a*(c**S(2) - d**S(2)) + S(2)*b*c*d)*Int((a - b*Tan(e + f*x))*Sqrt(a + b*Tan(e + f*x))/(c + d*Tan(e + f*x)), x)/(a*(c**S(2) + d**S(2))))
    rubi.add(rule218)

    pattern219 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**(S(3)/2)/(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule219 = ReplacementRule(pattern219, lambda c, d, x, f, e, b, a : S(2)*a**S(2)*Int(Sqrt(a + b*Cot(e + f*x)), x)/(a*c - b*d) - (a*(c**S(2) - d**S(2)) + S(2)*b*c*d)*Int((a - b*Cot(e + f*x))*Sqrt(a + b*Cot(e + f*x))/(c + d*Cot(e + f*x)), x)/(a*(c**S(2) + d**S(2))))
    rubi.add(rule219)

    pattern220 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**(S(3)/2)/sqrt(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule220 = ReplacementRule(pattern220, lambda c, d, x, f, e, b, a : S(2)*a*Int(Sqrt(a + b*Tan(e + f*x))/Sqrt(c + d*Tan(e + f*x)), x) + b*Int((a*Tan(e + f*x) + b)*Sqrt(a + b*Tan(e + f*x))/Sqrt(c + d*Tan(e + f*x)), x)/a)
    rubi.add(rule220)

    pattern221 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**(S(3)/2)/sqrt(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule221 = ReplacementRule(pattern221, lambda c, d, x, f, e, b, a : S(2)*a*Int(Sqrt(a + b*Cot(e + f*x))/Sqrt(c + d*Cot(e + f*x)), x) + b*Int((a*Cot(e + f*x) + b)*Sqrt(a + b*Cot(e + f*x))/Sqrt(c + d*Cot(e + f*x)), x)/a)
    rubi.add(rule221)

    pattern222 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda m: IntegerQ(S(2)*m)), CustomConstraint(lambda m: Greater(m, S(1))), CustomConstraint(lambda n, m: NonzeroQ(m + n + S(-1))), CustomConstraint(lambda n, m: IntegerQ(m) | IntegersQ(S(2)*m, S(2)*n)))
    rule222 = ReplacementRule(pattern222, lambda c, d, x, f, e, m, b, n, a : a*Int((a + b*Tan(e + f*x))**(m + S(-2))*(c + d*Tan(e + f*x))**n*Simp(a*d*(m + S(2)*n) + b*c*(m + S(-2)) + (a*c*(m + S(-2)) + b*d*(S(3)*m + S(2)*n + S(-4)))*Tan(e + f*x), x), x)/(d*(m + n + S(-1))) + b**S(2)*(a + b*Tan(e + f*x))**(m + S(-2))*(c + d*Tan(e + f*x))**(n + S(1))/(d*f*(m + n + S(-1))))
    rubi.add(rule222)

    pattern223 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda m: IntegerQ(S(2)*m)), CustomConstraint(lambda m: Greater(m, S(1))), CustomConstraint(lambda n, m: NonzeroQ(m + n + S(-1))), CustomConstraint(lambda n, m: IntegerQ(m) | IntegersQ(S(2)*m, S(2)*n)))
    rule223 = ReplacementRule(pattern223, lambda c, d, x, f, e, m, b, n, a : a*Int((a + b*Cot(e + f*x))**(m + S(-2))*(c + d*Cot(e + f*x))**n*Simp(a*d*(m + S(2)*n) + b*c*(m + S(-2)) + (a*c*(m + S(-2)) + b*d*(S(3)*m + S(2)*n + S(-4)))*Cot(e + f*x), x), x)/(d*(m + n + S(-1))) - b**S(2)*(a + b*Cot(e + f*x))**(m + S(-2))*(c + d*Cot(e + f*x))**(n + S(1))/(d*f*(m + n + S(-1))))
    rubi.add(rule223)

    pattern224 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*sqrt(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(0))), CustomConstraint(lambda m: IntegersQ(S(2)*m)))
    rule224 = ReplacementRule(pattern224, lambda c, d, x, f, e, m, b, a : -b*(a + b*Tan(e + f*x))**m*Sqrt(c + d*Tan(e + f*x))/(S(2)*a*f*m) + Int((a + b*Tan(e + f*x))**(m + S(1))*Simp(S(2)*a*c*m + a*d*(S(2)*m + S(1))*Tan(e + f*x) + b*d, x)/Sqrt(c + d*Tan(e + f*x)), x)/(S(4)*a**S(2)*m))
    rubi.add(rule224)

    pattern225 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*sqrt(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(0))), CustomConstraint(lambda m: IntegersQ(S(2)*m)))
    rule225 = ReplacementRule(pattern225, lambda c, d, x, f, e, m, b, a : b*(a + b*Cot(e + f*x))**m*Sqrt(c + d*Cot(e + f*x))/(S(2)*a*f*m) + Int((a + b*Cot(e + f*x))**(m + S(1))*Simp(S(2)*a*c*m + a*d*(S(2)*m + S(1))*Cot(e + f*x) + b*d, x)/Sqrt(c + d*Cot(e + f*x)), x)/(S(4)*a**S(2)*m))
    rubi.add(rule225)

    pattern226 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Less(m, S(0))), CustomConstraint(lambda n: Greater(n, S(1))), CustomConstraint(lambda n, m: IntegerQ(m) | IntegersQ(S(2)*m, S(2)*n)))
    rule226 = ReplacementRule(pattern226, lambda c, d, x, f, e, m, b, n, a : (a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**(n + S(-1))*(a*d - b*c)/(S(2)*a*f*m) + Int((a + b*Tan(e + f*x))**(m + S(1))*(c + d*Tan(e + f*x))**(n + S(-2))*Simp(c*(a*c*m + b*d*(n + S(-1))) - d*(-a*c*(m + n + S(-1)) + b*d*(m - n + S(1)))*Tan(e + f*x) - d*(a*d*(n + S(-1)) + b*c*m), x), x)/(S(2)*a**S(2)*m))
    rubi.add(rule226)

    pattern227 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Less(m, S(0))), CustomConstraint(lambda n: Greater(n, S(1))), CustomConstraint(lambda n, m: IntegerQ(m) | IntegersQ(S(2)*m, S(2)*n)))
    rule227 = ReplacementRule(pattern227, lambda c, d, x, f, e, m, b, n, a : (a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**(n + S(-1))*(-a*d + b*c)/(S(2)*a*f*m) + Int((a + b*Cot(e + f*x))**(m + S(1))*(c + d*Cot(e + f*x))**(n + S(-2))*Simp(c*(a*c*m + b*d*(n + S(-1))) - d*(-a*c*(m + n + S(-1)) + b*d*(m - n + S(1)))*Cot(e + f*x) - d*(a*d*(n + S(-1)) + b*c*m), x), x)/(S(2)*a**S(2)*m))
    rubi.add(rule227)

    pattern228 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(0))), CustomConstraint(lambda n, m: IntegerQ(m) | IntegersQ(S(2)*m, S(2)*n)))
    rule228 = ReplacementRule(pattern228, lambda c, d, x, f, e, m, b, n, a : a*(a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**(n + S(1))/(S(2)*f*m*(-a*d + b*c)) + Int((a + b*Tan(e + f*x))**(m + S(1))*(c + d*Tan(e + f*x))**n*Simp(-a*d*(S(2)*m + n + S(1)) + b*c*m + b*d*(m + n + S(1))*Tan(e + f*x), x), x)/(S(2)*a*m*(-a*d + b*c)))
    rubi.add(rule228)

    pattern229 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(0))), CustomConstraint(lambda n, m: IntegerQ(m) | IntegersQ(S(2)*m, S(2)*n)))
    rule229 = ReplacementRule(pattern229, lambda c, d, x, f, e, m, b, n, a : -a*(a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**(n + S(1))/(S(2)*f*m*(-a*d + b*c)) + Int((a + b*Cot(e + f*x))**(m + S(1))*(c + d*Cot(e + f*x))**n*Simp(-a*d*(S(2)*m + n + S(1)) + b*c*m + b*d*(m + n + S(1))*Cot(e + f*x), x), x)/(S(2)*a*m*(-a*d + b*c)))
    rubi.add(rule229)

    pattern230 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Greater(n, S(1))), CustomConstraint(lambda n, m: NonzeroQ(m + n + S(-1))), CustomConstraint(lambda n, m: IntegerQ(n) | IntegersQ(S(2)*m, S(2)*n)))
    rule230 = ReplacementRule(pattern230, lambda c, d, x, f, e, m, b, n, a : d*(a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**(n + S(-1))/(f*(m + n + S(-1))) - Int((a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**(n + S(-2))*Simp(-a*c**S(2)*(m + n + S(-1)) + d*(-a*c*(m + S(2)*n + S(-2)) + b*d*m)*Tan(e + f*x) + d*(a*d*(n + S(-1)) + b*c*m), x), x)/(a*(m + n + S(-1))))
    rubi.add(rule230)

    pattern231 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Greater(n, S(1))), CustomConstraint(lambda n, m: NonzeroQ(m + n + S(-1))), CustomConstraint(lambda n, m: IntegerQ(n) | IntegersQ(S(2)*m, S(2)*n)))
    rule231 = ReplacementRule(pattern231, lambda c, d, x, f, e, m, b, n, a : -d*(a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**(n + S(-1))/(f*(m + n + S(-1))) - Int((a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**(n + S(-2))*Simp(-a*c**S(2)*(m + n + S(-1)) + d*(-a*c*(m + S(2)*n + S(-2)) + b*d*m)*Cot(e + f*x) + d*(a*d*(n + S(-1)) + b*c*m), x), x)/(a*(m + n + S(-1))))
    rubi.add(rule231)

    pattern232 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, S(-1))), CustomConstraint(lambda n, m: IntegerQ(n) | IntegersQ(S(2)*m, S(2)*n)))
    rule232 = ReplacementRule(pattern232, lambda c, d, x, f, e, m, b, n, a : d*(a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**(n + S(1))/(f*(c**S(2) + d**S(2))*(n + S(1))) - Int((a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**(n + S(1))*Simp(-a*c*(n + S(1)) + a*d*(m + n + S(1))*Tan(e + f*x) + b*d*m, x), x)/(a*(c**S(2) + d**S(2))*(n + S(1))))
    rubi.add(rule232)

    pattern233 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, S(-1))), CustomConstraint(lambda n, m: IntegerQ(n) | IntegersQ(S(2)*m, S(2)*n)))
    rule233 = ReplacementRule(pattern233, lambda c, d, x, f, e, m, b, n, a : -d*(a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**(n + S(1))/(f*(c**S(2) + d**S(2))*(n + S(1))) - Int((a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**(n + S(1))*Simp(-a*c*(n + S(1)) + a*d*(m + n + S(1))*Cot(e + f*x) + b*d*m, x), x)/(a*(c**S(2) + d**S(2))*(n + S(1))))
    rubi.add(rule233)

    pattern234 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_/(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule234 = ReplacementRule(pattern234, lambda c, d, x, f, e, m, b, a : a*Int((a + b*Tan(e + f*x))**m, x)/(a*c - b*d) - d*Int((a + b*Tan(e + f*x))**m*(a*Tan(e + f*x) + b)/(c + d*Tan(e + f*x)), x)/(a*c - b*d))
    rubi.add(rule234)

    pattern235 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_/(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule235 = ReplacementRule(pattern235, lambda c, d, x, f, e, m, b, a : a*Int((a + b*Cot(e + f*x))**m, x)/(a*c - b*d) - d*Int((a + b*Cot(e + f*x))**m*(a*Cot(e + f*x) + b)/(c + d*Cot(e + f*x)), x)/(a*c - b*d))
    rubi.add(rule235)

    pattern236 = Pattern(Integral(sqrt(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))*sqrt(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule236 = ReplacementRule(pattern236, lambda c, d, x, f, e, b, a : d*Int((a*Tan(e + f*x) + b)*Sqrt(a + b*Tan(e + f*x))/Sqrt(c + d*Tan(e + f*x)), x)/a + (a*c - b*d)*Int(Sqrt(a + b*Tan(e + f*x))/Sqrt(c + d*Tan(e + f*x)), x)/a)
    rubi.add(rule236)

    pattern237 = Pattern(Integral(sqrt(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))*sqrt(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule237 = ReplacementRule(pattern237, lambda c, d, x, f, e, b, a : d*Int((a*Cot(e + f*x) + b)*Sqrt(a + b*Cot(e + f*x))/Sqrt(c + d*Cot(e + f*x)), x)/a + (a*c - b*d)*Int(Sqrt(a + b*Cot(e + f*x))/Sqrt(c + d*Cot(e + f*x)), x)/a)
    rubi.add(rule237)

    pattern238 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule238 = ReplacementRule(pattern238, lambda c, d, x, f, e, m, b, n, a : a*b*Subst(Int((a + x)**(m + S(-1))*(c + d*x/b)**n/(a*x + b**S(2)), x), x, b*Tan(e + f*x))/f)
    rubi.add(rule238)

    pattern239 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule239 = ReplacementRule(pattern239, lambda c, d, x, f, e, m, b, n, a : -a*b*Subst(Int((a + x)**(m + S(-1))*(c + d*x/b)**n/(a*x + b**S(2)), x), x, b*Cot(e + f*x))/f)
    rubi.add(rule239)

    pattern240 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Greater(m, S(2))), CustomConstraint(lambda n: Less(n, S(-1))), CustomConstraint(lambda m: IntegerQ(S(2)*m)))
    rule240 = ReplacementRule(pattern240, lambda c, d, x, f, e, m, b, n, a : -Int((a + b*Tan(e + f*x))**(m + S(-3))*(c + d*Tan(e + f*x))**(n + S(1))*Simp(a**S(2)*d*(-a*c*(n + S(1)) + b*d*(m + S(-2))) + b*(-S(2)*a*d + b*c)*(a*d*(n + S(1)) + b*c*(m + S(-2))) - b*(a*d*(-a*d + S(2)*b*c)*(m + n + S(-1)) - b**S(2)*(c**S(2)*(m + S(-2)) - d**S(2)*(n + S(1))))*Tan(e + f*x)**S(2) - d*(n + S(1))*(-a**S(3)*d + S(3)*a**S(2)*b*c + S(3)*a*b**S(2)*d - b**S(3)*c)*Tan(e + f*x), x), x)/(d*(c**S(2) + d**S(2))*(n + S(1))) + (a + b*Tan(e + f*x))**(m + S(-2))*(c + d*Tan(e + f*x))**(n + S(1))*(-a*d + b*c)**S(2)/(d*f*(c**S(2) + d**S(2))*(n + S(1))))
    rubi.add(rule240)

    pattern241 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Greater(m, S(2))), CustomConstraint(lambda n: Less(n, S(-1))), CustomConstraint(lambda m: IntegerQ(S(2)*m)))
    rule241 = ReplacementRule(pattern241, lambda c, d, x, f, e, m, b, n, a : -Int((a + b*Cot(e + f*x))**(m + S(-3))*(c + d*Cot(e + f*x))**(n + S(1))*Simp(a**S(2)*d*(-a*c*(n + S(1)) + b*d*(m + S(-2))) + b*(-S(2)*a*d + b*c)*(a*d*(n + S(1)) + b*c*(m + S(-2))) - b*(a*d*(-a*d + S(2)*b*c)*(m + n + S(-1)) - b**S(2)*(c**S(2)*(m + S(-2)) - d**S(2)*(n + S(1))))*Cot(e + f*x)**S(2) - d*(n + S(1))*(-a**S(3)*d + S(3)*a**S(2)*b*c + S(3)*a*b**S(2)*d - b**S(3)*c)*Cot(e + f*x), x), x)/(d*(c**S(2) + d**S(2))*(n + S(1))) - (a + b*Cot(e + f*x))**(m + S(-2))*(c + d*Cot(e + f*x))**(n + S(1))*(-a*d + b*c)**S(2)/(d*f*(c**S(2) + d**S(2))*(n + S(1))))
    rubi.add(rule241)

    pattern242 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda m: IntegerQ(S(2)*m)), CustomConstraint(lambda m: Greater(m, S(2))), CustomConstraint(lambda n, m: IntegerQ(m) | (RationalQ(n) & GreaterEqual(n, S(-1)))), CustomConstraint(lambda n, c, a, m: ~(IntegerQ(n) & Greater(n, S(2)) & (~(IntegerQ(m)) | (NonzeroQ(a) & ZeroQ(c))))))
    rule242 = ReplacementRule(pattern242, lambda c, d, x, f, e, m, b, n, a : b**S(2)*(a + b*Tan(e + f*x))**(m + S(-2))*(c + d*Tan(e + f*x))**(n + S(1))/(d*f*(m + n + S(-1))) + Int((a + b*Tan(e + f*x))**(m + S(-3))*(c + d*Tan(e + f*x))**n*Simp(a**S(3)*d*(m + n + S(-1)) - b**S(2)*(a*d*(n + S(1)) + b*c*(m + S(-2))) - b**S(2)*(-a*d*(S(3)*m + S(2)*n + S(-4)) + b*c*(m + S(-2)))*Tan(e + f*x)**S(2) + b*d*(S(3)*a**S(2) - b**S(2))*(m + n + S(-1))*Tan(e + f*x), x), x)/(d*(m + n + S(-1))))
    rubi.add(rule242)

    pattern243 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda m: IntegerQ(S(2)*m)), CustomConstraint(lambda m: Greater(m, S(2))), CustomConstraint(lambda n, m: IntegerQ(m) | (RationalQ(n) & GreaterEqual(n, S(-1)))), CustomConstraint(lambda n, c, a, m: ~(IntegerQ(n) & Greater(n, S(2)) & (~(IntegerQ(m)) | (NonzeroQ(a) & ZeroQ(c))))))
    rule243 = ReplacementRule(pattern243, lambda c, d, x, f, e, m, b, n, a : -b**S(2)*(a + b*Cot(e + f*x))**(m + S(-2))*(c + d*Cot(e + f*x))**(n + S(1))/(d*f*(m + n + S(-1))) + Int((a + b*Cot(e + f*x))**(m + S(-3))*(c + d*Cot(e + f*x))**n*Simp(a**S(3)*d*(m + n + S(-1)) - b**S(2)*(a*d*(n + S(1)) + b*c*(m + S(-2))) - b**S(2)*(-a*d*(S(3)*m + S(2)*n + S(-4)) + b*c*(m + S(-2)))*Cot(e + f*x)**S(2) + b*d*(S(3)*a**S(2) - b**S(2))*(m + n + S(-1))*Cot(e + f*x), x), x)/(d*(m + n + S(-1))))
    rubi.add(rule243)

    pattern244 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda n: Less(S(1), n, S(2))), CustomConstraint(lambda m: IntegerQ(S(2)*m)))
    rule244 = ReplacementRule(pattern244, lambda c, d, x, f, e, m, b, n, a : Int((a + b*Tan(e + f*x))**(m + S(1))*(c + d*Tan(e + f*x))**(n + S(-2))*Simp(a*c**S(2)*(m + S(1)) + a*d**S(2)*(n + S(-1)) + b*c*d*(m - n + S(2)) - d*(m + n)*(-a*d + b*c)*Tan(e + f*x)**S(2) - (m + S(1))*(-S(2)*a*c*d + b*c**S(2) - b*d**S(2))*Tan(e + f*x), x), x)/((a**S(2) + b**S(2))*(m + S(1))) + (a + b*Tan(e + f*x))**(m + S(1))*(c + d*Tan(e + f*x))**(n + S(-1))*(-a*d + b*c)/(f*(a**S(2) + b**S(2))*(m + S(1))))
    rubi.add(rule244)

    pattern245 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda n: Less(S(1), n, S(2))), CustomConstraint(lambda m: IntegerQ(S(2)*m)))
    rule245 = ReplacementRule(pattern245, lambda c, d, x, f, e, m, b, n, a : Int((a + b*Cot(e + f*x))**(m + S(1))*(c + d*Cot(e + f*x))**(n + S(-2))*Simp(a*c**S(2)*(m + S(1)) + a*d**S(2)*(n + S(-1)) + b*c*d*(m - n + S(2)) - d*(m + n)*(-a*d + b*c)*Cot(e + f*x)**S(2) - (m + S(1))*(-S(2)*a*c*d + b*c**S(2) - b*d**S(2))*Cot(e + f*x), x), x)/((a**S(2) + b**S(2))*(m + S(1))) + (a + b*Cot(e + f*x))**(m + S(1))*(c + d*Cot(e + f*x))**(n + S(-1))*(a*d - b*c)/(f*(a**S(2) + b**S(2))*(m + S(1))))
    rubi.add(rule245)

    pattern246 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda n: Greater(n, S(0))), CustomConstraint(lambda m: IntegerQ(S(2)*m)))
    rule246 = ReplacementRule(pattern246, lambda c, d, x, f, e, m, b, n, a : b*(a + b*Tan(e + f*x))**(m + S(1))*(c + d*Tan(e + f*x))**n/(f*(a**S(2) + b**S(2))*(m + S(1))) + Int((a + b*Tan(e + f*x))**(m + S(1))*(c + d*Tan(e + f*x))**(n + S(-1))*Simp(a*c*(m + S(1)) - b*d*n - b*d*(m + n + S(1))*Tan(e + f*x)**S(2) - (m + S(1))*(-a*d + b*c)*Tan(e + f*x), x), x)/((a**S(2) + b**S(2))*(m + S(1))))
    rubi.add(rule246)

    pattern247 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda n: Greater(n, S(0))), CustomConstraint(lambda m: IntegerQ(S(2)*m)))
    rule247 = ReplacementRule(pattern247, lambda c, d, x, f, e, m, b, n, a : -b*(a + b*Cot(e + f*x))**(m + S(1))*(c + d*Cot(e + f*x))**n/(f*(a**S(2) + b**S(2))*(m + S(1))) + Int((a + b*Cot(e + f*x))**(m + S(1))*(c + d*Cot(e + f*x))**(n + S(-1))*Simp(a*c*(m + S(1)) - b*d*n - b*d*(m + n + S(1))*Cot(e + f*x)**S(2) - (m + S(1))*(-a*d + b*c)*Cot(e + f*x), x), x)/((a**S(2) + b**S(2))*(m + S(1))))
    rubi.add(rule247)

    pattern248 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda m: IntegerQ(S(2)*m)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda n, m: IntegerQ(m) | (RationalQ(n) & Less(n, S(0)))), CustomConstraint(lambda n, c, a, m: ~(IntegerQ(n) & Less(n, S(-1)) & (~(IntegerQ(m)) | (NonzeroQ(a) & ZeroQ(c))))))
    rule248 = ReplacementRule(pattern248, lambda c, d, x, f, e, m, b, n, a : b**S(2)*(a + b*Tan(e + f*x))**(m + S(1))*(c + d*Tan(e + f*x))**(n + S(1))/(f*(a**S(2) + b**S(2))*(m + S(1))*(-a*d + b*c)) + Int((a + b*Tan(e + f*x))**(m + S(1))*(c + d*Tan(e + f*x))**n*Simp(a*(m + S(1))*(-a*d + b*c) - b**S(2)*d*(m + n + S(2))*Tan(e + f*x)**S(2) - b**S(2)*d*(m + n + S(2)) - b*(m + S(1))*(-a*d + b*c)*Tan(e + f*x), x), x)/((a**S(2) + b**S(2))*(m + S(1))*(-a*d + b*c)))
    rubi.add(rule248)

    pattern249 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda m: IntegerQ(S(2)*m)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda n, m: IntegerQ(m) | (RationalQ(n) & Less(n, S(0)))), CustomConstraint(lambda n, c, a, m: ~(IntegerQ(n) & Less(n, S(-1)) & (~(IntegerQ(m)) | (NonzeroQ(a) & ZeroQ(c))))))
    rule249 = ReplacementRule(pattern249, lambda c, d, x, f, e, m, b, n, a : -b**S(2)*(a + b*Cot(e + f*x))**(m + S(1))*(c + d*Cot(e + f*x))**(n + S(1))/(f*(a**S(2) + b**S(2))*(m + S(1))*(-a*d + b*c)) + Int((a + b*Cot(e + f*x))**(m + S(1))*(c + d*Cot(e + f*x))**n*Simp(a*(m + S(1))*(-a*d + b*c) - b**S(2)*d*(m + n + S(2))*Cot(e + f*x)**S(2) - b**S(2)*d*(m + n + S(2)) - b*(m + S(1))*(-a*d + b*c)*Cot(e + f*x), x), x)/((a**S(2) + b**S(2))*(m + S(1))*(-a*d + b*c)))
    rubi.add(rule249)

    pattern250 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Greater(m, S(1))), CustomConstraint(lambda n: Greater(n, S(0))), CustomConstraint(lambda n: IntegerQ(S(2)*n)))
    rule250 = ReplacementRule(pattern250, lambda c, d, x, f, e, m, b, n, a : b*(a + b*Tan(e + f*x))**(m + S(-1))*(c + d*Tan(e + f*x))**n/(f*(m + n + S(-1))) + Int((a + b*Tan(e + f*x))**(m + S(-2))*(c + d*Tan(e + f*x))**(n + S(-1))*Simp(a**S(2)*c*(m + n + S(-1)) - b*(a*d*n + b*c*(m + S(-1))) + b*(a*d*(S(2)*m + n + S(-2)) + b*c*n)*Tan(e + f*x)**S(2) + (m + n + S(-1))*(a**S(2)*d + S(2)*a*b*c - b**S(2)*d)*Tan(e + f*x), x), x)/(m + n + S(-1)))
    rubi.add(rule250)

    pattern251 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Greater(m, S(1))), CustomConstraint(lambda n: Greater(n, S(0))), CustomConstraint(lambda n: IntegerQ(S(2)*n)))
    rule251 = ReplacementRule(pattern251, lambda c, d, x, f, e, m, b, n, a : -b*(a + b*Cot(e + f*x))**(m + S(-1))*(c + d*Cot(e + f*x))**n/(f*(m + n + S(-1))) + Int((a + b*Cot(e + f*x))**(m + S(-2))*(c + d*Cot(e + f*x))**(n + S(-1))*Simp(a**S(2)*c*(m + n + S(-1)) - b*(a*d*n + b*c*(m + S(-1))) + b*(a*d*(S(2)*m + n + S(-2)) + b*c*n)*Cot(e + f*x)**S(2) + (m + n + S(-1))*(a**S(2)*d + S(2)*a*b*c - b**S(2)*d)*Cot(e + f*x), x), x)/(m + n + S(-1)))
    rubi.add(rule251)

    pattern252 = Pattern(Integral(S(1)/((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule252 = ReplacementRule(pattern252, lambda c, d, x, f, e, b, a : b**S(2)*Int((-a*Tan(e + f*x) + b)/(a + b*Tan(e + f*x)), x)/((a**S(2) + b**S(2))*(-a*d + b*c)) - d**S(2)*Int((-c*Tan(e + f*x) + d)/(c + d*Tan(e + f*x)), x)/((c**S(2) + d**S(2))*(-a*d + b*c)) + x*(a*c - b*d)/((a**S(2) + b**S(2))*(c**S(2) + d**S(2))))
    rubi.add(rule252)

    pattern253 = Pattern(Integral(S(1)/((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule253 = ReplacementRule(pattern253, lambda c, d, x, f, e, b, a : b**S(2)*Int((-a*Cot(e + f*x) + b)/(a + b*Cot(e + f*x)), x)/((a**S(2) + b**S(2))*(-a*d + b*c)) - d**S(2)*Int((-c*Cot(e + f*x) + d)/(c + d*Cot(e + f*x)), x)/((c**S(2) + d**S(2))*(-a*d + b*c)) + x*(a*c - b*d)/((a**S(2) + b**S(2))*(c**S(2) + d**S(2))))
    rubi.add(rule253)

    pattern254 = Pattern(Integral(sqrt(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))/(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule254 = ReplacementRule(pattern254, lambda c, d, x, f, e, b, a : -d*(-a*d + b*c)*Int((Tan(e + f*x)**S(2) + S(1))/((c + d*Tan(e + f*x))*Sqrt(a + b*Tan(e + f*x))), x)/(c**S(2) + d**S(2)) + Int(Simp(a*c + b*d + (-a*d + b*c)*Tan(e + f*x), x)/Sqrt(a + b*Tan(e + f*x)), x)/(c**S(2) + d**S(2)))
    rubi.add(rule254)

    pattern255 = Pattern(Integral(sqrt(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))/(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule255 = ReplacementRule(pattern255, lambda c, d, x, f, e, b, a : -d*(-a*d + b*c)*Int((Cot(e + f*x)**S(2) + S(1))/((c + d*Cot(e + f*x))*Sqrt(a + b*Cot(e + f*x))), x)/(c**S(2) + d**S(2)) + Int(Simp(a*c + b*d + (-a*d + b*c)*Cot(e + f*x), x)/Sqrt(a + b*Cot(e + f*x)), x)/(c**S(2) + d**S(2)))
    rubi.add(rule255)

    pattern256 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**(S(3)/2)/(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule256 = ReplacementRule(pattern256, lambda c, d, x, f, e, b, a : (-a*d + b*c)**S(2)*Int((Tan(e + f*x)**S(2) + S(1))/((c + d*Tan(e + f*x))*Sqrt(a + b*Tan(e + f*x))), x)/(c**S(2) + d**S(2)) + Int(Simp(a**S(2)*c + S(2)*a*b*d - b**S(2)*c + (-a**S(2)*d + S(2)*a*b*c + b**S(2)*d)*Tan(e + f*x), x)/Sqrt(a + b*Tan(e + f*x)), x)/(c**S(2) + d**S(2)))
    rubi.add(rule256)

    pattern257 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**(S(3)/2)/(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule257 = ReplacementRule(pattern257, lambda c, d, x, f, e, b, a : (-a*d + b*c)**S(2)*Int((Cot(e + f*x)**S(2) + S(1))/((c + d*Cot(e + f*x))*Sqrt(a + b*Cot(e + f*x))), x)/(c**S(2) + d**S(2)) + Int(Simp(a**S(2)*c + S(2)*a*b*d - b**S(2)*c + (-a**S(2)*d + S(2)*a*b*c + b**S(2)*d)*Cot(e + f*x), x)/Sqrt(a + b*Cot(e + f*x)), x)/(c**S(2) + d**S(2)))
    rubi.add(rule257)

    pattern258 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_/(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda m: ~(IntegerQ(m))))
    rule258 = ReplacementRule(pattern258, lambda c, d, x, f, e, m, b, a : d**S(2)*Int((a + b*Tan(e + f*x))**m*(Tan(e + f*x)**S(2) + S(1))/(c + d*Tan(e + f*x)), x)/(c**S(2) + d**S(2)) + Int((a + b*Tan(e + f*x))**m*(c - d*Tan(e + f*x)), x)/(c**S(2) + d**S(2)))
    rubi.add(rule258)

    pattern259 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_/(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda m: ~(IntegerQ(m))))
    rule259 = ReplacementRule(pattern259, lambda c, d, x, f, e, m, b, a : d**S(2)*Int((a + b*Cot(e + f*x))**m*(Cot(e + f*x)**S(2) + S(1))/(c + d*Cot(e + f*x)), x)/(c**S(2) + d**S(2)) + Int((a + b*Cot(e + f*x))**m*(c - d*Cot(e + f*x)), x)/(c**S(2) + d**S(2)))
    rubi.add(rule259)

    pattern260 = Pattern(Integral((c_ + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_*(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule260 = ReplacementRule(pattern260, lambda c, d, x, f, e, m, b, n, a : b*Subst(Int((a + x)**m*(c + d*x/b)**n/(b**S(2) + x**S(2)), x), x, b*Tan(e + f*x))/f)
    rubi.add(rule260)

    pattern261 = Pattern(Integral((c_ + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_*(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule261 = ReplacementRule(pattern261, lambda c, d, x, f, e, m, b, n, a : -b*Subst(Int((a + x)**m*(c + d*x/b)**n/(b**S(2) + x**S(2)), x), x, b*Cot(e + f*x))/f)
    rubi.add(rule261)

    pattern262 = Pattern(Integral((WC('d', S(1))/tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_*(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n: ~(IntegerQ(n))), CustomConstraint(lambda m: IntegerQ(m)))
    rule262 = ReplacementRule(pattern262, lambda d, x, f, e, m, b, n, a : d**m*Int((d*Cot(e + f*x))**(-m + n)*(a*Cot(e + f*x) + b)**m, x))
    rubi.add(rule262)

    pattern263 = Pattern(Integral((WC('d', S(1))/cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_*(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n: ~(IntegerQ(n))), CustomConstraint(lambda m: IntegerQ(m)))
    rule263 = ReplacementRule(pattern263, lambda d, x, f, e, m, b, n, a : d**m*Int((d*Tan(e + f*x))**(-m + n)*(a*Tan(e + f*x) + b)**m, x))
    rubi.add(rule263)

    pattern264 = Pattern(Integral(((WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**p_*WC('c', S(1)))**n_*(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n: ~(IntegerQ(n))), CustomConstraint(lambda m: ~(IntegerQ(m))))
    rule264 = ReplacementRule(pattern264, lambda c, d, x, f, e, b, m, a, n, p : c**IntPart(n)*(c*(d*Tan(e + f*x))**p)**FracPart(n)*(d*Tan(e + f*x))**(-p*FracPart(n))*Int((d*Tan(e + f*x))**(n*p)*(a + b*Tan(e + f*x))**m, x))
    rubi.add(rule264)

    pattern265 = Pattern(Integral(((WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**p_*WC('c', S(1)))**n_*(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n: ~(IntegerQ(n))), CustomConstraint(lambda m: ~(IntegerQ(m))))
    rule265 = ReplacementRule(pattern265, lambda c, d, x, f, e, m, b, n, p, a : c**IntPart(n)*(c*(d*Cot(e + f*x))**p)**FracPart(n)*(d*Cot(e + f*x))**(-p*FracPart(n))*Int((d*Cot(e + f*x))**(n*p)*(a + b*Cot(e + f*x))**m, x))
    rubi.add(rule265)

    pattern266 = Pattern(Integral((WC('g', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('p', S(1))*(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(c_ + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)))
    rule266 = ReplacementRule(pattern266, lambda g, c, d, x, f, e, m, b, n, p, a : Int((g*Tan(e + f*x))**p*(a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**n, x))
    rubi.add(rule266)

    pattern267 = Pattern(Integral((WC('g', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('p', S(1))*(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(c_ + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)))
    rule267 = ReplacementRule(pattern267, lambda g, c, d, x, f, e, m, b, n, p, a : Int((g*Cot(e + f*x))**p*(a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**n, x))
    rubi.add(rule267)

    pattern268 = Pattern(Integral((WC('g', S(1))/tan(x_*WC('f', S(1)) + WC('e', S(0))))**p_*(c_ + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1))*(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda m: IntegerQ(m)), CustomConstraint(lambda n: IntegerQ(n)))
    rule268 = ReplacementRule(pattern268, lambda g, c, d, x, f, e, m, b, n, p, a : g**(m + n)*Int((g*Cot(e + f*x))**(-m - n + p)*(a*Cot(e + f*x) + b)**m*(c*Cot(e + f*x) + d)**n, x))
    rubi.add(rule268)

    pattern269 = Pattern(Integral((WC('g', S(1))/cot(x_*WC('f', S(1)) + WC('e', S(0))))**p_*(c_ + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1))*(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda m: IntegerQ(m)), CustomConstraint(lambda n: IntegerQ(n)))
    rule269 = ReplacementRule(pattern269, lambda g, c, d, x, f, e, m, b, n, p, a : g**(m + n)*Int((g*Tan(e + f*x))**(-m - n + p)*(a*Tan(e + f*x) + b)**m*(c*Tan(e + f*x) + d)**n, x))
    rubi.add(rule269)

    pattern270 = Pattern(Integral((WC('g', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**q_)**p_*(c_ + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1))*(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda n, m: ~(IntegerQ(m) & IntegerQ(n))))
    rule270 = ReplacementRule(pattern270, lambda g, c, q, d, x, f, e, m, b, n, p, a : (g*Tan(e + f*x))**(-p*q)*(g*Tan(e + f*x)**q)**p*Int((g*Tan(e + f*x))**(p*q)*(a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**n, x))
    rubi.add(rule270)

    pattern271 = Pattern(Integral((WC('g', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**q_)**p_*(c_ + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1))*(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda q, x: FreeQ(q, x)), CustomConstraint(lambda p: ~(IntegerQ(p))), CustomConstraint(lambda n, m: ~(IntegerQ(m) & IntegerQ(n))))
    rule271 = ReplacementRule(pattern271, lambda g, c, q, d, x, f, e, m, b, n, p, a : (g*Cot(e + f*x))**(-p*q)*(g*Cot(e + f*x)**q)**p*Int((g*Cot(e + f*x))**(p*q)*(a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**n, x))
    rubi.add(rule271)

    pattern272 = Pattern(Integral((WC('g', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('p', S(1))*(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(c_ + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n: IntegerQ(n)))
    rule272 = ReplacementRule(pattern272, lambda g, c, d, x, f, e, m, b, n, p, a : g**n*Int((g*Tan(e + f*x))**(-n + p)*(a + b*Tan(e + f*x))**m*(c*Tan(e + f*x) + d)**n, x))
    rubi.add(rule272)

    pattern273 = Pattern(Integral((WC('g', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('p', S(1))*(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(c_ + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n: IntegerQ(n)))
    rule273 = ReplacementRule(pattern273, lambda g, c, d, x, f, e, m, b, n, p, a : g**n*Int((g*Cot(e + f*x))**(-n + p)*(a + b*Cot(e + f*x))**m*(c*Cot(e + f*x) + d)**n, x))
    rubi.add(rule273)

    pattern274 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(c_ + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_*tan(x_*WC('f', S(1)) + WC('e', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n: ~(IntegerQ(n))), CustomConstraint(lambda m: IntegerQ(m)), CustomConstraint(lambda p: IntegerQ(p)))
    rule274 = ReplacementRule(pattern274, lambda c, d, x, f, e, m, b, n, p, a : Int((c + d*Cot(e + f*x))**n*(a*Cot(e + f*x) + b)**m*Cot(e + f*x)**(-m - p), x))
    rubi.add(rule274)

    pattern275 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(c_ + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_*cot(x_*WC('f', S(1)) + WC('e', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n: ~(IntegerQ(n))), CustomConstraint(lambda m: IntegerQ(m)), CustomConstraint(lambda p: IntegerQ(p)))
    rule275 = ReplacementRule(pattern275, lambda c, d, x, f, e, b, m, n, p, a : Int((c + d*Tan(e + f*x))**n*(a*Tan(e + f*x) + b)**m*Tan(e + f*x)**(-m - p), x))
    rubi.add(rule275)

    pattern276 = Pattern(Integral((WC('g', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**p_*(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(c_ + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n: ~(IntegerQ(n))), CustomConstraint(lambda m: IntegerQ(m)), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule276 = ReplacementRule(pattern276, lambda g, c, d, x, f, e, m, b, n, p, a : (g*Tan(e + f*x))**p*Cot(e + f*x)**p*Int((c + d*Cot(e + f*x))**n*(a*Cot(e + f*x) + b)**m*Cot(e + f*x)**(-m - p), x))
    rubi.add(rule276)

    pattern277 = Pattern(Integral((WC('g', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**p_*(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(c_ + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n: ~(IntegerQ(n))), CustomConstraint(lambda m: IntegerQ(m)), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule277 = ReplacementRule(pattern277, lambda g, c, d, x, f, e, b, m, n, p, a : (g*Cot(e + f*x))**p*Int((c + d*Tan(e + f*x))**n*(a*Tan(e + f*x) + b)**m*Tan(e + f*x)**(-m - p), x)*Tan(e + f*x)**p)
    rubi.add(rule277)

    pattern278 = Pattern(Integral((WC('g', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('p', S(1))*(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(c_ + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n: ~(IntegerQ(n))), CustomConstraint(lambda m: ~(IntegerQ(m))))
    rule278 = ReplacementRule(pattern278, lambda g, c, d, x, f, e, m, b, n, p, a : (g*Tan(e + f*x))**n*(c + d*Cot(e + f*x))**n*(c*Tan(e + f*x) + d)**(-n)*Int((g*Tan(e + f*x))**(-n + p)*(a + b*Tan(e + f*x))**m*(c*Tan(e + f*x) + d)**n, x))
    rubi.add(rule278)

    pattern279 = Pattern(Integral((WC('g', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('p', S(1))*(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(c_ + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda g, x: FreeQ(g, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n: ~(IntegerQ(n))), CustomConstraint(lambda m: ~(IntegerQ(m))))
    rule279 = ReplacementRule(pattern279, lambda g, c, d, x, f, e, m, b, n, p, a : (g*Cot(e + f*x))**n*(c + d*Tan(e + f*x))**n*(c*Cot(e + f*x) + d)**(-n)*Int((g*Cot(e + f*x))**(-n + p)*(a + b*Cot(e + f*x))**m*(c*Cot(e + f*x) + d)**n, x))
    rubi.add(rule279)

    pattern280 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(c_ + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1))*(WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: ZeroQ(a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))))
    rule280 = ReplacementRule(pattern280, lambda c, d, x, f, e, B, a, b, m, n, A : a*c*Subst(Int((A + B*x)*(a + b*x)**(m + S(-1))*(c + d*x)**(n + S(-1)), x), x, Tan(e + f*x))/f)
    rubi.add(rule280)

    pattern281 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(c_ + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1))*(WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: ZeroQ(a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))))
    rule281 = ReplacementRule(pattern281, lambda c, d, x, f, e, B, a, m, b, n, A : -a*c*Subst(Int((A + B*x)*(a + b*x)**(m + S(-1))*(c + d*x)**(n + S(-1)), x), x, Cot(e + f*x))/f)
    rubi.add(rule281)

    pattern282 = Pattern(Integral((WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))/(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)))
    rule282 = ReplacementRule(pattern282, lambda c, d, x, f, e, B, b, a, A : B*d*Int(Tan(e + f*x), x)/b + Int(Simp(A*b*c + (A*b*d + B*(-a*d + b*c))*Tan(e + f*x), x)/(a + b*Tan(e + f*x)), x)/b)
    rubi.add(rule282)

    pattern283 = Pattern(Integral((WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))/(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)))
    rule283 = ReplacementRule(pattern283, lambda c, d, x, f, e, B, b, a, A : B*d*Int(Cot(e + f*x), x)/b + Int(Simp(A*b*c + (A*b*d + B*(-a*d + b*c))*Cot(e + f*x), x)/(a + b*Cot(e + f*x)), x)/b)
    rubi.add(rule283)

    pattern284 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))))
    rule284 = ReplacementRule(pattern284, lambda c, d, x, f, e, B, m, b, a, A : Int((a + b*Tan(e + f*x))**(m + S(1))*Simp(A*a*d + A*b*c + B*a*c + S(2)*B*a*d*Tan(e + f*x) + B*b*d, x), x)/(S(2)*a*b) + (a + b*Tan(e + f*x))**m*(-A*b + B*a)*(a*c + b*d)/(S(2)*a**S(2)*f*m))
    rubi.add(rule284)

    pattern285 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))))
    rule285 = ReplacementRule(pattern285, lambda c, d, x, f, e, B, m, b, a, A : Int((a + b*Cot(e + f*x))**(m + S(1))*Simp(A*a*d + A*b*c + B*a*c + S(2)*B*a*d*Cot(e + f*x) + B*b*d, x), x)/(S(2)*a*b) + (a + b*Cot(e + f*x))**m*(A*b - B*a)*(a*c + b*d)/(S(2)*a**S(2)*f*m))
    rubi.add(rule285)

    pattern286 = Pattern(Integral((WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))))
    rule286 = ReplacementRule(pattern286, lambda c, d, x, f, e, B, m, b, a, A : Int((a + b*Tan(e + f*x))**(m + S(1))*Simp(A*a*c + A*b*d - B*a*d + B*b*c - (-A*a*d + A*b*c - B*a*c - B*b*d)*Tan(e + f*x), x), x)/(a**S(2) + b**S(2)) + (a + b*Tan(e + f*x))**(m + S(1))*(A*b - B*a)*(-a*d + b*c)/(b*f*(a**S(2) + b**S(2))*(m + S(1))))
    rubi.add(rule286)

    pattern287 = Pattern(Integral((WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))))
    rule287 = ReplacementRule(pattern287, lambda c, d, x, f, e, B, m, b, a, A : Int((a + b*Cot(e + f*x))**(m + S(1))*Simp(A*a*c + A*b*d - B*a*d + B*b*c - (-A*a*d + A*b*c - B*a*c - B*b*d)*Cot(e + f*x), x), x)/(a**S(2) + b**S(2)) + (a + b*Cot(e + f*x))**(m + S(1))*(A*b - B*a)*(a*d - b*c)/(b*f*(a**S(2) + b**S(2))*(m + S(1))))
    rubi.add(rule287)

    pattern288 = Pattern(Integral((WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda m: ~(RationalQ(m) & LessEqual(m, S(-1)))))
    rule288 = ReplacementRule(pattern288, lambda c, d, x, f, e, B, m, b, A, a : B*d*(a + b*Tan(e + f*x))**(m + S(1))/(b*f*(m + S(1))) + Int((a + b*Tan(e + f*x))**m*Simp(A*c - B*d + (A*d + B*c)*Tan(e + f*x), x), x))
    rubi.add(rule288)

    pattern289 = Pattern(Integral((WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda m: ~(RationalQ(m) & LessEqual(m, S(-1)))))
    rule289 = ReplacementRule(pattern289, lambda c, d, x, f, e, B, m, b, A, a : -B*d*(a + b*Cot(e + f*x))**(m + S(1))/(b*f*(m + S(1))) + Int((a + b*Cot(e + f*x))**m*Simp(A*c - B*d + (A*d + B*c)*Cot(e + f*x), x), x))
    rubi.add(rule289)

    pattern290 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Greater(m, S(1))), CustomConstraint(lambda n: Less(n, S(-1))))
    rule290 = ReplacementRule(pattern290, lambda c, d, x, f, n, e, B, m, b, a, A : -a**S(2)*(a + b*Tan(e + f*x))**(m + S(-1))*(c + d*Tan(e + f*x))**(n + S(1))*(-A*d + B*c)/(d*f*(n + S(1))*(a*d + b*c)) - a*Int((a + b*Tan(e + f*x))**(m + S(-1))*(c + d*Tan(e + f*x))**(n + S(1))*Simp(A*b*d*(m - n + S(-2)) - B*(a*d*(n + S(1)) + b*c*(m + S(-1))) + (A*a*d*(m + n) - B*(a*c*(m + S(-1)) + b*d*(n + S(1))))*Tan(e + f*x), x), x)/(d*(n + S(1))*(a*d + b*c)))
    rubi.add(rule290)

    pattern291 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Greater(m, S(1))), CustomConstraint(lambda n: Less(n, S(-1))))
    rule291 = ReplacementRule(pattern291, lambda c, d, x, f, e, B, a, m, b, n, A : a**S(2)*(a + b*Cot(e + f*x))**(m + S(-1))*(c + d*Cot(e + f*x))**(n + S(1))*(-A*d + B*c)/(d*f*(n + S(1))*(a*d + b*c)) - a*Int((a + b*Cot(e + f*x))**(m + S(-1))*(c + d*Cot(e + f*x))**(n + S(1))*Simp(A*b*d*(m - n + S(-2)) - B*(a*d*(n + S(1)) + b*c*(m + S(-1))) + (A*a*d*(m + n) - B*(a*c*(m + S(-1)) + b*d*(n + S(1))))*Cot(e + f*x), x), x)/(d*(n + S(1))*(a*d + b*c)))
    rubi.add(rule291)

    pattern292 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Greater(m, S(1))), CustomConstraint(lambda n: ~(RationalQ(n) & Less(n, S(-1)))))
    rule292 = ReplacementRule(pattern292, lambda c, d, x, f, n, e, B, m, b, a, A : B*b*(a + b*Tan(e + f*x))**(m + S(-1))*(c + d*Tan(e + f*x))**(n + S(1))/(d*f*(m + n)) + Int((a + b*Tan(e + f*x))**(m + S(-1))*(c + d*Tan(e + f*x))**n*Simp(A*a*d*(m + n) + B*(a*c*(m + S(-1)) - b*d*(n + S(1))) - (B*(m + S(-1))*(-a*d + b*c) - d*(m + n)*(A*b + B*a))*Tan(e + f*x), x), x)/(d*(m + n)))
    rubi.add(rule292)

    pattern293 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Greater(m, S(1))), CustomConstraint(lambda n: ~(RationalQ(n) & Less(n, S(-1)))))
    rule293 = ReplacementRule(pattern293, lambda c, d, x, f, e, B, a, m, b, n, A : -B*b*(a + b*Cot(e + f*x))**(m + S(-1))*(c + d*Cot(e + f*x))**(n + S(1))/(d*f*(m + n)) + Int((a + b*Cot(e + f*x))**(m + S(-1))*(c + d*Cot(e + f*x))**n*Simp(A*a*d*(m + n) + B*(a*c*(m + S(-1)) - b*d*(n + S(1))) - (B*(m + S(-1))*(-a*d + b*c) - d*(m + n)*(A*b + B*a))*Cot(e + f*x), x), x)/(d*(m + n)))
    rubi.add(rule293)

    pattern294 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Less(m, S(0))), CustomConstraint(lambda n: Greater(n, S(0))))
    rule294 = ReplacementRule(pattern294, lambda c, d, x, f, n, e, B, m, b, a, A : (a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**n*(-A*b + B*a)/(S(2)*a*f*m) + Int((a + b*Tan(e + f*x))**(m + S(1))*(c + d*Tan(e + f*x))**(n + S(-1))*Simp(A*(a*c*m + b*d*n) - B*(a*d*n + b*c*m) - d*(-A*a*(m + n) + B*b*(m - n))*Tan(e + f*x), x), x)/(S(2)*a**S(2)*m))
    rubi.add(rule294)

    pattern295 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Less(m, S(0))), CustomConstraint(lambda n: Greater(n, S(0))))
    rule295 = ReplacementRule(pattern295, lambda c, d, x, f, e, B, a, m, b, n, A : (a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**n*(A*b - B*a)/(S(2)*a*f*m) + Int((a + b*Cot(e + f*x))**(m + S(1))*(c + d*Cot(e + f*x))**(n + S(-1))*Simp(A*(a*c*m + b*d*n) - B*(a*d*n + b*c*m) - d*(-A*a*(m + n) + B*b*(m - n))*Cot(e + f*x), x), x)/(S(2)*a**S(2)*m))
    rubi.add(rule295)

    pattern296 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(0))), CustomConstraint(lambda n: ~(RationalQ(n) & Greater(n, S(0)))))
    rule296 = ReplacementRule(pattern296, lambda c, d, x, f, n, e, B, m, b, a, A : (a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**(n + S(1))*(A*a + B*b)/(S(2)*f*m*(-a*d + b*c)) + Int((a + b*Tan(e + f*x))**(m + S(1))*(c + d*Tan(e + f*x))**n*Simp(A*(-a*d*(S(2)*m + n + S(1)) + b*c*m) + B*(a*c*m - b*d*(n + S(1))) + d*(A*b - B*a)*(m + n + S(1))*Tan(e + f*x), x), x)/(S(2)*a*m*(-a*d + b*c)))
    rubi.add(rule296)

    pattern297 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(0))), CustomConstraint(lambda n: ~(RationalQ(n) & Greater(n, S(0)))))
    rule297 = ReplacementRule(pattern297, lambda c, d, x, f, e, B, a, m, b, n, A : (a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**(n + S(1))*(-A*a - B*b)/(S(2)*f*m*(-a*d + b*c)) + Int((a + b*Cot(e + f*x))**(m + S(1))*(c + d*Cot(e + f*x))**n*Simp(A*(-a*d*(S(2)*m + n + S(1)) + b*c*m) + B*(a*c*m - b*d*(n + S(1))) + d*(A*b - B*a)*(m + n + S(1))*Cot(e + f*x), x), x)/(S(2)*a*m*(-a*d + b*c)))
    rubi.add(rule297)

    pattern298 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Greater(n, S(0))))
    rule298 = ReplacementRule(pattern298, lambda c, d, x, f, n, e, B, m, b, a, A : B*(a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**n/(f*(m + n)) + Int((a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**(n + S(-1))*Simp(A*a*c*(m + n) - B*(a*d*n + b*c*m) + (A*a*d*(m + n) - B*(-a*c*n + b*d*m))*Tan(e + f*x), x), x)/(a*(m + n)))
    rubi.add(rule298)

    pattern299 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Greater(n, S(0))))
    rule299 = ReplacementRule(pattern299, lambda c, d, x, f, e, B, a, m, b, n, A : -B*(a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**n/(f*(m + n)) + Int((a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**(n + S(-1))*Simp(A*a*c*(m + n) - B*(a*d*n + b*c*m) + (A*a*d*(m + n) - B*(-a*c*n + b*d*m))*Cot(e + f*x), x), x)/(a*(m + n)))
    rubi.add(rule299)

    pattern300 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, S(-1))))
    rule300 = ReplacementRule(pattern300, lambda c, d, x, f, n, e, B, m, b, a, A : (a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**(n + S(1))*(A*d - B*c)/(f*(c**S(2) + d**S(2))*(n + S(1))) - Int((a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**(n + S(1))*Simp(A*(-a*c*(n + S(1)) + b*d*m) - B*(a*d*(n + S(1)) + b*c*m) - a*(-A*d + B*c)*(m + n + S(1))*Tan(e + f*x), x), x)/(a*(c**S(2) + d**S(2))*(n + S(1))))
    rubi.add(rule300)

    pattern301 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, S(-1))))
    rule301 = ReplacementRule(pattern301, lambda c, d, x, f, e, B, a, m, b, n, A : (a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**(n + S(1))*(-A*d + B*c)/(f*(c**S(2) + d**S(2))*(n + S(1))) - Int((a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**(n + S(1))*Simp(A*(-a*c*(n + S(1)) + b*d*m) - B*(a*d*(n + S(1)) + b*c*m) - a*(-A*d + B*c)*(m + n + S(1))*Cot(e + f*x), x), x)/(a*(c**S(2) + d**S(2))*(n + S(1))))
    rubi.add(rule301)

    pattern302 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda a, B, A, b: ZeroQ(A*b + B*a)))
    rule302 = ReplacementRule(pattern302, lambda c, d, x, f, n, e, B, m, b, a, A : B*b*Subst(Int((a + b*x)**(m + S(-1))*(c + d*x)**n, x), x, Tan(e + f*x))/f)
    rubi.add(rule302)

    pattern303 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda a, B, A, b: ZeroQ(A*b + B*a)))
    rule303 = ReplacementRule(pattern303, lambda c, d, x, f, e, B, a, m, b, n, A : -B*b*Subst(Int((a + b*x)**(m + S(-1))*(c + d*x)**n, x), x, Cot(e + f*x))/f)
    rubi.add(rule303)

    pattern304 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))/(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda a, B, A, b: NonzeroQ(A*b + B*a)))
    rule304 = ReplacementRule(pattern304, lambda c, d, x, f, e, B, m, b, a, A : (A*b + B*a)*Int((a + b*Tan(e + f*x))**m, x)/(a*d + b*c) - (-A*d + B*c)*Int((a - b*Tan(e + f*x))*(a + b*Tan(e + f*x))**m/(c + d*Tan(e + f*x)), x)/(a*d + b*c))
    rubi.add(rule304)

    pattern305 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))/(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda a, B, A, b: NonzeroQ(A*b + B*a)))
    rule305 = ReplacementRule(pattern305, lambda c, d, x, f, e, B, m, b, a, A : (A*b + B*a)*Int((a + b*Cot(e + f*x))**m, x)/(a*d + b*c) - (-A*d + B*c)*Int((a - b*Cot(e + f*x))*(a + b*Cot(e + f*x))**m/(c + d*Cot(e + f*x)), x)/(a*d + b*c))
    rubi.add(rule305)

    pattern306 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda a, B, A, b: NonzeroQ(A*b + B*a)))
    rule306 = ReplacementRule(pattern306, lambda c, d, x, f, n, e, B, m, b, a, A : -B*Int((a - b*Tan(e + f*x))*(a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**n, x)/b + (A*b + B*a)*Int((a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**n, x)/b)
    rubi.add(rule306)

    pattern307 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda a, B, A, b: NonzeroQ(A*b + B*a)))
    rule307 = ReplacementRule(pattern307, lambda c, d, x, f, e, B, a, m, b, n, A : -B*Int((a - b*Cot(e + f*x))*(a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**n, x)/b + (A*b + B*a)*Int((a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**n, x)/b)
    rubi.add(rule307)

    pattern308 = Pattern(Integral((A_ + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: ~(IntegerQ(m))), CustomConstraint(lambda n: ~(IntegerQ(n))), CustomConstraint(lambda n, m: ~(IntegersQ(S(2)*m, S(2)*n))), CustomConstraint(lambda B, A: ZeroQ(A**S(2) + B**S(2))))
    rule308 = ReplacementRule(pattern308, lambda c, d, x, f, e, B, m, b, A, n, a : A**S(2)*Subst(Int((a + b*x)**m*(c + d*x)**n/(A - B*x), x), x, Tan(e + f*x))/f)
    rubi.add(rule308)

    pattern309 = Pattern(Integral((A_ + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: ~(IntegerQ(m))), CustomConstraint(lambda n: ~(IntegerQ(n))), CustomConstraint(lambda n, m: ~(IntegersQ(S(2)*m, S(2)*n))), CustomConstraint(lambda B, A: ZeroQ(A**S(2) + B**S(2))))
    rule309 = ReplacementRule(pattern309, lambda c, d, x, f, e, B, m, b, A, n, a : -A**S(2)*Subst(Int((a + b*x)**m*(c + d*x)**n/(A - B*x), x), x, Cot(e + f*x))/f)
    rubi.add(rule309)

    pattern310 = Pattern(Integral((WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: ~(IntegerQ(m))), CustomConstraint(lambda n: ~(IntegerQ(n))), CustomConstraint(lambda n, m: ~(IntegersQ(S(2)*m, S(2)*n))), CustomConstraint(lambda B, A: NonzeroQ(A**S(2) + B**S(2))))
    rule310 = ReplacementRule(pattern310, lambda c, d, x, f, n, e, B, m, b, a, A : (A/S(2) - B*ImaginaryI/S(2))*Int((a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**n*(ImaginaryI*Tan(e + f*x) + S(1)), x) + (A/S(2) + B*ImaginaryI/S(2))*Int((a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**n*(-ImaginaryI*Tan(e + f*x) + S(1)), x))
    rubi.add(rule310)

    pattern311 = Pattern(Integral((WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: ~(IntegerQ(m))), CustomConstraint(lambda n: ~(IntegerQ(n))), CustomConstraint(lambda n, m: ~(IntegersQ(S(2)*m, S(2)*n))), CustomConstraint(lambda B, A: NonzeroQ(A**S(2) + B**S(2))))
    rule311 = ReplacementRule(pattern311, lambda c, d, x, f, n, e, B, m, b, a, A : (A/S(2) - B*ImaginaryI/S(2))*Int((a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**n*(ImaginaryI*Cot(e + f*x) + S(1)), x) + (A/S(2) + B*ImaginaryI/S(2))*Int((a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**n*(-ImaginaryI*Cot(e + f*x) + S(1)), x))
    rubi.add(rule311)

    pattern312 = Pattern(Integral((WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Greater(m, S(1))), CustomConstraint(lambda n: Less(n, S(-1))), CustomConstraint(lambda n, m: IntegerQ(m) | IntegersQ(S(2)*m, S(2)*n)))
    rule312 = ReplacementRule(pattern312, lambda c, d, x, f, n, e, B, m, b, a, A : -Int((a + b*Tan(e + f*x))**(m + S(-2))*(c + d*Tan(e + f*x))**(n + S(1))*Simp(A*a*d*(-a*c*(n + S(1)) + b*d*(m + S(-1))) - b*(-B*b*(c**S(2)*(m + S(-1)) - d**S(2)*(n + S(1))) + d*(m + n)*(-A*a*d + A*b*c + B*a*c))*Tan(e + f*x)**S(2) - d*(n + S(1))*((A*a - B*b)*(-a*d + b*c) + (A*b + B*a)*(a*c + b*d))*Tan(e + f*x) + (B*b*c - d*(A*b + B*a))*(a*d*(n + S(1)) + b*c*(m + S(-1))), x), x)/(d*(c**S(2) + d**S(2))*(n + S(1))) + (a + b*Tan(e + f*x))**(m + S(-1))*(c + d*Tan(e + f*x))**(n + S(1))*(-A*d + B*c)*(-a*d + b*c)/(d*f*(c**S(2) + d**S(2))*(n + S(1))))
    rubi.add(rule312)

    pattern313 = Pattern(Integral((WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Greater(m, S(1))), CustomConstraint(lambda n: Less(n, S(-1))), CustomConstraint(lambda n, m: IntegerQ(m) | IntegersQ(S(2)*m, S(2)*n)))
    rule313 = ReplacementRule(pattern313, lambda c, d, x, f, n, e, B, m, b, a, A : -Int((a + b*Cot(e + f*x))**(m + S(-2))*(c + d*Cot(e + f*x))**(n + S(1))*Simp(A*a*d*(-a*c*(n + S(1)) + b*d*(m + S(-1))) - b*(-B*b*(c**S(2)*(m + S(-1)) - d**S(2)*(n + S(1))) + d*(m + n)*(-A*a*d + A*b*c + B*a*c))*Cot(e + f*x)**S(2) - d*(n + S(1))*((A*a - B*b)*(-a*d + b*c) + (A*b + B*a)*(a*c + b*d))*Cot(e + f*x) + (B*b*c - d*(A*b + B*a))*(a*d*(n + S(1)) + b*c*(m + S(-1))), x), x)/(d*(c**S(2) + d**S(2))*(n + S(1))) + (a + b*Cot(e + f*x))**(m + S(-1))*(c + d*Cot(e + f*x))**(n + S(1))*(-A*d + B*c)*(a*d - b*c)/(d*f*(c**S(2) + d**S(2))*(n + S(1))))
    rubi.add(rule313)

    pattern314 = Pattern(Integral((WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Greater(m, S(1))), CustomConstraint(lambda n, m: IntegerQ(m) | IntegersQ(S(2)*m, S(2)*n)), CustomConstraint(lambda n, c, a, m: ~(IntegerQ(n) & Greater(n, S(1)) & (~(IntegerQ(m)) | (NonzeroQ(a) & ZeroQ(c))))))
    rule314 = ReplacementRule(pattern314, lambda c, d, x, f, n, e, B, m, b, a, A : B*b*(a + b*Tan(e + f*x))**(m + S(-1))*(c + d*Tan(e + f*x))**(n + S(1))/(d*f*(m + n)) + Int((a + b*Tan(e + f*x))**(m + S(-2))*(c + d*Tan(e + f*x))**n*Simp(A*a**S(2)*d*(m + n) - B*b*(a*d*(n + S(1)) + b*c*(m + S(-1))) + d*(m + n)*(S(2)*A*a*b + B*(a**S(2) - b**S(2)))*Tan(e + f*x) - (B*b*(m + S(-1))*(-a*d + b*c) - b*d*(m + n)*(A*b + B*a))*Tan(e + f*x)**S(2), x), x)/(d*(m + n)))
    rubi.add(rule314)

    pattern315 = Pattern(Integral((WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Greater(m, S(1))), CustomConstraint(lambda n, m: IntegerQ(m) | IntegersQ(S(2)*m, S(2)*n)), CustomConstraint(lambda n, c, a, m: ~(IntegerQ(n) & Greater(n, S(1)) & (~(IntegerQ(m)) | (NonzeroQ(a) & ZeroQ(c))))))
    rule315 = ReplacementRule(pattern315, lambda c, d, x, f, n, e, B, m, b, a, A : -B*b*(a + b*Cot(e + f*x))**(m + S(-1))*(c + d*Cot(e + f*x))**(n + S(1))/(d*f*(m + n)) + Int((a + b*Cot(e + f*x))**(m + S(-2))*(c + d*Cot(e + f*x))**n*Simp(A*a**S(2)*d*(m + n) - B*b*(a*d*(n + S(1)) + b*c*(m + S(-1))) + d*(m + n)*(S(2)*A*a*b + B*(a**S(2) - b**S(2)))*Cot(e + f*x) - (B*b*(m + S(-1))*(-a*d + b*c) - b*d*(m + n)*(A*b + B*a))*Cot(e + f*x)**S(2), x), x)/(d*(m + n)))
    rubi.add(rule315)

    pattern316 = Pattern(Integral((WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda n: Less(S(0), n, S(1))), CustomConstraint(lambda n, m: IntegerQ(m) | IntegersQ(S(2)*m, S(2)*n)))
    rule316 = ReplacementRule(pattern316, lambda c, d, x, f, n, e, B, m, b, a, A : (a + b*Tan(e + f*x))**(m + S(1))*(c + d*Tan(e + f*x))**n*(A*b - B*a)/(f*(a**S(2) + b**S(2))*(m + S(1))) + Int((a + b*Tan(e + f*x))**(m + S(1))*(c + d*Tan(e + f*x))**(n + S(-1))*Simp(A*b*(a*c*(m + S(1)) - b*d*n) + B*b*(a*d*n + b*c*(m + S(1))) - b*d*(A*b - B*a)*(m + n + S(1))*Tan(e + f*x)**S(2) - b*(m + S(1))*(A*(-a*d + b*c) - B*(a*c + b*d))*Tan(e + f*x), x), x)/(b*(a**S(2) + b**S(2))*(m + S(1))))
    rubi.add(rule316)

    pattern317 = Pattern(Integral((WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda n: Less(S(0), n, S(1))), CustomConstraint(lambda n, m: IntegerQ(m) | IntegersQ(S(2)*m, S(2)*n)))
    rule317 = ReplacementRule(pattern317, lambda c, d, x, f, n, e, B, m, b, a, A : (a + b*Cot(e + f*x))**(m + S(1))*(c + d*Cot(e + f*x))**n*(-A*b + B*a)/(f*(a**S(2) + b**S(2))*(m + S(1))) + Int((a + b*Cot(e + f*x))**(m + S(1))*(c + d*Cot(e + f*x))**(n + S(-1))*Simp(A*b*(a*c*(m + S(1)) - b*d*n) + B*b*(a*d*n + b*c*(m + S(1))) - b*d*(A*b - B*a)*(m + n + S(1))*Cot(e + f*x)**S(2) - b*(m + S(1))*(A*(-a*d + b*c) - B*(a*c + b*d))*Cot(e + f*x), x), x)/(b*(a**S(2) + b**S(2))*(m + S(1))))
    rubi.add(rule317)

    pattern318 = Pattern(Integral((WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda n, m: IntegerQ(m) | IntegersQ(S(2)*m, S(2)*n)), CustomConstraint(lambda n, c, a, m: ~(IntegerQ(n) & Less(n, S(-1)) & (~(IntegerQ(m)) | (NonzeroQ(a) & ZeroQ(c))))))
    rule318 = ReplacementRule(pattern318, lambda c, d, x, f, n, e, B, m, b, a, A : b*(a + b*Tan(e + f*x))**(m + S(1))*(c + d*Tan(e + f*x))**(n + S(1))*(A*b - B*a)/(f*(a**S(2) + b**S(2))*(m + S(1))*(-a*d + b*c)) + Int((a + b*Tan(e + f*x))**(m + S(1))*(c + d*Tan(e + f*x))**n*Simp(A*(a*(m + S(1))*(-a*d + b*c) - b**S(2)*d*(m + n + S(2))) + B*b*(a*d*(n + S(1)) + b*c*(m + S(1))) - b*d*(A*b - B*a)*(m + n + S(2))*Tan(e + f*x)**S(2) - (m + S(1))*(A*b - B*a)*(-a*d + b*c)*Tan(e + f*x), x), x)/((a**S(2) + b**S(2))*(m + S(1))*(-a*d + b*c)))
    rubi.add(rule318)

    pattern319 = Pattern(Integral((WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda n, m: IntegerQ(m) | IntegersQ(S(2)*m, S(2)*n)), CustomConstraint(lambda n, c, a, m: ~(IntegerQ(n) & Less(n, S(-1)) & (~(IntegerQ(m)) | (NonzeroQ(a) & ZeroQ(c))))))
    rule319 = ReplacementRule(pattern319, lambda c, d, x, f, n, e, B, m, b, a, A : -b*(a + b*Cot(e + f*x))**(m + S(1))*(c + d*Cot(e + f*x))**(n + S(1))*(A*b - B*a)/(f*(a**S(2) + b**S(2))*(m + S(1))*(-a*d + b*c)) + Int((a + b*Cot(e + f*x))**(m + S(1))*(c + d*Cot(e + f*x))**n*Simp(A*(a*(m + S(1))*(-a*d + b*c) - b**S(2)*d*(m + n + S(2))) + B*b*(a*d*(n + S(1)) + b*c*(m + S(1))) - b*d*(A*b - B*a)*(m + n + S(2))*Cot(e + f*x)**S(2) - (m + S(1))*(A*b - B*a)*(-a*d + b*c)*Cot(e + f*x), x), x)/((a**S(2) + b**S(2))*(m + S(1))*(-a*d + b*c)))
    rubi.add(rule319)

    pattern320 = Pattern(Integral((WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Less(S(0), m, S(1))), CustomConstraint(lambda n: Less(S(0), n, S(1))))
    rule320 = ReplacementRule(pattern320, lambda c, d, x, f, n, e, B, m, b, a, A : B*(a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**n/(f*(m + n)) + Int((a + b*Tan(e + f*x))**(m + S(-1))*(c + d*Tan(e + f*x))**(n + S(-1))*Simp(A*a*c*(m + n) - B*(a*d*n + b*c*m) + (m + n)*(A*a*d + A*b*c + B*a*c - B*b*d)*Tan(e + f*x) + (A*b*d*(m + n) + B*(a*d*m + b*c*n))*Tan(e + f*x)**S(2), x), x)/(m + n))
    rubi.add(rule320)

    pattern321 = Pattern(Integral((WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Less(S(0), m, S(1))), CustomConstraint(lambda n: Less(S(0), n, S(1))))
    rule321 = ReplacementRule(pattern321, lambda c, d, x, f, n, e, B, m, b, a, A : -B*(a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**n/(f*(m + n)) + Int((a + b*Cot(e + f*x))**(m + S(-1))*(c + d*Cot(e + f*x))**(n + S(-1))*Simp(A*a*c*(m + n) - B*(a*d*n + b*c*m) + (m + n)*(A*a*d + A*b*c + B*a*c - B*b*d)*Cot(e + f*x) + (A*b*d*(m + n) + B*(a*d*m + b*c*n))*Cot(e + f*x)**S(2), x), x)/(m + n))
    rubi.add(rule321)

    pattern322 = Pattern(Integral((WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))/((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule322 = ReplacementRule(pattern322, lambda c, d, x, f, e, B, b, a, A : b*(A*b - B*a)*Int((-a*Tan(e + f*x) + b)/(a + b*Tan(e + f*x)), x)/((a**S(2) + b**S(2))*(-a*d + b*c)) + d*(-A*d + B*c)*Int((-c*Tan(e + f*x) + d)/(c + d*Tan(e + f*x)), x)/((c**S(2) + d**S(2))*(-a*d + b*c)) + x*(A*(a*c - b*d) + B*(a*d + b*c))/((a**S(2) + b**S(2))*(c**S(2) + d**S(2))))
    rubi.add(rule322)

    pattern323 = Pattern(Integral((WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))/((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule323 = ReplacementRule(pattern323, lambda c, d, x, f, e, B, b, a, A : b*(A*b - B*a)*Int((-a*Cot(e + f*x) + b)/(a + b*Cot(e + f*x)), x)/((a**S(2) + b**S(2))*(-a*d + b*c)) + d*(-A*d + B*c)*Int((-c*Cot(e + f*x) + d)/(c + d*Cot(e + f*x)), x)/((c**S(2) + d**S(2))*(-a*d + b*c)) + x*(A*(a*c - b*d) + B*(a*d + b*c))/((a**S(2) + b**S(2))*(c**S(2) + d**S(2))))
    rubi.add(rule323)

    pattern324 = Pattern(Integral((WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))*sqrt(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))/(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule324 = ReplacementRule(pattern324, lambda c, d, x, f, e, B, b, a, A : -(-A*b + B*a)*(-a*d + b*c)*Int((Tan(e + f*x)**S(2) + S(1))/((a + b*Tan(e + f*x))*Sqrt(c + d*Tan(e + f*x))), x)/(a**S(2) + b**S(2)) + Int(Simp(A*(a*c + b*d) + B*(-a*d + b*c) - (A*(-a*d + b*c) - B*(a*c + b*d))*Tan(e + f*x), x)/Sqrt(c + d*Tan(e + f*x)), x)/(a**S(2) + b**S(2)))
    rubi.add(rule324)

    pattern325 = Pattern(Integral((WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))*sqrt(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))/(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule325 = ReplacementRule(pattern325, lambda c, d, x, f, e, B, b, a, A : -(-A*b + B*a)*(-a*d + b*c)*Int((Cot(e + f*x)**S(2) + S(1))/((a + b*Cot(e + f*x))*Sqrt(c + d*Cot(e + f*x))), x)/(a**S(2) + b**S(2)) + Int(Simp(A*(a*c + b*d) + B*(-a*d + b*c) - (A*(-a*d + b*c) - B*(a*c + b*d))*Cot(e + f*x), x)/Sqrt(c + d*Cot(e + f*x)), x)/(a**S(2) + b**S(2)))
    rubi.add(rule325)

    pattern326 = Pattern(Integral((WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_/(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule326 = ReplacementRule(pattern326, lambda c, d, x, f, n, e, B, b, a, A : b*(A*b - B*a)*Int((c + d*Tan(e + f*x))**n*(Tan(e + f*x)**S(2) + S(1))/(a + b*Tan(e + f*x)), x)/(a**S(2) + b**S(2)) + Int((c + d*Tan(e + f*x))**n*Simp(A*a + B*b - (A*b - B*a)*Tan(e + f*x), x), x)/(a**S(2) + b**S(2)))
    rubi.add(rule326)

    pattern327 = Pattern(Integral((WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_/(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule327 = ReplacementRule(pattern327, lambda c, d, x, f, n, e, B, b, a, A : b*(A*b - B*a)*Int((c + d*Cot(e + f*x))**n*(Cot(e + f*x)**S(2) + S(1))/(a + b*Cot(e + f*x)), x)/(a**S(2) + b**S(2)) + Int((c + d*Cot(e + f*x))**n*Simp(A*a + B*b - (A*b - B*a)*Cot(e + f*x), x), x)/(a**S(2) + b**S(2)))
    rubi.add(rule327)

    pattern328 = Pattern(Integral((WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))*sqrt(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))/sqrt(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule328 = ReplacementRule(pattern328, lambda c, d, x, f, e, B, b, a, A : B*b*Int((Tan(e + f*x)**S(2) + S(1))/(Sqrt(a + b*Tan(e + f*x))*Sqrt(c + d*Tan(e + f*x))), x) + Int(Simp(A*a - B*b + (A*b + B*a)*Tan(e + f*x), x)/(Sqrt(a + b*Tan(e + f*x))*Sqrt(c + d*Tan(e + f*x))), x))
    rubi.add(rule328)

    pattern329 = Pattern(Integral((WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))*sqrt(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))/sqrt(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule329 = ReplacementRule(pattern329, lambda c, d, x, f, e, B, b, a, A : B*b*Int((Cot(e + f*x)**S(2) + S(1))/(Sqrt(a + b*Cot(e + f*x))*Sqrt(c + d*Cot(e + f*x))), x) + Int(Simp(A*a - B*b + (A*b + B*a)*Cot(e + f*x), x)/(Sqrt(a + b*Cot(e + f*x))*Sqrt(c + d*Cot(e + f*x))), x))
    rubi.add(rule329)

    pattern330 = Pattern(Integral((WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda B, A: ZeroQ(A**S(2) + B**S(2))))
    rule330 = ReplacementRule(pattern330, lambda c, d, x, f, n, e, B, m, b, a, A : A**S(2)*Subst(Int((a + b*x)**m*(c + d*x)**n/(A - B*x), x), x, Tan(e + f*x))/f)
    rubi.add(rule330)

    pattern331 = Pattern(Integral((WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda B, A: ZeroQ(A**S(2) + B**S(2))))
    rule331 = ReplacementRule(pattern331, lambda c, d, x, f, n, e, B, m, b, a, A : -A**S(2)*Subst(Int((a + b*x)**m*(c + d*x)**n/(A - B*x), x), x, Cot(e + f*x))/f)
    rubi.add(rule331)

    pattern332 = Pattern(Integral((WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda B, A: NonzeroQ(A**S(2) + B**S(2))))
    rule332 = ReplacementRule(pattern332, lambda c, d, x, f, n, e, B, m, b, a, A : (A/S(2) - B*ImaginaryI/S(2))*Int((a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**n*(ImaginaryI*Tan(e + f*x) + S(1)), x) + (A/S(2) + B*ImaginaryI/S(2))*Int((a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**n*(-ImaginaryI*Tan(e + f*x) + S(1)), x))
    rubi.add(rule332)

    pattern333 = Pattern(Integral((WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda B, A: NonzeroQ(A**S(2) + B**S(2))))
    rule333 = ReplacementRule(pattern333, lambda c, d, x, f, n, e, B, m, b, a, A : (A/S(2) - B*ImaginaryI/S(2))*Int((a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**n*(ImaginaryI*Cot(e + f*x) + S(1)), x) + (A/S(2) + B*ImaginaryI/S(2))*Int((a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**n*(-ImaginaryI*Cot(e + f*x) + S(1)), x))
    rubi.add(rule333)

    pattern334 = Pattern(Integral((A_ + WC('C', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))*(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda C, A: ZeroQ(A - C)))
    rule334 = ReplacementRule(pattern334, lambda x, f, e, m, b, A, C, a : A*Subst(Int((a + x)**m, x), x, b*Tan(e + f*x))/(b*f))
    rubi.add(rule334)

    pattern335 = Pattern(Integral((A_ + WC('C', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))*(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda C, A: ZeroQ(A - C)))
    rule335 = ReplacementRule(pattern335, lambda x, f, e, m, b, A, C, a : -A*Subst(Int((a + x)**m, x), x, b*Cot(e + f*x))/(b*f))
    rubi.add(rule335)

    pattern336 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))) + WC('C', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**S(2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda B, b, a, C, A: ZeroQ(A*b**S(2) - B*a*b + C*a**S(2))))
    rule336 = ReplacementRule(pattern336, lambda x, f, e, B, m, b, A, C, a : Int((a + b*Tan(e + f*x))**(m + S(1))*Simp(B*b - C*a + C*b*Tan(e + f*x), x), x)/b**S(2))
    rubi.add(rule336)

    pattern337 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))) + WC('C', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**S(2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda B, b, a, C, A: ZeroQ(A*b**S(2) - B*a*b + C*a**S(2))))
    rule337 = ReplacementRule(pattern337, lambda x, f, e, B, m, b, A, C, a : Int((a + b*Cot(e + f*x))**(m + S(1))*Simp(B*b - C*a + C*b*Cot(e + f*x), x), x)/b**S(2))
    rubi.add(rule337)

    pattern338 = Pattern(Integral((WC('A', S(0)) + WC('C', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))*(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda a, C, A, b: ZeroQ(A*b**S(2) + C*a**S(2))))
    rule338 = ReplacementRule(pattern338, lambda x, f, e, m, b, A, C, a : -C*Int((a - b*Tan(e + f*x))*(a + b*Tan(e + f*x))**(m + S(1)), x)/b**S(2))
    rubi.add(rule338)

    pattern339 = Pattern(Integral((WC('A', S(0)) + WC('C', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))*(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda a, C, A, b: ZeroQ(A*b**S(2) + C*a**S(2))))
    rule339 = ReplacementRule(pattern339, lambda x, f, e, m, b, A, C, a : -C*Int((a - b*Cot(e + f*x))*(a + b*Cot(e + f*x))**(m + S(1)), x)/b**S(2))
    rubi.add(rule339)

    pattern340 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))) + WC('C', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**S(2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda B, b, a, C, A: NonzeroQ(A*b**S(2) - B*a*b + C*a**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: LessEqual(m, S(-1))), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))))
    rule340 = ReplacementRule(pattern340, lambda x, f, e, B, m, b, A, C, a : (a + b*Tan(e + f*x))**m*(-A*a - B*b + C*a)*Tan(e + f*x)/(S(2)*a*f*m) + Int((a + b*Tan(e + f*x))**(m + S(1))*Simp(A*a*(S(2)*m + S(1)) + B*b - C*a - (C*b*(m + S(-1)) + (m + S(1))*(A*b - B*a))*Tan(e + f*x), x), x)/(S(2)*a**S(2)*m))
    rubi.add(rule340)

    pattern341 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))) + WC('C', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**S(2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda B, b, a, C, A: NonzeroQ(A*b**S(2) - B*a*b + C*a**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: LessEqual(m, S(-1))), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))))
    rule341 = ReplacementRule(pattern341, lambda x, f, e, B, m, b, A, C, a : (a + b*Cot(e + f*x))**m*(A*a + B*b - C*a)*Cot(e + f*x)/(S(2)*a*f*m) + Int((a + b*Cot(e + f*x))**(m + S(1))*Simp(A*a*(S(2)*m + S(1)) + B*b - C*a - (C*b*(m + S(-1)) + (m + S(1))*(A*b - B*a))*Cot(e + f*x), x), x)/(S(2)*a**S(2)*m))
    rubi.add(rule341)

    pattern342 = Pattern(Integral((WC('A', S(0)) + WC('C', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))*(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda a, C, A, b: NonzeroQ(A*b**S(2) + C*a**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: LessEqual(m, S(-1))), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))))
    rule342 = ReplacementRule(pattern342, lambda x, f, e, m, b, A, C, a : (a + b*Tan(e + f*x))**m*(-A*a + C*a)*Tan(e + f*x)/(S(2)*a*f*m) + Int((a + b*Tan(e + f*x))**(m + S(1))*Simp(A*a*(S(2)*m + S(1)) - C*a - (A*b*(m + S(1)) + C*b*(m + S(-1)))*Tan(e + f*x), x), x)/(S(2)*a**S(2)*m))
    rubi.add(rule342)

    pattern343 = Pattern(Integral((WC('A', S(0)) + WC('C', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))*(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda a, C, A, b: NonzeroQ(A*b**S(2) + C*a**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: LessEqual(m, S(-1))), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))))
    rule343 = ReplacementRule(pattern343, lambda x, f, e, m, b, A, C, a : (a + b*Cot(e + f*x))**m*(A*a - C*a)*Cot(e + f*x)/(S(2)*a*f*m) + Int((a + b*Cot(e + f*x))**(m + S(1))*Simp(A*a*(S(2)*m + S(1)) - C*a - (A*b*(m + S(1)) + C*b*(m + S(-1)))*Cot(e + f*x), x), x)/(S(2)*a**S(2)*m))
    rubi.add(rule343)

    pattern344 = Pattern(Integral((A_ + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))) + WC('C', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))/(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda B, b, a, C, A: ZeroQ(A*b - B*a - C*b)))
    rule344 = ReplacementRule(pattern344, lambda x, f, e, B, b, A, C, a : x*(A*a + B*b - C*a)/(a**S(2) + b**S(2)) + (A*b**S(2) - B*a*b + C*a**S(2))*Int((Tan(e + f*x)**S(2) + S(1))/(a + b*Tan(e + f*x)), x)/(a**S(2) + b**S(2)))
    rubi.add(rule344)

    pattern345 = Pattern(Integral((A_ + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))) + WC('C', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))/(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda B, b, a, C, A: ZeroQ(A*b - B*a - C*b)))
    rule345 = ReplacementRule(pattern345, lambda x, f, e, B, b, A, C, a : x*(A*a + B*b - C*a)/(a**S(2) + b**S(2)) + (A*b**S(2) - B*a*b + C*a**S(2))*Int((Cot(e + f*x)**S(2) + S(1))/(a + b*Cot(e + f*x)), x)/(a**S(2) + b**S(2)))
    rubi.add(rule345)

    pattern346 = Pattern(Integral((A_ + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))) + WC('C', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))/tan(x_*WC('f', S(1)) + WC('e', S(0))), x_), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda C, A: NonzeroQ(A - C)))
    rule346 = ReplacementRule(pattern346, lambda x, f, e, B, C, A : A*Int(1/Tan(e + f*x), x) + B*x + C*Int(Tan(e + f*x), x))
    rubi.add(rule346)

    pattern347 = Pattern(Integral((A_ + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))) + WC('C', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))/cot(x_*WC('f', S(1)) + WC('e', S(0))), x_), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda C, A: NonzeroQ(A - C)))
    rule347 = ReplacementRule(pattern347, lambda x, f, e, B, C, A : A*Int(1/Cot(e + f*x), x) + B*x + C*Int(Cot(e + f*x), x))
    rubi.add(rule347)

    pattern348 = Pattern(Integral((A_ + WC('C', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))/tan(x_*WC('f', S(1)) + WC('e', S(0))), x_), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda C, A: NonzeroQ(A - C)))
    rule348 = ReplacementRule(pattern348, lambda x, f, e, C, A : A*Int(1/Tan(e + f*x), x) + C*Int(Tan(e + f*x), x))
    rubi.add(rule348)

    pattern349 = Pattern(Integral((A_ + WC('C', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))/cot(x_*WC('f', S(1)) + WC('e', S(0))), x_), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda C, A: NonzeroQ(A - C)))
    rule349 = ReplacementRule(pattern349, lambda x, f, e, C, A : A*Int(1/Cot(e + f*x), x) + C*Int(Cot(e + f*x), x))
    rubi.add(rule349)

    pattern350 = Pattern(Integral((A_ + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))) + WC('C', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))/(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda B, b, a, C, A: NonzeroQ(A*b**S(2) - B*a*b + C*a**S(2))), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda B, b, a, C, A: NonzeroQ(A*b - B*a - C*b)))
    rule350 = ReplacementRule(pattern350, lambda x, f, e, B, b, A, C, a : x*(A*a + B*b - C*a)/(a**S(2) + b**S(2)) - (A*b - B*a - C*b)*Int(Tan(e + f*x), x)/(a**S(2) + b**S(2)) + (A*b**S(2) - B*a*b + C*a**S(2))*Int((Tan(e + f*x)**S(2) + S(1))/(a + b*Tan(e + f*x)), x)/(a**S(2) + b**S(2)))
    rubi.add(rule350)

    pattern351 = Pattern(Integral((A_ + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))) + WC('C', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))/(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda B, b, a, C, A: NonzeroQ(A*b**S(2) - B*a*b + C*a**S(2))), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda B, b, a, C, A: NonzeroQ(A*b - B*a - C*b)))
    rule351 = ReplacementRule(pattern351, lambda x, f, e, B, b, A, C, a : x*(A*a + B*b - C*a)/(a**S(2) + b**S(2)) - (A*b - B*a - C*b)*Int(Cot(e + f*x), x)/(a**S(2) + b**S(2)) + (A*b**S(2) - B*a*b + C*a**S(2))*Int((Cot(e + f*x)**S(2) + S(1))/(a + b*Cot(e + f*x)), x)/(a**S(2) + b**S(2)))
    rubi.add(rule351)

    pattern352 = Pattern(Integral((A_ + WC('C', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))/(a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda C, b, A, a: NonzeroQ(A*b**S(2) + C*a**S(2))), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda C, A: NonzeroQ(A - C)))
    rule352 = ReplacementRule(pattern352, lambda x, f, e, b, a, C, A : a*x*(A - C)/(a**S(2) + b**S(2)) - b*(A - C)*Int(Tan(e + f*x), x)/(a**S(2) + b**S(2)) + (A*b**S(2) + C*a**S(2))*Int((Tan(e + f*x)**S(2) + S(1))/(a + b*Tan(e + f*x)), x)/(a**S(2) + b**S(2)))
    rubi.add(rule352)

    pattern353 = Pattern(Integral((A_ + WC('C', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))/(a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda C, b, A, a: NonzeroQ(A*b**S(2) + C*a**S(2))), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda C, A: NonzeroQ(A - C)))
    rule353 = ReplacementRule(pattern353, lambda x, f, e, b, A, C, a : a*x*(A - C)/(a**S(2) + b**S(2)) - b*(A - C)*Int(Cot(e + f*x), x)/(a**S(2) + b**S(2)) + (A*b**S(2) + C*a**S(2))*Int((Cot(e + f*x)**S(2) + S(1))/(a + b*Cot(e + f*x)), x)/(a**S(2) + b**S(2)))
    rubi.add(rule353)

    pattern354 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))) + WC('C', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**S(2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda B, b, a, C, A: NonzeroQ(A*b**S(2) - B*a*b + C*a**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))))
    rule354 = ReplacementRule(pattern354, lambda x, f, e, B, m, b, a, C, A : Int((a + b*Tan(e + f*x))**(m + S(1))*Simp(B*b + a*(A - C) - (A*b - B*a - C*b)*Tan(e + f*x), x), x)/(a**S(2) + b**S(2)) + (a + b*Tan(e + f*x))**(m + S(1))*(A*b**S(2) - B*a*b + C*a**S(2))/(b*f*(a**S(2) + b**S(2))*(m + S(1))))
    rubi.add(rule354)

    pattern355 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))) + WC('C', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**S(2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda B, b, a, C, A: NonzeroQ(A*b**S(2) - B*a*b + C*a**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))))
    rule355 = ReplacementRule(pattern355, lambda x, f, e, B, m, b, a, C, A : Int((a + b*Cot(e + f*x))**(m + S(1))*Simp(B*b + a*(A - C) - (A*b - B*a - C*b)*Cot(e + f*x), x), x)/(a**S(2) + b**S(2)) + (a + b*Cot(e + f*x))**(m + S(1))*(-A*b**S(2) + B*a*b - C*a**S(2))/(b*f*(a**S(2) + b**S(2))*(m + S(1))))
    rubi.add(rule355)

    pattern356 = Pattern(Integral((WC('A', S(0)) + WC('C', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))*(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda a, C, A, b: NonzeroQ(A*b**S(2) + C*a**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))))
    rule356 = ReplacementRule(pattern356, lambda x, f, e, m, b, a, C, A : Int((a + b*Tan(e + f*x))**(m + S(1))*Simp(a*(A - C) - (A*b - C*b)*Tan(e + f*x), x), x)/(a**S(2) + b**S(2)) + (a + b*Tan(e + f*x))**(m + S(1))*(A*b**S(2) + C*a**S(2))/(b*f*(a**S(2) + b**S(2))*(m + S(1))))
    rubi.add(rule356)

    pattern357 = Pattern(Integral((WC('A', S(0)) + WC('C', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))*(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda a, C, A, b: NonzeroQ(A*b**S(2) + C*a**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))))
    rule357 = ReplacementRule(pattern357, lambda x, f, e, m, b, a, C, A : Int((a + b*Cot(e + f*x))**(m + S(1))*Simp(a*(A - C) - (A*b - C*b)*Cot(e + f*x), x), x)/(a**S(2) + b**S(2)) + (a + b*Cot(e + f*x))**(m + S(1))*(-A*b**S(2) - C*a**S(2))/(b*f*(a**S(2) + b**S(2))*(m + S(1))))
    rubi.add(rule357)

    pattern358 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))) + WC('C', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**S(2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda B, b, a, C, A: NonzeroQ(A*b**S(2) - B*a*b + C*a**S(2))), CustomConstraint(lambda m: ~(RationalQ(m) & LessEqual(m, S(-1)))))
    rule358 = ReplacementRule(pattern358, lambda x, f, e, B, m, b, A, C, a : C*(a + b*Tan(e + f*x))**(m + S(1))/(b*f*(m + S(1))) + Int((a + b*Tan(e + f*x))**m*Simp(A + B*Tan(e + f*x) - C, x), x))
    rubi.add(rule358)

    pattern359 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))) + WC('C', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**S(2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda B, b, a, C, A: NonzeroQ(A*b**S(2) - B*a*b + C*a**S(2))), CustomConstraint(lambda m: ~(RationalQ(m) & LessEqual(m, S(-1)))))
    rule359 = ReplacementRule(pattern359, lambda x, f, e, B, m, b, A, C, a : -C*(a + b*Cot(e + f*x))**(m + S(1))/(b*f*(m + S(1))) + Int((a + b*Cot(e + f*x))**m*Simp(A + B*Cot(e + f*x) - C, x), x))
    rubi.add(rule359)

    pattern360 = Pattern(Integral((WC('A', S(0)) + WC('C', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))*(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda a, C, A, b: NonzeroQ(A*b**S(2) + C*a**S(2))), CustomConstraint(lambda m: ~(RationalQ(m) & LessEqual(m, S(-1)))))
    rule360 = ReplacementRule(pattern360, lambda x, f, e, m, b, A, C, a : C*(a + b*Tan(e + f*x))**(m + S(1))/(b*f*(m + S(1))) + (A - C)*Int((a + b*Tan(e + f*x))**m, x))
    rubi.add(rule360)

    pattern361 = Pattern(Integral((WC('A', S(0)) + WC('C', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))*(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda a, C, A, b: NonzeroQ(A*b**S(2) + C*a**S(2))), CustomConstraint(lambda m: ~(RationalQ(m) & LessEqual(m, S(-1)))))
    rule361 = ReplacementRule(pattern361, lambda x, f, e, m, b, A, C, a : -C*(a + b*Cot(e + f*x))**(m + S(1))/(b*f*(m + S(1))) + (A - C)*Int((a + b*Cot(e + f*x))**m, x))
    rubi.add(rule361)

    pattern362 = Pattern(Integral((A_ + WC('C', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))*(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda C, A: ZeroQ(A - C)))
    rule362 = ReplacementRule(pattern362, lambda c, d, x, f, e, m, b, A, n, C, a : A*Subst(Int((a + b*x)**m*(c + d*x)**n, x), x, Tan(e + f*x))/f)
    rubi.add(rule362)

    pattern363 = Pattern(Integral((A_ + WC('C', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))*(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda C, A: ZeroQ(A - C)))
    rule363 = ReplacementRule(pattern363, lambda c, d, x, f, e, m, b, A, n, C, a : -A*Subst(Int((a + b*x)**m*(c + d*x)**n, x), x, Cot(e + f*x))/f)
    rubi.add(rule363)

    pattern364 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_*(WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))) + WC('C', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**S(2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, S(-1))))
    rule364 = ReplacementRule(pattern364, lambda c, d, x, f, e, B, b, A, n, C, a : Int((c + d*Tan(e + f*x))**(n + S(1))*Simp(C*b*(c**S(2) + d**S(2))*Tan(e + f*x)**S(2) + a*d*(A*c + B*d - C*c) + b*(A*d**S(2) - B*c*d + C*c**S(2)) + d*(-A*a*d + A*b*c + B*a*c + B*b*d + C*a*d - C*b*c)*Tan(e + f*x), x), x)/(d*(c**S(2) + d**S(2))) + (c + d*Tan(e + f*x))**(n + S(1))*(a*d - b*c)*(A*d**S(2) - B*c*d + C*c**S(2))/(d**S(2)*f*(c**S(2) + d**S(2))*(n + S(1))))
    rubi.add(rule364)

    pattern365 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_*(WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))) + WC('C', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**S(2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, S(-1))))
    rule365 = ReplacementRule(pattern365, lambda c, d, x, f, n, e, B, b, a, C, A : Int((c + d*Cot(e + f*x))**(n + S(1))*Simp(C*b*(c**S(2) + d**S(2))*Cot(e + f*x)**S(2) + a*d*(A*c + B*d - C*c) + b*(A*d**S(2) - B*c*d + C*c**S(2)) + d*(-A*a*d + A*b*c + B*a*c + B*b*d + C*a*d - C*b*c)*Cot(e + f*x), x), x)/(d*(c**S(2) + d**S(2))) + (c + d*Cot(e + f*x))**(n + S(1))*(-a*d + b*c)*(A*d**S(2) - B*c*d + C*c**S(2))/(d**S(2)*f*(c**S(2) + d**S(2))*(n + S(1))))
    rubi.add(rule365)

    pattern366 = Pattern(Integral((WC('A', S(0)) + WC('C', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))*(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, S(-1))))
    rule366 = ReplacementRule(pattern366, lambda c, d, x, f, e, b, A, n, C, a : Int((c + d*Tan(e + f*x))**(n + S(1))*Simp(C*b*(c**S(2) + d**S(2))*Tan(e + f*x)**S(2) + a*d*(A*c - C*c) + b*(A*d**S(2) + C*c**S(2)) + d*(-A*a*d + A*b*c + C*a*d - C*b*c)*Tan(e + f*x), x), x)/(d*(c**S(2) + d**S(2))) + (c + d*Tan(e + f*x))**(n + S(1))*(A*d**S(2) + C*c**S(2))*(a*d - b*c)/(d**S(2)*f*(c**S(2) + d**S(2))*(n + S(1))))
    rubi.add(rule366)

    pattern367 = Pattern(Integral((WC('A', S(0)) + WC('C', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))*(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, S(-1))))
    rule367 = ReplacementRule(pattern367, lambda c, d, x, f, n, e, b, a, C, A : Int((c + d*Cot(e + f*x))**(n + S(1))*Simp(C*b*(c**S(2) + d**S(2))*Cot(e + f*x)**S(2) + a*d*(A*c - C*c) + b*(A*d**S(2) + C*c**S(2)) + d*(-A*a*d + A*b*c + C*a*d - C*b*c)*Cot(e + f*x), x), x)/(d*(c**S(2) + d**S(2))) + (c + d*Cot(e + f*x))**(n + S(1))*(A*d**S(2) + C*c**S(2))*(-a*d + b*c)/(d**S(2)*f*(c**S(2) + d**S(2))*(n + S(1))))
    rubi.add(rule367)

    pattern368 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1))*(WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))) + WC('C', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**S(2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n: ~(RationalQ(n) & Less(n, S(-1)))))
    rule368 = ReplacementRule(pattern368, lambda c, d, x, f, e, B, a, b, n, C, A : C*b*(c + d*Tan(e + f*x))**(n + S(1))*Tan(e + f*x)/(d*f*(n + S(2))) - Int((c + d*Tan(e + f*x))**n*Simp(-A*a*d*(n + S(2)) + C*b*c - d*(n + S(2))*(A*b + B*a - C*b)*Tan(e + f*x) - (C*a*d*(n + S(2)) - b*(-B*d*(n + S(2)) + C*c))*Tan(e + f*x)**S(2), x), x)/(d*(n + S(2))))
    rubi.add(rule368)

    pattern369 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1))*(WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))) + WC('C', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**S(2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n: ~(RationalQ(n) & Less(n, S(-1)))))
    rule369 = ReplacementRule(pattern369, lambda c, d, x, f, e, B, a, b, n, C, A : -C*b*(c + d*Cot(e + f*x))**(n + S(1))*Cot(e + f*x)/(d*f*(n + S(2))) - Int((c + d*Cot(e + f*x))**n*Simp(-A*a*d*(n + S(2)) + C*b*c - d*(n + S(2))*(A*b + B*a - C*b)*Cot(e + f*x) - (C*a*d*(n + S(2)) - b*(-B*d*(n + S(2)) + C*c))*Cot(e + f*x)**S(2), x), x)/(d*(n + S(2))))
    rubi.add(rule369)

    pattern370 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('A', S(0)) + WC('C', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n: ~(RationalQ(n) & Less(n, S(-1)))))
    rule370 = ReplacementRule(pattern370, lambda c, d, x, f, e, a, b, n, C, A : C*b*(c + d*Tan(e + f*x))**(n + S(1))*Tan(e + f*x)/(d*f*(n + S(2))) - Int((c + d*Tan(e + f*x))**n*Simp(-A*a*d*(n + S(2)) + C*b*c - d*(n + S(2))*(A*b - C*b)*Tan(e + f*x) - (C*a*d*(n + S(2)) - C*b*c)*Tan(e + f*x)**S(2), x), x)/(d*(n + S(2))))
    rubi.add(rule370)

    pattern371 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('A', S(0)) + WC('C', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n: ~(RationalQ(n) & Less(n, S(-1)))))
    rule371 = ReplacementRule(pattern371, lambda c, d, x, f, e, a, b, n, C, A : -C*b*(c + d*Cot(e + f*x))**(n + S(1))*Cot(e + f*x)/(d*f*(n + S(2))) - Int((c + d*Cot(e + f*x))**n*Simp(-A*a*d*(n + S(2)) + C*b*c - d*(n + S(2))*(A*b - C*b)*Cot(e + f*x) - (C*a*d*(n + S(2)) - C*b*c)*Cot(e + f*x)**S(2), x), x)/(d*(n + S(2))))
    rubi.add(rule371)

    pattern372 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1))*(WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))) + WC('C', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**S(2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n, m: ZeroQ(m + n + S(1)) | (RationalQ(m) & Less(m, S(0)))))
    rule372 = ReplacementRule(pattern372, lambda c, d, x, f, e, B, a, m, b, n, C, A : (a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**(n + S(1))*(A*a + B*b - C*a)/(S(2)*f*m*(-a*d + b*c)) + Int((a + b*Tan(e + f*x))**(m + S(1))*(c + d*Tan(e + f*x))**n*Simp(a*(-A*d*(S(2)*m + n + S(1)) + B*c*m + C*d*(n + S(1))) + b*(-B*d*(n + S(1)) + c*m*(A + C)) + (A*b*d*(m + n + S(1)) + C*b*d*(m - n + S(-1)) + a*(-B*d*(m + n + S(1)) + S(2)*C*c*m))*Tan(e + f*x), x), x)/(S(2)*a*m*(-a*d + b*c)))
    rubi.add(rule372)

    pattern373 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1))*(WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))) + WC('C', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**S(2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n, m: ZeroQ(m + n + S(1)) | (RationalQ(m) & Less(m, S(0)))))
    rule373 = ReplacementRule(pattern373, lambda c, d, x, f, e, B, a, m, b, n, C, A : (a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**(n + S(1))*(-A*a - B*b + C*a)/(S(2)*f*m*(-a*d + b*c)) + Int((a + b*Cot(e + f*x))**(m + S(1))*(c + d*Cot(e + f*x))**n*Simp(a*(-A*d*(S(2)*m + n + S(1)) + B*c*m + C*d*(n + S(1))) + b*(-B*d*(n + S(1)) + c*m*(A + C)) + (A*b*d*(m + n + S(1)) + C*b*d*(m - n + S(-1)) + a*(-B*d*(m + n + S(1)) + S(2)*C*c*m))*Cot(e + f*x), x), x)/(S(2)*a*m*(-a*d + b*c)))
    rubi.add(rule373)

    pattern374 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('A', S(0)) + WC('C', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n, m: ZeroQ(m + n + S(1)) | (RationalQ(m) & Less(m, S(0)))))
    rule374 = ReplacementRule(pattern374, lambda c, d, x, f, e, a, m, b, n, C, A : a*(A - C)*(a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**(n + S(1))/(S(2)*f*m*(-a*d + b*c)) + Int((a + b*Tan(e + f*x))**(m + S(1))*(c + d*Tan(e + f*x))**n*Simp(a*(-A*d*(S(2)*m + n + S(1)) + C*d*(n + S(1))) + b*c*m*(A + C) + (A*b*d*(m + n + S(1)) + S(2)*C*a*c*m + C*b*d*(m - n + S(-1)))*Tan(e + f*x), x), x)/(S(2)*a*m*(-a*d + b*c)))
    rubi.add(rule374)

    pattern375 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('A', S(0)) + WC('C', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n, m: ZeroQ(m + n + S(1)) | (RationalQ(m) & Less(m, S(0)))))
    rule375 = ReplacementRule(pattern375, lambda c, d, x, f, e, a, m, b, n, C, A : -a*(A - C)*(a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**(n + S(1))/(S(2)*f*m*(-a*d + b*c)) + Int((a + b*Cot(e + f*x))**(m + S(1))*(c + d*Cot(e + f*x))**n*Simp(a*(-A*d*(S(2)*m + n + S(1)) + C*d*(n + S(1))) + b*c*m*(A + C) + (A*b*d*(m + n + S(1)) + S(2)*C*a*c*m + C*b*d*(m - n + S(-1)))*Cot(e + f*x), x), x)/(S(2)*a*m*(-a*d + b*c)))
    rubi.add(rule375)

    pattern376 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_*(WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))) + WC('C', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**S(2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: ~(RationalQ(m) & Less(m, S(0)))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, S(-1))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule376 = ReplacementRule(pattern376, lambda c, d, x, f, n, e, B, b, m, a, C, A : (a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**(n + S(1))*(A*d**S(2) - B*c*d + C*c**S(2))/(d*f*(c**S(2) + d**S(2))*(n + S(1))) - Int((a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**(n + S(1))*Simp(-a*d*(n + S(1))*(A*c + B*d - C*c) - a*(-C*(c**S(2)*m - d**S(2)*(n + S(1))) + d*(-A*d + B*c)*(m + n + S(1)))*Tan(e + f*x) + b*m*(A*d**S(2) - B*c*d + C*c**S(2)), x), x)/(a*d*(c**S(2) + d**S(2))*(n + S(1))))
    rubi.add(rule376)

    pattern377 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_*(WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))) + WC('C', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**S(2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: ~(RationalQ(m) & Less(m, S(0)))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, S(-1))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule377 = ReplacementRule(pattern377, lambda c, d, x, f, e, B, a, m, b, n, C, A : (a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**(n + S(1))*(-A*d**S(2) + B*c*d - C*c**S(2))/(d*f*(c**S(2) + d**S(2))*(n + S(1))) - Int((a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**(n + S(1))*Simp(-a*d*(n + S(1))*(A*c + B*d - C*c) - a*(-C*(c**S(2)*m - d**S(2)*(n + S(1))) + d*(-A*d + B*c)*(m + n + S(1)))*Cot(e + f*x) + b*m*(A*d**S(2) - B*c*d + C*c**S(2)), x), x)/(a*d*(c**S(2) + d**S(2))*(n + S(1))))
    rubi.add(rule377)

    pattern378 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('A', S(0)) + WC('C', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: ~(RationalQ(m) & Less(m, S(0)))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, S(-1))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule378 = ReplacementRule(pattern378, lambda c, d, x, f, n, e, b, m, a, C, A : (a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**(n + S(1))*(A*d**S(2) + C*c**S(2))/(d*f*(c**S(2) + d**S(2))*(n + S(1))) - Int((a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**(n + S(1))*Simp(-a*d*(n + S(1))*(A*c - C*c) - a*(-A*d**S(2)*(m + n + S(1)) - C*(c**S(2)*m - d**S(2)*(n + S(1))))*Tan(e + f*x) + b*m*(A*d**S(2) + C*c**S(2)), x), x)/(a*d*(c**S(2) + d**S(2))*(n + S(1))))
    rubi.add(rule378)

    pattern379 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('A', S(0)) + WC('C', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: ~(RationalQ(m) & Less(m, S(0)))), CustomConstraint(lambda n: RationalQ(n)), CustomConstraint(lambda n: Less(n, S(-1))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule379 = ReplacementRule(pattern379, lambda c, d, x, f, e, a, m, b, n, C, A : (a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**(n + S(1))*(-A*d**S(2) - C*c**S(2))/(d*f*(c**S(2) + d**S(2))*(n + S(1))) - Int((a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**(n + S(1))*Simp(-a*d*(n + S(1))*(A*c - C*c) - a*(-A*d**S(2)*(m + n + S(1)) - C*(c**S(2)*m - d**S(2)*(n + S(1))))*Cot(e + f*x) + b*m*(A*d**S(2) + C*c**S(2)), x), x)/(a*d*(c**S(2) + d**S(2))*(n + S(1))))
    rubi.add(rule379)

    pattern380 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1))*(WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))) + WC('C', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**S(2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: ~(RationalQ(m) & Less(m, S(0)))), CustomConstraint(lambda n, m: NonzeroQ(m + n + S(1))))
    rule380 = ReplacementRule(pattern380, lambda c, d, x, f, e, B, a, b, m, n, C, A : C*(a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**(n + S(1))/(d*f*(m + n + S(1))) + Int((a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**n*Simp(A*b*d*(m + n + S(1)) + C*(a*c*m - b*d*(n + S(1))) - (-B*b*d*(m + n + S(1)) + C*m*(-a*d + b*c))*Tan(e + f*x), x), x)/(b*d*(m + n + S(1))))
    rubi.add(rule380)

    pattern381 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1))*(WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))) + WC('C', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**S(2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: ~(RationalQ(m) & Less(m, S(0)))), CustomConstraint(lambda n, m: NonzeroQ(m + n + S(1))))
    rule381 = ReplacementRule(pattern381, lambda c, d, x, f, e, B, a, m, b, n, C, A : -C*(a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**(n + S(1))/(d*f*(m + n + S(1))) + Int((a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**n*Simp(A*b*d*(m + n + S(1)) + C*(a*c*m - b*d*(n + S(1))) - (-B*b*d*(m + n + S(1)) + C*m*(-a*d + b*c))*Cot(e + f*x), x), x)/(b*d*(m + n + S(1))))
    rubi.add(rule381)

    pattern382 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('A', S(0)) + WC('C', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: ~(RationalQ(m) & Less(m, S(0)))), CustomConstraint(lambda n, m: NonzeroQ(m + n + S(1))))
    rule382 = ReplacementRule(pattern382, lambda c, d, x, f, e, a, b, m, n, C, A : C*(a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**(n + S(1))/(d*f*(m + n + S(1))) + Int((a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**n*Simp(A*b*d*(m + n + S(1)) - C*m*(-a*d + b*c)*Tan(e + f*x) + C*(a*c*m - b*d*(n + S(1))), x), x)/(b*d*(m + n + S(1))))
    rubi.add(rule382)

    pattern383 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('A', S(0)) + WC('C', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: ~(RationalQ(m) & Less(m, S(0)))), CustomConstraint(lambda n, m: NonzeroQ(m + n + S(1))))
    rule383 = ReplacementRule(pattern383, lambda c, d, x, f, e, a, m, b, n, C, A : -C*(a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**(n + S(1))/(d*f*(m + n + S(1))) + Int((a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**n*Simp(A*b*d*(m + n + S(1)) - C*m*(-a*d + b*c)*Cot(e + f*x) + C*(a*c*m - b*d*(n + S(1))), x), x)/(b*d*(m + n + S(1))))
    rubi.add(rule383)

    pattern384 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_*(WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))) + WC('C', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**S(2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Greater(m, S(0))), CustomConstraint(lambda n: Less(n, S(-1))))
    rule384 = ReplacementRule(pattern384, lambda c, d, x, f, e, B, m, b, A, n, C, a : -Int((a + b*Tan(e + f*x))**(m + S(-1))*(c + d*Tan(e + f*x))**(n + S(1))*Simp(A*d*(-a*c*(n + S(1)) + b*d*m) - b*(-C*(c**S(2)*m - d**S(2)*(n + S(1))) + d*(-A*d + B*c)*(m + n + S(1)))*Tan(e + f*x)**S(2) - d*(n + S(1))*(B*(a*c + b*d) + (A - C)*(-a*d + b*c))*Tan(e + f*x) + (-B*d + C*c)*(a*d*(n + S(1)) + b*c*m), x), x)/(d*(c**S(2) + d**S(2))*(n + S(1))) + (a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**(n + S(1))*(A*d**S(2) + c*(-B*d + C*c))/(d*f*(c**S(2) + d**S(2))*(n + S(1))))
    rubi.add(rule384)

    pattern385 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_*(WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))) + WC('C', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**S(2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Greater(m, S(0))), CustomConstraint(lambda n: Less(n, S(-1))))
    rule385 = ReplacementRule(pattern385, lambda c, d, x, f, n, e, B, m, b, a, C, A : -Int((a + b*Cot(e + f*x))**(m + S(-1))*(c + d*Cot(e + f*x))**(n + S(1))*Simp(A*d*(-a*c*(n + S(1)) + b*d*m) - b*(-C*(c**S(2)*m - d**S(2)*(n + S(1))) + d*(-A*d + B*c)*(m + n + S(1)))*Cot(e + f*x)**S(2) - d*(n + S(1))*(B*(a*c + b*d) + (A - C)*(-a*d + b*c))*Cot(e + f*x) + (-B*d + C*c)*(a*d*(n + S(1)) + b*c*m), x), x)/(d*(c**S(2) + d**S(2))*(n + S(1))) + (a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**(n + S(1))*(-A*d**S(2) - c*(-B*d + C*c))/(d*f*(c**S(2) + d**S(2))*(n + S(1))))
    rubi.add(rule385)

    pattern386 = Pattern(Integral((WC('A', S(0)) + WC('C', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))*(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Greater(m, S(0))), CustomConstraint(lambda n: Less(n, S(-1))))
    rule386 = ReplacementRule(pattern386, lambda c, d, x, f, e, m, b, A, n, C, a : -Int((a + b*Tan(e + f*x))**(m + S(-1))*(c + d*Tan(e + f*x))**(n + S(1))*Simp(A*d*(-a*c*(n + S(1)) + b*d*m) + C*c*(a*d*(n + S(1)) + b*c*m) + b*(A*d**S(2)*(m + n + S(1)) + C*(c**S(2)*m - d**S(2)*(n + S(1))))*Tan(e + f*x)**S(2) - d*(A - C)*(n + S(1))*(-a*d + b*c)*Tan(e + f*x), x), x)/(d*(c**S(2) + d**S(2))*(n + S(1))) + (a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**(n + S(1))*(A*d**S(2) + C*c**S(2))/(d*f*(c**S(2) + d**S(2))*(n + S(1))))
    rubi.add(rule386)

    pattern387 = Pattern(Integral((WC('A', S(0)) + WC('C', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))*(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda m: Greater(m, S(0))), CustomConstraint(lambda n: Less(n, S(-1))))
    rule387 = ReplacementRule(pattern387, lambda c, d, x, f, n, e, m, b, a, C, A : -Int((a + b*Cot(e + f*x))**(m + S(-1))*(c + d*Cot(e + f*x))**(n + S(1))*Simp(A*d*(-a*c*(n + S(1)) + b*d*m) + C*c*(a*d*(n + S(1)) + b*c*m) + b*(A*d**S(2)*(m + n + S(1)) + C*(c**S(2)*m - d**S(2)*(n + S(1))))*Cot(e + f*x)**S(2) - d*(A - C)*(n + S(1))*(-a*d + b*c)*Cot(e + f*x), x), x)/(d*(c**S(2) + d**S(2))*(n + S(1))) + (a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**(n + S(1))*(-A*d**S(2) - C*c**S(2))/(d*f*(c**S(2) + d**S(2))*(n + S(1))))
    rubi.add(rule387)

    pattern388 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_*(WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))) + WC('C', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**S(2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Greater(m, S(0))), CustomConstraint(lambda n, c, a, m: ~(IntegerQ(n) & Greater(n, S(0)) & (~(IntegerQ(m)) | (NonzeroQ(a) & ZeroQ(c))))))
    rule388 = ReplacementRule(pattern388, lambda c, d, x, f, e, B, m, b, A, n, C, a : C*(a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**(n + S(1))/(d*f*(m + n + S(1))) + Int((a + b*Tan(e + f*x))**(m + S(-1))*(c + d*Tan(e + f*x))**n*Simp(A*a*d*(m + n + S(1)) - C*(a*d*(n + S(1)) + b*c*m) + d*(m + n + S(1))*(A*b + B*a - C*b)*Tan(e + f*x) - (-B*b*d*(m + n + S(1)) + C*m*(-a*d + b*c))*Tan(e + f*x)**S(2), x), x)/(d*(m + n + S(1))))
    rubi.add(rule388)

    pattern389 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_*(WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))) + WC('C', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**S(2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Greater(m, S(0))), CustomConstraint(lambda n, c, a, m: ~(IntegerQ(n) & Greater(n, S(0)) & (~(IntegerQ(m)) | (NonzeroQ(a) & ZeroQ(c))))))
    rule389 = ReplacementRule(pattern389, lambda c, d, x, f, e, B, m, b, A, n, C, a : -C*(a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**(n + S(1))/(d*f*(m + n + S(1))) + Int((a + b*Cot(e + f*x))**(m + S(-1))*(c + d*Cot(e + f*x))**n*Simp(A*a*d*(m + n + S(1)) - C*(a*d*(n + S(1)) + b*c*m) + d*(m + n + S(1))*(A*b + B*a - C*b)*Cot(e + f*x) - (-B*b*d*(m + n + S(1)) + C*m*(-a*d + b*c))*Cot(e + f*x)**S(2), x), x)/(d*(m + n + S(1))))
    rubi.add(rule389)

    pattern390 = Pattern(Integral((WC('A', S(0)) + WC('C', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))*(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Greater(m, S(0))), CustomConstraint(lambda n, c, a, m: ~(IntegerQ(n) & Greater(n, S(0)) & (~(IntegerQ(m)) | (NonzeroQ(a) & ZeroQ(c))))))
    rule390 = ReplacementRule(pattern390, lambda c, d, x, f, e, m, b, A, n, C, a : C*(a + b*Tan(e + f*x))**m*(c + d*Tan(e + f*x))**(n + S(1))/(d*f*(m + n + S(1))) + Int((a + b*Tan(e + f*x))**(m + S(-1))*(c + d*Tan(e + f*x))**n*Simp(A*a*d*(m + n + S(1)) - C*m*(-a*d + b*c)*Tan(e + f*x)**S(2) - C*(a*d*(n + S(1)) + b*c*m) + d*(A*b - C*b)*(m + n + S(1))*Tan(e + f*x), x), x)/(d*(m + n + S(1))))
    rubi.add(rule390)

    pattern391 = Pattern(Integral((WC('A', S(0)) + WC('C', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))*(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**WC('m', S(1))*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Greater(m, S(0))), CustomConstraint(lambda n, c, a, m: ~(IntegerQ(n) & Greater(n, S(0)) & (~(IntegerQ(m)) | (NonzeroQ(a) & ZeroQ(c))))))
    rule391 = ReplacementRule(pattern391, lambda c, d, x, f, e, m, b, A, n, C, a : -C*(a + b*Cot(e + f*x))**m*(c + d*Cot(e + f*x))**(n + S(1))/(d*f*(m + n + S(1))) + Int((a + b*Cot(e + f*x))**(m + S(-1))*(c + d*Cot(e + f*x))**n*Simp(A*a*d*(m + n + S(1)) - C*m*(-a*d + b*c)*Cot(e + f*x)**S(2) - C*(a*d*(n + S(1)) + b*c*m) + d*(A*b - C*b)*(m + n + S(1))*Cot(e + f*x), x), x)/(d*(m + n + S(1))))
    rubi.add(rule391)

    pattern392 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_*(WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))) + WC('C', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**S(2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda n, c, a, m: ~(IntegerQ(n) & Less(n, S(-1)) & (~(IntegerQ(m)) | (NonzeroQ(a) & ZeroQ(c))))))
    rule392 = ReplacementRule(pattern392, lambda c, d, x, f, e, B, m, b, A, n, C, a : Int((a + b*Tan(e + f*x))**(m + S(1))*(c + d*Tan(e + f*x))**n*Simp(A*(a*(m + S(1))*(-a*d + b*c) - b**S(2)*d*(m + n + S(2))) - d*(A*b**S(2) - a*(B*b - C*a))*(m + n + S(2))*Tan(e + f*x)**S(2) - (m + S(1))*(-a*d + b*c)*(A*b - B*a - C*b)*Tan(e + f*x) + (B*b - C*a)*(a*d*(n + S(1)) + b*c*(m + S(1))), x), x)/((a**S(2) + b**S(2))*(m + S(1))*(-a*d + b*c)) + (a + b*Tan(e + f*x))**(m + S(1))*(c + d*Tan(e + f*x))**(n + S(1))*(A*b**S(2) - a*(B*b - C*a))/(f*(a**S(2) + b**S(2))*(m + S(1))*(-a*d + b*c)))
    rubi.add(rule392)

    pattern393 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_*(WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))) + WC('C', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**S(2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda n, c, a, m: ~(IntegerQ(n) & Less(n, S(-1)) & (~(IntegerQ(m)) | (NonzeroQ(a) & ZeroQ(c))))))
    rule393 = ReplacementRule(pattern393, lambda c, d, x, f, n, e, B, m, b, a, C, A : Int((a + b*Cot(e + f*x))**(m + S(1))*(c + d*Cot(e + f*x))**n*Simp(A*(a*(m + S(1))*(-a*d + b*c) - b**S(2)*d*(m + n + S(2))) - d*(A*b**S(2) - a*(B*b - C*a))*(m + n + S(2))*Cot(e + f*x)**S(2) - (m + S(1))*(-a*d + b*c)*(A*b - B*a - C*b)*Cot(e + f*x) + (B*b - C*a)*(a*d*(n + S(1)) + b*c*(m + S(1))), x), x)/((a**S(2) + b**S(2))*(m + S(1))*(-a*d + b*c)) + (a + b*Cot(e + f*x))**(m + S(1))*(c + d*Cot(e + f*x))**(n + S(1))*(-A*b**S(2) + a*(B*b - C*a))/(f*(a**S(2) + b**S(2))*(m + S(1))*(-a*d + b*c)))
    rubi.add(rule393)

    pattern394 = Pattern(Integral((WC('A', S(0)) + WC('C', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))*(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda n, c, a, m: ~(IntegerQ(n) & Less(n, S(-1)) & (~(IntegerQ(m)) | (NonzeroQ(a) & ZeroQ(c))))))
    rule394 = ReplacementRule(pattern394, lambda c, d, x, f, e, m, b, A, n, C, a : Int((a + b*Tan(e + f*x))**(m + S(1))*(c + d*Tan(e + f*x))**n*Simp(A*(a*(m + S(1))*(-a*d + b*c) - b**S(2)*d*(m + n + S(2))) - C*a*(a*d*(n + S(1)) + b*c*(m + S(1))) - d*(A*b**S(2) + C*a**S(2))*(m + n + S(2))*Tan(e + f*x)**S(2) - (m + S(1))*(A*b - C*b)*(-a*d + b*c)*Tan(e + f*x), x), x)/((a**S(2) + b**S(2))*(m + S(1))*(-a*d + b*c)) + (a + b*Tan(e + f*x))**(m + S(1))*(c + d*Tan(e + f*x))**(n + S(1))*(A*b**S(2) + C*a**S(2))/(f*(a**S(2) + b**S(2))*(m + S(1))*(-a*d + b*c)))
    rubi.add(rule394)

    pattern395 = Pattern(Integral((WC('A', S(0)) + WC('C', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))*(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda n, c, a, m: ~(IntegerQ(n) & Less(n, S(-1)) & (~(IntegerQ(m)) | (NonzeroQ(a) & ZeroQ(c))))))
    rule395 = ReplacementRule(pattern395, lambda c, d, x, f, n, e, m, b, a, C, A : Int((a + b*Cot(e + f*x))**(m + S(1))*(c + d*Cot(e + f*x))**n*Simp(A*(a*(m + S(1))*(-a*d + b*c) - b**S(2)*d*(m + n + S(2))) - C*a*(a*d*(n + S(1)) + b*c*(m + S(1))) - d*(A*b**S(2) + C*a**S(2))*(m + n + S(2))*Cot(e + f*x)**S(2) - (m + S(1))*(A*b - C*b)*(-a*d + b*c)*Cot(e + f*x), x), x)/((a**S(2) + b**S(2))*(m + S(1))*(-a*d + b*c)) + (a + b*Cot(e + f*x))**(m + S(1))*(c + d*Cot(e + f*x))**(n + S(1))*(-A*b**S(2) - C*a**S(2))/(f*(a**S(2) + b**S(2))*(m + S(1))*(-a*d + b*c)))
    rubi.add(rule395)

    pattern396 = Pattern(Integral((WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))) + WC('C', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))/((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule396 = ReplacementRule(pattern396, lambda c, d, x, f, e, B, b, a, C, A : x*(a*(A*c + B*d - C*c) + b*(-A*d + B*c + C*d))/((a**S(2) + b**S(2))*(c**S(2) + d**S(2))) - (A*d**S(2) - B*c*d + C*c**S(2))*Int((-c*Tan(e + f*x) + d)/(c + d*Tan(e + f*x)), x)/((c**S(2) + d**S(2))*(-a*d + b*c)) + (A*b**S(2) - B*a*b + C*a**S(2))*Int((-a*Tan(e + f*x) + b)/(a + b*Tan(e + f*x)), x)/((a**S(2) + b**S(2))*(-a*d + b*c)))
    rubi.add(rule396)

    pattern397 = Pattern(Integral((WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))) + WC('C', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))/((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule397 = ReplacementRule(pattern397, lambda c, d, x, f, e, B, b, a, C, A : x*(a*(A*c + B*d - C*c) + b*(-A*d + B*c + C*d))/((a**S(2) + b**S(2))*(c**S(2) + d**S(2))) - (A*d**S(2) - B*c*d + C*c**S(2))*Int((-c*Cot(e + f*x) + d)/(c + d*Cot(e + f*x)), x)/((c**S(2) + d**S(2))*(-a*d + b*c)) + (A*b**S(2) - B*a*b + C*a**S(2))*Int((-a*Cot(e + f*x) + b)/(a + b*Cot(e + f*x)), x)/((a**S(2) + b**S(2))*(-a*d + b*c)))
    rubi.add(rule397)

    pattern398 = Pattern(Integral((WC('A', S(0)) + WC('C', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))/((a_ + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule398 = ReplacementRule(pattern398, lambda c, d, x, f, e, b, a, C, A : x*(a*(A*c - C*c) - b*(A*d - C*d))/((a**S(2) + b**S(2))*(c**S(2) + d**S(2))) - (A*d**S(2) + C*c**S(2))*Int((-c*Tan(e + f*x) + d)/(c + d*Tan(e + f*x)), x)/((c**S(2) + d**S(2))*(-a*d + b*c)) + (A*b**S(2) + C*a**S(2))*Int((-a*Tan(e + f*x) + b)/(a + b*Tan(e + f*x)), x)/((a**S(2) + b**S(2))*(-a*d + b*c)))
    rubi.add(rule398)

    pattern399 = Pattern(Integral((WC('A', S(0)) + WC('C', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))/((a_ + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule399 = ReplacementRule(pattern399, lambda c, d, x, f, e, b, a, C, A : x*(a*(A*c - C*c) - b*(A*d - C*d))/((a**S(2) + b**S(2))*(c**S(2) + d**S(2))) - (A*d**S(2) + C*c**S(2))*Int((-c*Cot(e + f*x) + d)/(c + d*Cot(e + f*x)), x)/((c**S(2) + d**S(2))*(-a*d + b*c)) + (A*b**S(2) + C*a**S(2))*Int((-a*Cot(e + f*x) + b)/(a + b*Cot(e + f*x)), x)/((a**S(2) + b**S(2))*(-a*d + b*c)))
    rubi.add(rule399)

    pattern400 = Pattern(Integral((WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_*(WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))) + WC('C', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))/(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n: ~(RationalQ(n) & Greater(n, S(0)))), CustomConstraint(lambda n: ~(RationalQ(n) & LessEqual(n, S(-1)))))
    rule400 = ReplacementRule(pattern400, lambda c, d, x, f, e, B, b, A, n, C, a : (A*b**S(2) - B*a*b + C*a**S(2))*Int((c + d*Tan(e + f*x))**n*(Tan(e + f*x)**S(2) + S(1))/(a + b*Tan(e + f*x)), x)/(a**S(2) + b**S(2)) + Int((c + d*Tan(e + f*x))**n*Simp(B*b + a*(A - C) + (B*a - b*(A - C))*Tan(e + f*x), x), x)/(a**S(2) + b**S(2)))
    rubi.add(rule400)

    pattern401 = Pattern(Integral((WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_*(WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))) + WC('C', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))/(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n: ~(RationalQ(n) & Greater(n, S(0)))), CustomConstraint(lambda n: ~(RationalQ(n) & LessEqual(n, S(-1)))))
    rule401 = ReplacementRule(pattern401, lambda c, d, x, f, n, e, B, b, a, C, A : (A*b**S(2) - B*a*b + C*a**S(2))*Int((c + d*Cot(e + f*x))**n*(Cot(e + f*x)**S(2) + S(1))/(a + b*Cot(e + f*x)), x)/(a**S(2) + b**S(2)) + Int((c + d*Cot(e + f*x))**n*Simp(B*b + a*(A - C) + (B*a - b*(A - C))*Cot(e + f*x), x), x)/(a**S(2) + b**S(2)))
    rubi.add(rule401)

    pattern402 = Pattern(Integral((WC('A', S(0)) + WC('C', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_/(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n: ~(RationalQ(n) & Greater(n, S(0)))), CustomConstraint(lambda n: ~(RationalQ(n) & LessEqual(n, S(-1)))))
    rule402 = ReplacementRule(pattern402, lambda c, d, x, f, e, b, A, n, C, a : (A*b**S(2) + C*a**S(2))*Int((c + d*Tan(e + f*x))**n*(Tan(e + f*x)**S(2) + S(1))/(a + b*Tan(e + f*x)), x)/(a**S(2) + b**S(2)) + Int((c + d*Tan(e + f*x))**n*Simp(a*(A - C) - (A*b - C*b)*Tan(e + f*x), x), x)/(a**S(2) + b**S(2)))
    rubi.add(rule402)

    pattern403 = Pattern(Integral((WC('A', S(0)) + WC('C', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_/(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))), CustomConstraint(lambda n: ~(RationalQ(n) & Greater(n, S(0)))), CustomConstraint(lambda n: ~(RationalQ(n) & LessEqual(n, S(-1)))))
    rule403 = ReplacementRule(pattern403, lambda c, d, x, f, n, e, b, a, C, A : (A*b**S(2) + C*a**S(2))*Int((c + d*Cot(e + f*x))**n*(Cot(e + f*x)**S(2) + S(1))/(a + b*Cot(e + f*x)), x)/(a**S(2) + b**S(2)) + Int((c + d*Cot(e + f*x))**n*Simp(a*(A - C) - (A*b - C*b)*Cot(e + f*x), x), x)/(a**S(2) + b**S(2)))
    rubi.add(rule403)

    pattern404 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_*(WC('A', S(0)) + WC('B', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))) + WC('C', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**S(2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule404 = ReplacementRule(pattern404, lambda c, d, x, f, e, B, m, b, A, n, C, a : Subst(Int((a + x)**m*(c + d*x/b)**n*(A*b**S(2) + B*b*x + C*x**S(2))/(b**S(2) + x**S(2)), x), x, b*Tan(e + f*x))/(b*f))
    rubi.add(rule404)

    pattern405 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_*(WC('A', S(0)) + WC('B', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))) + WC('C', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**S(2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule405 = ReplacementRule(pattern405, lambda c, d, x, f, n, e, B, m, b, a, C, A : -Subst(Int((a + x)**m*(c + d*x/b)**n*(A*b**S(2) + B*b*x + C*x**S(2))/(b**S(2) + x**S(2)), x), x, b*Cot(e + f*x))/(b*f))
    rubi.add(rule405)

    pattern406 = Pattern(Integral((WC('A', S(0)) + WC('C', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))*(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*tan(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule406 = ReplacementRule(pattern406, lambda c, d, x, f, e, m, b, A, n, C, a : Subst(Int((a + x)**m*(c + d*x/b)**n*(A*b**S(2) + C*x**S(2))/(b**S(2) + x**S(2)), x), x, b*Tan(e + f*x))/(b*f))
    rubi.add(rule406)

    pattern407 = Pattern(Integral((WC('A', S(0)) + WC('C', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0)))**S(2))*(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**m_*(WC('c', S(0)) + WC('d', S(1))*cot(x_*WC('f', S(1)) + WC('e', S(0))))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda C, x: FreeQ(C, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda c, a, d, b: NonzeroQ(-a*d + b*c)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda c, d: NonzeroQ(c**S(2) + d**S(2))))
    rule407 = ReplacementRule(pattern407, lambda c, d, x, f, n, e, m, b, a, C, A : -Subst(Int((a + x)**m*(c + d*x/b)**n*(A*b**S(2) + C*x**S(2))/(b**S(2) + x**S(2)), x), x, b*Cot(e + f*x))/(b*f))
    rubi.add(rule407)

    pattern408 = Pattern(Integral(1/(a_ + WC('b', S(1))*tan(x_*WC('d', S(1)) + WC('c', S(0)))**S(2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda b, a: ZeroQ(a - b)))
    rule408 = ReplacementRule(pattern408, lambda c, d, x, b, a : Int(Cos(c + d*x)**S(2), x)/a)
    rubi.add(rule408)

    pattern409 = Pattern(Integral(1/(a_ + WC('b', S(1))*cot(x_*WC('d', S(1)) + WC('c', S(0)))**S(2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda b, a: ZeroQ(a - b)))
    rule409 = ReplacementRule(pattern409, lambda c, d, x, b, a : Int(Sin(c + d*x)**S(2), x)/a)
    rubi.add(rule409)

    pattern410 = Pattern(Integral(1/(a_ + WC('b', S(1))*tan(x_*WC('d', S(1)) + WC('c', S(0)))**S(2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda b, a: NonzeroQ(a - b)))
    rule410 = ReplacementRule(pattern410, lambda c, d, x, b, a : -b*Int(Sec(c + d*x)**S(2)/(a + b*Tan(c + d*x)**S(2)), x)/(a - b) + x/(a - b))
    rubi.add(rule410)

    pattern411 = Pattern(Integral(1/(a_ + WC('b', S(1))*cot(x_*WC('d', S(1)) + WC('c', S(0)))**S(2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda b, a: NonzeroQ(a - b)))
    rule411 = ReplacementRule(pattern411, lambda c, d, x, b, a : -b*Int(Csc(c + d*x)**S(2)/(a + b*Cot(c + d*x)**S(2)), x)/(a - b) + x/(a - b))
    rubi.add(rule411)

    pattern412 = Pattern(Integral((a_ + (WC('e', S(1))*tan(x_*WC('d', S(1)) + WC('c', S(0))))**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)))
    rule412 = ReplacementRule(pattern412, lambda c, d, x, e, b, a, n, p : e*Subst(Int((a + b*x**n)**p/(e**S(2) + x**S(2)), x), x, e*Tan(c + d*x))/d)
    rubi.add(rule412)

    pattern413 = Pattern(Integral((a_ + (WC('e', S(1))*cot(x_*WC('d', S(1)) + WC('c', S(0))))**n_*WC('b', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)))
    rule413 = ReplacementRule(pattern413, lambda c, d, x, e, b, n, p, a : -e*Subst(Int((a + b*x**n)**p/(e**S(2) + x**S(2)), x), x, e*Cot(c + d*x))/d)
    rubi.add(rule413)

    pattern414 = Pattern(Integral((a_ + (WC('e', S(1))*tan(x_*WC('d', S(1)) + WC('c', S(0))))**n_*WC('b', S(1)))**p_*sin(x_*WC('d', S(1)) + WC('c', S(0)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: IntegerQ(m/S(2))))
    rule414 = ReplacementRule(pattern414, lambda c, d, x, e, m, b, n, p, a : Module(List(Set(f, FreeFactors(Tan(c + d*x), x))), f**(m + S(1))*Subst(Int(x**m*(a + b*(e*f*x)**n)**p*(f**S(2)*x**S(2) + S(1))**(-m/S(2) + S(-1)), x), x, Tan(c + d*x)/f)/d))
    rubi.add(rule414)

    pattern415 = Pattern(Integral((a_ + (WC('e', S(1))*cot(x_*WC('d', S(1)) + WC('c', S(0))))**n_*WC('b', S(1)))**p_*cos(x_*WC('d', S(1)) + WC('c', S(0)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: IntegerQ(m/S(2))))
    rule415 = ReplacementRule(pattern415, lambda c, d, x, e, m, b, n, p, a : Module(List(Set(f, FreeFactors(Cot(c + d*x), x))), -f**(m + S(1))*Subst(Int(x**m*(a + b*(e*f*x)**n)**p*(f**S(2)*x**S(2) + S(1))**(-m/S(2) + S(-1)), x), x, Cot(c + d*x)/f)/d))
    rubi.add(rule415)

    pattern416 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('d', S(1)) + WC('c', S(0)))**n_)**WC('p', S(1))*sin(x_*WC('d', S(1)) + WC('c', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m: OddQ(m)), CustomConstraint(lambda n: EvenQ(n)), CustomConstraint(lambda p: IntegerQ(p)))
    rule416 = ReplacementRule(pattern416, lambda c, d, x, m, b, n, p, a : Module(List(Set(f, FreeFactors(Cos(c + d*x), x))), -f*Subst(Int((f*x)**(-n*p)*(-f**S(2)*x**S(2) + S(1))**(m/S(2) + S(-1)/2)*ExpandToSum(a*(f*x)**n + b*(-f**S(2)*x**S(2) + S(1))**(n/S(2)), x)**p, x), x, Cos(c + d*x)/f)/d))
    rubi.add(rule416)

    pattern417 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('d', S(1)) + WC('c', S(0)))**n_)**WC('p', S(1))*cos(x_*WC('d', S(1)) + WC('c', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m: OddQ(m)), CustomConstraint(lambda n: EvenQ(n)), CustomConstraint(lambda p: IntegerQ(p)))
    rule417 = ReplacementRule(pattern417, lambda c, d, x, m, b, n, p, a : Module(List(Set(f, FreeFactors(Sin(c + d*x), x))), f*Subst(Int((f*x)**(-n*p)*(-f**S(2)*x**S(2) + S(1))**(m/S(2) + S(-1)/2)*ExpandToSum(a*(f*x)**n + b*(-f**S(2)*x**S(2) + S(1))**(n/S(2)), x)**p, x), x, Sin(c + d*x)/f)/d))
    rubi.add(rule417)

    pattern418 = Pattern(Integral((a_ + (WC('e', S(1))*tan(x_*WC('d', S(1)) + WC('c', S(0))))**n_*WC('b', S(1)))**WC('p', S(1))*sec(x_*WC('d', S(1)) + WC('c', S(0)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: IntegerQ(m/S(2))))
    rule418 = ReplacementRule(pattern418, lambda c, d, x, e, m, b, n, p, a : Module(List(Set(f, FreeFactors(Tan(c + d*x), x))), f*Subst(Int((a + b*(e*f*x)**n)**p*(f**S(2)*x**S(2) + S(1))**(m/S(2) + S(-1)), x), x, Tan(c + d*x)/f)/d))
    rubi.add(rule418)

    pattern419 = Pattern(Integral((a_ + (WC('e', S(1))*cot(x_*WC('d', S(1)) + WC('c', S(0))))**n_*WC('b', S(1)))**WC('p', S(1))*csc(x_*WC('d', S(1)) + WC('c', S(0)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: IntegerQ(m/S(2))))
    rule419 = ReplacementRule(pattern419, lambda c, d, x, e, m, b, n, p, a : Module(List(Set(f, FreeFactors(Cot(c + d*x), x))), -f*Subst(Int((a + b*(e*f*x)**n)**p*(f**S(2)*x**S(2) + S(1))**(m/S(2) + S(-1)), x), x, Cot(c + d*x)/f)/d))
    rubi.add(rule419)

    pattern420 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('d', S(1)) + WC('c', S(0)))**n_)**WC('p', S(1))*sec(x_*WC('d', S(1)) + WC('c', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m: IntegerQ(m/S(2) + S(-1)/2)), CustomConstraint(lambda n: IntegerQ(n/S(2))), CustomConstraint(lambda p: IntegerQ(p)))
    rule420 = ReplacementRule(pattern420, lambda c, d, x, m, b, n, p, a : Module(List(Set(f, FreeFactors(Sin(c + d*x), x))), f*Subst(Int((-f**S(2)*x**S(2) + S(1))**(-m/S(2) - n*p/S(2) + S(-1)/2)*ExpandToSum(a*(-f**S(2)*x**S(2) + S(1))**(n/S(2)) + b*(f*x)**n, x)**p, x), x, Sin(c + d*x)/f)/d))
    rubi.add(rule420)

    pattern421 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('d', S(1)) + WC('c', S(0)))**n_)**WC('p', S(1))*csc(x_*WC('d', S(1)) + WC('c', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m: IntegerQ(m/S(2) + S(-1)/2)), CustomConstraint(lambda n: IntegerQ(n/S(2))), CustomConstraint(lambda p: IntegerQ(p)))
    rule421 = ReplacementRule(pattern421, lambda c, d, x, m, b, n, p, a : Module(List(Set(f, FreeFactors(Cos(c + d*x), x))), -f*Subst(Int((-f**S(2)*x**S(2) + S(1))**(-m/S(2) - n*p/S(2) + S(-1)/2)*ExpandToSum(a*(-f**S(2)*x**S(2) + S(1))**(n/S(2)) + b*(f*x)**n, x)**p, x), x, Cos(c + d*x)/f)/d))
    rubi.add(rule421)

    pattern422 = Pattern(Integral((a_ + (WC('e', S(1))*tan(x_*WC('d', S(1)) + WC('c', S(0))))**n_*WC('b', S(1)))**p_*tan(x_*WC('d', S(1)) + WC('c', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)))
    rule422 = ReplacementRule(pattern422, lambda c, d, x, e, m, b, n, p, a : e*Subst(Int((x/e)**m*(a + b*x**n)**p/(e**S(2) + x**S(2)), x), x, e*Tan(c + d*x))/d)
    rubi.add(rule422)

    pattern423 = Pattern(Integral((a_ + (WC('e', S(1))*cot(x_*WC('d', S(1)) + WC('c', S(0))))**n_*WC('b', S(1)))**p_*cot(x_*WC('d', S(1)) + WC('c', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)))
    rule423 = ReplacementRule(pattern423, lambda c, d, x, e, m, b, n, p, a : -e*Subst(Int((x/e)**m*(a + b*x**n)**p/(e**S(2) + x**S(2)), x), x, e*Cot(c + d*x))/d)
    rubi.add(rule423)

    pattern424 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0)))**WC('n', S(1)) + WC('c', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0)))**WC('n2', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, a, b: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: IntegerQ(p)))
    rule424 = ReplacementRule(pattern424, lambda c, d, n2, x, e, b, n, p, a : S(4)**(-p)*c**(-p)*Int((b + S(2)*c*Tan(d + e*x)**n)**(S(2)*p), x))
    rubi.add(rule424)

    pattern425 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0)))**WC('n', S(1)) + WC('c', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0)))**WC('n2', S(1)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, a, b: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: IntegerQ(p)))
    rule425 = ReplacementRule(pattern425, lambda c, n2, d, x, e, b, n, p, a : S(4)**(-p)*c**(-p)*Int((b + S(2)*c*Cot(d + e*x)**n)**(S(2)*p), x))
    rubi.add(rule425)

    pattern426 = Pattern(Integral((a_ + WC('b', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0)))**WC('n', S(1)) + WC('c', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0)))**WC('n2', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, a, b: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule426 = ReplacementRule(pattern426, lambda c, d, n2, x, e, b, n, p, a : (b + S(2)*c*Tan(d + e*x)**n)**(-S(2)*p)*(a + b*Tan(d + e*x)**n + c*Tan(d + e*x)**(S(2)*n))**p*Int((b + S(2)*c*Tan(d + e*x)**n)**(S(2)*p), x))
    rubi.add(rule426)

    pattern427 = Pattern(Integral((a_ + WC('b', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0)))**WC('n', S(1)) + WC('c', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0)))**WC('n2', S(1)))**p_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, a, b: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule427 = ReplacementRule(pattern427, lambda c, n2, d, x, e, b, n, p, a : (b + S(2)*c*Cot(d + e*x)**n)**(-S(2)*p)*(a + b*Cot(d + e*x)**n + c*Cot(d + e*x)**(S(2)*n))**p*Int((b + S(2)*c*Cot(d + e*x)**n)**(S(2)*p), x))
    rubi.add(rule427)

    pattern428 = Pattern(Integral(1/(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0)))**WC('n', S(1)) + WC('c', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0)))**WC('n2', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, a, b: NonzeroQ(-S(4)*a*c + b**S(2))))
    rule428 = ReplacementRule(pattern428, lambda c, d, n2, x, e, b, n, a : Module(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), S(2)*c*Int(1/(b + S(2)*c*Tan(d + e*x)**n - q), x)/q - S(2)*c*Int(1/(b + S(2)*c*Tan(d + e*x)**n + q), x)/q))
    rubi.add(rule428)

    pattern429 = Pattern(Integral(1/(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0)))**WC('n', S(1)) + WC('c', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0)))**WC('n2', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, a, b: NonzeroQ(-S(4)*a*c + b**S(2))))
    rule429 = ReplacementRule(pattern429, lambda c, d, n2, x, e, b, n, a : Module(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), S(2)*c*Int(1/(b + S(2)*c*Cot(d + e*x)**n - q), x)/q - S(2)*c*Int(1/(b + S(2)*c*Cot(d + e*x)**n + q), x)/q))
    rubi.add(rule429)

    pattern430 = Pattern(Integral(((WC('f', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0))))**WC('n', S(1))*WC('b', S(1)) + (WC('f', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0))))**WC('n2', S(1))*WC('c', S(1)) + WC('a', S(0)))**p_*sin(x_*WC('e', S(1)) + WC('d', S(0)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda m: IntegerQ(m/S(2))))
    rule430 = ReplacementRule(pattern430, lambda c, d, n2, x, f, e, m, b, n, p, a : f*Subst(Int(x**m*(f**S(2) + x**S(2))**(-m/S(2) + S(-1))*(a + b*x**n + c*x**(S(2)*n))**p, x), x, f*Tan(d + e*x))/e)
    rubi.add(rule430)

    pattern431 = Pattern(Integral(((WC('f', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0))))**WC('n', S(1))*WC('b', S(1)) + (WC('f', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0))))**WC('n2', S(1))*WC('c', S(1)) + WC('a', S(0)))**p_*cos(x_*WC('e', S(1)) + WC('d', S(0)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda m: IntegerQ(m/S(2))))
    rule431 = ReplacementRule(pattern431, lambda c, d, n2, x, f, e, m, b, n, p, a : -f*Subst(Int(x**m*(f**S(2) + x**S(2))**(-m/S(2) + S(-1))*(a + b*x**n + c*x**(S(2)*n))**p, x), x, f*Cot(d + e*x))/e)
    rubi.add(rule431)

    pattern432 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0)))**WC('n', S(1)) + WC('c', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0)))**WC('n2', S(1)))**WC('p', S(1))*sin(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda m: OddQ(m)), CustomConstraint(lambda n: EvenQ(n)), CustomConstraint(lambda p: IntegerQ(p)))
    rule432 = ReplacementRule(pattern432, lambda c, d, n2, x, e, m, b, n, p, a : Module(List(Set(g, FreeFactors(Cos(d + e*x), x))), -g*Subst(Int((g*x)**(-S(2)*n*p)*(-g**S(2)*x**S(2) + S(1))**(m/S(2) + S(-1)/2)*ExpandToSum(a*(g*x)**(S(2)*n) + b*(g*x)**n*(-g**S(2)*x**S(2) + S(1))**(n/S(2)) + c*(-g**S(2)*x**S(2) + S(1))**n, x)**p, x), x, Cos(d + e*x)/g)/e))
    rubi.add(rule432)

    pattern433 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0)))**WC('n', S(1)) + WC('c', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0)))**WC('n2', S(1)))**WC('p', S(1))*cos(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda m: OddQ(m)), CustomConstraint(lambda n: EvenQ(n)), CustomConstraint(lambda p: IntegerQ(p)))
    rule433 = ReplacementRule(pattern433, lambda c, d, n2, x, e, m, b, a, n, p : Module(List(Set(g, FreeFactors(Sin(d + e*x), x))), g*Subst(Int((g*x)**(-S(2)*n*p)*(-g**S(2)*x**S(2) + S(1))**(m/S(2) + S(-1)/2)*ExpandToSum(a*(g*x)**(S(2)*n) + b*(g*x)**n*(-g**S(2)*x**S(2) + S(1))**(n/S(2)) + c*(-g**S(2)*x**S(2) + S(1))**n, x)**p, x), x, Sin(d + e*x)/g)/e))
    rubi.add(rule433)

    pattern434 = Pattern(Integral(((WC('f', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0))))**WC('n', S(1))*WC('b', S(1)) + (WC('f', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0))))**WC('n2', S(1))*WC('c', S(1)) + WC('a', S(0)))**WC('p', S(1))*cos(x_*WC('e', S(1)) + WC('d', S(0)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda m: EvenQ(m)))
    rule434 = ReplacementRule(pattern434, lambda c, d, n2, x, f, e, m, b, n, p, a : f**(m + S(1))*Subst(Int((f**S(2) + x**S(2))**(-m/S(2) + S(-1))*(a + b*x**n + c*x**(S(2)*n))**p, x), x, f*Tan(d + e*x))/e)
    rubi.add(rule434)

    pattern435 = Pattern(Integral(((WC('f', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0))))**WC('n', S(1))*WC('b', S(1)) + (WC('f', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0))))**WC('n2', S(1))*WC('c', S(1)) + WC('a', S(0)))**WC('p', S(1))*sin(x_*WC('e', S(1)) + WC('d', S(0)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda m: EvenQ(m)))
    rule435 = ReplacementRule(pattern435, lambda c, d, n2, x, f, e, m, b, n, p, a : -f**(m + S(1))*Subst(Int((f**S(2) + x**S(2))**(-m/S(2) + S(-1))*(a + b*x**n + c*x**(S(2)*n))**p, x), x, f*Cot(d + e*x))/e)
    rubi.add(rule435)

    pattern436 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0)))**WC('n', S(1)) + WC('c', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0)))**WC('n2', S(1)))**WC('p', S(1))*cos(x_*WC('e', S(1)) + WC('d', S(0)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda m: OddQ(m)), CustomConstraint(lambda n: EvenQ(n)), CustomConstraint(lambda p: IntegerQ(p)))
    rule436 = ReplacementRule(pattern436, lambda c, d, n2, x, e, m, b, n, p, a : Module(List(Set(g, FreeFactors(Sin(d + e*x), x))), g*Subst(Int((-g**S(2)*x**S(2) + S(1))**(m/S(2) - n*p + S(-1)/2)*ExpandToSum(a*(-x**S(2) + S(1))**n + b*x**n*(-x**S(2) + S(1))**(n/S(2)) + c*x**(S(2)*n), x)**p, x), x, Sin(d + e*x)/g)/e))
    rubi.add(rule436)

    pattern437 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0)))**WC('n', S(1)) + WC('c', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0)))**WC('n2', S(1)))**WC('p', S(1))*sin(x_*WC('e', S(1)) + WC('d', S(0)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda m: OddQ(m)), CustomConstraint(lambda n: EvenQ(n)), CustomConstraint(lambda p: IntegerQ(p)))
    rule437 = ReplacementRule(pattern437, lambda c, d, n2, x, e, m, b, n, p, a : Module(List(Set(g, FreeFactors(Cos(d + e*x), x))), -g*Subst(Int((-g**S(2)*x**S(2) + S(1))**(m/S(2) - n*p + S(-1)/2)*ExpandToSum(a*(-x**S(2) + S(1))**n + b*x**n*(-x**S(2) + S(1))**(n/S(2)) + c*x**(S(2)*n), x)**p, x), x, Cos(d + e*x)/g)/e))
    rubi.add(rule437)

    pattern438 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0)))**WC('n', S(1)) + WC('c', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0)))**WC('n2', S(1)))**p_*tan(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, a, b: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: IntegerQ(p)))
    rule438 = ReplacementRule(pattern438, lambda c, d, n2, x, e, m, b, n, p, a : S(4)**(-p)*c**(-p)*Int((b + S(2)*c*Tan(d + e*x)**n)**(S(2)*p)*Tan(d + e*x)**m, x))
    rubi.add(rule438)

    pattern439 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0)))**WC('n', S(1)) + WC('c', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0)))**WC('n2', S(1)))**p_*cot(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, a, b: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: IntegerQ(p)))
    rule439 = ReplacementRule(pattern439, lambda c, d, n2, x, e, m, b, a, n, p : S(4)**(-p)*c**(-p)*Int((b + S(2)*c*Cot(d + e*x)**n)**(S(2)*p)*Cot(d + e*x)**m, x))
    rubi.add(rule439)

    pattern440 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0)))**WC('n', S(1)) + WC('c', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0)))**WC('n2', S(1)))**p_*tan(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, a, b: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule440 = ReplacementRule(pattern440, lambda c, d, n2, x, e, m, b, n, p, a : (b + S(2)*c*Tan(d + e*x)**n)**(-S(2)*p)*(a + b*Tan(d + e*x)**n + c*Tan(d + e*x)**(S(2)*n))**p*Int((b + S(2)*c*Tan(d + e*x)**n)**(S(2)*p)*Tan(d + e*x)**m, x))
    rubi.add(rule440)

    pattern441 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0)))**WC('n', S(1)) + WC('c', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0)))**WC('n2', S(1)))**p_*cot(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, a, b: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule441 = ReplacementRule(pattern441, lambda c, d, n2, x, e, m, b, a, n, p : (b + S(2)*c*Cot(d + e*x)**n)**(-S(2)*p)*(a + b*Cot(d + e*x)**n + c*Cot(d + e*x)**(S(2)*n))**p*Int((b + S(2)*c*Cot(d + e*x)**n)**(S(2)*p)*Cot(d + e*x)**m, x))
    rubi.add(rule441)

    pattern442 = Pattern(Integral(((WC('f', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0))))**WC('n', S(1))*WC('b', S(1)) + (WC('f', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0))))**WC('n2', S(1))*WC('c', S(1)) + WC('a', S(0)))**p_*tan(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, a, b: NonzeroQ(-S(4)*a*c + b**S(2))))
    rule442 = ReplacementRule(pattern442, lambda c, d, n2, x, f, e, m, b, n, p, a : f*Subst(Int((x/f)**m*(a + b*x**n + c*x**(S(2)*n))**p/(f**S(2) + x**S(2)), x), x, f*Tan(d + e*x))/e)
    rubi.add(rule442)

    pattern443 = Pattern(Integral(((WC('f', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0))))**WC('n', S(1))*WC('b', S(1)) + (WC('f', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0))))**WC('n2', S(1))*WC('c', S(1)) + WC('a', S(0)))**p_*cot(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, a, b: NonzeroQ(-S(4)*a*c + b**S(2))))
    rule443 = ReplacementRule(pattern443, lambda c, d, n2, x, f, e, m, b, n, p, a : -f*Subst(Int((x/f)**m*(a + b*x**n + c*x**(S(2)*n))**p/(f**S(2) + x**S(2)), x), x, f*Cot(d + e*x))/e)
    rubi.add(rule443)

    pattern444 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0)))**WC('n', S(1)) + WC('c', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0)))**WC('n2', S(1)))**WC('p', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, a, b: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: IntegerQ(p)))
    rule444 = ReplacementRule(pattern444, lambda c, d, n2, x, e, m, b, n, p, a : S(4)**(-p)*c**(-p)*Int((b + S(2)*c*Tan(d + e*x)**n)**(S(2)*p)*Cot(d + e*x)**m, x))
    rubi.add(rule444)

    pattern445 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0)))**WC('n', S(1)) + WC('c', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0)))**WC('n2', S(1)))**WC('p', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, a, b: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: IntegerQ(p)))
    rule445 = ReplacementRule(pattern445, lambda c, d, n2, x, e, m, b, n, p, a : S(4)**(-p)*c**(-p)*Int((b + S(2)*c*Cot(d + e*x)**n)**(S(2)*p)*Tan(d + e*x)**m, x))
    rubi.add(rule445)

    pattern446 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0)))**WC('n', S(1)) + WC('c', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0)))**WC('n2', S(1)))**p_*cot(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, a, b: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule446 = ReplacementRule(pattern446, lambda c, d, n2, x, e, m, b, n, p, a : (b + S(2)*c*Tan(d + e*x)**n)**(-S(2)*p)*(a + b*Tan(d + e*x)**n + c*Tan(d + e*x)**(S(2)*n))**p*Int((b + S(2)*c*Tan(d + e*x)**n)**(S(2)*p)*Cot(d + e*x)**m, x))
    rubi.add(rule446)

    pattern447 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0)))**WC('n', S(1)) + WC('c', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0)))**WC('n2', S(1)))**p_*tan(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, a, b: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda p: ~(IntegerQ(p))))
    rule447 = ReplacementRule(pattern447, lambda c, d, n2, x, e, m, b, n, p, a : (b + S(2)*c*Cot(d + e*x)**n)**(-S(2)*p)*(a + b*Cot(d + e*x)**n + c*Cot(d + e*x)**(S(2)*n))**p*Int((b + S(2)*c*Cot(d + e*x)**n)**(S(2)*p)*Tan(d + e*x)**m, x))
    rubi.add(rule447)

    pattern448 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0)))**n_ + WC('c', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0)))**n2_)**WC('p', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, a, b: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: EvenQ(n)))
    rule448 = ReplacementRule(pattern448, lambda c, d, n2, x, e, m, b, n, p, a : Module(List(Set(g, FreeFactors(Cot(d + e*x), x))), g*Subst(Int((g*x)**(m - S(2)*n*p)*(a*(g*x)**(S(2)*n) + b*(g*x)**n + c)**p/(g**S(2)*x**S(2) + S(1)), x), x, Cot(d + e*x)/g)/e))
    rubi.add(rule448)

    pattern449 = Pattern(Integral((WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0)))**n_ + WC('c', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0)))**n2_)**WC('p', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, n2: ZeroQ(-S(2)*n + n2)), CustomConstraint(lambda c, a, b: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: EvenQ(n)))
    rule449 = ReplacementRule(pattern449, lambda c, d, n2, x, e, m, b, n, p, a : Module(List(Set(g, FreeFactors(Tan(d + e*x), x))), -g*Subst(Int((g*x)**(m - S(2)*n*p)*(a*(g*x)**(S(2)*n) + b*(g*x)**n + c)**p/(g**S(2)*x**S(2) + S(1)), x), x, Tan(d + e*x)/g)/e))
    rubi.add(rule449)

    pattern450 = Pattern(Integral((A_ + WC('B', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0))))*(a_ + WC('b', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0))) + WC('c', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0)))**S(2))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda c, a, b: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: IntegerQ(n)))
    rule450 = ReplacementRule(pattern450, lambda c, d, x, n, e, B, b, a, A : S(4)**(-n)*c**(-n)*Int((A + B*Tan(d + e*x))*(b + S(2)*c*Tan(d + e*x))**(S(2)*n), x))
    rubi.add(rule450)

    pattern451 = Pattern(Integral((A_ + WC('B', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0))))*(a_ + WC('b', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0))) + WC('c', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0)))**S(2))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda c, a, b: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: IntegerQ(n)))
    rule451 = ReplacementRule(pattern451, lambda c, d, x, e, B, b, A, n, a : S(4)**(-n)*c**(-n)*Int((A + B*Cot(d + e*x))*(b + S(2)*c*Cot(d + e*x))**(S(2)*n), x))
    rubi.add(rule451)

    pattern452 = Pattern(Integral((A_ + WC('B', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0))))*(a_ + WC('b', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0))) + WC('c', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0)))**S(2))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda c, a, b: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: ~(IntegerQ(n))))
    rule452 = ReplacementRule(pattern452, lambda c, d, x, n, e, B, b, a, A : (b + S(2)*c*Tan(d + e*x))**(-S(2)*n)*(a + b*Tan(d + e*x) + c*Tan(d + e*x)**S(2))**n*Int((A + B*Tan(d + e*x))*(b + S(2)*c*Tan(d + e*x))**(S(2)*n), x))
    rubi.add(rule452)

    pattern453 = Pattern(Integral((A_ + WC('B', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0))))*(a_ + WC('b', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0))) + WC('c', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0)))**S(2))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda c, a, b: ZeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: ~(IntegerQ(n))))
    rule453 = ReplacementRule(pattern453, lambda c, d, x, e, B, b, A, n, a : (b + S(2)*c*Cot(d + e*x))**(-S(2)*n)*(a + b*Cot(d + e*x) + c*Cot(d + e*x)**S(2))**n*Int((A + B*Cot(d + e*x))*(b + S(2)*c*Cot(d + e*x))**(S(2)*n), x))
    rubi.add(rule453)

    pattern454 = Pattern(Integral((A_ + WC('B', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0))))/(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0))) + WC('c', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0)))**S(2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda c, a, b: NonzeroQ(-S(4)*a*c + b**S(2))))
    rule454 = ReplacementRule(pattern454, lambda c, d, x, e, B, b, A, a : Module(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), (B - (-S(2)*A*c + B*b)/q)*Int(1/Simp(b + S(2)*c*Tan(d + e*x) - q, x), x) + (B + (-S(2)*A*c + B*b)/q)*Int(1/Simp(b + S(2)*c*Tan(d + e*x) + q, x), x)))
    rubi.add(rule454)

    pattern455 = Pattern(Integral((A_ + WC('B', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0))))/(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0))) + WC('c', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0)))**S(2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda c, a, b: NonzeroQ(-S(4)*a*c + b**S(2))))
    rule455 = ReplacementRule(pattern455, lambda c, d, x, e, B, b, A, a : Module(List(Set(q, Rt(-S(4)*a*c + b**S(2), S(2)))), (B - (-S(2)*A*c + B*b)/q)*Int(1/Simp(b + S(2)*c*Cot(d + e*x) - q, x), x) + (B + (-S(2)*A*c + B*b)/q)*Int(1/Simp(b + S(2)*c*Cot(d + e*x) + q, x), x)))
    rubi.add(rule455)

    pattern456 = Pattern(Integral((A_ + WC('B', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0))))*(WC('a', S(0)) + WC('b', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0))) + WC('c', S(1))*tan(x_*WC('e', S(1)) + WC('d', S(0)))**S(2))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda c, a, b: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: IntegerQ(n)))
    rule456 = ReplacementRule(pattern456, lambda c, d, x, e, B, b, A, n, a : Int(ExpandTrig((A + B*tan(d + e*x))*(a + b*tan(d + e*x) + c*tan(d + e*x)**S(2))**n, x), x))
    rubi.add(rule456)

    pattern457 = Pattern(Integral((A_ + WC('B', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0))))*(WC('a', S(0)) + WC('b', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0))) + WC('c', S(1))*cot(x_*WC('e', S(1)) + WC('d', S(0)))**S(2))**n_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda A, x: FreeQ(A, x)), CustomConstraint(lambda B, x: FreeQ(B, x)), CustomConstraint(lambda c, a, b: NonzeroQ(-S(4)*a*c + b**S(2))), CustomConstraint(lambda n: IntegerQ(n)))
    rule457 = ReplacementRule(pattern457, lambda c, d, x, e, B, b, A, n, a : Int(ExpandTrig((A + B*cot(d + e*x))*(a + b*cot(d + e*x) + c*cot(d + e*x)**S(2))**n, x), x))
    rubi.add(rule457)

    pattern458 = Pattern(Integral((x_*WC('d', S(1)) + WC('c', S(0)))**WC('m', S(1))*Tan(x_*WC('f', S(1)) + WC('e', S(0))), x_), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m: PositiveIntegerQ(m)))
    rule458 = ReplacementRule(pattern458, lambda c, d, x, f, e, m : -S(2)*ImaginaryI*Int((c + d*x)**m*exp(S(2)*ImaginaryI*(e + f*x))/(exp(S(2)*ImaginaryI*(e + f*x)) + S(1)), x) + ImaginaryI*(c + d*x)**(m + S(1))/(d*(m + S(1))))
    rubi.add(rule458)

    pattern459 = Pattern(Integral((x_*WC('d', S(1)) + WC('c', S(0)))**WC('m', S(1))*Cot(x_*WC('f', S(1)) + WC('e', S(0))), x_), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m: PositiveIntegerQ(m)))
    rule459 = ReplacementRule(pattern459, lambda c, d, x, f, e, m : -S(2)*ImaginaryI*Int((c + d*x)**m*exp(S(2)*ImaginaryI*(e + f*x))/(-exp(S(2)*ImaginaryI*(e + f*x)) + S(1)), x) - ImaginaryI*(c + d*x)**(m + S(1))/(d*(m + S(1))))
    rubi.add(rule459)

    pattern460 = Pattern(Integral((Tan(x_*WC('f', S(1)) + WC('e', S(0)))*WC('b', S(1)))**n_*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda n: Greater(n, S(1))), CustomConstraint(lambda m: Greater(m, S(0))))
    rule460 = ReplacementRule(pattern460, lambda c, d, x, f, e, m, b, n : -b**S(2)*Int((b*Tan(e + f*x))**(n + S(-2))*(c + d*x)**m, x) - b*d*m*Int((b*Tan(e + f*x))**(n + S(-1))*(c + d*x)**(m + S(-1)), x)/(f*(n + S(-1))) + b*(b*Tan(e + f*x))**(n + S(-1))*(c + d*x)**m/(f*(n + S(-1))))
    rubi.add(rule460)

    pattern461 = Pattern(Integral((Cot(x_*WC('f', S(1)) + WC('e', S(0)))*WC('b', S(1)))**n_*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda n: Greater(n, S(1))), CustomConstraint(lambda m: Greater(m, S(0))))
    rule461 = ReplacementRule(pattern461, lambda c, d, x, f, e, m, b, n : -b**S(2)*Int((b*Cot(e + f*x))**(n + S(-2))*(c + d*x)**m, x) + b*d*m*Int((b*Cot(e + f*x))**(n + S(-1))*(c + d*x)**(m + S(-1)), x)/(f*(n + S(-1))) - b*(b*Cot(e + f*x))**(n + S(-1))*(c + d*x)**m/(f*(n + S(-1))))
    rubi.add(rule461)

    pattern462 = Pattern(Integral((Tan(x_*WC('f', S(1)) + WC('e', S(0)))*WC('b', S(1)))**n_*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda n: Less(n, S(-1))), CustomConstraint(lambda m: Greater(m, S(0))))
    rule462 = ReplacementRule(pattern462, lambda c, d, x, f, e, m, b, n : -d*m*Int((b*Tan(e + f*x))**(n + S(1))*(c + d*x)**(m + S(-1)), x)/(b*f*(n + S(1))) + (b*Tan(e + f*x))**(n + S(1))*(c + d*x)**m/(b*f*(n + S(1))) - Int((b*Tan(e + f*x))**(n + S(2))*(c + d*x)**m, x)/b**S(2))
    rubi.add(rule462)

    pattern463 = Pattern(Integral((Cot(x_*WC('f', S(1)) + WC('e', S(0)))*WC('b', S(1)))**n_*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda n, m: RationalQ(m, n)), CustomConstraint(lambda n: Less(n, S(-1))), CustomConstraint(lambda m: Greater(m, S(0))))
    rule463 = ReplacementRule(pattern463, lambda c, d, x, f, e, m, b, n : d*m*Int((b*Cot(e + f*x))**(n + S(1))*(c + d*x)**(m + S(-1)), x)/(b*f*(n + S(1))) - (b*Cot(e + f*x))**(n + S(1))*(c + d*x)**m/(b*f*(n + S(1))) - Int((b*Cot(e + f*x))**(n + S(2))*(c + d*x)**m, x)/b**S(2))
    rubi.add(rule463)

    pattern464 = Pattern(Integral((a_ + Tan(x_*WC('f', S(1)) + WC('e', S(0)))*WC('b', S(1)))**WC('n', S(1))*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, m: PositiveIntegerQ(m, n)))
    rule464 = ReplacementRule(pattern464, lambda c, d, x, f, e, m, b, n, a : Int(ExpandIntegrand((c + d*x)**m, (a + b*Tan(e + f*x))**n, x), x))
    rubi.add(rule464)

    pattern465 = Pattern(Integral((a_ + Cot(x_*WC('f', S(1)) + WC('e', S(0)))*WC('b', S(1)))**WC('n', S(1))*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, m: PositiveIntegerQ(m, n)))
    rule465 = ReplacementRule(pattern465, lambda c, d, x, f, e, m, b, n, a : Int(ExpandIntegrand((c + d*x)**m, (a + b*Cot(e + f*x))**n, x), x))
    rubi.add(rule465)

    pattern466 = Pattern(Integral((x_*WC('d', S(1)) + WC('c', S(0)))**WC('m', S(1))/(a_ + Tan(x_*WC('f', S(1)) + WC('e', S(0)))*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Greater(m, S(0))))
    rule466 = ReplacementRule(pattern466, lambda c, d, x, f, e, m, b, a : a*d*m*Int((c + d*x)**(m + S(-1))/(a + b*Tan(e + f*x)), x)/(S(2)*b*f) - a*(c + d*x)**m/(S(2)*b*f*(a + b*Tan(e + f*x))) + (c + d*x)**(m + S(1))/(S(2)*a*d*(m + S(1))))
    rubi.add(rule466)

    pattern467 = Pattern(Integral((x_*WC('d', S(1)) + WC('c', S(0)))**WC('m', S(1))/(a_ + Cot(x_*WC('f', S(1)) + WC('e', S(0)))*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Greater(m, S(0))))
    rule467 = ReplacementRule(pattern467, lambda c, d, x, f, e, m, b, a : -a*d*m*Int((c + d*x)**(m + S(-1))/(a + b*Cot(e + f*x)), x)/(S(2)*b*f) + a*(c + d*x)**m/(S(2)*b*f*(a + b*Cot(e + f*x))) + (c + d*x)**(m + S(1))/(S(2)*a*d*(m + S(1))))
    rubi.add(rule467)

    pattern468 = Pattern(Integral(S(1)/((a_ + Tan(x_*WC('f', S(1)) + WC('e', S(0)))*WC('b', S(1)))*(x_*WC('d', S(1)) + WC('c', S(0)))**S(2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))))
    rule468 = ReplacementRule(pattern468, lambda c, d, x, f, e, b, a : -S(1)/(d*(a + b*Tan(e + f*x))*(c + d*x)) + f*Int(Cos(S(2)*e + S(2)*f*x)/(c + d*x), x)/(b*d) - f*Int(Sin(S(2)*e + S(2)*f*x)/(c + d*x), x)/(a*d))
    rubi.add(rule468)

    pattern469 = Pattern(Integral(S(1)/((a_ + Cot(x_*WC('f', S(1)) + WC('e', S(0)))*WC('b', S(1)))*(x_*WC('d', S(1)) + WC('c', S(0)))**S(2)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))))
    rule469 = ReplacementRule(pattern469, lambda c, d, x, f, e, b, a : -S(1)/(d*(a + b*Cot(e + f*x))*(c + d*x)) + f*Int(Cos(S(2)*e + S(2)*f*x)/(c + d*x), x)/(b*d) + f*Int(Sin(S(2)*e + S(2)*f*x)/(c + d*x), x)/(a*d))
    rubi.add(rule469)

    pattern470 = Pattern(Integral((x_*WC('d', S(1)) + WC('c', S(0)))**m_/(a_ + Tan(x_*WC('f', S(1)) + WC('e', S(0)))*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda m: Unequal(m, S(-2))))
    rule470 = ReplacementRule(pattern470, lambda c, d, x, f, e, m, b, a : (c + d*x)**(m + S(1))/(d*(a + b*Tan(e + f*x))*(m + S(1))) + f*(c + d*x)**(m + S(2))/(b*d**S(2)*(m + S(1))*(m + S(2))) + S(2)*b*f*Int((c + d*x)**(m + S(1))/(a + b*Tan(e + f*x)), x)/(a*d*(m + S(1))))
    rubi.add(rule470)

    pattern471 = Pattern(Integral((x_*WC('d', S(1)) + WC('c', S(0)))**m_/(a_ + Cot(x_*WC('f', S(1)) + WC('e', S(0)))*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Less(m, S(-1))), CustomConstraint(lambda m: Unequal(m, S(-2))))
    rule471 = ReplacementRule(pattern471, lambda c, d, x, f, e, m, b, a : (c + d*x)**(m + S(1))/(d*(a + b*Cot(e + f*x))*(m + S(1))) - f*(c + d*x)**(m + S(2))/(b*d**S(2)*(m + S(1))*(m + S(2))) - S(2)*b*f*Int((c + d*x)**(m + S(1))/(a + b*Cot(e + f*x)), x)/(a*d*(m + S(1))))
    rubi.add(rule471)

    pattern472 = Pattern(Integral(S(1)/((a_ + Tan(x_*WC('f', S(1)) + WC('e', S(0)))*WC('b', S(1)))*(x_*WC('d', S(1)) + WC('c', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))))
    rule472 = ReplacementRule(pattern472, lambda c, d, x, f, e, b, a : Int(Sin(S(2)*e + S(2)*f*x)/(c + d*x), x)/(S(2)*b) + Int(Cos(S(2)*e + S(2)*f*x)/(c + d*x), x)/(S(2)*a) + Log(c + d*x)/(S(2)*a*d))
    rubi.add(rule472)

    pattern473 = Pattern(Integral(S(1)/((a_ + Cot(x_*WC('f', S(1)) + WC('e', S(0)))*WC('b', S(1)))*(x_*WC('d', S(1)) + WC('c', S(0)))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))))
    rule473 = ReplacementRule(pattern473, lambda c, d, x, f, e, b, a : Int(Sin(S(2)*e + S(2)*f*x)/(c + d*x), x)/(S(2)*b) - Int(Cos(S(2)*e + S(2)*f*x)/(c + d*x), x)/(S(2)*a) + Log(c + d*x)/(S(2)*a*d))
    rubi.add(rule473)

    pattern474 = Pattern(Integral((x_*WC('d', S(1)) + WC('c', S(0)))**m_/(a_ + Tan(x_*WC('f', S(1)) + WC('e', S(0)))*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: ~(IntegerQ(m))))
    rule474 = ReplacementRule(pattern474, lambda c, d, x, f, e, m, b, a : Int((c + d*x)**m*exp(S(2)*a*(e + f*x)/b), x)/(S(2)*a) + (c + d*x)**(m + S(1))/(S(2)*a*d*(m + S(1))))
    rubi.add(rule474)

    pattern475 = Pattern(Integral((x_*WC('d', S(1)) + WC('c', S(0)))**m_/(a_ + Cot(x_*WC('f', S(1)) + WC('e', S(0)))*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: ~(IntegerQ(m))))
    rule475 = ReplacementRule(pattern475, lambda c, d, x, f, e, m, b, a : -Int((c + d*x)**m*exp(-S(2)*a*(e + f*x)/b), x)/(S(2)*a) + (c + d*x)**(m + S(1))/(S(2)*a*d*(m + S(1))))
    rubi.add(rule475)

    pattern476 = Pattern(Integral((a_ + Tan(x_*WC('f', S(1)) + WC('e', S(0)))*WC('b', S(1)))**n_*(x_*WC('d', S(1)) + WC('c', S(0)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n, m: NegativeIntegerQ(m, n)))
    rule476 = ReplacementRule(pattern476, lambda c, d, x, f, e, m, b, n, a : Int(ExpandIntegrand((c + d*x)**m, (Sin(S(2)*e + S(2)*f*x)/(S(2)*b) + Cos(S(2)*e + S(2)*f*x)/(S(2)*a) + S(1)/(S(2)*a))**(-n), x), x))
    rubi.add(rule476)

    pattern477 = Pattern(Integral((a_ + Cot(x_*WC('f', S(1)) + WC('e', S(0)))*WC('b', S(1)))**n_*(x_*WC('d', S(1)) + WC('c', S(0)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n, m: NegativeIntegerQ(m, n)))
    rule477 = ReplacementRule(pattern477, lambda c, d, x, f, e, m, b, n, a : Int(ExpandIntegrand((c + d*x)**m, (Sin(S(2)*e + S(2)*f*x)/(S(2)*b) - Cos(S(2)*e + S(2)*f*x)/(S(2)*a) + S(1)/(S(2)*a))**(-n), x), x))
    rubi.add(rule477)

    pattern478 = Pattern(Integral((a_ + Tan(x_*WC('f', S(1)) + WC('e', S(0)))*WC('b', S(1)))**n_*(x_*WC('d', S(1)) + WC('c', S(0)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n: NegativeIntegerQ(n)))
    rule478 = ReplacementRule(pattern478, lambda c, d, x, f, e, m, b, n, a : Int(ExpandIntegrand((c + d*x)**m, (exp(S(2)*a*(e + f*x)/b)/(S(2)*a) + S(1)/(S(2)*a))**(-n), x), x))
    rubi.add(rule478)

    pattern479 = Pattern(Integral((a_ + Cot(x_*WC('f', S(1)) + WC('e', S(0)))*WC('b', S(1)))**n_*(x_*WC('d', S(1)) + WC('c', S(0)))**m_, x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n: NegativeIntegerQ(n)))
    rule479 = ReplacementRule(pattern479, lambda c, d, x, f, e, m, b, n, a : Int(ExpandIntegrand((c + d*x)**m, (S(1)/(S(2)*a) - exp(-S(2)*a*(e + f*x)/b)/(S(2)*a))**(-n), x), x))
    rubi.add(rule479)

    pattern480 = Pattern(Integral((a_ + Tan(x_*WC('f', S(1)) + WC('e', S(0)))*WC('b', S(1)))**n_*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n: NegativeIntegerQ(n + S(1))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Greater(m, S(0))))
    rule480 = ReplacementRule(pattern480, lambda c, d, x, f, e, m, b, n, a : With(List(Set(u, IntHide((a + b*Tan(e + f*x))**n, x))), -d*m*Int(Dist((c + d*x)**(m + S(-1)), u, x), x) + Dist((c + d*x)**m, u, x)))
    rubi.add(rule480)

    pattern481 = Pattern(Integral((a_ + Cot(x_*WC('f', S(1)) + WC('e', S(0)))*WC('b', S(1)))**n_*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: ZeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n: NegativeIntegerQ(n + S(1))), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda m: Greater(m, S(0))))
    rule481 = ReplacementRule(pattern481, lambda c, d, x, f, e, m, b, n, a : With(List(Set(u, IntHide((a + b*Cot(e + f*x))**n, x))), -d*m*Int(Dist((c + d*x)**(m + S(-1)), u, x), x) + Dist((c + d*x)**m, u, x)))
    rubi.add(rule481)

    pattern482 = Pattern(Integral((x_*WC('d', S(1)) + WC('c', S(0)))**WC('m', S(1))/(a_ + Tan(x_*WC('f', S(1)) + WC('e', S(0)))*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: PositiveIntegerQ(m)))
    rule482 = ReplacementRule(pattern482, lambda c, d, x, f, e, m, b, a : -S(2)*ImaginaryI*b*Int((c + d*x)**m/(a**S(2) + b**S(2) + (-ImaginaryI*b + a)**S(2)*exp(S(2)*ImaginaryI*(e + f*x))), x) + (c + d*x)**(m + S(1))/(d*(m + S(1))*(-ImaginaryI*b + a)))
    rubi.add(rule482)

    pattern483 = Pattern(Integral((x_*WC('d', S(1)) + WC('c', S(0)))**WC('m', S(1))/(a_ + Cot(x_*WC('f', S(1)) + WC('e', S(0)))*WC('b', S(1))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda m: PositiveIntegerQ(m)))
    rule483 = ReplacementRule(pattern483, lambda c, d, x, f, e, m, b, a : S(2)*ImaginaryI*b*Int((c + d*x)**m/(a**S(2) + b**S(2) - (ImaginaryI*b + a)**S(2)*exp(S(2)*ImaginaryI*(e + f*x))), x) + (c + d*x)**(m + S(1))/(d*(m + S(1))*(ImaginaryI*b + a)))
    rubi.add(rule483)

    pattern484 = Pattern(Integral((x_*WC('d', S(1)) + WC('c', S(0)))/(a_ + Tan(x_*WC('f', S(1)) + WC('e', S(0)))*WC('b', S(1)))**S(2), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))))
    rule484 = ReplacementRule(pattern484, lambda c, d, x, f, e, b, a : -b*(c + d*x)/(f*(a + b*Tan(e + f*x))*(a**S(2) + b**S(2))) + Int((S(2)*a*c*f + S(2)*a*d*f*x + b*d)/(a + b*Tan(e + f*x)), x)/(f*(a**S(2) + b**S(2))) - (c + d*x)**S(2)/(S(2)*d*(a**S(2) + b**S(2))))
    rubi.add(rule484)

    pattern485 = Pattern(Integral((x_*WC('d', S(1)) + WC('c', S(0)))/(a_ + Cot(x_*WC('f', S(1)) + WC('e', S(0)))*WC('b', S(1)))**S(2), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))))
    rule485 = ReplacementRule(pattern485, lambda c, d, x, f, e, b, a : b*(c + d*x)/(f*(a + b*Cot(e + f*x))*(a**S(2) + b**S(2))) - Int((-S(2)*a*c*f - S(2)*a*d*f*x + b*d)/(a + b*Cot(e + f*x)), x)/(f*(a**S(2) + b**S(2))) - (c + d*x)**S(2)/(S(2)*d*(a**S(2) + b**S(2))))
    rubi.add(rule485)

    pattern486 = Pattern(Integral((a_ + Tan(x_*WC('f', S(1)) + WC('e', S(0)))*WC('b', S(1)))**n_*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda m: PositiveIntegerQ(m)))
    rule486 = ReplacementRule(pattern486, lambda c, d, x, f, e, m, b, n, a : Int(ExpandIntegrand((c + d*x)**m, (-S(2)*ImaginaryI*b/(a**S(2) + b**S(2) + (-ImaginaryI*b + a)**S(2)*exp(S(2)*ImaginaryI*(e + f*x))) + 1/(-ImaginaryI*b + a))**(-n), x), x))
    rubi.add(rule486)

    pattern487 = Pattern(Integral((a_ + Cot(x_*WC('f', S(1)) + WC('e', S(0)))*WC('b', S(1)))**n_*(x_*WC('d', S(1)) + WC('c', S(0)))**WC('m', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda b, a: NonzeroQ(a**S(2) + b**S(2))), CustomConstraint(lambda n: NegativeIntegerQ(n)), CustomConstraint(lambda m: PositiveIntegerQ(m)))
    rule487 = ReplacementRule(pattern487, lambda c, d, x, f, e, m, b, n, a : Int(ExpandIntegrand((c + d*x)**m, (S(2)*ImaginaryI*b/(a**S(2) + b**S(2) - (ImaginaryI*b + a)**S(2)*exp(S(2)*ImaginaryI*(e + f*x))) + 1/(ImaginaryI*b + a))**(-n), x), x))
    rubi.add(rule487)

    pattern488 = Pattern(Integral(u_**WC('m', S(1))*(Tan(v_)*WC('b', S(1)) + WC('a', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda v, u, x: LinearQ(List(u, v), x)), CustomConstraint(lambda v, u, x: ~(LinearMatchQ(List(u, v), x))))
    rule488 = ReplacementRule(pattern488, lambda v, x, u, m, b, n, a : Int((a + b*Tan(ExpandToSum(v, x)))**n*ExpandToSum(u, x)**m, x))
    rubi.add(rule488)

    pattern489 = Pattern(Integral(u_**WC('m', S(1))*(Cot(v_)*WC('b', S(1)) + WC('a', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda v, u, x: LinearQ(List(u, v), x)), CustomConstraint(lambda v, u, x: ~(LinearMatchQ(List(u, v), x))))
    rule489 = ReplacementRule(pattern489, lambda v, x, u, m, b, n, a : Int((a + b*Cot(ExpandToSum(v, x)))**n*ExpandToSum(u, x)**m, x))
    rubi.add(rule489)

    pattern490 = Pattern(Integral((x_*WC('d', S(1)) + WC('c', S(0)))**WC('m', S(1))*(Tan(x_*WC('f', S(1)) + WC('e', S(0)))*WC('b', S(1)) + WC('a', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)))
    rule490 = ReplacementRule(pattern490, lambda c, d, x, f, e, m, b, n, a : Int((a + b*Tan(e + f*x))**n*(c + d*x)**m, x))
    rubi.add(rule490)

    pattern491 = Pattern(Integral((x_*WC('d', S(1)) + WC('c', S(0)))**WC('m', S(1))*(Cot(x_*WC('f', S(1)) + WC('e', S(0)))*WC('b', S(1)) + WC('a', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda f, x: FreeQ(f, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)))
    rule491 = ReplacementRule(pattern491, lambda c, d, x, f, e, m, b, n, a : Int((a + b*Cot(e + f*x))**n*(c + d*x)**m, x))
    rubi.add(rule491)

    pattern492 = Pattern(Integral((Tan(x_**n_*WC('d', S(1)) + WC('c', S(0)))*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n: PositiveIntegerQ(1/n)), CustomConstraint(lambda p: IntegerQ(p)))
    rule492 = ReplacementRule(pattern492, lambda c, d, x, b, n, p, a : Subst(Int(x**(S(-1) + 1/n)*(a + b*Tan(c + d*x))**p, x), x, x**n)/n)
    rubi.add(rule492)

    pattern493 = Pattern(Integral((Cot(x_**n_*WC('d', S(1)) + WC('c', S(0)))*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n: PositiveIntegerQ(1/n)), CustomConstraint(lambda p: IntegerQ(p)))
    rule493 = ReplacementRule(pattern493, lambda c, d, x, b, n, p, a : Subst(Int(x**(S(-1) + 1/n)*(a + b*Cot(c + d*x))**p, x), x, x**n)/n)
    rubi.add(rule493)

    pattern494 = Pattern(Integral((Tan(x_**n_*WC('d', S(1)) + WC('c', S(0)))*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)))
    rule494 = ReplacementRule(pattern494, lambda c, d, x, b, n, p, a : Int((a + b*Tan(c + d*x**n))**p, x))
    rubi.add(rule494)

    pattern495 = Pattern(Integral((Cot(x_**n_*WC('d', S(1)) + WC('c', S(0)))*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)))
    rule495 = ReplacementRule(pattern495, lambda c, d, x, b, n, p, a : Int((a + b*Cot(c + d*x**n))**p, x))
    rubi.add(rule495)

    pattern496 = Pattern(Integral((Tan(u_**n_*WC('d', S(1)) + WC('c', S(0)))*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule496 = ReplacementRule(pattern496, lambda c, d, x, u, b, n, p, a : Subst(Int((a + b*Tan(c + d*x**n))**p, x), x, u)/Coefficient(u, x, S(1)))
    rubi.add(rule496)

    pattern497 = Pattern(Integral((Cot(u_**n_*WC('d', S(1)) + WC('c', S(0)))*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda x, u: LinearQ(u, x)), CustomConstraint(lambda x, u: NonzeroQ(u - x)))
    rule497 = ReplacementRule(pattern497, lambda c, d, x, u, b, n, p, a : Subst(Int((a + b*Cot(c + d*x**n))**p, x), x, u)/Coefficient(u, x, S(1)))
    rubi.add(rule497)

    pattern498 = Pattern(Integral((Tan(u_)*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda x, u: BinomialQ(u, x)), CustomConstraint(lambda x, u: ~(BinomialMatchQ(u, x))))
    rule498 = ReplacementRule(pattern498, lambda x, u, b, p, a : Int((a + b*Tan(ExpandToSum(u, x)))**p, x))
    rubi.add(rule498)

    pattern499 = Pattern(Integral((Cot(u_)*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda x, u: BinomialQ(u, x)), CustomConstraint(lambda x, u: ~(BinomialMatchQ(u, x))))
    rule499 = ReplacementRule(pattern499, lambda x, u, b, p, a : Int((a + b*Cot(ExpandToSum(u, x)))**p, x))
    rubi.add(rule499)

    pattern500 = Pattern(Integral(x_**WC('m', S(1))*(Tan(x_**n_*WC('d', S(1)) + WC('c', S(0)))*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, m: PositiveIntegerQ(Simplify((m + S(1))/n))), CustomConstraint(lambda p: IntegerQ(p)))
    rule500 = ReplacementRule(pattern500, lambda c, d, x, m, b, n, p, a : Subst(Int(x**(Simplify((m + S(1))/n) + S(-1))*(a + b*Tan(c + d*x))**p, x), x, x**n)/n)
    rubi.add(rule500)

    pattern501 = Pattern(Integral(x_**WC('m', S(1))*(Cot(x_**n_*WC('d', S(1)) + WC('c', S(0)))*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda n, m: PositiveIntegerQ(Simplify((m + S(1))/n))), CustomConstraint(lambda p: IntegerQ(p)))
    rule501 = ReplacementRule(pattern501, lambda c, d, x, m, b, n, p, a : Subst(Int(x**(Simplify((m + S(1))/n) + S(-1))*(a + b*Cot(c + d*x))**p, x), x, x**n)/n)
    rubi.add(rule501)

    pattern502 = Pattern(Integral(x_**WC('m', S(1))*Tan(x_**n_*WC('d', S(1)) + WC('c', S(0)))**S(2), x_), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)))
    rule502 = ReplacementRule(pattern502, lambda c, d, x, m, n : -Int(x**m, x) + x**(m - n + S(1))*Tan(c + d*x**n)/(d*n) - (m - n + S(1))*Int(x**(m - n)*Tan(c + d*x**n), x)/(d*n))
    rubi.add(rule502)

    pattern503 = Pattern(Integral(x_**WC('m', S(1))*Cot(x_**n_*WC('d', S(1)) + WC('c', S(0)))**S(2), x_), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)))
    rule503 = ReplacementRule(pattern503, lambda c, d, x, m, n : -Int(x**m, x) - x**(m - n + S(1))*Cot(c + d*x**n)/(d*n) + (m - n + S(1))*Int(x**(m - n)*Cot(c + d*x**n), x)/(d*n))
    rubi.add(rule503)

    pattern504 = Pattern(Integral(x_**WC('m', S(1))*(Tan(x_**n_*WC('d', S(1)) + WC('c', S(0)))*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)))
    rule504 = ReplacementRule(pattern504, lambda c, d, x, m, b, n, p, a : Int(x**m*(a + b*Tan(c + d*x**n))**p, x))
    rubi.add(rule504)

    pattern505 = Pattern(Integral(x_**WC('m', S(1))*(Cot(x_**n_*WC('d', S(1)) + WC('c', S(0)))*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)))
    rule505 = ReplacementRule(pattern505, lambda c, d, x, m, b, n, p, a : Int(x**m*(a + b*Cot(c + d*x**n))**p, x))
    rubi.add(rule505)

    pattern506 = Pattern(Integral((e_*x_)**WC('m', S(1))*(Tan(x_**n_*WC('d', S(1)) + WC('c', S(0)))*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)))
    rule506 = ReplacementRule(pattern506, lambda c, d, x, e, m, b, n, p, a : e**IntPart(m)*x**(-FracPart(m))*(e*x)**FracPart(m)*Int(x**m*(a + b*Tan(c + d*x**n))**p, x))
    rubi.add(rule506)

    pattern507 = Pattern(Integral((e_*x_)**WC('m', S(1))*(Cot(x_**n_*WC('d', S(1)) + WC('c', S(0)))*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)), CustomConstraint(lambda p, x: FreeQ(p, x)))
    rule507 = ReplacementRule(pattern507, lambda c, d, x, e, m, b, n, p, a : e**IntPart(m)*x**(-FracPart(m))*(e*x)**FracPart(m)*Int(x**m*(a + b*Cot(c + d*x**n))**p, x))
    rubi.add(rule507)

    pattern508 = Pattern(Integral((e_*x_)**WC('m', S(1))*(Tan(u_)*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda x, u: BinomialQ(u, x)), CustomConstraint(lambda x, u: ~(BinomialMatchQ(u, x))))
    rule508 = ReplacementRule(pattern508, lambda x, e, u, m, b, p, a : Int((e*x)**m*(a + b*Tan(ExpandToSum(u, x)))**p, x))
    rubi.add(rule508)

    pattern509 = Pattern(Integral((e_*x_)**WC('m', S(1))*(Cot(u_)*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda x, u: BinomialQ(u, x)), CustomConstraint(lambda x, u: ~(BinomialMatchQ(u, x))))
    rule509 = ReplacementRule(pattern509, lambda x, e, u, m, b, p, a : Int((e*x)**m*(a + b*Cot(ExpandToSum(u, x)))**p, x))
    rubi.add(rule509)

    pattern510 = Pattern(Integral(x_**WC('m', S(1))*Sec(x_**WC('n', S(1))*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1))*Tan(x_**WC('n', S(1))*WC('b', S(1)) + WC('a', S(0)))**WC('q', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda n: IntegerQ(n)), CustomConstraint(lambda n, m: GreaterEqual(m - n, S(0))), CustomConstraint(lambda q: SameQ(q, S(1))))
    rule510 = ReplacementRule(pattern510, lambda q, x, m, b, n, p, a : x**(m - n + S(1))*Sec(a + b*x**n)**p/(b*n*p) - (m - n + S(1))*Int(x**(m - n)*Sec(a + b*x**n)**p, x)/(b*n*p))
    rubi.add(rule510)

    pattern511 = Pattern(Integral(x_**WC('m', S(1))*Cot(x_**WC('n', S(1))*WC('b', S(1)) + WC('a', S(0)))**WC('q', S(1))*Csc(x_**WC('n', S(1))*WC('b', S(1)) + WC('a', S(0)))**WC('p', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda p, x: FreeQ(p, x)), CustomConstraint(lambda m: RationalQ(m)), CustomConstraint(lambda n: IntegerQ(n)), CustomConstraint(lambda n, m: GreaterEqual(m - n, S(0))), CustomConstraint(lambda q: SameQ(q, S(1))))
    rule511 = ReplacementRule(pattern511, lambda q, x, m, b, n, p, a : -x**(m - n + S(1))*Csc(a + b*x**n)**p/(b*n*p) + (m - n + S(1))*Int(x**(m - n)*Csc(a + b*x**n)**p, x)/(b*n*p))
    rubi.add(rule511)

    pattern512 = Pattern(Integral(Tan(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)))
    rule512 = ReplacementRule(pattern512, lambda c, x, b, n, a : Int(Tan(a + b*x + c*x**S(2))**n, x))
    rubi.add(rule512)

    pattern513 = Pattern(Integral(Cot(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda n, x: FreeQ(n, x)))
    rule513 = ReplacementRule(pattern513, lambda c, x, b, n, a : Int(Cot(a + b*x + c*x**S(2))**n, x))
    rubi.add(rule513)

    pattern514 = Pattern(Integral((d_ + x_*WC('e', S(1)))*Tan(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, e, d, b: ZeroQ(-b*e + S(2)*c*d)))
    rule514 = ReplacementRule(pattern514, lambda c, d, x, e, b, a : -e*Log(Cos(a + b*x + c*x**S(2)))/(S(2)*c))
    rubi.add(rule514)

    pattern515 = Pattern(Integral((d_ + x_*WC('e', S(1)))*Cot(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, e, d, b: ZeroQ(-b*e + S(2)*c*d)))
    rule515 = ReplacementRule(pattern515, lambda c, d, x, e, b, a : e*Log(Sin(a + b*x + c*x**S(2)))/(S(2)*c))
    rubi.add(rule515)

    pattern516 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))*Tan(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, e, d, b: NonzeroQ(-b*e + S(2)*c*d)))
    rule516 = ReplacementRule(pattern516, lambda c, d, x, e, b, a : -e*Log(Cos(a + b*x + c*x**S(2)))/(S(2)*c) + (-b*e + S(2)*c*d)*Int(Tan(a + b*x + c*x**S(2)), x)/(S(2)*c))
    rubi.add(rule516)

    pattern517 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))*Cot(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0))), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda c, e, d, b: NonzeroQ(-b*e + S(2)*c*d)))
    rule517 = ReplacementRule(pattern517, lambda c, d, x, e, b, a : e*Log(Sin(a + b*x + c*x**S(2)))/(S(2)*c) + (-b*e + S(2)*c*d)*Int(Cot(a + b*x + c*x**S(2)), x)/(S(2)*c))
    rubi.add(rule517)

    pattern518 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*Tan(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)))
    rule518 = ReplacementRule(pattern518, lambda c, d, x, e, m, b, n, a : Int((d + e*x)**m*Tan(a + b*x + c*x**S(2))**n, x))
    rubi.add(rule518)

    pattern519 = Pattern(Integral((x_*WC('e', S(1)) + WC('d', S(0)))**WC('m', S(1))*Cot(x_**S(2)*WC('c', S(1)) + x_*WC('b', S(1)) + WC('a', S(0)))**WC('n', S(1)), x_), CustomConstraint(lambda a, x: FreeQ(a, x)), CustomConstraint(lambda b, x: FreeQ(b, x)), CustomConstraint(lambda c, x: FreeQ(c, x)), CustomConstraint(lambda d, x: FreeQ(d, x)), CustomConstraint(lambda e, x: FreeQ(e, x)), CustomConstraint(lambda m, x: FreeQ(m, x)), CustomConstraint(lambda n, x: FreeQ(n, x)))
    rule519 = ReplacementRule(pattern519, lambda c, d, x, e, m, b, n, a : Int((d + e*x)**m*Cot(a + b*x + c*x**S(2))**n, x))
    rubi.add(rule519)

    return rubi
